{"version":3,"sources":["webpack:///./src/gatsby/components/templates/doc-category.js?fb96","webpack:///./src/gatsby/markdown/components/addons/toggle/toggle-multilevel.md","webpack:///./src/private/demos/themes/fashion-gallery-v1.js?f88c","webpack:///./src/gatsby/components/snippets/components/markup-slider-navigation.js?f90d","webpack:///./src/core/card.css.js","webpack:///./src/gatsby/code/vanilla/components/core/drop/disable.js?f959","webpack:///./src/gatsby/code/iframe/components/core/sticky/contain-top.js?f96a","webpack:///./src/gatsby/markdown/components/addons/group/group-toolbar.md","webpack:///./src/private/demos/components/addons/google-locator.css","webpack:///./src/private/demos/components/core/slider/touch-overflow.css","webpack:///./src/private/demos/themes/furniture-listing-v1.js?ff5a","webpack:///./src/gatsby/markdown/components/core/loader/content.md","webpack:///./src/gatsby/assets/styles/_footer.css","webpack:///./src/gatsby/markdown/components/addons/form/index.md","webpack:///./src/gatsby/markdown/components/addons/group/group-number.md","webpack:///./src/gatsby/markdown/components/core/group/index.md","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-x.js?fd07","webpack:///./src/gatsby/code/vanilla/components/addons/overlay-close-outside.js?fd1b","webpack:///./src/gatsby/markdown/themes/by-type/theme/collapse-theme-v1.md","webpack:///./src/gatsby/components/snippets/classes/btn-default.js?fe2c","webpack:///./src/private/demos/themes/fashion-hero-v1.js?d3f0","webpack:///./src/gatsby/code/iframe/themes/fashion-hero-v1.js?d342","webpack:///./src/gatsby/code/vanilla/components/core/icons/usage-img.js?d343","webpack:///./src/private/demos/components/core/overlay/animation.css","webpack:///./src/private/demos/components/core/overlay/disable.css","webpack:///./src/core/form.js?d0c1","webpack:///./src/gatsby/code/vanilla/components/core/toggle/quantity.js?d11c","webpack:///./src/gatsby/code/vanilla/components/core/slider/pagination.js?d15e","webpack:///./src/gatsby/markdown/introduction/customization/index.md","webpack:///./src/gatsby/code/iframe/test/demo-vanilla-iframe.js?d26c","webpack:///./src/gatsby/code/vanilla/components/core/breadcrumbs/usage.js?d311","webpack:///./src/gatsby/markdown/themes/by-type/layout/furniture-featured-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/card-variant.js?d77e","webpack:///./src/gatsby/code/vanilla/components/core/link/usage.js?d78f","webpack:///./src/gatsby/code/vanilla/components/core/slider/media-loaded.js?d401","webpack:///./src/gatsby/markdown/themes/by-type/navigation/sequential-megamenu-v1.md","webpack:///./src/gatsby/markdown/components/core/list/index.md","webpack:///./src/gatsby/components/snippets/classes/input-primary.js?d4b2","webpack:///./src/gatsby/code/iframe/components/core/scroll/mode-responsive.js?d4dd","webpack:///./src/gatsby/code/vanilla/components/core/drop/animation.js?d580","webpack:///./src/private/demos/components/core/slider/progress.js?d6a2","webpack:///./src/gatsby/markdown/themes/by-type/theme/index.md","webpack:///./src/private/demos/components/core/slider/media-loaded.css","webpack:///./src/gatsby/markdown/themes/by-component/drop/sequential-megamenu-v1.md","webpack:///./src/gatsby/markdown/components/addons/layout/sticky-footer.md","webpack:///./src/private/demos/test/demo-vanilla.js","webpack:///./src/private/demos/themes/collapse-theme-v1.less","webpack:///./src/gatsby/markdown/components/core/button/content.md","webpack:///./src/gatsby/markdown/themes/by-component/card/stores-listing-v2.md","webpack:///./src/gatsby/components/includes/footer.js?d93e","webpack:///./src/gatsby/markdown/themes/by-component/slider/industrial-featured-v1.md","webpack:///./src/gatsby/markdown/themes/by-component/group/index.md","webpack:///./src/gatsby/code/vanilla/components/core/form/size-sm.js?da7d","webpack:///./src/gatsby/markdown/components/core/loader/index.md","webpack:///./node_modules/path-browserify/index.js","webpack:///./src/gatsby/code/vanilla/components/core/media/usage.js?dc0b","webpack:///./src/core/loader.css.js","webpack:///./src/gatsby/code/vanilla/components/addons/group-number.js?dc9c","webpack:///./src/gatsby/code/vanilla/components/core/group/space-vertical.js?dce1","webpack:///./src/gatsby/code/vanilla/components/core/slider/overflow-auto-false.js?dd05","webpack:///./src/private/demos/components/core/drop/animation-js.js?dd7c","webpack:///./src/gatsby/code/vanilla/components/core/slider/disable.js?dd95","webpack:///./src/gatsby/markdown/tests/sticky/other.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/overflow-auto.js?de1a","webpack:///./src/private/demos/themes/sequential-megamenu-v1.js?de2d","webpack:///./src/gatsby/code/vanilla/components/core/media/cover-min-height.js?df27","webpack:///./src/gatsby/code/vanilla/components/core/button/size.js?e06d","webpack:///./src/gatsby/markdown/components/core/media/content.md","webpack:///./src/gatsby/code/vanilla/components/core/card/content-full.js?e0bc","webpack:///./src/gatsby/components/snippets/themes/markup-listing.js?e180","webpack:///./src/gatsby/markdown/components/core/overlay/content.md","webpack:///./src/gatsby/components/snippets/classes/btn-primary-drop.js?e1ca","webpack:///./src/gatsby/components/snippets/classes/card-default-drop.js?e1f9","webpack:///./src/gatsby/code/vanilla/components/core/drop/list-size.js?e29d","webpack:///./src/gatsby/code/vanilla/components/core/row/space-2.js?e2c7","webpack:///./src/gatsby/code/vanilla/components/core/list/space-1.js?e33b","webpack:///./src/gatsby/code/iframe/components/addons/infinite-scroll.js?e7ff","webpack:///./src/private/demos/components/core/scroll/delay.js?e775","webpack:///./src/gatsby/components/snippets/classes/card-default-drop-list.js?e78a","webpack:///./src/gatsby/markdown/components/core/drop/index.md","webpack:///./src/gatsby/markdown/themes/index.md","webpack:///./src/gatsby/code/vanilla/components/core/group/merge-vertical.js?e416","webpack:///./src/gatsby/markdown/themes/by-type/hero/fashion-hero-v1.md","webpack:///./src/future/sticky.js?e57c","webpack:///./src/gatsby/code/vanilla/components/core/overlay/group.js?e59e","webpack:///./src/private/demos/components/core/slider/disable.css","webpack:///./src/gatsby/code/vanilla/components/core/media/16-9-video.js?e657","webpack:///./src/gatsby/components/snippets/classes/form-check-primary.js?e660","webpack:///./src/private/demos/themes/xtend-theme-v1.less","webpack:///./src/gatsby/markdown/tests/markdown/index.md","webpack:///./src/gatsby/markdown/components/core/drop/api.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/after.js?eb8e","webpack:///./src/gatsby/components/snippets/components/markup-slider-progress.js?eb8c","webpack:///./src/gatsby/components/snippets/classes/card-scroll.js?e805","webpack:///./src/gatsby/markdown/components/addons/listing/infinite-scroll.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/card-list.js?e84e","webpack:///./src/gatsby/code/vanilla/components/core/slider/navigation.js?e880","webpack:///./src/gatsby/markdown/components/core/drop/interaction.md","webpack:///./src/gatsby/code/vanilla/components/core/overlay/usage-self.js?e8bf","webpack:///./src/gatsby/code/vanilla/components/core/drop/card-group.js?e95a","webpack:///./src/gatsby/code/vanilla/components/core/slider/align-center.js?e9f6","webpack:///./src/gatsby/components/includes/doc-foot.js?ea50","webpack:///./src/gatsby/code/vanilla/components/core/loader/spinner-inverse.js?ea52","webpack:///./src/gatsby/code/vanilla/components/core/breadcrumbs/title.js?effc","webpack:///./src/core/list.css.js","webpack:///./src/gatsby/code/vanilla/components/core/row/alignment.js?ec35","webpack:///./src/gatsby/code/vanilla/components/core/drop/center.js?ec5b","webpack:///./src/gatsby/code/vanilla/components/core/slider/touch-overflow.js?ec75","webpack:///./src/gatsby/markdown/themes/by-component/media/opacity-listing-v1.md","webpack:///./src/private/demos/components/core/overlay/events-methods.js?ecdb","webpack:///./src/future/scroll.js?ece1","webpack:///./src/gatsby/markdown/themes/by-type/featured/industrial-featured-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/toggle/auto.js?ed61","webpack:///./src/gatsby/components/snippets/themes/markup-stores.js?edf2","webpack:///./src/gatsby/components/snippets/classes/card-primary-interactive.js?eebe","webpack:///./src/gatsby/code/iframe/components/core/scroll/mode-once.js?eed9","webpack:///./src/gatsby/code/vanilla/components/core/form/mode-row.js?eefa","webpack:///./src/gatsby/components/snippets/classes/form-switch-primary.js?f3eb","webpack:///./src/private/demos/components/core/overlay/disable.js?f34f","webpack:///./src/gatsby/markdown/themes/by-component/slider/brands-featured-v1.md","webpack:///./src/gatsby/code/vanilla/components/addons/list-custom.js?f025","webpack:///./src/gatsby/code/vanilla/components/core/toggle/animation-inverse.js?f0a7","webpack:///./src/gatsby/code/vanilla/components/core/toggle/usage-multiple-custom.js?f105","webpack:///./src/gatsby/components/snippets/themes/markup-button.js?f19e","webpack:///./src/gatsby/code/vanilla/components/core/drop/static.js?f20a","webpack:///./src/gatsby/components/snippets/themes/markup-slider-hero.js?f21c","webpack:///./node_modules/process/browser.js","webpack:///./src/gatsby/code/vanilla/components/core/icons/variant-inverse.js?f741","webpack:///./src/gatsby/markdown/themes/by-component/media/fashion-gallery-v1.md","webpack:///./src/private/demos/components/core/slider/overflow-auto.css","webpack:///./src/gatsby/code/iframe/components/core/sticky/mode-fixed-always.js?f4b3","webpack:///./src/gatsby/markdown/components/core/overlay/other.md","webpack:///./src/private/demos/components/core/scroll/mode-block.js?f4d3","webpack:///./src/gatsby/components/includes/doc-fullscreen.js?f50f","webpack:///./src/private/demos/components/core/toggle/timing.js?f546","webpack:///./src/private/demos/components/core/toggle/timing.css","webpack:///./src/polyfill.js?f638","webpack:///./src/private/demos/themes/sequential-megamenu-v1.less","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-y.js?f651","webpack:///./src/future/smooth.js","webpack:///./src/gatsby/code/vanilla/components/core/row/space-px.js?f6ef","webpack:///./src/gatsby/components/snippets/classes/card-primary-drop.js?f6f4","webpack:///./src/gatsby/assets/styles/_main.css","webpack:///./src/gatsby/code/vanilla/components/addons/slider-navigation-sides.js?0391","webpack:///./src/gatsby/markdown/components/core/typography/content.md","webpack:///./src/gatsby/components/snippets/classes/btn-default-group.js?01cb","webpack:///./src/gatsby/code/iframe/components/core/sticky/showhide-hide.js?02bb","webpack:///./src/gatsby/code/vanilla/components/core/typography/headers.js?0311","webpack:///./src/gatsby/code/vanilla/components/core/media/cover.js?07ee","webpack:///./src/private/demos/test/demo-vanilla-iframe.css","webpack:///./src/gatsby/markdown/components/core/list/content.md","webpack:///./src/gatsby/markdown/themes/by-component/slider/fashion-hero-v2.md","webpack:///./src/gatsby/markdown/themes/by-type/featured/furniture-featured-v1.md","webpack:///./src/future/ajax.js","webpack:///./src/core/overlay.css.js","webpack:///./src/private/demos/themes/opacity-listing-v1.less","webpack:///./src/gatsby/code/vanilla/components/core/loader/background-filler.js?0b71","webpack:///./src/gatsby/code/vanilla/components/core/drop/right.js?0bcf","webpack:///./src/gatsby/code/iframe/components/core/sticky/disable.js?0ab2","webpack:///./src/gatsby/markdown/components/core/badge/index.md","webpack:///./src/private/demos/themes/slide-overlay-v1.less","webpack:///./src/gatsby/code/vanilla/components/addons/group-nav.js?0f44","webpack:///./src/gatsby/components/snippets/themes/markup-group.js?0fb6","webpack:///./src/gatsby/components/snippets/icons.js?0cf8","webpack:///./src/gatsby/code/iframe/components/core/scroll/distance.js?0d04","webpack:///./src/private/demos/components/core/scroll/block.js?0d83","webpack:///./src/gatsby/markdown/components/core/card/content.md","webpack:///./src/gatsby/code/iframe/themes/fashion-gallery-v1.js?0da3","webpack:///./src/gatsby/code/vanilla/components/core/row/stretch.js?0db6","webpack:///./src/gatsby/markdown/themes/by-component/media/index.md","webpack:///./src/gatsby/markdown/tests/sticky/api.md","webpack:///./src/private/demos/components/core/group/merge-line.js?0e17","webpack:///./src/private/demos/components/core/toggle/animation-inverse.css","webpack:///./src/gatsby/code/vanilla/components/core/form/size-lg.js?0e65","webpack:///./src/gatsby/markdown/components/core/drop/content-card.md","webpack:///./src/private/demos/components/core/overlay/class-html.css","webpack:///./src/gatsby/code/vanilla/components/core/overlay/variant.js?0ede","webpack:///./src/gatsby/markdown/themes/by-component/button/furniture-featured-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/loader/js-filler.js?0f0c","webpack:///./src/gatsby/components/seo.js?0f1e","webpack:///./src/gatsby/markdown/themes/by-component/drop/xtend-theme-v1.md","webpack:///./src/gatsby/markdown/components/core/group/content.md","webpack:///./src/private/demos/components/addons/group-expand.js?114e","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-size-top.js?114b","webpack:///./src/gatsby/code/vanilla/components/addons/toggle-multilevel.js?115a","webpack:///./src/private/demos/components/addons/list-custom.css","webpack:///./src/gatsby/markdown/themes/by-component/media/fashion-listing-v1.md","webpack:///./src/gatsby/components/snippets/classes/card-sticky-primary.js?1220","webpack:///./src/gatsby/code/vanilla/components/core/group/size.js?123f","webpack:///./src/gatsby/code/vanilla/components/core/drop/before.js?126f","webpack:///./src/gatsby/components/snippets/components/markup-slider-event-method.js?127b","webpack:///./src/private/demos/components/addons/jump-to-content.js?1324","webpack:///./src/private/demos/themes/stores-listing-v2.less","webpack:///./src/gatsby/markdown/components/addons/navigation/index.md","webpack:///./src/gatsby/code/vanilla/components/core/badge/usage.js?14ca","webpack:///./src/core/structurejs.css.js","webpack:///./src/gatsby/markdown/themes/by-type/listing/index.md","webpack:///./src/xt.js?15de","webpack:///./src/gatsby/markdown/components/addons/form/textarea-autosize.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/progress.js?1622","webpack:///./src/gatsby/assets/styles/_prism.css","webpack:///./src/gatsby/markdown/components/core/breadcrumbs/index.md","webpack:///./src/private/demos/components/addons/jump-to-content.css","webpack:///./src/private/demos/themes/furniture-featured-v1.js?1878","webpack:///./src/gatsby/code/vanilla/components/core/list/space-2.js?188a","webpack:///./src/private/demos/components/core/toggle/custom-options.css","webpack:///./src/gatsby/markdown/themes/by-component/smooth/furniture-featured-v1.md","webpack:///./src/gatsby/markdown/components/core/table/index.md","webpack:///./src/private/demos/themes/stores-listing-v2.js?19a9","webpack:///./src/addons/ripple.css.js","webpack:///./src/gatsby/markdown/components/core/card/other.md","webpack:///./src/gatsby/components/snippets/classes/badge-default.js?1d52","webpack:///./src/gatsby/code/vanilla/components/core/group/usage-vertical.js?1e6d","webpack:///./src/gatsby/code/vanilla/components/core/badge/variant.js?1ec2","webpack:///./src/gatsby/code/vanilla/components/core/loader/js-spinner.js?1f25","webpack:///./src/gatsby/code/vanilla/components/core/typography/variant.js?2364","webpack:///./src/addons/mouse-follow.css.js","webpack:///./src/gatsby/markdown/tests/sticky/index.md","webpack:///./src/gatsby/components/layout-demo.js","webpack:///./src/gatsby/components/demo/demo-vanilla-iframe.js","webpack:///./src/gatsby/code/iframe/themes/fashion-listing-v1.js?211b","webpack:///./src/private/demos/themes/fashion-hero-v2.css","webpack:///./src/gatsby/code/vanilla/components/core/toggle/progress.js?2130","webpack:///./src/private/demos/themes/brands-featured-v1.less","webpack:///./src/private/demos/components/addons/scroll-to-anchor.js?22f6","webpack:///./src/gatsby/markdown/themes/by-type/gallery/fashion-gallery-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/card/group.js?27a7","webpack:///./src/gatsby/markdown/tests/scroll/index.md","webpack:///./src/gatsby/markdown/themes/by-type/listing/furniture-listing-v1.md","webpack:///./src/gatsby/components/snippets/classes/card-default-interactive.js?246e","webpack:///./src/addons/google-locator.js?2591","webpack:///./src/gatsby/code/vanilla/components/core/button/active.js?2599","webpack:///./src/gatsby/markdown/themes/by-component/overlay/collapse-theme-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/button/variant-inverse.js?2646","webpack:///./src/gatsby/code/iframe/components/core/scroll/delay.js?2664","webpack:///./src/gatsby/code/vanilla/components/core/overlay/position.js?26e3","webpack:///./src/gatsby/markdown/components/core/form/other.md","webpack:///./src/gatsby/markdown/components/core/card/index.md","webpack:///./src/gatsby/components/snippets/classes/card-default-full-interactive.js?283a","webpack:///./src/core/slider.css.js","webpack:///./src/gatsby/code/vanilla/components/core/drop/event.js?28ef","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-size-right.js?2944","webpack:///./src/gatsby/markdown/components/core/toggle/interaction.md","webpack:///./src/gatsby/markdown/components/core/group/other.md","webpack:///./src/gatsby/components/templates/doc-page.js?2a70","webpack:///./src/gatsby/markdown/components/core/form/content.md","webpack:///./src/gatsby/code/vanilla/components/core/toggle/timing.js?2ac2","webpack:///./src/gatsby/assets/scripts/demo.js?2b2a","webpack:///./src/private/demos/themes/stores-listing-v1.less","webpack:///./src/gatsby/code/vanilla/components/core/form/mode-inline-horizontal.js?2c83","webpack:///./src/gatsby/assets/scripts/gatsby.js?2d10","webpack:///./src/gatsby/code/vanilla/components/core/card/close.js?2d1a","webpack:///./src/gatsby/code/vanilla/components/core/card/usage-stack.js?2d29","webpack:///./src/gatsby/markdown/components/addons/typography/list-custom.md","webpack:///./src/gatsby/markdown/components/addons/listing/index.md","webpack:///./src/gatsby/code/iframe/components/core/sticky/hide.js?2de4","webpack:///./src/gatsby/components/snippets/classes/label-primary.js?33ff","webpack:///./src/gatsby/components/snippets/classes/card-default-block.js","webpack:///./src/gatsby/code/vanilla/components/core/typography/definition-list.js?338e","webpack:///./src/gatsby/markdown/themes/by-type/listing/stores-listing-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/badge/size.js?30c7","webpack:///./src/gatsby/code/vanilla/components/core/form/fieldset-legend.js?30fe","webpack:///./src/private/demos/components/core/group/merge-stack.js?317c","webpack:///./src/gatsby/markdown/themes/by-component/card/fashion-listing-v1.md","webpack:///./src/gatsby/code/iframe/components/core/sticky/showhide-top.js?32ef","webpack:///./src/gatsby/code/vanilla/components/core/form/variant-default.js?330a","webpack:///./src/gatsby/components/includes/header.js?3754","webpack:///./src/gatsby/markdown/components/addons/structure/index.md","webpack:///./src/gatsby/code/vanilla/components/addons/overlay-message-outside.js?343b","webpack:///./src/gatsby/markdown/components/core/card/content-full.md","webpack:///./src/gatsby/markdown/introduction/installation/index.md","webpack:///./src/private/demos/components/core/scroll/mode-outside.css","webpack:///./src/gatsby/code/iframe/themes/furniture-featured-v1.js?357c","webpack:///./src/gatsby/code/vanilla/components/core/card/interactive.js?35d4","webpack:///./src/gatsby/markdown/components/core/slider/other.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/group-responsive.js?3625","webpack:///./src/private/demos/components/core/slider/expand.css","webpack:///./src/gatsby/markdown/tests/scroll/other.md","webpack:///./src/core/drop.css.js","webpack:///./src/gatsby/code/vanilla/components/core/card/usage.js?3711","webpack:///./src/gatsby/components/layout-demo.js?3b71","webpack:///./src/gatsby/code/vanilla/components/core/overlay/close-fixed.js?382e","webpack:///./src/gatsby/components/snippets/classes/form-radio-default.js?3879","webpack:///./src/gatsby/markdown/themes/by-type/navigation/index.md","webpack:///./src/gatsby/code/vanilla/components/core/media/16-9-iframe.js?3885","webpack:///./src/gatsby/markdown/themes/by-component/button/index.md","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-size-x.js?390b","webpack:///./src/gatsby/code/vanilla/components/core/button/icons.js?3a16","webpack:///./src/gatsby/markdown/components/addons/overlay/overlay-message-outside.md","webpack:///./src/gatsby/markdown/themes/by-component/overlay/slide-overlay-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/usage-self.js?3b18","webpack:///./src/gatsby/code/vanilla/components/core/card/overflow-y.js?3f4b","webpack:///./src/gatsby/components/snippets/classes/badge-primary-interactive.js?3caf","webpack:///./src/gatsby/markdown/themes/by-type/listing/opacity-listing-v1.md","webpack:///./src/gatsby/markdown/components/addons/overlay/overlay-close-outside.md","webpack:///./src/gatsby/markdown/components/core/overlay/index.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/card-separator.js?3de2","webpack:///./src/gatsby/markdown/components/addons/group/group-nav.md","webpack:///./src/core/table.css.js","webpack:///./src/gatsby/markdown/components/core/slider/index.md","webpack:///./src/gatsby/components/snippets/classes/card-default-overlay.js?408c","webpack:///./src/private/demos/components/addons/sticky-footer.css","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-size-left.js?41e7","webpack:///./src/gatsby/components/snippets/classes/card-primary-full-interactive.js?41fa","webpack:///./src/private/demos/components/core/card/disable.css","webpack:///./src/gatsby/markdown/components/addons/structure/mouse-follow.md","webpack:///./src/gatsby/components/snippets/components/markup-slider-pagination.js?431b","webpack:///./src/gatsby/components/snippets/classes/card-primary-overlay.js?4323","webpack:///./src/gatsby/code/vanilla/components/core/form/checks-card.js?474c","webpack:///./src/gatsby/code/vanilla/components/core/toggle/jump.js?477f","webpack:///./src/gatsby/code/vanilla/components/core/overlay/list.js?4402","webpack:///./src/private/demos/components/addons/group-expand.css","webpack:///./src/gatsby/code/vanilla/components/core/overlay/separator.js?44e8","webpack:///./src/gatsby/markdown/themes/by-component/card/index.md","webpack:///./src/gatsby/code/vanilla/components/core/media/responsive.js?4627","webpack:///./src/gatsby/code/vanilla/components/core/list/usage.js?46b3","webpack:///./src/gatsby/components/layout.js?470f","webpack:///./src/gatsby/code/vanilla/components/core/overlay/overflow-y.js?481b","webpack:///./src/core/btn.css.js","webpack:///./src/gatsby/code/vanilla/components/core/group/space.js?4a42","webpack:///./src/gatsby/code/vanilla/components/core/form/checks-button.js?4a96","webpack:///./src/private/demos/components/core/slider/progress.css","webpack:///./src/gatsby/code/iframe/themes/opacity-listing-v1.js?4af9","webpack:///./src/gatsby/code/vanilla/components/core/icons/usage.js?4fe9","webpack:///./src/gatsby/components/includes/doc-index.js?4f64","webpack:///./src/gatsby/code/iframe/components/core/sticky/position.js?4faa","webpack:///./src/gatsby/markdown/components/core/row/index.md","webpack:///./src/private/demos/themes/fashion-listing-v1.less","webpack:///./src/addons/group-number.css.js","webpack:///./src/gatsby/markdown/themes/by-component/card/furniture-listing-v1.md","webpack:///./src/gatsby/code/vanilla/components/addons/ripple.js?4e72","webpack:///./src/gatsby/code/vanilla/components/core/slider/other.js?4e9f","webpack:///./src/gatsby/code/vanilla/components/addons/group-expand.js?4ebd","webpack:///./src/private/demos/components/core/toggle/animation-js.js?4ed4","webpack:///./src/gatsby/components/includes/doc-head.js?4ed9","webpack:///./src/gatsby/markdown/themes/by-component/card/stores-listing-v1.md","webpack:///./src/private/demos/components/core/sticky/disable.css","webpack:///./src/gatsby/markdown/themes/by-type/featured/index.md","webpack:///./src/gatsby/code/iframe/themes/fashion-hero-v2.js?4f3a","webpack:///./src/gatsby/code/vanilla/components/core/overlay/animation.js?534b","webpack:///./src/private/demos/themes/furniture-listing-v1.less","webpack:///./src/private/demos/themes/brands-featured-v1.js?5085","webpack:///./src/gatsby/markdown/themes/by-type/hero/fashion-hero-v2.md","webpack:///./src/gatsby/assets/scripts/ResizeSensor.js?5242","webpack:///./src/core/structure.css.js","webpack:///./src/gatsby/markdown/themes/by-type/theme/xtend-theme-v1.md","webpack:///./src/gatsby/markdown/components/core/badge/content.md","webpack:///./src/gatsby/markdown/components/core/structure/javascript.md","webpack:///./src/gatsby/markdown/themes/by-component/card/xtend-theme-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/wrap-left.js?54f3","webpack:///./src/gatsby/code/vanilla/components/core/group/merge.js?5667","webpack:///./src/gatsby/components/snippets/classes/card-primary-full.js?571a","webpack:///./src/private/demos/themes/stores-listing-v1.js?573d","webpack:///./src/gatsby/components/snippets/classes/btn-primary.js?5bff","webpack:///./src/gatsby/code/vanilla/components/core/link/variant-inverse.js?5bf7","webpack:///./src/gatsby/markdown/themes/by-component/scroll/fashion-listing-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/card/size.js?5b9b","webpack:///./src/gatsby/code/iframe/themes/industrial-featured-v1.js?5801","webpack:///./src/gatsby/code/vanilla/components/core/button/variant.js?5944","webpack:///./src/core/icons.css.js","webpack:///./src/gatsby/markdown/themes/by-component/overlay/index.md","webpack:///./src/gatsby/code/vanilla/components/core/card/interactive-full.js?5c1b","webpack:///./src/gatsby/markdown/components/core/toggle/other.md","webpack:///./src/gatsby/components/demo/demo-vanilla.js?5ca0","webpack:///./src/gatsby/markdown/components/core/icons/index.md","webpack:///./src/gatsby/components/snippets/classes/card-default-overlay-screen.js?5d58","webpack:///./src/gatsby/code/vanilla/components/core/row/usage.js?5db3","webpack:///./src/gatsby/code/iframe/components/core/sticky/limit.js?5dc5","webpack:///./src/gatsby/components/snippets/classes/btn-default-drop.js?5dd4","webpack:///./src/gatsby/code/iframe/components/core/sticky/block.js?5ee2","webpack:///./src/core/_table.less","webpack:///./src/core/drop.js?6345","webpack:///./src/private/demos/components/core/toggle/progress.js?6354","webpack:///./src/gatsby/code/vanilla/components/core/toggle/usage-multiple-default.js?6008","webpack:///./src/gatsby/assets/scripts/ResizeSensor.js","webpack:///./src/gatsby/markdown/themes/by-component/overlay/xtend-theme-v1.md","webpack:///./src/gatsby/code/iframe/components/addons/jump-to-content.js?60a4","webpack:///./src/gatsby/code/vanilla/components/core/typography/paragraph.js?60b2","webpack:///./src/gatsby/assets/scripts/source.js","webpack:///./src/gatsby/code/vanilla/components/addons/separator-type.js?6256","webpack:///./src/private/demos/components/core/drop/animation.css","webpack:///./src/gatsby/components/snippets/themes/markup-overlay.js?6786","webpack:///./src/gatsby/markdown/themes/by-component/button/xtend-theme-v1.md","webpack:///./src/gatsby/markdown/components/core/link/index.md","webpack:///./src/gatsby/code/iframe/components/core/toggle/events-methods.js?6474","webpack:///./src/gatsby/code/vanilla/components/core/typography/text.js?6521","webpack:///./src/gatsby/code/vanilla/components/core/toggle/usage-self.js?6524","webpack:///./src/gatsby/components/snippets/classes/form-check-default.js?6651","webpack:///./src/gatsby/code/iframe/themes/collapse-theme-v1.js?668d","webpack:///./src/gatsby/code/vanilla/components/core/badge/interactive.js?66a2","webpack:///./src/gatsby/markdown/components/core/media/index.md","webpack:///./src/gatsby/components/snippets/components/markup-slider.js?6b7a","webpack:///./src/gatsby/code/iframe/components/core/scroll/mode-inside.js?6b86","webpack:///./src/gatsby/code/vanilla/components/core/overlay/animation-js.js?6bd5","webpack:///./src/gatsby/code/vanilla/components/core/drop/usage-unique.js?6891","webpack:///./src/gatsby/code/vanilla/components/core/list/alignment.js?6944","webpack:///./src/addons/group-number.js?696a","webpack:///./src/gatsby/markdown/themes/by-component/media/furniture-listing-v1.md","webpack:///./src/gatsby/code/iframe/components/core/scroll/mode-outside.js?6a28","webpack:///./src/private/demos/components/core/slider/events-methods.js?6a89","webpack:///./src/gatsby/code/vanilla/components/core/overlay/content.js?6ace","webpack:///./src/gatsby/components/demo/demo-vanilla-iframe.js?6ad6","webpack:///./src/gatsby/markdown/components/addons/toggle/index.md","webpack:///./src/gatsby/components/snippets/classes/card-sticky-default.js?6c70","webpack:///./src/gatsby/components/snippets/themes/markup-drop.js?6d0d","webpack:///./src/gatsby/components/snippets/classes/card-slide.js?6df6","webpack:///./src/gatsby/code/iframe/components/addons/scroll-to-anchor.js?6e2f","webpack:///./src/gatsby/markdown/themes/by-component/drop/index.md","webpack:///./src/gatsby/code/vanilla/components/core/form/label-addon.js?73f6","webpack:///./src/gatsby/markdown/themes/by-component/slider/index.md","webpack:///./src/addons/scroll-to-anchor.js?7041","webpack:///./src/gatsby/code/vanilla/components/core/overlay/class-html.js?709f","webpack:///./src/gatsby/code/vanilla/components/core/typography/figure.js?71a4","webpack:///./src/gatsby/code/vanilla/components/core/overlay/size.js?7245","webpack:///./src/gatsby/code/iframe/components/core/scroll/mode-infinite.js?7316","webpack:///./src/gatsby/code/vanilla/components/core/row/space-4.js?77f3","webpack:///./src/gatsby/markdown/components/core/form/layout.md","webpack:///./src/gatsby/code/iframe/components/core/overlay/usage-standalone.js?7462","webpack:///./src/private/demos/components/core/loader/js-spinner.js?74db","webpack:///./src/addons/propagate-interaction.js?752c","webpack:///./src/tailwind-plugin.js","webpack:///./src/gatsby/markdown/components/addons/slider/index.md","webpack:///./src/gatsby/code/vanilla/components/core/toggle/animation-js.js?7623","webpack:///./src/gatsby/components/demo/demo.js?7630","webpack:///./src/gatsby/markdown/themes/by-component/overlay/fashion-gallery-v1.md","webpack:///./src/private/demos/components/core/toggle/class.css","webpack:///./src/gatsby/code/iframe/components/core/scroll/block.js?7908","webpack:///./src/gatsby/code/vanilla/components/core/drop/card-size.js?791e","webpack:///./src/gatsby/code/vanilla/components/core/loader/spinner.js?79d1","webpack:///./src/gatsby/code/vanilla/components/core/card/list.js?79ec","webpack:///./src/gatsby/code/vanilla/components/core/row/space-1.js?7a4d","webpack:///./src/gatsby/markdown/components/core/slider/position.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/backdrop.js?7f8a","webpack:///./src/gatsby/code/vanilla/components/core/list/usage-vertical.js?7fc3","webpack:///./src/gatsby/markdown/themes/by-component/scroll/furniture-listing-v1.md","webpack:///./src/gatsby/assets/scripts/theme.js?7c53","webpack:///./src/gatsby/code/vanilla/components/core/card/list-full.js?7cd4","webpack:///./src/gatsby/markdown/components/core/typography/index.md","webpack:///./src/core/toggle.js?7d13","webpack:///./src/gatsby/code/vanilla/components/core/button/disabled.js?7d67","webpack:///./src/gatsby/code/vanilla/components/core/toggle/animation.js?7d8c","webpack:///./src/private/demos/themes/industrial-featured-v1.less","webpack:///./src/gatsby/markdown/components/addons/group/index.md","webpack:///./src/gatsby/markdown/components/addons/structure/propagate-interaction.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/wrap-right.js?7ecf","webpack:///./src/gatsby/code/vanilla/components/core/form/usage.js?7eec","webpack:///./src/gatsby/code/vanilla/components/core/list/space-px.js?7ef1","webpack:///./src/gatsby/code/iframe/components/core/sticky/mode-fixed.js?83c8","webpack:///./src/gatsby/code/vanilla/components/core/card/overflow-y-full.js?8077","webpack:///./src/gatsby/code/vanilla/components/core/list/space-3.js?8089","webpack:///./src/private/demos/components/core/scroll/mode-once.css","webpack:///./src/gatsby/code/vanilla/components/core/toggle/usage-unique-same.js?8185","webpack:///./src/gatsby/components/snippets/classes/card-toggle.js?81e6","webpack:///./src/core/form.css.js","webpack:///./src/gatsby/components/snippets/classes/badge-default-interactive.js?8281","webpack:///./src/gatsby/components/snippets/components/markup-slider-media.js?829a","webpack:///./src/gatsby/code/vanilla/components/core/drop/animation-js.js?82a6","webpack:///./src/gatsby/code/iframe/components/core/scroll/indicator.js?879a","webpack:///./src/gatsby/markdown/components/core/slider/api.md","webpack:///./src/gatsby/markdown/components/addons/layout/index.md","webpack:///./src/gatsby/code/vanilla/components/core/card/separator.js?8488","webpack:///./src/private/demos/components/core/scroll/mode-responsive.css","webpack:///./src/gatsby/code/vanilla/components/core/group/border.js?84f6","webpack:///./src/gatsby/markdown/components/core/overlay/interaction.md","webpack:///./src/private/demos/components/core/form/validation.js?857f","webpack:///./src/gatsby/components/snippets/classes/card-default-full.js?8628","webpack:///./src/private/demos/components/addons/ripple.js?862b","webpack:///./src/gatsby/code/vanilla/components/core/typography/list.js?865c","webpack:///./src/gatsby/code/iframe/components/core/sticky/contain-bottom.js?8b44","webpack:///./src/gatsby/markdown/components/addons/overlay/index.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/align-right.js?885e","webpack:///./src/gatsby/code/vanilla/components/core/row/overflow.js?8886","webpack:///./src/private/demos/components/addons/infinite-scroll.css","webpack:///./src/gatsby/markdown/components/core/toggle/api.md","webpack:///./src/gatsby/code/vanilla/components/core/form/size-md.js?8a18","webpack:///./src/gatsby/components/snippets/classes/btn-close-outside.js?8aed","webpack:///./src/gatsby/code/vanilla/components/core/form/mode-inline-row.js?8b31","webpack:///./src/gatsby/components/snippets/classes/form-switch-default.js?8fec","webpack:///./src/addons/separator.css.js","webpack:///./src/addons/ripple.js?8cbd","webpack:///./src/gatsby/code/vanilla/components/core/drop/card-overflow-y.js?8d11","webpack:///./src/gatsby/code/vanilla/components/core/toggle/disable.js?8d61","webpack:///./src/private/demos/components/addons/google-locator.js?8d86","webpack:///./src/gatsby/code/iframe/themes/furniture-listing-v1.js?8d88","webpack:///./src/gatsby/markdown/tests/smooth/index.md","webpack:///./src/gatsby/markdown/components/addons/group/group-expand.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/left.js?8e13","webpack:///./src/gatsby/code/vanilla/components/core/loader/background-spinner.js?8e3d","webpack:///./src/gatsby/code/vanilla/components/core/slider/wheel.js?8e8b","webpack:///./src/gatsby/markdown/introduction/index.md","webpack:///./src/gatsby/code/vanilla/components/core/media/16-9.js?93fa","webpack:///./src/gatsby/code/vanilla/components/core/overlay/disable.js?902a","webpack:///./src/gatsby/code/vanilla/components/core/slider/contain-center.js?90d8","webpack:///./src/gatsby/components/snippets/themes/markup-card.js?90e0","webpack:///./src/addons/textarea-autosize.js?9127","webpack:///./src/gatsby/markdown/components/core/slider/interaction.md","webpack:///./src/gatsby/code/vanilla/components/core/button/usage.js?9133","webpack:///./node_modules/raw-loader/dist/cjs.js ^\\.\\/.*$","webpack:///./src/gatsby/code/vanilla/components/core/drop/list-variant.js?931c","webpack:///./src/gatsby/markdown/components/core/button/index.md","webpack:///./src/private/demos/components/core/drop/disable.css","webpack:///./src/gatsby/markdown/components/core/toggle/index.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/align-left.js?9567","webpack:///./src/gatsby/code/vanilla/components/core/drop/usage-multiple.js?95b2","webpack:///./src/gatsby/assets/styles/theme.css","webpack:///./src/gatsby/code/vanilla/components/core/toggle/navigation.js?96b2","webpack:///./src/gatsby/markdown/introduction/information/index.md","webpack:///./src/gatsby/markdown/components/addons/typography/index.md","webpack:///./src/gatsby/code/vanilla/components/core/toggle/usability-keyboard.js?9726","webpack:///./src/gatsby/markdown/components/index.md","webpack:///./src/gatsby/components/snippets/classes/input-default-group.js?9bfe","webpack:///./src/gatsby/code/vanilla/components/core/overlay/usage-unique.js?9b61","webpack:///./src/private/demos/components/core/scroll/direction.js?9829","webpack:///./src/gatsby/code/iframe/components/core/slider/events-methods.js?986b","webpack:///./src/addons/mouse-follow.js?987a","webpack:///./src/gatsby/components/snippets/classes/form-radio-primary.js?98c4","webpack:///./src/gatsby/markdown/components/addons/layout/google-locator.md","webpack:///./src/gatsby/markdown/themes/by-component/scroll/index.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/prevent-event-hover.js?999f","webpack:///./src/gatsby/markdown/components/addons/structure/ripple.md","webpack:///./src/gatsby/code/vanilla/components/core/form/validation.js?99e2","webpack:///./src/tailwind-xtend.js","webpack:///./src/private/demos/components/core/overlay/animation-js.js?9b01","webpack:///./src/gatsby/code/vanilla/components/core/form/mode-horizontal.js?9ff5","webpack:///./src/gatsby/markdown/components/core/row/content.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/card-content.js?9fd4","webpack:///./src/gatsby/markdown/components/addons/layout/jump-to-content.md","webpack:///./src/gatsby/code/vanilla/components/core/slider/usage.js?9c9b","webpack:///./src/gatsby/components/snippets/classes/card-primary-drop-list.js?9cb0","webpack:///./src/gatsby/components/snippets/markdown-slug.js?9cc2","webpack:///./src/gatsby/markdown/themes/by-component/drop/collapse-theme-v1.md","webpack:///./src/gatsby/components/snippets/classes/card-default.js?9d32","webpack:///./src/gatsby/code/vanilla/components/core/card/content.js?9d47","webpack:///./src/gatsby/components/snippets/components/markup-slider-overflow.js?9d55","webpack:///./src/gatsby/code/vanilla/components/core/slider/contain-left.js?9db9","webpack:///./src/gatsby/markdown/themes/by-type/listing/stores-listing-v2.md","webpack:///./src/gatsby/components/snippets/themes/markup-megamenus.js?9e05","webpack:///./src/gatsby/markdown/components/core/loader/other.md","webpack:///./src/gatsby/markdown/themes/by-component/smooth/index.md","webpack:///./src/gatsby/markdown/components/core/row/other.md","webpack:///./src/gatsby/markdown/components/core/breadcrumbs/content.md","webpack:///./src/core/overlay.js?a05b","webpack:///./src/private/demos/themes/furniture-featured-v1.less","webpack:///./src/gatsby/code/vanilla/components/core/card/size-full.js?a08a","webpack:///./src/gatsby/markdown/components/core/drop/other.md","webpack:///./src/gatsby/code/vanilla/components/addons/group-toolbar.js?a1ef","webpack:///./src/gatsby/code/vanilla/components/core/card/disable.js?a222","webpack:///./src/gatsby/markdown/themes/by-type/layout/index.md","webpack:///./src/gatsby/markdown/themes/by-component/slider/fashion-hero-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/drop/prevent-event.js?a788","webpack:///./src/core/media.css.js","webpack:///./src/core/toggle.css.js","webpack:///./src/gatsby/markdown/components/addons/typography/separator.md","webpack:///./src/private/demos/components/addons/toggle-multilevel.js?a472","webpack:///./src/gatsby/code/vanilla/components/core/form/variant-primary.js?a48f","webpack:///./src/gatsby/code/vanilla/components/core/icons/variant.js?a486","webpack:///./src/gatsby/assets/scripts/source.js?a499","webpack:///./src/gatsby/components/snippets/classes/input-default.js?a581","webpack:///./src/core/table.less","webpack:///./src/gatsby/code/iframe/themes/slide-overlay-v1.js?ab8d","webpack:///./src/gatsby/code/vanilla/components/core/slider/contain-right.js?abbf","webpack:///./src/gatsby/code/vanilla/components/core/card/group-full.js?a831","webpack:///./src/private/demos/test/demo-vanilla.css","webpack:///./src/gatsby/components/snippets/classes/badge-primary.js?a972","webpack:///./src/core/link.css.js","webpack:///./src/gatsby/code/vanilla/components/core/form/disabled.js?aa34","webpack:///./src/gatsby/markdown/components/core/drop/content-list.md","webpack:///./src/core/typography.css.js","webpack:///./src/gatsby/code/iframe/themes/xtend-theme-v1.js?ab1c","webpack:///./src/gatsby/code/iframe/components/addons/google-locator.js?af9f","webpack:///./src/gatsby/code/iframe/themes/stores-listing-v1.js?afc9","webpack:///./src/gatsby/code/iframe/themes/stores-listing-v2.js?afdf","webpack:///./src/gatsby/markdown/components/core/icons/content.md","webpack:///./src/private/demos/test/demo-vanilla-iframe.js","webpack:///./src/private/demos/components/core/toggle/jump.css","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-size-bottom.js?ae25","webpack:///./src/gatsby/code/iframe/themes/sequential-megamenu-v1.js?ae65","webpack:///./src/future/sticky.css.js","webpack:///./src/gatsby/code/vanilla/components/core/row/space-3.js?ae96","webpack:///./src/addons/infinite-scroll.js?af15","webpack:///./src/gatsby/markdown/themes/by-type/layout/fashion-gallery-v1.md","webpack:///./src/private/demos/components/core/scroll/delay.css","webpack:///./src/gatsby/code/iframe/components/core/drop/events-methods.js?b3a3","webpack:///./src/private/demos/themes/fashion-listing-v1.js?b000","webpack:///./src/gatsby/code/vanilla/components/core/slider/expand.js?b04a","webpack:///./src/gatsby/code/vanilla/components/core/toggle/class.js?b0fd","webpack:///./src/gatsby/components/pages/404.js?b15b","webpack:///./src/private/demos/themes/fashion-hero-v1.css","webpack:///./src/gatsby/code/vanilla/components/core/overlay/screen.js?b248","webpack:///./src/addons/slider-navigation-sides.css.js","webpack:///./src/gatsby/code/vanilla/components/core/slider/wrap.js?b787","webpack:///./src/gatsby/markdown/components/addons/navigation/scroll-to-anchor.md","webpack:///./src/gatsby/markdown/themes/by-component/animation/index.md","webpack:///./src/private/demos/components/core/scroll/mode-infinite.css","webpack:///./src/gatsby/markdown/tests/index.md","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-inverse.js?b5a6","webpack:///./src/gatsby/code/vanilla/components/core/group/border-vertical.js?b5f4","webpack:///./src/gatsby/components/snippets/components/markup-slider-other.js?b64e","webpack:///./src/core/slider.js?b6a2","webpack:///./src/gatsby/code/vanilla/components/core/toggle/event.js?b6e5","webpack:///./src/gatsby/code/vanilla/components/core/toggle/group.js?bb8a","webpack:///./src/private/demos/themes/opacity-listing-v1.js?b863","webpack:///./src/gatsby/code/iframe/components/core/scroll/mode-outside-once.js?b92c","webpack:///./src/gatsby/code/iframe/components/addons/sticky-footer.js?b947","webpack:///./src/private/demos/components/core/loader/js-filler.js?b9da","webpack:///./src/gatsby/markdown/themes/by-type/gallery/index.md","webpack:///./src/gatsby/code/vanilla/components/core/group/usage.js?b9f7","webpack:///./src/gatsby/code/vanilla/components/core/card/separator-full.js?ba1e","webpack:///./src/gatsby/markdown/tests/sticky/interaction.md","webpack:///./src/gatsby/code/vanilla/components/addons/textarea-autosize.js?ba9d","webpack:///./src/gatsby/markdown/components/core/overlay/api.md","webpack:///./src/gatsby/code/vanilla/components/core/toggle/prevent-event.js?bfff","webpack:///./src/gatsby/markdown/components/addons/slider/slider-navigation-sides.md","webpack:///./src/gatsby/code/vanilla/components/core/button/alignment.js?bfdf","webpack:///./src/gatsby/markdown/components/core/structure/css.md","webpack:///./src/gatsby/components/snippets/img.js?bfd9","webpack:///./src/tailwind-config.js","webpack:///./src/core/row.css.js","webpack:///./src/private/demos/components/core/form/variant-primary.css","webpack:///./src/gatsby/markdown/themes/by-component/group/collapse-theme-v1.md","webpack:///./src/gatsby/code/vanilla/components/addons/mouse-follow.js?bc79","webpack:///./src/gatsby/markdown/themes/by-component/animation/fashion-gallery-v1.md","webpack:///./src/gatsby/markdown/introduction/issues/index.md","webpack:///./src/gatsby/code/vanilla/components/core/media/contain.js?bcde","webpack:///./src/gatsby/code/vanilla/test/demo-vanilla.js?bcf9","webpack:///./src/gatsby/markdown/themes/by-type/listing/fashion-listing-v1.md","webpack:///./src/private/demos/themes/industrial-featured-v1.js?bd1d","webpack:///./src/gatsby/assets/styles/_demo.css","webpack:///./src/private/demos/components/core/drop/events-methods.js?bd81","webpack:///./src/gatsby/assets/styles/_shared.css","webpack:///./src/gatsby/components/snippets/classes/card-primary.js?be6c","webpack:///./src/private/demos/themes/fashion-hero-v2.js?bed5","webpack:///./src/private/demos/components/core/scroll/block.css","webpack:///./src/gatsby/components/snippets/classes/note.js?c3e5","webpack:///./src/core/badge.css.js","webpack:///./src/gatsby/markdown/tests/scroll/interaction.md","webpack:///./src/private/demos/components/core/sticky/block.js?c04a","webpack:///./src/gatsby/markdown/components/core/structure/index.md","webpack:///./src/gatsby/code/vanilla/components/core/icons/size.js?c127","webpack:///./src/private/demos/components/core/scroll/mode-inside.css","webpack:///./src/gatsby/code/vanilla/components/addons/separator.js?c166","webpack:///./src/gatsby/code/vanilla/components/core/loader/filler-size-y.js?c2cb","webpack:///./src/private/demos/components/addons/overlay-message-outside.css","webpack:///./src/gatsby/code/iframe/components/core/overlay/events-methods.js?c2e5","webpack:///./src/gatsby/markdown/themes/by-type/featured/brands-featured-v1.md","webpack:///./src/gatsby/code/vanilla/components/core/card/variant.js?c7c5","webpack:///./src/gatsby/code/vanilla/components/core/card/close-full.js?c7d4","webpack:///./src/private/demos/components/core/scroll/indicator.css","webpack:///./src/gatsby/components/snippets/classes/label-default.js?c487","webpack:///./src/gatsby/assets/styles/_header.css","webpack:///./src/gatsby/code/iframe/components/core/sticky/showhide-bottom.js?c5be","webpack:///./src/gatsby/markdown/tests/scroll/api.md","webpack:///./src/private/demos/components/core/scroll/mode-outside-once.css","webpack:///./src/private/demos/components/core/toggle/events-methods.js?c705","webpack:///./src/gatsby/code/iframe/themes/brands-featured-v1.js?cba0","webpack:///./src/gatsby/markdown/themes/by-type/hero/index.md","webpack:///./src/gatsby/code/vanilla/components/core/list/space-4.js?c989","webpack:///./src/gatsby/code/vanilla/components/core/toggle/usage-unique-single.js?c9a7","webpack:///./src/private/demos/components/core/toggle/animation.css","webpack:///./src/gatsby/code/vanilla/components/core/card/variant-full.js?ca45","webpack:///./src/gatsby/markdown/components/core/form/index.md","webpack:///./src/private/demos/themes/fashion-gallery-v1.less","webpack:///./src/core/group.css.js","webpack:///./src/gatsby/components/snippets/spinner.js?cd13","webpack:///./src/html.js","webpack:///./src/gatsby/markdown/themes/by-component/scroll/furniture-featured-v1.md","webpack:///./src/private/demos/components/core/scroll/distance.css","webpack:///./src/gatsby/code/vanilla/components/core/toggle/start.js?cd8a","webpack:///./src/gatsby/markdown/components/core/button/other.md","webpack:///./src/gatsby/code/iframe/components/core/sticky/mode-absolute.js?cedb","webpack:///./src/gatsby/components/snippets/classes/btn-primary-group.js?cee4","webpack:///./src/gatsby/markdown/introduction/aria/index.md"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","filter","xs","f","res","push","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","slice","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","cachedSetTimeout","cachedClearTimeout","module","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","args","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","chdir","dir","umask","Layout","componentDidMount","demo","props","cname","full","container","document","documentElement","classList","add","setAttribute","Xt","ready","window","self","top","parent","initIframe","htmlSource","jsxSource","cssSource","jsSource","resizeIframe","frameElement","getAttribute","ResizeSensor","querySelector","makeDocument","render","children","React","Component","DemoVanillaIframe","seo","dirs","replace","query","data","description","id","allFile","files","x","file","relativePath","map","className","dangerouslySetInnerHTML","__html","define","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","forEachElement","elements","callback","elementsType","Object","toString","isCollectionTyped","jQuery","Elements","j","element","EventQueue","q","ev","remove","newQueue","attachResizeEvent","resized","resizedAttached","resizeSensor","createElement","style","styleChild","cssText","innerHTML","appendChild","prop","currentStyle","getComputedStyle","getPropertyValue","position","dirty","rafId","newWidth","newHeight","expand","childNodes","expandChild","shrink","lastWidth","offsetWidth","lastHeight","offsetHeight","reset","width","height","scrollLeft","scrollTop","onResized","onScroll","addEvent","el","cb","attachEvent","addEventListener","elem","detach","contains","removeChild","nameOverride","type","require","default","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys"],"mappings":"6FAAA,OAAe,+4Q,oCCAf,OAAe,6f,oCCAf,OAAe,itK,oCCAf,OAAe,62H,oCCAf,OAAe,2uD,oCCAf,OAAe,45E,oCCAf,OAAe,gnE,oCCAf,OAAe,gc,oCCAf,OAAe,ugL,oCCAf,OAAe,8Y,oCCAf,OAAe,g/D,oCCAf,OAAe,8iI,oCCAf,OAAe,m7B,oCCAf,OAAe,mL,oCCAf,OAAe,05B,oCCAf,OAAe,s2C,oCCAf,OAAe,24C,oCCAf,OAAe,ixJ,oCCAf,OAAe,mS,oCCAf,OAAe,0I,oCCAf,OAAe,miT,oCCAf,OAAe,4pD,oCCAf,OAAe,yvD,oCCAf,OAAe,sqB,oCCAf,OAAe,mP,oCCAf,OAAe,mrF,oCCAf,OAAe,+oC,oCCAf,OAAe,0f,oCCAf,OAAe,61G,oCCAf,OAAe,kiB,oCCAf,OAAe,unB,oCCAf,OAAe,4S,oCCAf,OAAe,0qE,oCCAf,OAAe,6iB,oCCAf,OAAe,miB,oCCAf,OAAe,kT,oCCAf,OAAe,6tC,oCCAf,OAAe,6L,oCCAf,OAAe,oyI,oCCAf,OAAe,4rE,oCCAf,OAAe,+hI,oCCAf,OAAe,iN,oCCAf,OAAe,+X,oCCAf,OAAe,iT,oCCAf,OAAe,oZ,oCCAf,OAAe,6B,oCCAf,OAAe,y5I,oCCAf,OAAe,41E,oCCAf,OAAe,+R,oCCAf,OAAe,k5C,oCCAf,OAAe,mT,oCCAf,OAAe,sK,oCCAf,OAAe,i2M,oCCAf,OAAe,ilC,wBCAf,YA0BA,SAASA,EAAeC,EAAOC,GAI7B,IAFA,IAAIC,EAAK,EAEAC,EAAIH,EAAMI,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC1C,IAAIE,EAAOL,EAAMG,GAEJ,MAATE,EACFL,EAAMM,OAAOH,EAAG,GACE,OAATE,GACTL,EAAMM,OAAOH,EAAG,GAChBD,KACSA,IACTF,EAAMM,OAAOH,EAAG,GAChBD,KAKJ,GAAID,EACF,KAAOC,IAAMA,EACXF,EAAMO,QAAQ,MAIlB,OAAOP,EAyPT,SAASQ,EAAOC,EAAIC,GAClB,GAAID,EAAGD,OAAQ,OAAOC,EAAGD,OAAOE,GAGhC,IAFA,IAAIC,EAAM,GAEDR,EAAI,EAAGA,EAAIM,EAAGL,OAAQD,IACzBO,EAAED,EAAGN,GAAIA,EAAGM,IAAKE,EAAIC,KAAKH,EAAGN,IAGnC,OAAOQ,EA5PTE,EAAQC,QAAU,WAIhB,IAHA,IAAIC,EAAe,GACfC,GAAmB,EAEdb,EAAIc,UAAUb,OAAS,EAAGD,IAAM,IAAMa,EAAkBb,IAAK,CACpE,IAAIe,EAAOf,GAAK,EAAIc,UAAUd,GAAKgB,EAAQC,MAE3C,GAAoB,iBAATF,EACT,MAAM,IAAIG,UAAU,6CACVH,IAIZH,EAAeG,EAAO,IAAMH,EAC5BC,EAAsC,MAAnBE,EAAKI,OAAO,IASjC,OAAQN,EAAmB,IAAM,KAHjCD,EAAehB,EAAeS,EAAOO,EAAaQ,MAAM,MAAM,SAAUC,GACtE,QAASA,MACNR,GAAkBS,KAAK,OAC2B,KAKzDZ,EAAQa,UAAY,SAAUR,GAC5B,IAAIS,EAAad,EAAQc,WAAWT,GAChCU,EAAqC,MAArBC,EAAOX,GAAO,GAclC,OAZAA,EAAOnB,EAAeS,EAAOU,EAAKK,MAAM,MAAM,SAAUC,GACtD,QAASA,MACNG,GAAYF,KAAK,OAERE,IACZT,EAAO,KAGLA,GAAQU,IACVV,GAAQ,MAGFS,EAAa,IAAM,IAAMT,GAInCL,EAAQc,WAAa,SAAUT,GAC7B,MAA0B,MAAnBA,EAAKI,OAAO,IAIrBT,EAAQY,KAAO,WACb,IAAIK,EAAQC,MAAMC,UAAUC,MAAMC,KAAKjB,UAAW,GAClD,OAAOJ,EAAQa,UAAUlB,EAAOsB,GAAO,SAAUN,EAAGW,GAClD,GAAiB,iBAANX,EACT,MAAM,IAAIH,UAAU,0CAGtB,OAAOG,KACNC,KAAK,OAKVZ,EAAQuB,SAAW,SAAUC,EAAMC,GAIjC,SAASC,EAAKC,GAGZ,IAFA,IAAIC,EAAQ,EAELA,EAAQD,EAAIpC,QACE,KAAfoC,EAAIC,GADiBA,KAM3B,IAFA,IAAIC,EAAMF,EAAIpC,OAAS,EAEhBsC,GAAO,GACK,KAAbF,EAAIE,GADOA,KAIjB,OAAID,EAAQC,EAAY,GACjBF,EAAIP,MAAMQ,EAAOC,EAAMD,EAAQ,GAjBxCJ,EAAOxB,EAAQC,QAAQuB,GAAMR,OAAO,GACpCS,EAAKzB,EAAQC,QAAQwB,GAAIT,OAAO,GAwBhC,IALA,IAAIc,EAAYJ,EAAKF,EAAKd,MAAM,MAC5BqB,EAAUL,EAAKD,EAAGf,MAAM,MACxBnB,EAASyC,KAAKC,IAAIH,EAAUvC,OAAQwC,EAAQxC,QAC5C2C,EAAkB3C,EAEbD,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,GAAIwC,EAAUxC,KAAOyC,EAAQzC,GAAI,CAC/B4C,EAAkB5C,EAClB,MAIJ,IAAI6C,EAAc,GAElB,IAAS7C,EAAI4C,EAAiB5C,EAAIwC,EAAUvC,OAAQD,IAClD6C,EAAYpC,KAAK,MAInB,OADAoC,EAAcA,EAAYC,OAAOL,EAAQX,MAAMc,KAC5BtB,KAAK,MAG1BZ,EAAQqC,IAAM,IACdrC,EAAQsC,UAAY,IAEpBtC,EAAQuC,QAAU,SAAUlC,GAE1B,GADoB,iBAATA,IAAmBA,GAAc,IACxB,IAAhBA,EAAKd,OAAc,MAAO,IAQ9B,IAPA,IAAIiD,EAAOnC,EAAKoC,WAAW,GACvBC,EAAmB,KAATF,EAGVX,GAAO,EACPc,GAAe,EAEVrD,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAGtC,GAAa,MAFbkD,EAAOnC,EAAKoC,WAAWnD,KAKnB,IAAKqD,EAAc,CACjBd,EAAMvC,EACN,YAIJqD,GAAe,EAInB,OAAa,IAATd,EAAmBa,EAAU,IAAM,IAEnCA,GAAmB,IAARb,EAGN,IAGFxB,EAAKe,MAAM,EAAGS,IAkCvB7B,EAAQ4C,SAAW,SAAUvC,EAAMwC,GACjC,IAAIhD,EAhCN,SAAkBQ,GACI,iBAATA,IAAmBA,GAAc,IAC5C,IAGIf,EAHAsC,EAAQ,EACRC,GAAO,EACPc,GAAe,EAGnB,IAAKrD,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAClC,GAA2B,KAAvBe,EAAKoC,WAAWnD,IAKhB,IAAKqD,EAAc,CACjBf,EAAQtC,EAAI,EACZ,YAEgB,IAATuC,IAGXc,GAAe,EACfd,EAAMvC,EAAI,GAId,OAAa,IAATuC,EAAmB,GAChBxB,EAAKe,MAAMQ,EAAOC,GAMjBe,CAASvC,GAMjB,OAJIwC,GAAOhD,EAAEmB,QAAQ,EAAI6B,EAAItD,UAAYsD,IACvChD,EAAIA,EAAEmB,OAAO,EAAGnB,EAAEN,OAASsD,EAAItD,SAG1BM,GAGTG,EAAQ8C,QAAU,SAAUzC,GACN,iBAATA,IAAmBA,GAAc,IAS5C,IARA,IAAI0C,GAAY,EACZC,EAAY,EACZnB,GAAO,EACPc,GAAe,EAGfM,EAAc,EAET3D,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACzC,IAAIkD,EAAOnC,EAAKoC,WAAWnD,GAE3B,GAAa,KAATkD,GAaS,IAATX,IAGFc,GAAe,EACfd,EAAMvC,EAAI,GAGC,KAATkD,GAIkB,IAAdO,EAAiBA,EAAWzD,EAA2B,IAAhB2D,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAvBb,IAAKN,EAAc,CACjBK,EAAY1D,EAAI,EAChB,OAyBR,OAAkB,IAAdyD,IAA4B,IAATlB,GACP,IAAhBoB,GACgB,IAAhBA,GAAqBF,IAAalB,EAAM,GAAKkB,IAAaC,EAAY,EAC7D,GAGF3C,EAAKe,MAAM2B,EAAUlB,IAe9B,IAAIb,EAA6B,MAApB,KAAKA,QAAQ,GAAa,SAAUkC,EAAKtB,EAAOuB,GAC3D,OAAOD,EAAIlC,OAAOY,EAAOuB,IACvB,SAAUD,EAAKtB,EAAOuB,GAExB,OADIvB,EAAQ,IAAGA,EAAQsB,EAAI3D,OAASqC,GAC7BsB,EAAIlC,OAAOY,EAAOuB,M,0DC5T3B,OAAe,sc,oCCAf,OAAe,g6J,oCCAf,OAAe,q0D,oCCAf,OAAe,umC,oCCAf,OAAe,wkB,oCCAf,OAAe,gkD,oCCAf,OAAe,mhB,oCCAf,OAAe,szD,oCCAf,OAAe,kiB,oCCAf,OAAe,y4Q,oCCAf,OAAe,yd,oCCAf,OAAe,yoB,oCCAf,OAAe,qkD,oCCAf,OAAe,wkE,oCCAf,OAAe,42N,oCCAf,OAAe,o0H,oCCAf,OAAe,uI,oCCAf,OAAe,4G,oCCAf,OAAe,izF,oCCAf,OAAe,w/B,oCCAf,OAAe,i7C,oCCAf,OAAe,skL,oCCAf,OAAe,8iB,oCCAf,OAAe,4G,oCCAf,OAAe,wiG,oCCAf,OAAe,4K,oCCAf,OAAe,+1B,oCCAf,OAAe,8R,oCCAf,OAAe,yrb,oCCAf,OAAe,6+G,oCCAf,OAAe,qG,oCCAf,OAAe,siB,oCCAf,OAAe,uH,oCCAf,OAAe,i8K,oCCAf,OAAe,k6O,oCCAf,OAAe,slN,oCCAf,OAAe,6+I,oCCAf,OAAe,45F,oCCAf,OAAe,6G,oCCAf,OAAe,svI,oCCAf,OAAe,w8C,oCCAf,OAAe,2d,oCCAf,OAAe,spM,oCCAf,OAAe,ytD,oCCAf,OAAe,+iG,oCCAf,OAAe,we,oCCAf,OAAe,8+K,oCCAf,OAAe,iyC,oCCAf,OAAe,sxB,oCCAf,OAAe,mrB,oCCAf,OAAe,mhC,oCCAf,OAAe,45F,oCCAf,OAAe,4e,oCCAf,OAAe,0S,oCCAf,OAAe,utJ,oCCAf,OAAe,m+V,oCCAf,OAAe,gT,oCCAf,OAAe,83C,oCCAf,OAAe,uujB,oCCAf,OAAe,sO,oCCAf,OAAe,8xI,oCCAf,OAAe,21L,oCCAf,OAAe,yH,oCCAf,OAAe,mW,oCCAf,OAAe,2S,oCCAf,OAAe,0+B,oCCAf,OAAe,o1B,oCCAf,OAAe,8lC,oCCAf,OAAe,qmB,oCCAf,OAAe,q4D,oCCAf,OAAe,w/I,qBCCf,IAKIC,EACAC,EANA/C,EAAUgD,EAAOtD,QAAU,GAQ/B,SAASuD,IACP,MAAM,IAAIC,MAAM,mCAGlB,SAASC,IACP,MAAM,IAAID,MAAM,qCAyBlB,SAASE,EAAWC,GAClB,GAAIP,IAAqBQ,WAEvB,OAAOA,WAAWD,EAAK,GAIzB,IAAKP,IAAqBG,IAAqBH,IAAqBQ,WAElE,OADAR,EAAmBQ,WACZA,WAAWD,EAAK,GAGzB,IAEE,OAAOP,EAAiBO,EAAK,GAC7B,MAAOE,GACP,IAEE,OAAOT,EAAiB/B,KAAK,KAAMsC,EAAK,GACxC,MAAOE,GAEP,OAAOT,EAAiB/B,KAAKyC,KAAMH,EAAK,MA3C9C,WACE,IAEIP,EADwB,mBAAfQ,WACUA,WAEAL,EAErB,MAAOM,GACPT,EAAmBG,EAGrB,IAEIF,EAD0B,mBAAjBU,aACYA,aAEAN,EAEvB,MAAOI,GACPR,EAAqBI,GAlBzB,GA2EA,IAEIO,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACFF,GAAaF,IAIlBE,GAAW,EAEPF,EAAazE,OACf0E,EAAQD,EAAa5B,OAAO6B,GAE5BE,GAAc,EAGZF,EAAM1E,QACR8E,KAIJ,SAASA,IACP,IAAIH,EAAJ,CAIA,IAAII,EAAUZ,EAAWU,GACzBF,GAAW,EAGX,IAFA,IAAIf,EAAMc,EAAM1E,OAET4D,GAAK,CAIV,IAHAa,EAAeC,EACfA,EAAQ,KAECE,EAAahB,GAChBa,GACFA,EAAaG,GAAYI,MAI7BJ,GAAc,EACdhB,EAAMc,EAAM1E,OAGdyE,EAAe,KACfE,GAAW,EA1Eb,SAAyBM,GACvB,GAAInB,IAAuBU,aAEzB,OAAOA,aAAaS,GAItB,IAAKnB,IAAuBI,IAAwBJ,IAAuBU,aAEzE,OADAV,EAAqBU,aACdA,aAAaS,GAGtB,IAESnB,EAAmBmB,GAC1B,MAAOX,GACP,IAEE,OAAOR,EAAmBhC,KAAK,KAAMmD,GACrC,MAAOX,GAGP,OAAOR,EAAmBhC,KAAKyC,KAAMU,KAqDzCC,CAAgBH,IAoBlB,SAASI,EAAKf,EAAKgB,GACjBb,KAAKH,IAAMA,EACXG,KAAKa,MAAQA,EAef,SAASC,KAlCTtE,EAAQuE,SAAW,SAAUlB,GAC3B,IAAImB,EAAO,IAAI5D,MAAMd,UAAUb,OAAS,GAExC,GAAIa,UAAUb,OAAS,EACrB,IAAK,IAAID,EAAI,EAAGA,EAAIc,UAAUb,OAAQD,IACpCwF,EAAKxF,EAAI,GAAKc,UAAUd,GAI5B2E,EAAMlE,KAAK,IAAI2E,EAAKf,EAAKmB,IAEJ,IAAjBb,EAAM1E,QAAiB2E,GACzBR,EAAWW,IAUfK,EAAKvD,UAAUoD,IAAM,WACnBT,KAAKH,IAAIoB,MAAM,KAAMjB,KAAKa,QAG5BrE,EAAQ0E,MAAQ,UAChB1E,EAAQ2E,SAAU,EAClB3E,EAAQ4E,IAAM,GACd5E,EAAQ6E,KAAO,GACf7E,EAAQ8E,QAAU,GAElB9E,EAAQ+E,SAAW,GAInB/E,EAAQgF,GAAKV,EACbtE,EAAQiF,YAAcX,EACtBtE,EAAQkF,KAAOZ,EACftE,EAAQmF,IAAMb,EACdtE,EAAQoF,eAAiBd,EACzBtE,EAAQqF,mBAAqBf,EAC7BtE,EAAQsF,KAAOhB,EACftE,EAAQuF,gBAAkBjB,EAC1BtE,EAAQwF,oBAAsBlB,EAE9BtE,EAAQyF,UAAY,SAAUC,GAC5B,MAAO,IAGT1F,EAAQ2F,QAAU,SAAUD,GAC1B,MAAM,IAAIxC,MAAM,qCAGlBlD,EAAQC,IAAM,WACZ,MAAO,KAGTD,EAAQ4F,MAAQ,SAAUC,GACxB,MAAM,IAAI3C,MAAM,mCAGlBlD,EAAQ8F,MAAQ,WACd,OAAO,I,oCC9MT,OAAe,4rD,oCCAf,OAAe,0S,oCCAf,OAAe,iN,oCCAf,OAAe,05C,oCCAf,OAAe,0+F,oCCAf,OAAe,qW,oCCAf,OAAe,2gC,oCCAf,OAAe,o/B,oCCAf,OAAe,wd,oCCAf,OAAe,itX,oCCAf,OAAe,2+F,oCCAf,OAAe,24C,oCCAf,OAAe,+yC,oCCAf,OAAe,y/B,oCCAf,OAAe,sH,kCCAf,OAAe,w/G,kCCAf,OAAe,uuC,kCCAf,OAAe,y5K,kCCAf,OAAe,+H,kCCAf,OAAe,m6E,kCCAf,OAAe,suE,oCCAf,OAAe,sc,oCCAf,OAAe,wC,kCCAf,OAAe,i6D,kCCAf,OAAe,qS,kCCAf,OAAe,8S,kCCAf,OAAe,mrU,oCCAf,OAAe,skF,kCCAf,OAAe,ipC,kCCAf,OAAe,q9C,oCCAf,OAAe,0+I,kCCAf,OAAe,skE,kCCAf,OAAe,4wB,oCCAf,OAAe,gxI,kCCAf,OAAe,upC,kCCAf,OAAe,uqB,oCCAf,OAAe,yhQ,kCCAf,OAAe,+yI,kCCAf,OAAe,g/B,kCCAf,OAAe,wmI,kCCAf,OAAe,y3U,kCCAf,OAAe,47D,oCCAf,OAAe,sN,kCCAf,OAAe,qwM,oCCAf,OAAe,iE,kCCAf,OAAe,6d,kCCAf,OAAe,q2M,kCCAf,OAAe,o1H,kCCAf,OAAe,+S,kCCAf,OAAe,urG,kCCAf,OAAe,iT,oCCAf,OAAe,+/C,kCCAf,OAAe,o1E,kCCAf,OAAe,iS,kCCAf,OAAe,25B,kCCAf,OAAe,w2B,kCCAf,OAAe,26C,kCCAf,OAAe,okH,kCCAf,OAAe,irB,kCCAf,OAAe,0S,kCCAf,OAAe,oG,oCCAf,OAAe,+hC,kCCAf,OAAe,s/I,kCCAf,OAAe,okD,kCCAf,OAAe,29B,kCCAf,OAAe,shG,oCCAf,OAAe,8N,kCCAf,OAAe,oZ,kCCAf,OAAe,kqH,kCCAf,OAAe,qN,kCCAf,OAAe,+7iC,kCCAf,OAAe,muE,kCCAf,OAAe,ge,kCCAf,OAAe,0uF,kCCAf,OAAe,8kB,kCCAf,OAAe,wc,kCCAf,OAAe,m8G,kCCAf,OAAe,i7C,kCCAf,OAAe,wG,kCCAf,OAAe,iT,kCCAf,OAAe,2N,kCCAf,OAAe,89D,kCCAf,OAAe,if,kCCAf,OAAe,g7B,kCCAf,OAAe,0F,kCCAf,OAAe,wkC,kCCAf,OAAe,+lB,kCCAf,OAAe,u4C,kCCAf,OAAe,y5B,kCCAf,OAAe,mO,kCCAf,OAAe,64B,wJCwDAC,G,oHA7CbC,kBAAA,WAAqB,IAAD,EACVC,EAASzC,KAAK0C,MAAdD,KACJE,EAAQ,uBACRF,EAAKG,OACPD,GAAS,uBAEPF,EAAKI,YACPF,GAAS,6BAEX,EAAAG,SAASC,gBAAgBC,WAAUC,IAAnC,oBAA0CN,EAAM/F,MAAM,OACtDkG,SAASC,gBAAgBG,aAAa,KAAM,WAAaT,EAAKP,MAa9DiB,IAAGC,OAZkB,WACfC,OAAOC,OAASD,OAAOE,MACzBF,OAAOG,OAAOC,WAAWJ,OAAOnB,KAAMO,EAAKiB,WAAYjB,EAAKkB,UAAWlB,EAAKmB,UAAWnB,EAAKoB,UAC5FR,OAAOG,OAAOM,aAAaT,OAAOU,aAAaC,aAAa,SACxDvB,EAAKG,MACP,IAAIqB,IAAanB,SAASoB,cAAc,gBAAgB,WACtDb,OAAOG,OAAOM,aAAaT,OAAOU,aAAaC,aAAa,aAIlEG,kB,EAKJC,OAAA,WAAU,IACAC,EAAarE,KAAK0C,MAAlB2B,SACR,OAAO,oCAAGA,I,GA7BOC,IAAMC,Y,YCDrBC,E,kGACJJ,OAAA,WAAU,IACA3B,EAASzC,KAAK0C,MAAdD,KACFgC,EAAM,CACZA,MAAY,OACZA,YAAkB,QAElB,OADAhC,EAAKlG,MAAO,iBAAiBkG,EAAKiC,KAAK5H,KAAK,KAAhC,IAAwC2F,EAAKP,MAAOyC,QAAQ,UAAW,IAAIA,QAAQ,mBAAoB,IAEjH,kBAAC,cAAD,CACEC,MAAK,aAWLR,OAAQ,SAAAS,GAAI,OACV,kBAAC,EAAD,CAAQJ,IAAKA,EAAKhC,KAAMA,GACtB,kBAAC,IAAD,CAAKvB,MAAOuD,EAAIvD,MAAO4D,YAAaL,EAAIK,cACxC,yBAAKC,GAAG,cAEJF,EAAKG,QAAQC,MAAMpJ,QAAO,SAAAqJ,GAAC,OAAIA,EAAEC,KAAKC,eAAoB3C,EAAKlG,KAAhC,UAA4C8I,KAAI,kBAAO5C,EAAKmB,UAAYA,YAAUnB,OAAW,8BAG5HoC,EAAKG,QAAQC,MAAMpJ,QAAO,SAAAqJ,GAAC,OAAIA,EAAEC,KAAKC,eAAoB3C,EAAKlG,KAAhC,SAA2C8I,KAAI,kBAAO5C,EAAKoB,SAAWA,YAASpB,OAAW,8BAE3H,yBAAKsC,GAAG,oBAAoBO,UAAU,2BAA2BC,wBAAyB,CAAEC,OAAQ/C,EAAKiB,oB,GA9BvFY,IAAMC,WAuCvBC,O,kCChDf,OAAe,ymB,kCCAf,OAAe,m1E,kCCAf,OAAe,0xF,kCCAf,OAAe,myE,kCCAf,OAAe,qwD,kCCAf,OAAe,uS,oCCAf,OAAe,w4E,kCCAf,OAAe,sW,kCCAf,OAAe,2S,kCCAf,OAAe,gO,kCCAf,OAAe,q7qB,kCCAf,OAAe,s4B,kCCAf,OAAe,0S,kCCAf,OAAe,g0B,kCCAf,OAAe,+xI,kCCAf,OAAe,46I,kCCAf,OAAe,+4G,kCCAf,OAAe,++B,kCCAf,OAAe,oN,kCCAf,OAAe,8zH,kCCAf,OAAe,+3C,kCCAf,OAAe,+6C,kCCAf,OAAe,mrX,oCCAf,OAAe,0hB,kCCAf,OAAe,wxT,oCCAf,OAAe,05B,kCCAf,OAAe,q5E,oCCAf,OAAe,itqB,kCCAf,OAAe,4nG,kCCAf,OAAe,o8L,kCCAf,OAAe,m9B,kCCAf,OAAe,2lD,kCCAf,OAAe,8gC,oCCAf,OAAe,4T,kCCAf,OAAe,wN,kCCAf,OAAe,6yE,oCCAf,OAAe,gF,kCCAf,OAAe,6G,kCCAf,OAAe,2uD,kCCAf,OAAe,qS,kCCAf,OAAe,olB,kCCAf,OAAe,4wO,kCCAf,OAAe,iE,kCCAf,OAAe,yS,kCCAf,OAAe,suE,kCCAf,OAAe,wjN,oCCAf,OAAe,svZ,kCCAf,OAAe,iL,kCCAf,OAAe,83I,kCCAf,OAAe,0pI,kCCAf,OAAe,uyH,kCCAf,OAAe,+hB,kCCAf,OAAe,48K,kCCAf,OAAe,+4C,kCCAf,OAAe,2xH,kCCAf,OAAe,ugB,kCCAf,OAAe,kG,kCCAf,OAAe,iV,kCCAf,OAAe,w9F,kCCAf,OAAe,qrB,kCCAf,OAAe,myD,kCCAf,OAAe,2iP,kCCAf,OAAe,qH,kCCAf,OAAe,2N,kCCAf,OAAe,4gB,oCCAf,OAAe,0J,kCCAf,OAAe,u6C,kCCAf,OAAe,2oE,kCCAf,OAAe,4Y,kCCAf,OAAe,oR,kCCAf,OAAe,2tC,kCCAf,OAAe,4vF,oCCAf,OAAe,qI,oCCAf,OAAe,uS,kCCAf,OAAe,sY,kCCAf,OAAe,wtG,kCCAf,OAAe,6vD,kCCAf,OAAe,ihB,kCCAf,OAAe,ksD,kCCAf,OAAe,msC,kCCAf,OAAe,4G,kCCAf,OAAe,oO,kCCAf,OAAe,66C,kCCAf,OAAe,2P,kCCAf,OAAe,qH,kCCAf,OAAe,8+I,kCCAf,OAAe,2jF,kCCAf,OAAe,iH,kCCAf,OAAe,wgI,oCCAf,OAAe,yhC,kCCAf,OAAe,ktD,oCCAf,OAAe,oU,kCCAf,OAAe,6/D,kCCAf,OAAe,gK,kCCAf,OAAe,sZ,kCCAf,OAAe,ooB,oCCAf,OAAe,w8H,kCCAf,OAAe,qxH,kCCAf,OAAe,ipD,kCCAf,OAAe,gkC,kCCAf,OAAe,8rD,kCCAf,OAAe,sY,kCCAf,OAAe,ymB,oCCAf,OAAe,k0E,kCCAf,OAAe,mK,kCCAf,OAAe,mhD,kCCAf,OAAe,2gC,kCCAf,OAAe,shH,kCCAf,OAAe,uV,kCCAf,OAAe,6S,kCCAf,OAAe,2xB,oCCAf,OAAe,wiB,kCCAf,OAAe,ghC,kCCAf,OAAe,q+C,kCCAf,OAAe,ksD,kCCAf,OAAe,+R,kCCAf,OAAe,qG,kCCAf,OAAe,uN,kCCAf,OAAe,4pD,kCCAf,OAAe,48D,kCCAf,OAAe,03G,kCCAf,OAAe,4/F,oCCAf,OAAe,8R,kCCAf,OAAe,6oP,kCCAf,OAAe,o1G,kCCAf,OAAe,6R,kCCAf,OAAe,2lD,oCCAf,OAAe,smF,oCCAf,OAAe,iS,kCCAf,OAAe,4f,kCCAf,OAAe,s1B,kCCAf,OAAe,qE,kCCAf,OAAe,mvB,oCCAf,OAAe,gJ,oCCAf,OAAe,+lB,kCCAf,OAAe,2S,kCCAf,OAAe,wmE,kCCAf,OAAe,+uQ,kCCAf,OAAe,sxB,kCCAf,OAAe,8pB,kCCAf,OAAe,qL,kCCAf,OAAe,m6C,kCCAf,OAAe,g1L,kCCAf,OAAe,ulE,kCCAf,OAAe,inC,kCCAf,OAAe,iG,kCCAf,OAAe,w/B,kCCAf,OAAe,4hE,kCCAf,OAAe,uI,kCCAf,OAAe,2jD,kCCAf,OAAe,oqC,kCCAf,OAAe,uqE,kCCAf,OAAe,4qG,kCCAf,OAAe,yuC,qBCAf,aAQc,0BAANiB,EAMA,WAGJ,GAAsB,oBAAXpC,OACP,OAAO,KAKX,IAAIqC,EAAwBrC,OAAOqC,uBAC/BrC,OAAOsC,0BACPtC,OAAOuC,6BACP,SAAUC,GACN,OAAOxC,OAAOvD,WAAW+F,EAAI,KASrC,SAASC,EAAeC,EAAUC,GAC9B,IAAIC,EAAeC,OAAO7I,UAAU8I,SAAS5I,KAAKwI,GAC9CK,EAAqB,mBAAqBH,GACtC,sBAAwBA,GACxB,4BAA8BA,GAC9B,oBAAsBA,GACtB,oBAAuBI,QAAUN,aAAoBM,QACrD,oBAAuBC,UAAYP,aAAoBO,SAE3D9K,EAAI,EAAG+K,EAAIR,EAAStK,OACxB,GAAI2K,EACA,KAAO5K,EAAI+K,EAAG/K,IACVwK,EAASD,EAASvK,SAGtBwK,EAASD,GAYjB,IAAI9B,EAAe,SAAfA,EAAwBuC,EAASR,GAKjC,SAASS,IACL,IAKIjL,EAAG+K,EALHG,EAAI,GACR1G,KAAKiD,IAAM,SAAS0D,GAChBD,EAAEzK,KAAK0K,IAIX3G,KAAKzC,KAAO,WACR,IAAK/B,EAAI,EAAG+K,EAAIG,EAAEjL,OAAQD,EAAI+K,EAAG/K,IAC7BkL,EAAElL,GAAG+B,QAIbyC,KAAK4G,OAAS,SAASD,GACnB,IAAIE,EAAW,GACf,IAAIrL,EAAI,EAAG+K,EAAIG,EAAEjL,OAAQD,EAAI+K,EAAG/K,IACzBkL,EAAElL,KAAOmL,GAAIE,EAAS5K,KAAKyK,EAAElL,IAEpCkL,EAAIG,GAGR7G,KAAKvE,OAAS,WACV,OAAOiL,EAAEjL,QAwBjB,SAASqL,EAAkBN,EAASO,GAChC,GAAKP,EAAQQ,iBAGN,GAAIR,EAAQQ,gBAEf,YADAR,EAAQQ,gBAAgB/D,IAAI8D,QAH5BP,EAAQQ,gBAAkB,IAAIP,EAC9BD,EAAQQ,gBAAgB/D,IAAI8D,GAMhCP,EAAQS,aAAenE,SAASoE,cAAc,OAC9CV,EAAQS,aAAa3B,UAAY,gBACjC,IAAI6B,EAAQ,+GACRC,EAAa,uDAEjBZ,EAAQS,aAAaE,MAAME,QAAUF,EACrCX,EAAQS,aAAaK,UACjB,4CAA8CH,EAA9C,iBACqBC,EADrB,0DAG8CD,EAH9C,iBAIqBC,EAJrB,2CAMJZ,EAAQe,YAAYf,EAAQS,cAEiB,UAvCjD,SAA0BT,EAASgB,GAC/B,OAAIhB,EAAQiB,aACDjB,EAAQiB,aAAaD,GACrBnE,OAAOqE,iBACPrE,OAAOqE,iBAAiBlB,EAAS,MAAMmB,iBAAiBH,GAExDhB,EAAQW,MAAMK,GAiCrBE,CAAiBlB,EAAS,cAC1BA,EAAQW,MAAMS,SAAW,YAG7B,IAGIC,EAAOC,EAAOC,EAAUC,EAHxBC,EAASzB,EAAQS,aAAaiB,WAAW,GACzCC,EAAcF,EAAOC,WAAW,GAChCE,EAAS5B,EAAQS,aAAaiB,WAAW,GAEzCG,EAAY7B,EAAQ8B,YACpBC,EAAa/B,EAAQgC,aAErBC,EAAQ,WACRN,EAAYhB,MAAMuB,MAAQ,WAC1BP,EAAYhB,MAAMwB,OAAS,WAE3BV,EAAOW,WAAa,IACpBX,EAAOY,UAAY,IAEnBT,EAAOQ,WAAa,IACpBR,EAAOS,UAAY,KAGvBJ,IAEA,IAAIK,EAAY,WACZhB,EAAQ,EAEHD,IAELQ,EAAYN,EACZQ,EAAaP,EAETxB,EAAQQ,iBACRR,EAAQQ,gBAAgBzJ,SAI5BwL,EAAW,WACXhB,EAAWvB,EAAQ8B,YACnBN,EAAYxB,EAAQgC,cACpBX,EAAQE,GAAYM,GAAaL,GAAaO,KAEhCT,IACVA,EAAQpC,EAAsBoD,IAGlCL,KAGAO,EAAW,SAASC,EAAI/G,EAAMgH,GAC1BD,EAAGE,YACHF,EAAGE,YAAY,KAAOjH,EAAMgH,GAE5BD,EAAGG,iBAAiBlH,EAAMgH,IAIlCF,EAASf,EAAQ,SAAUc,GAC3BC,EAASZ,EAAQ,SAAUW,GAG/BjD,EAAeU,GAAS,SAAS6C,GAC7BvC,EAAkBuC,EAAMrD,MAG5BhG,KAAKsJ,OAAS,SAAS3C,GACnB1C,EAAaqF,OAAO9C,EAASG,KAoBrC,OAhBA1C,EAAaqF,OAAS,SAAS9C,EAASG,GACpCb,EAAeU,GAAS,SAAS6C,GAC1BA,EAAKrC,iBAAgC,mBAANL,IAC9B0C,EAAKrC,gBAAgBJ,OAAOD,GACzB0C,EAAKrC,gBAAgBvL,WAExB4N,EAAKpC,eACDoC,EAAKE,SAASF,EAAKpC,eACnBoC,EAAKG,YAAYH,EAAKpC,qBAEnBoC,EAAKpC,oBACLoC,EAAKrC,qBAKjB/C,IAxNG,mC,kCCRd,OAAe,oS,kCCAf,OAAe,69N,kCCAf,OAAe,28D,kCCAf,wEAAML,EAAY,SAACnB,EAAMgH,EAAcC,GACrC,YADuD,IAAlBA,MAAO,QACrCC,UAAQ,KAA4BlH,EAAKlG,KAAOmN,GAAQE,SAG3D/F,EAAW,SAACpB,EAAMgH,EAAcC,GACpC,YADqD,IAAjBA,MAAO,OACpCC,UAAQ,KAA4BlH,EAAKlG,KAAOmN,GAAQE,U,kCCLjE,OAAe,0lB,oCCAf,OAAe,gtB,kCCAf,OAAe,orX,oCCAf,OAAe,mS,kCCAf,OAAe,+uE,oCCAf,OAAe,y1G,kCCAf,OAAe,g4B,kCCAf,OAAe,ilB,kCCAf,OAAe,mH,kCCAf,OAAe,smC,oCCAf,OAAe,2rB,kCCAf,OAAe,8zB,kCCAf,OAAe,8zC,kCCAf,OAAe,gyI,kCCAf,OAAe,+8D,kCCAf,OAAe,szC,kCCAf,OAAe,q+C,kCCAf,OAAe,wiF,kCCAf,OAAe,8S,oCCAf,OAAe,iyI,kCCAf,OAAe,80O,kCCAf,OAAe,+uJ,kCCAf,OAAe,4mE,kCCAf,OAAe,qN,kCCAf,OAAe,kG,kCCAf,OAAe,g9D,kCCAf,OAAe,yH,kCCAf,OAAe,msR,kCCAf,OAAe,mL,oCCAf,OAAe,kzF,kCCAf,OAAe,iL,kCCAf,OAAe,0qU,oCCAf,OAAe,syG,kCCAf,OAAe,iuB,kCCAf,OAAe,o7N,kCCAf,OAAe,kyI,oCCAf,OAAe,w/B,kCCAf,OAAe,u/B,kCCAf,OAAe,60D,kCCAf,OAAe,u4B,kCCAf,OAAe,uuH,kCCAf,OAAe,m7I,kCCAf,OAAe,+K,kCCAf,OAAe,i9B,kCCAf,OAAe,wjC,kCCAf,OAAe,4S,kCCAf,OAAe,yE,kCCAf,OAAe,4/I,kCCAf,OAAe,2oH,kCCAf,OAAe,2yC,kCCAf,OAAe,49B,kCCAf,OAAe,w/B,kCCAf,OAAe,81I,kCCAf,OAAe,qpE,kCCAf,OAAe,6oB,kCCAf,OAAe,+S,kCCAf,OAAe,w0O,kCCAf,OAAe,6+B,kCCAf,OAAe,ozB,kCCAf,OAAe,4+jG,kCCAf,OAAe,84B,kCCAf,OAAe,4zB,oCCAf,OAAe,u6G,kCCAf,OAAe,oK,kCCAf,OAAe,o8B,kCCAf,OAAe,6f,kCCAf,OAAe,gjN,kCCAf,OAAe,q7C,kCCAf,OAAe,m5C,kCCAf,OAAe,6xF,kCCAf,OAAe,i7C,kCCAf,OAAe,4hB,kCCAf,OAAe,s9B,kCCAf,OAAe,6G,kCCAf,OAAe,8hL,kCCAf,OAAe,+H,kCCAf,OAAe,2tD,kCCAf,OAAe,8jE,kCCAf,OAAe,ozI,kCCAf,OAAe,ogW,kCCAf,OAAe,sN,kCCAf,OAAe,i3C,kCCAf,OAAe,kmC,kCCAf,OAAe,gpC,kCCAf,OAAe,+oG,oCCAf,OAAe,woB,kCCAf,OAAe,8E,kCCAf,OAAe,i1C,kCCAf,OAAe,8mD,kCCAf,OAAe,4lE,kCCAf,OAAe,mL,kCCAf,OAAe,ue,kCCAf,OAAe,i2E,kCCAf,OAAe,4lE,kCCAf,OAAe,oyR,kCCAf,OAAe,m2M,kCCAf,OAAe,iJ,kCCAf,OAAe,+uI,oCCAf,OAAe,qH,kCCAf,OAAe,8vB,kCCAf,OAAe,6+J,kCCAf,OAAe,2zG,kCCAf,OAAe,gvC,kCCAf,OAAe,2vC,kCCAf,OAAe,ymB,kCCAf,OAAe,yN,kCCAf,OAAe,mX,kCCAf,OAAe,k+I,kCCAf,OAAe,y1C,kCCAf,OAAe,6f,kCCAf,OAAe,gL,oCCAf,OAAe,sc,kCCAf,OAAe,4tG,kCCAf,OAAe,uf,kCCAf,OAAe,+hF,kCCAf,OAAe,yqG,oCCAf,OAAe,krS,kCCAf,OAAe,2Z,qBCAf,IAAIvE,EAAM,CACT,0BAA2B,OAC3B,6BAA8B,OAC9B,wBAAyB,OACzB,4BAA6B,OAC7B,+BAAgC,OAChC,2BAA4B,OAC5B,2BAA4B,OAC5B,8BAA+B,OAC/B,wBAAyB,OACzB,4BAA6B,OAC7B,+BAAgC,OAChC,2BAA4B,OAC5B,iCAAkC,OAClC,oCAAqC,OACrC,kBAAmB,OACnB,sBAAuB,OACvB,yBAA0B,OAC1B,qBAAsB,OACtB,4BAA6B,OAC7B,+BAAgC,OAChC,yBAA0B,OAC1B,4BAA6B,OAC7B,uCAAwC,OACxC,0CAA2C,OAC3C,6BAA8B,OAC9B,gCAAiC,OACjC,qBAAsB,OACtB,mBAAoB,OACpB,sBAAuB,OACvB,iBAAkB,OAClB,oBAAqB,OACrB,kBAAmB,OACnB,qBAAsB,OACtB,cAAe,OACf,kBAAmB,OACnB,qBAAsB,OACtB,iBAAkB,OAClB,cAAe,OACf,kBAAmB,OACnB,qBAAsB,OACtB,iBAAkB,OAClB,mBAAoB,OACpB,sBAAuB,OACvB,mBAAoB,OACpB,sBAAuB,OACvB,kBAAmB,OACnB,qBAAsB,OACtB,kBAAmB,OACnB,qBAAsB,OACtB,oBAAqB,OACrB,uBAAwB,OACxB,mBAAoB,OACpB,sBAAuB,OACvB,iBAAkB,OAClB,qBAAsB,OACtB,wBAAyB,OACzB,oBAAqB,OACrB,iBAAkB,OAClB,oBAAqB,OACrB,gBAAiB,OACjB,oBAAqB,OACrB,uBAAwB,OACxB,mBAAoB,OACpB,uBAAwB,OACxB,0BAA2B,OAC3B,yBAA0B,OAC1B,4BAA6B,OAC7B,mBAAoB,OACpB,sBAAuB,OACvB,oBAAqB,OACrB,gBAAiB,OACjB,oBAAqB,OACrB,uBAAwB,OACxB,mBAAoB,OACpB,wBAAyB,OACzB,2BAA4B,OAC5B,gBAAiB,OACjB,mBAAoB,OACpB,kBAAmB,OACnB,qBAAsB,OACtB,kBAAmB,OACnB,qBAAsB,OACtB,kBAAmB,OACnB,sBAAuB,OACvB,yBAA0B,OAC1B,qBAAsB,OACtB,uCAAwC,OACxC,0CAA2C,OAC3C,+BAAgC,OAChC,kCAAmC,OACnC,iCAAkC,OAClC,oCAAqC,OACrC,iCAAkC,OAClC,oCAAqC,OACrC,gCAAiC,OACjC,mCAAoC,OACpC,mCAAoC,OACpC,qCAAsC,OACtC,qCAAsC,OACtC,mCAAoC,OACpC,oCAAqC,OACrC,qCAAsC,OACtC,mCAAoC,OACpC,wDAAyD,OACzD,2DAA4D,OAC5D,yDAA0D,OAC1D,4DAA6D,OAC7D,yDAA0D,OAC1D,4DAA6D,OAC7D,0DAA2D,OAC3D,6DAA8D,OAC9D,uDAAwD,OACxD,0DAA2D,OAC3D,2DAA4D,OAC5D,8DAA+D,OAC/D,8DAA+D,OAC/D,iEAAkE,OAClE,gEAAiE,OACjE,mEAAoE,OACpE,oDAAqD,OACrD,uDAAwD,OACxD,oDAAqD,OACrD,uDAAwD,OACxD,uDAAwD,OACxD,0DAA2D,OAC3D,wDAAyD,OACzD,2DAA4D,OAC5D,4DAA6D,OAC7D,+DAAgE,OAChE,0DAA2D,OAC3D,6DAA8D,OAC9D,wDAAyD,OACzD,2DAA4D,OAC5D,2DAA4D,OAC5D,gEAAiE,OACjE,mEAAoE,OACpE,8DAA+D,OAC/D,8DAA+D,OAC/D,iEAAkE,OAClE,6DAA8D,OAC9D,gEAAiE,OACjE,oDAAqD,OACrD,uDAAwD,OACxD,6DAA8D,OAC9D,gEAAiE,OACjE,0DAA2D,OAC3D,6DAA8D,OAC9D,sDAAuD,OACvD,yDAA0D,OAC1D,mDAAoD,OACpD,sDAAuD,OACvD,oDAAqD,OACrD,uDAAwD,OACxD,4DAA6D,OAC7D,+DAAgE,OAChE,yDAA0D,OAC1D,gEAAiE,OACjE,mEAAoE,OACpE,4DAA6D,OAC7D,uDAAwD,OACxD,0DAA2D,OAC3D,8DAA+D,OAC/D,iEAAkE,OAClE,4DAA6D,OAC7D,+DAAgE,OAChE,2DAA4D,OAC5D,8DAA+D,OAC/D,6DAA8D,OAC9D,gEAAiE,OACjE,gDAAiD,OACjD,mDAAoD,OACpD,iDAAkD,OAClD,oDAAqD,OACrD,gDAAiD,OACjD,mDAAoD,OACpD,iDAAkD,OAClD,oDAAqD,OACrD,8CAA+C,OAC/C,iDAAkD,OAClD,8CAA+C,OAC/C,iDAAkD,OAClD,iDAAkD,OAClD,oDAAqD,OACrD,oDAAqD,OACrD,uDAAwD,OACxD,mDAAoD,OACpD,sDAAuD,OACvD,qDAAsD,OACtD,wDAAyD,OACzD,iDAAkD,OAClD,oDAAqD,OACrD,qDAAsD,OACtD,wDAAyD,OACzD,+CAAgD,OAChD,kDAAmD,OACnD,gDAAiD,OACjD,mDAAoD,OACpD,gDAAiD,OACjD,mDAAoD,OACpD,6CAA8C,OAC9C,gDAAiD,OACjD,uDAAwD,OACxD,0DAA2D,OAC3D,oDAAqD,OACrD,uDAAwD,OACxD,uDAAwD,OACxD,0DAA2D,OAC3D,wDAAyD,OACzD,2DAA4D,OAC5D,sDAAuD,OACvD,yDAA0D,OAC1D,uDAAwD,OACxD,0DAA2D,OAC3D,gEAAiE,OACjE,mEAAoE,OACpE,kEAAmE,OACnE,qEAAsE,OACtE,iDAAkD,OAClD,oDAAqD,OACrD,oDAAqD,OACrD,yDAA0D,OAC1D,4DAA6D,OAC7D,uDAAwD,OACxD,kEAAmE,OACnE,qEAAsE,OACtE,4DAA6D,OAC7D,+DAAgE,OAChE,4DAA6D,OAC7D,+DAAgE,OAChE,0DAA2D,OAC3D,6DAA8D,OAC9D,mDAAoD,OACpD,sDAAuD,OACvD,oDAAqD,OACrD,uDAAwD,OACxD,sDAAuD,OACvD,yDAA0D,OAC1D,0DAA2D,OAC3D,6DAA8D,OAC9D,0DAA2D,OAC3D,6DAA8D,OAC9D,sDAAuD,OACvD,yDAA0D,OAC1D,yDAA0D,OAC1D,4DAA6D,OAC7D,wDAAyD,OACzD,2DAA4D,OAC5D,qDAAsD,OACtD,wDAAyD,OACzD,oDAAqD,OACrD,uDAAwD,OACxD,qDAAsD,OACtD,wDAAyD,OACzD,uDAAwD,OACxD,+DAAgE,OAChE,kEAAmE,OACnE,0DAA2D,OAC3D,mDAAoD,OACpD,wDAAyD,OACzD,2DAA4D,OAC5D,sDAAuD,OACvD,qDAAsD,OACtD,0DAA2D,OAC3D,6DAA8D,OAC9D,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,mDAAoD,OACpD,wDAAyD,OACzD,2DAA4D,OAC5D,sDAAuD,OACvD,yDAA0D,OAC1D,8DAA+D,OAC/D,iEAAkE,OAClE,4DAA6D,OAC7D,kDAAmD,OACnD,uDAAwD,OACxD,0DAA2D,OAC3D,qDAAsD,OACtD,wDAAyD,OACzD,6DAA8D,OAC9D,gEAAiE,OACjE,2DAA4D,OAC5D,uDAAwD,OACxD,4DAA6D,OAC7D,+DAAgE,OAChE,0DAA2D,OAC3D,kDAAmD,OACnD,uDAAwD,OACxD,0DAA2D,OAC3D,qDAAsD,OACtD,mDAAoD,OACpD,yDAA0D,OAC1D,4DAA6D,OAC7D,sDAAuD,OACvD,qDAAsD,OACtD,0DAA2D,OAC3D,6DAA8D,OAC9D,wDAAyD,OACzD,mDAAoD,OACpD,sDAAuD,OACvD,uDAAwD,OACxD,0DAA2D,OAC3D,6DAA8D,OAC9D,0DAA2D,OAC3D,sDAAuD,OACvD,yDAA0D,OAC1D,oDAAqD,OACrD,uDAAwD,OACxD,0DAA2D,OAC3D,6DAA8D,OAC9D,wDAAyD,OACzD,2DAA4D,OAC5D,uDAAwD,OACxD,0DAA2D,OAC3D,6DAA8D,OAC9D,gEAAiE,OACjE,4DAA6D,OAC7D,+DAAgE,OAChE,uDAAwD,OACxD,0DAA2D,OAC3D,0DAA2D,OAC3D,6DAA8D,OAC9D,oDAAqD,OACrD,uDAAwD,OACxD,qDAAsD,OACtD,wDAAyD,OACzD,mDAAoD,OACpD,sDAAuD,OACvD,kDAAmD,OACnD,qDAAsD,OACtD,uDAAwD,OACxD,0DAA2D,OAC3D,0DAA2D,OAC3D,6DAA8D,OAC9D,2DAA4D,OAC5D,iEAAkE,OAClE,oEAAqE,OACrE,8DAA+D,OAC/D,mDAAoD,OACpD,sDAAuD,OACvD,oDAAqD,OACrD,uDAAwD,OACxD,4DAA6D,OAC7D,+DAAgE,OAChE,wDAAyD,OACzD,2DAA4D,OAC5D,0DAA2D,OAC3D,6DAA8D,OAC9D,2DAA4D,OAC5D,8DAA+D,OAC/D,yDAA0D,OAC1D,4DAA6D,OAC7D,sDAAuD,OACvD,yDAA0D,OAC1D,6DAA8D,OAC9D,gEAAiE,OACjE,yDAA0D,OAC1D,4DAA6D,OAC7D,6DAA8D,OAC9D,gEAAiE,OACjE,oEAAqE,OACrE,uEAAwE,OACxE,6DAA8D,OAC9D,gEAAiE,OACjE,sDAAuD,OACvD,yDAA0D,OAC1D,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,mDAAoD,OACpD,sDAAuD,OACvD,wDAAyD,OACzD,2DAA4D,OAC5D,6DAA8D,OAC9D,gEAAiE,OACjE,6DAA8D,OAC9D,gEAAiE,OACjE,qDAAsD,OACtD,8DAA+D,OAC/D,iEAAkE,OAClE,wDAAyD,OACzD,oDAAqD,OACrD,6DAA8D,OAC9D,gEAAiE,OACjE,uDAAwD,OACxD,mDAAoD,OACpD,sDAAuD,OACvD,oDAAqD,OACrD,6DAA8D,OAC9D,gEAAiE,OACjE,uDAAwD,OACxD,oDAAqD,OACrD,6DAA8D,OAC9D,gEAAiE,OACjE,uDAAwD,OACxD,mDAAoD,OACpD,sDAAuD,OACvD,oDAAqD,OACrD,wDAAyD,OACzD,2DAA4D,OAC5D,uDAAwD,OACxD,sDAAuD,OACvD,8DAA+D,OAC/D,iEAAkE,OAClE,yDAA0D,OAC1D,mDAAoD,OACpD,sDAAuD,OACvD,6DAA8D,OAC9D,gEAAiE,OACjE,uDAAwD,OACxD,0DAA2D,OAC3D,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,sDAAuD,OACvD,yDAA0D,OAC1D,mDAAoD,OACpD,4DAA6D,OAC7D,+DAAgE,OAChE,sDAAuD,OACvD,iEAAkE,OAClE,oEAAqE,OACrE,kEAAmE,OACnE,qEAAsE,OACtE,8DAA+D,OAC/D,iEAAkE,OAClE,kEAAmE,OACnE,qEAAsE,OACtE,gEAAiE,OACjE,mEAAoE,OACpE,iEAAkE,OAClE,oEAAqE,OACrE,+DAAgE,OAChE,kEAAmE,OACnE,6DAA8D,OAC9D,gEAAiE,OACjE,6DAA8D,OAC9D,gEAAiE,OACjE,wDAAyD,OACzD,2DAA4D,OAC5D,wDAAyD,OACzD,2DAA4D,OAC5D,yDAA0D,OAC1D,4DAA6D,OAC7D,0DAA2D,OAC3D,6DAA8D,OAC9D,uDAAwD,OACxD,+DAAgE,OAChE,kEAAmE,OACnE,0DAA2D,OAC3D,mDAAoD,OACpD,0DAA2D,OAC3D,6DAA8D,OAC9D,yDAA0D,OAC1D,4DAA6D,OAC7D,sDAAuD,OACvD,sDAAuD,OACvD,yDAA0D,OAC1D,oDAAqD,OACrD,+DAAgE,OAChE,kEAAmE,OACnE,uDAAwD,OACxD,yDAA0D,OAC1D,4DAA6D,OAC7D,oDAAqD,OACrD,uDAAwD,OACxD,0DAA2D,OAC3D,6DAA8D,OAC9D,gEAAiE,OACjE,6DAA8D,OAC9D,2DAA4D,OAC5D,8DAA+D,OAC/D,4DAA6D,OAC7D,+DAAgE,OAChE,wDAAyD,OACzD,2DAA4D,OAC5D,wDAAyD,OACzD,2DAA4D,OAC5D,sDAAuD,OACvD,yDAA0D,OAC1D,qDAAsD,OACtD,wDAAyD,OACzD,2DAA4D,OAC5D,8DAA+D,OAC/D,yDAA0D,OAC1D,4DAA6D,OAC7D,uDAAwD,OACxD,0DAA2D,OAC3D,0DAA2D,OAC3D,6DAA8D,OAC9D,qDAAsD,OACtD,wDAAyD,OACzD,2DAA4D,OAC5D,8DAA+D,OAC/D,6DAA8D,OAC9D,gEAAiE,OACjE,wDAAyD,OACzD,2DAA4D,OAC5D,sDAAuD,OACvD,yDAA0D,OAC1D,qDAAsD,OACtD,wDAAyD,OACzD,oDAAqD,OACrD,uDAAwD,OACxD,oDAAqD,OACrD,uDAAwD,OACxD,oDAAqD,OACrD,uDAAwD,OACxD,oDAAqD,OACrD,uDAAwD,OACxD,qDAAsD,OACtD,wDAAyD,OACzD,oDAAqD,OACrD,uDAAwD,OACxD,kDAAmD,OACnD,qDAAsD,OACtD,4DAA6D,OAC7D,+DAAgE,OAChE,0DAA2D,OAC3D,6DAA8D,OAC9D,2DAA4D,OAC5D,8DAA+D,OAC/D,8DAA+D,OAC/D,iEAAkE,OAClE,4DAA6D,OAC7D,+DAAgE,OAChE,6DAA8D,OAC9D,gEAAiE,OACjE,uDAAwD,OACxD,0DAA2D,OAC3D,sDAAuD,OACvD,yDAA0D,OAC1D,gEAAiE,OACjE,mEAAoE,OACpE,4DAA6D,OAC7D,+DAAgE,OAChE,0DAA2D,OAC3D,6DAA8D,OAC9D,qDAAsD,OACtD,wDAAyD,OACzD,6DAA8D,OAC9D,mEAAoE,OACpE,sEAAuE,OACvE,gEAAiE,OACjE,0DAA2D,OAC3D,6DAA8D,OAC9D,wDAAyD,OACzD,2DAA4D,OAC5D,8DAA+D,OAC/D,iEAAkE,OAClE,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,oDAAqD,OACrD,yDAA0D,OAC1D,4DAA6D,OAC7D,0DAA2D,OAC3D,6DAA8D,OAC9D,uDAAwD,OACxD,yDAA0D,OAC1D,iEAAkE,OAClE,oEAAqE,OACrE,4DAA6D,OAC7D,+DAAgE,OAChE,4DAA6D,OAC7D,oDAAqD,OACrD,uDAAwD,OACxD,qDAAsD,OACtD,wDAAyD,OACzD,uDAAwD,OACxD,0DAA2D,OAC3D,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,oDAAqD,OACrD,uDAAwD,OACxD,0DAA2D,OAC3D,6DAA8D,OAC9D,6DAA8D,OAC9D,gEAAiE,OACjE,wDAAyD,OACzD,2DAA4D,OAC5D,wDAAyD,OACzD,2DAA4D,OAC5D,qDAAsD,OACtD,wDAAyD,OACzD,sDAAuD,OACvD,yDAA0D,OAC1D,kEAAmE,OACnE,qEAAsE,OACtE,qEAAsE,OACtE,wEAAyE,OACzE,sEAAuE,OACvE,yEAA0E,OAC1E,0DAA2D,OAC3D,6DAA8D,OAC9D,iEAAkE,OAClE,oEAAqE,OACrE,mEAAoE,OACpE,sEAAuE,OACvE,mEAAoE,OACpE,sEAAuE,OACvE,0DAA2D,OAC3D,6DAA8D,OAC9D,2DAA4D,OAC5D,8DAA+D,OAC/D,wDAAyD,OACzD,2DAA4D,OAC5D,6DAA8D,OAC9D,gEAAiE,OACjE,wDAAyD,OACzD,2DAA4D,OAC5D,2DAA4D,OAC5D,8DAA+D,OAC/D,0CAA2C,OAC3C,6CAA8C,OAC9C,gCAAiC,OACjC,wCAAyC,OACzC,+CAAgD,OAChD,kDAAmD,OACnD,2CAA4C,OAC5C,mCAAoC,OACpC,wCAAyC,OACzC,2CAA4C,OAC5C,8CAA+C,OAC/C,iDAAkD,OAClD,wCAAyC,OACzC,2CAA4C,OAC5C,yCAA0C,OAC1C,4CAA6C,OAC7C,sCAAuC,OACvC,yCAA0C,OAC1C,sCAAuC,OACvC,yCAA0C,OAC1C,6BAA8B,OAC9B,kCAAmC,OACnC,qCAAsC,OACtC,gCAAiC,OACjC,gCAAiC,OACjC,mCAAoC,OACpC,0BAA2B,OAC3B,6BAA8B,OAC9B,qDAAsD,OACtD,iEAAkE,OAClE,oEAAqE,OACrE,wDAAyD,OACzD,qDAAsD,OACtD,iEAAkE,OAClE,oEAAqE,OACrE,wDAAyD,OACzD,yDAA0D,OAC1D,4DAA6D,OAC7D,mDAAoD,OACpD,wDAAyD,OACzD,2DAA4D,OAC5D,yDAA0D,OAC1D,4DAA6D,OAC7D,sDAAuD,OACvD,mDAAoD,OACpD,wDAAyD,OACzD,2DAA4D,OAC5D,yDAA0D,OAC1D,4DAA6D,OAC7D,sDAAuD,OACvD,oDAAqD,OACrD,0DAA2D,OAC3D,6DAA8D,OAC9D,yDAA0D,OAC1D,8DAA+D,OAC/D,iEAAkE,OAClE,4DAA6D,OAC7D,yDAA0D,OAC1D,qEAAsE,OACtE,wEAAyE,OACzE,4DAA6D,OAC7D,gEAAiE,OACjE,mEAAoE,OACpE,4DAA6D,OAC7D,mEAAoE,OACpE,sEAAuE,OACvE,+DAAgE,OAChE,uDAAwD,OACxD,oDAAqD,OACrD,yDAA0D,OAC1D,8DAA+D,OAC/D,iEAAkE,OAClE,4DAA6D,OAC7D,yDAA0D,OAC1D,qEAAsE,OACtE,wEAAyE,OACzE,4DAA6D,OAC7D,gEAAiE,OACjE,mEAAoE,OACpE,4DAA6D,OAC7D,+DAAgE,OAChE,uDAAwD,OACxD,mDAAoD,OACpD,sDAAuD,OACvD,kDAAmD,OACnD,qDAAsD,OACtD,2DAA4D,OAC5D,8DAA+D,OAC/D,2DAA4D,OAC5D,8DAA+D,OAC/D,mDAAoD,OACpD,sDAAuD,OACvD,0DAA2D,OAC3D,6DAA8D,OAC9D,0DAA2D,OAC3D,6DAA8D,OAC9D,0DAA2D,OAC3D,6DAA8D,OAC9D,0DAA2D,OAC3D,6DAA8D,OAC9D,2DAA4D,OAC5D,8DAA+D,OAC/D,2DAA4D,OAC5D,8DAA+D,OAC/D,qDAAsD,OACtD,2DAA4D,OAC5D,8DAA+D,OAC/D,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,qDAAsD,OACtD,wDAAyD,OACzD,4CAA6C,OAC7C,+CAAgD,OAChD,wDAAyD,OACzD,qEAAsE,OACtE,wEAAyE,OACzE,8DAA+D,OAC/D,iEAAkE,OAClE,mEAAoE,OACpE,sEAAuE,OACvE,8DAA+D,OAC/D,iEAAkE,OAClE,iEAAkE,OAClE,oEAAqE,OACrE,mEAAoE,OACpE,sEAAuE,OACvE,iEAAkE,OAClE,oEAAqE,OACrE,2DAA4D,OAC5D,qCAAsC,OACtC,wCAAyC,OACzC,mCAAoC,OACpC,sCAAuC,OACvC,6CAA8C,OAC9C,gDAAiD,OACjD,uCAAwC,OACxC,0CAA2C,OAC3C,oDAAqD,OACrD,uDAAwD,OACxD,kDAAmD,OACnD,qDAAsD,OACtD,kDAAmD,OACnD,qDAAsD,OACtD,mDAAoD,OACpD,sDAAuD,OACvD,qDAAsD,OACtD,wDAAyD,OACzD,uDAAwD,OACxD,0DAA2D,OAC3D,qDAAsD,OACtD,wDAAyD,OACzD,yDAA0D,OAC1D,4DAA6D,OAC7D,oDAAqD,OACrD,uDAAwD,OACxD,6CAA8C,OAC9C,gDAAiD,OACjD,yCAA0C,OAC1C,4CAA6C,OAC7C,oDAAqD,OACrD,gEAAiE,OACjE,4DAA6D,OAC7D,yDAA0D,OAC1D,4DAA6D,OAC7D,6DAA8D,OAC9D,qDAAsD,OACtD,+DAAgE,OAChE,sDAAuD,OACvD,gEAAiE,OACjE,8DAA+D,OAC/D,uDAAwD,OACxD,iEAAkE,OAClE,0DAA2D,OAC3D,qEAAsE,OACtE,uDAAwD,OACxD,uEAAwE,OACxE,yEAA0E,OAC1E,sDAAuD,OACvD,wEAAyE,OACzE,yDAA0D,OAC1D,gEAAiE,OACjE,yEAA0E,OAC1E,0DAA2D,OAC3D,sDAAuD,OACvD,kEAAmE,OACnE,0DAA2D,OAC3D,gEAAiE,OACjE,8DAA+D,OAC/D,qDAAsD,OACtD,mDAAoD,OACpD,2DAA4D,OAC5D,yDAA0D,OAC1D,sDAAuD,OACvD,oDAAqD,OACrD,oDAAqD,OACrD,yDAA0D,OAC1D,oDAAqD,OACrD,kDAAmD,OACnD,kDAAmD,OACnD,gDAAiD,OACjD,yDAA0D,OAC1D,yDAA0D,OAC1D,kDAAmD,OACnD,wDAAyD,OACzD,kDAAmD,OACnD,oDAAqD,OACrD,kDAAmD,OACnD,mDAAoD,OACpD,kDAAmD,OACnD,qDAAsD,OACtD,mDAAoD,OACpD,mDAAoD,OACpD,qDAAsD,OACtD,mDAAoD,OACpD,kDAAmD,OACnD,oDAAqD,OACrD,kDAAmD,OACnD,sDAAuD,OACvD,oDAAqD,OACrD,oDAAqD,OACrD,qDAAsD,OACtD,mDAAoD,OACpD,mDAAoD,OACpD,uDAAwD,OACxD,qDAAsD,OACtD,2DAA4D,OAC5D,qDAAsD,OACtD,mDAAoD,OACpD,iDAAkD,OAClD,iDAAkD,OAClD,kDAAmD,OACnD,oDAAqD,OACrD,0DAA2D,OAC3D,oDAAqD,OACrD,uDAAwD,OACxD,qDAAsD,OACtD,uDAAwD,OACxD,4DAA6D,OAC7D,mDAAoD,OACpD,kDAAmD,OACnD,oDAAqD,OACrD,0DAA2D,OAC3D,oDAAqD,OACrD,0DAA2D,OAC3D,wDAAyD,OACzD,wCAAyC,OACzC,+CAAgD,OAChD,wDAAyD,OACzD,0CAA2C,OAC3C,sDAAuD,OACvD,uDAAwD,OACxD,iDAAkD,OAClD,mCAAoC,OACpC,4CAA6C,OAC7C,wCAAyC,OACzC,0CAA2C,OAC3C,gDAAiD,OACjD,0CAA2C,OAC3C,0CAA2C,OAC3C,wCAAyC,OACzC,0CAA2C,OAC3C,gDAAiD,OACjD,0CAA2C,OAC3C,wEAAyE,OACzE,2DAA4D,OAC5D,wEAAyE,OACzE,wDAAyD,OACzD,iEAAkE,OAClE,mEAAoE,OACpE,qEAAsE,OACtE,sDAAuD,OACvD,kEAAmE,OACnE,kEAAmE,OACnE,+DAAgE,OAChE,kEAAmE,OACnE,sDAAuD,OACvD,uEAAwE,OACxE,+DAAgE,OAChE,mEAAoE,OACpE,uDAAwD,OACxD,oEAAqE,OACrE,oEAAqE,OACrE,sEAAuE,OACvE,uDAAwD,OACxD,oEAAqE,OACrE,qEAAsE,OACtE,sEAAuE,OACvE,yDAA0D,OAC1D,oEAAqE,OACrE,kEAAmE,OACnE,qEAAsE,OACtE,wEAAyE,OACzE,uEAAwE,OACxE,wDAAyD,OACzD,qEAAsE,OACtE,kEAAmE,OACnE,kEAAmE,OACnE,wDAAyD,OACzD,yEAA0E,OAC1E,wEAAyE,OACzE,wDAAyD,OACzD,kEAAmE,OACnE,qEAAsE,OACtE,qDAAsD,OACtD,sEAAuE,OACvE,iEAAkE,OAClE,oDAAqD,OACrD,2DAA4D,OAC5D,2DAA4D,OAC5D,iDAAkD,OAClD,gEAAiE,OACjE,mEAAoE,OACpE,mDAAoD,OACpD,iEAAkE,OAClE,mEAAoE,OACpE,oDAAqD,OACrD,iEAAkE,OAClE,gEAAiE,OACjE,gEAAiE,OACjE,uDAAwD,OACxD,wEAAyE,OACzE,8DAA+D,OAC/D,kDAAmD,OACnD,2DAA4D,OAC5D,oCAAqC,OACrC,SAAU,OACV,YAAa,OACb,aAAc,OACd,gBAAiB,OACjB,mDAAoD,OACpD,uDAAwD,OACxD,sDAAuD,OACvD,iDAAkD,OAClD,qDAAsD,OACtD,oDAAqD,OACrD,wDAAyD,OACzD,oDAAqD,OACrD,wDAAyD,OACzD,uDAAwD,OACxD,oDAAqD,OACrD,gEAAiE,OACjE,2CAA4C,OAC5C,8CAA+C,OAC/C,qDAAsD,OACtD,wDAAyD,OACzD,sDAAuD,OACvD,sDAAuD,OACvD,yDAA0D,OAC1D,mDAAoD,OACpD,oDAAqD,OACrD,uDAAwD,OACxD,qDAAsD,OACtD,mDAAoD,OACpD,sDAAuD,OACvD,yDAA0D,OAC1D,kDAAmD,OACnD,qDAAsD,OACtD,2DAA4D,OAC5D,mDAAoD,OACpD,sDAAuD,OACvD,oDAAqD,OACrD,uDAAwD,OACxD,mDAAoD,OACpD,sDAAuD,OACvD,oDAAqD,OACrD,uDAAwD,OACxD,uDAAwD,OACxD,0DAA2D,OAC3D,wDAAyD,OACzD,yDAA0D,OAC1D,kDAAmD,OACnD,sDAAuD,OACvD,qDAAsD,OACtD,yDAA0D,OAC1D,4DAA6D,OAC7D,+CAAgD,OAChD,mDAAoD,OACpD,kDAAmD,OACnD,+CAAgD,OAChD,mDAAoD,OACpD,kDAAmD,OACnD,mDAAoD,OACpD,sDAAuD,OACvD,sDAAuD,OACvD,uDAAwD,OACxD,oDAAqD,OACrD,uDAAwD,OACxD,2DAA4D,OAC5D,yDAA0D,OAC1D,uDAAwD,OACxD,+DAAgE,OAChE,0DAA2D,OAC3D,6DAA8D,OAC9D,qDAAsD,OACtD,wDAAyD,OACzD,2DAA4D,OAC5D,oDAAqD,OACrD,0DAA2D,OAC3D,2DAA4D,OAC5D,kDAAmD,OACnD,sDAAuD,OACvD,qDAAsD,OACtD,4DAA6D,OAC7D,+CAAgD,OAChD,kDAAmD,OACnD,qDAAsD,OACtD,+DAAgE,OAChE,sDAAuD,OACvD,yDAA0D,OAC1D,uDAAwD,OACxD,mDAAoD,OACpD,4DAA6D,OAC7D,wDAAyD,OACzD,2DAA4D,OAC5D,kDAAmD,OACnD,kDAAmD,OACnD,qDAAsD,OACtD,gDAAiD,OACjD,oDAAqD,OACrD,mDAAoD,OACpD,oCAAqC,OACrC,2CAA4C,OAC5C,+CAAgD,OAChD,8CAA+C,OAC/C,wCAAyC,OACzC,uCAAwC,OACxC,4CAA6C,OAC7C,+CAAgD,OAChD,iDAAkD,OAClD,gDAAiD,OACjD,4CAA6C,OAC7C,+CAAgD,OAChD,iDAAkD,OAClD,yCAA0C,OAC1C,6CAA8C,OAC9C,4CAA6C,OAC7C,yCAA0C,OAC1C,6CAA8C,OAC9C,4CAA6C,OAC7C,4CAA6C,OAC7C,+CAAgD,OAChD,iDAAkD,OAClD,+CAAgD,OAChD,kDAAmD,OACnD,oDAAqD,OACrD,8CAA+C,OAC/C,iDAAkD,OAClD,mDAAoD,OACpD,gDAAiD,OACjD,mDAAoD,OACpD,qDAAsD,OACtD,4CAA6C,OAC7C,+CAAgD,OAChD,iDAAkD,OAClD,gDAAiD,OACjD,mDAAoD,OACpD,qDAAsD,OACtD,+CAAgD,OAChD,2CAA4C,OAC5C,8CAA+C,OAC/C,gDAAiD,OACjD,2CAA4C,OAC5C,8CAA+C,OAC/C,gDAAiD,OACjD,6CAA8C,OAC9C,oBAAqB,OACrB,uBAAwB,OACxB,oBAAqB,OACrB,uBAAwB,OACxB,mBAAoB,OACpB,sBAAuB,OACvB,OAAQ,OACR,UAAW,QAIZ,SAASwE,EAAeC,GACvB,IAAI/E,EAAKgF,EAAsBD,GAC/B,OAAOE,EAAoBjF,GAE5B,SAASgF,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE5E,EAAKyE,GAAM,CACpC,IAAI/J,EAAI,IAAIL,MAAM,uBAAyBoK,EAAM,KAEjD,MADA/J,EAAErB,KAAO,mBACHqB,EAEP,OAAOsF,EAAIyE,GAEZD,EAAeK,KAAO,WACrB,OAAOhE,OAAOgE,KAAK7E,IAEpBwE,EAAe1N,QAAU4N,EACzBvK,EAAOtD,QAAU2N,EACjBA,EAAe9E,GAAK,Q,kCClmCpB,OAAe,yvE,kCCAf,OAAe,+vB,kCCAf,OAAe,2R,kCCAf,OAAe,mlG,kCCAf,OAAe,se,oCCAf,OAAe,kpE,kCCAf,OAAe,kf,kCCAf,OAAe,2lD,kCCAf,OAAe,qkG,kCCAf,OAAe,8N,kCCAf,OAAe,gpC,oCCAf,OAAe,oL,oCCAf,OAAe,4K,kCCAf,OAAe,wtD,kCCAf,OAAe,0hB,kCCAf,OAAe,i8E,kCCAf,OAAe,2gJ,kCCAf,OAAe,yH,kCCAf,OAAe,k/G,oCCAf,OAAe,6L,kCCAf,OAAe,m5C,kCCAf,OAAe,mhH,oCCAf,OAAe,o3O,kCCAf,OAAe,4mC,kCCAf,OAAe,w+D,oCCAf,OAAe,m2O,oCCAf,OAAe,k5D,kCCAf,OAAe,inG,kCCAf,OAAe,ud,kCCAf,OAAe,gd,kCCAf,OAAe,iH,kCCAf,OAAe,0qB,kCCAf,OAAe,uS,kCCAf,OAAe,qG,kCCAf,OAAe,iiE,kCCAf,OAAe,yhC,kCCAf,OAAe,qf,kCCAf,OAAe,qS,kCCAf,OAAe,+ha,kCCAf,OAAe,05D,kCCAf,OAAe,wN,kCCAf,OAAe,o+C,kCCAf,OAAe,k/B,kCCAf,OAAe,uzE,kCCAf,OAAe,4tG,kCCAf,OAAe,qqE,kCCAf,OAAe,kuG,kCCAf,OAAe,q2B,kCCAf,OAAe,63C,kCCAf,OAAe,mN,kCCAf,OAAe,qS,kCCAf,OAAe,q1C,kCCAf,OAAe,ykB,kCCAf,OAAe,iT,oCCAf,OAAe,ohD,kCCAf,OAAe,ivB,kCCAf,OAAe,q1N,kCCAf,OAAe,4jD,kCCAf,OAAe,wd,kCCAf,OAAe,uL,kCCAf,OAAe,u+F,kCCAf,OAAe,ymB,kCCAf,OAAe,sf,kCCAf,OAAe,y4E,kCCAf,OAAe,iC,kCCAf,OAAe,4F,kCCAf,OAAe,2jC,kCCAf,OAAe,o7M,kCCAf,OAAe,s5B,kCCAf,OAAe,0iO,kCCAf,OAAe,izC,oCCAf,OAAe,gvL,kCCAf,OAAe,smB,kCCAf,OAAe,smB,kCCAf,OAAe,g+D,kCCAf,OAAe,oC,kCCAf,OAAe,wR,kCCAf,OAAe,i7C,kCCAf,OAAe,gnB,kCCAf,OAAe,2nG,kCCAf,OAAe,w/B,kCCAf,OAAe,6rY,kCCAf,OAAe,sS,kCCAf,OAAe,6d,kCCAf,OAAe,6uH,kCCAf,OAAe,+wH,kCCAf,OAAe,oe,kCCAf,OAAe,4rB,kCCAf,OAAe,0d,kCCAf,OAAe,i8F,kCCAf,OAAe,oyI,kCCAf,OAAe,8rD,kCCAf,OAAe,6e,kCCAf,OAAe,ovJ,kCCAf,OAAe,8N,kCCAf,OAAe,ge,kCCAf,OAAe,0K,kCCAf,OAAe,i4C,kCCAf,OAAe,wqC,kCCAf,OAAe,m0C,kCCAf,OAAe,k82C,kCCAf,OAAe,6pC,kCCAf,OAAe,u/C,kCCAf,OAAe,+jC,kCCAf,OAAe,syI,kCCAf,OAAe,86C,kCCAf,OAAe,k1B,kCCAf,OAAe,qN,kCCAf,OAAe,6/B,kCCAf,OAAe,u8C,kCCAf,OAAe,+6M,kCCAf,OAAe,6vB,kCCAf,OAAe,inN,oCCAf,OAAe,k2C,kCCAf,OAAe,6+B,kCCAf,OAAe,m8D,kCCAf,OAAe,++H,kCCAf,OAAe,wrD,kCCAf,OAAe,i2J,oCCAf,OAAe,uuC,kCCAf,OAAe,+gB,kCCAf,OAAe,wS,kCCAf,OAAe,29B,kCCAf,OAAe,8S,kCCAf,OAAe,sO,kCCAf,OAAe,wc,kCCAf,OAAe,kR,kCCAf,OAAe,uS,kCCAf,OAAe,u1S,kCCAf,OAAe,8/K,kCCAf,OAAe,yuO,kCCAf,OAAe,k6E,kCCAf,OAAe,uG,kCCAf,OAAe,88P,kCCAf,OAAe,6d,oCCAf,OAAe,qG,oCCAf,OAAe,o1C,kCCAf,OAAe,u9N,kCCAf,OAAe,i+B,kCCAf,OAAe,gzB,kCCAf,OAAe,ijC,kCCAf,OAAe,miB,kCCAf,OAAe,2U,kCCAf,OAAe,u6C,kCCAf,OAAe,6X,kCCAf,OAAe,+1G,oCCAf,OAAe,wS,kCCAf,OAAe,u1C,kCCAf,OAAe,ouD,kCCAf,OAAe,ie,kCCAf,OAAe,gF,kCCAf,OAAe,09J,kCCAf,OAAe,ktE,kCCAf,OAAe,qjN,kCCAf,OAAe,2jB,kCCAf,OAAe,mwO,kCCAf,OAAe,03K,oCCAf,OAAe,+M,kCCAf,OAAe,i7C,kCCAf,OAAe,06B,kCCAf,OAAe,8b,kCCAf,OAAe,y3C,kCCAf,OAAe,m8B,oCCAf,OAAe,ymJ,kCCAf,OAAe,uQ,kCCAf,OAAe,4rB,kCCAf,OAAe,slC,kCCAf,OAAe,iT,kCCAf,OAAe,ge,kCCAf,OAAe,qnC,kCCAf,OAAe,6oD,kCCAf,OAAe,s5C,kCCAf,OAAe,qI,kCCAf,OAAe","file":"2e461e3a58d449d8dcb3e5164ce3e4bc59c3f69c-4f4187e95819c5adc58a.js","sourcesContent":["export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { Link, graphql } from 'gatsby'\\nimport { markdownSlug } from 'components/snippets/markdown-slug'\\n\\nimport SEO from 'components/seo'\\nimport Layout from 'components/layout'\\nimport DocIndex from 'components/includes/doc-index'\\n\\nclass Template extends React.Component {\\n  render() {\\n    const { data } = this.props\\n    const seo = {}\\n    seo.title = data.post.frontmatter.title\\n    seo.title = seo.title\\n      .split(/[\\\\s-]+/)\\n      .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n      .join(' ')\\n    seo.title += data.post.frontmatter.parent && data.post.frontmatter.parent !== data.post.frontmatter.title ? data.post.frontmatter.parent : ''\\n    seo.title += data.post.frontmatter.category && data.post.frontmatter.category !== data.post.frontmatter.title ? data.post.frontmatter.category : ''\\n    seo.title += data.post.frontmatter.type && data.post.frontmatter.type !== data.post.frontmatter.title ? data.post.frontmatter.type : ''\\n    seo.description = data.post.frontmatter.description\\n    seo.title = markdownSlug(data.post) === '/introduction' ? seo.description : seo.title // @DOCINDEX\\n    return (\\n      <Layout seo={seo} page={data}>\\n        <SEO title={seo.title} description={seo.description} />\\n        {markdownSlug(data.post) === '/introduction' ? ( // @DOCINDEX\\n          // @DOCINDEX\\n          <DocIndex />\\n        ) : (\\n          <div className=\\\"gatsby_listing\\\">\\n            <div className=\\\"row row-3\\\">\\n              {data.categories.category\\n                .sort((a, b) => {\\n                  if (a.title === 'Addons' || a.title === 'By Component') {\\n                    // a is less than b by some ordering criterion\\n                    return 1\\n                  }\\n                  if (a.title === 'Core' || a.title === 'By Type' || b.title === 'Addons' || b.title === 'By Component') {\\n                    // a is greater than b by the ordering criterion\\n                    return -1\\n                  }\\n                  // a must be equal to b\\n                  return 0\\n                })\\n                .map((category, i) => (\\n                  <div className=\\\"gatsby_listing_group\\\" key={i}>\\n                    <h2 className=\\\"h5 h-block rounded-md bg-gray-200 text-center\\\">{category.title.split('-').pop()}</h2>\\n                    <div className=\\\"gatsby_listing_items\\\">\\n                      <div className=\\\"row\\\">\\n                        {category.posts.map(({ post }, z) =>\\n                          post.frontmatter.link ? (\\n                            <div className=\\\"gatsby_listing_column\\\" key={z}>\\n                              <a href={post.frontmatter.link} target=\\\"_blank\\\" rel=\\\"noreferrer\\\" className=\\\"card gatsby_listing_item\\\">\\n                                <div className=\\\"h4\\\">\\n                                  {post.frontmatter.title\\n                                    .split(/[\\\\s-]+/)\\n                                    .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n                                    .join(' ')}\\n                                </div>\\n                                <p>{post.frontmatter.description}</p>\\n                              </a>\\n                            </div>\\n                          ) : post.frontmatter.parent === post.frontmatter.title ? (\\n                            <div className=\\\"gatsby_listing_column\\\" key={z}>\\n                              <Link to={markdownSlug(post)} className=\\\"card gatsby_listing_item\\\">\\n                                <div className=\\\"h4\\\">\\n                                  {post.frontmatter.title\\n                                    .split(/[\\\\s-]+/)\\n                                    .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n                                    .join(' ')}\\n                                </div>\\n                                <p>{post.frontmatter.description}</p>\\n                                {post.frontmatter.link}\\n                              </Link>\\n                            </div>\\n                          ) : null\\n                        )}\\n                      </div>\\n                    </div>\\n                  </div>\\n                ))}\\n            </div>\\n          </div>\\n        )}\\n      </Layout>\\n    )\\n  }\\n}\\n\\nexport default Template\\n\\nexport const query = graphql`\\n  query($title: String!, $type: String, $category: String, $parent: String, $parents: String) {\\n    categories: allMarkdownRemark(filter: { frontmatter: { type: { eq: $type } } }, sort: { fields: [frontmatter___date, frontmatter___title], order: ASC }) {\\n      category: group(field: frontmatter___category) {\\n        title: fieldValue\\n        posts: edges {\\n          post: node {\\n            frontmatter {\\n              type\\n              category\\n              parent\\n              title\\n              description\\n              link\\n            }\\n          }\\n        }\\n      }\\n    }\\n    postsAll: allMarkdownRemark {\\n      posts: edges {\\n        post: node {\\n          frontmatter {\\n            type\\n            category\\n            parent\\n            title\\n            description\\n          }\\n        }\\n      }\\n    }\\n    postsAdiacent: allMarkdownRemark(\\n      filter: { frontmatter: { type: { eq: $type }, parent: { regex: $parents } } }\\n      sort: { fields: [frontmatter___date, frontmatter___title], order: [DESC, ASC] }\\n    ) {\\n      posts: edges {\\n        post: node {\\n          frontmatter {\\n            type\\n            category\\n            parent\\n            title\\n          }\\n        }\\n      }\\n    }\\n    parent: markdownRemark(frontmatter: { title: { eq: $parent }, category: { eq: $category } }) {\\n      htmlAst\\n      frontmatter {\\n        type\\n        category\\n        parent\\n        title\\n      }\\n    }\\n    post: markdownRemark(frontmatter: { type: { eq: $type }, category: { eq: $category }, parent: { eq: $parent }, title: { eq: $title } }) {\\n      htmlAst\\n      frontmatter {\\n        type\\n        category\\n        parent\\n        title\\n        description\\n      }\\n    }\\n  }\\n`\\n\\nTemplate.propTypes = {\\n  data: PropTypes.shape({\\n    categories: PropTypes.shape({\\n      category: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          title: PropTypes.string.isRequired,\\n          posts: PropTypes.arrayOf(\\n            PropTypes.shape({\\n              post: PropTypes.shape({\\n                frontmatter: PropTypes.shape({\\n                  type: PropTypes.string.isRequired,\\n                  category: PropTypes.string,\\n                  parent: PropTypes.string,\\n                  title: PropTypes.string.isRequired,\\n                  description: PropTypes.string,\\n                }).isRequired,\\n              }).isRequired,\\n            }).isRequired\\n          ),\\n        }).isRequired\\n      ),\\n    }),\\n    postsAll: PropTypes.shape({\\n      posts: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          post: PropTypes.shape({\\n            frontmatter: PropTypes.shape({\\n              type: PropTypes.string.isRequired,\\n              category: PropTypes.string,\\n              parent: PropTypes.string,\\n              title: PropTypes.string.isRequired,\\n              description: PropTypes.string,\\n            }).isRequired,\\n          }).isRequired,\\n        }).isRequired\\n      ),\\n    }).isRequired,\\n    postsAdiacent: PropTypes.shape({\\n      posts: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          post: PropTypes.shape({\\n            frontmatter: PropTypes.shape({\\n              type: PropTypes.string.isRequired,\\n              parent: PropTypes.string,\\n              title: PropTypes.string.isRequired,\\n            }).isRequired,\\n          }).isRequired,\\n        }).isRequired\\n      ),\\n    }).isRequired,\\n    parent: PropTypes.shape({\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n      }).isRequired,\\n    }),\\n    post: PropTypes.shape({\\n      htmlAst: PropTypes.object.isRequired,\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n        description: PropTypes.string,\\n      }).isRequired,\\n    }).isRequired,\\n  }).isRequired,\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Toggle\\\"\\ntitle: \\\"multilevel\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **toggle multilevel**.\\n\\n[[notePrimary]]\\n| This addon uses [toggle](/components/core/toggle). Visit the component page to import and customize.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/toggle-multilevel\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/future/scroll'\\nimport 'xtendui/src/future/sticky'\\nimport 'xtendui/src/addons/scroll-to-anchor'\\nimport gsap from 'gsap'\\nimport 'gsap/ScrollToPlugin'\\n\\n/**\\n * sticky\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-gallery-v1 body .product-page_right', // add your own selector instead of body to contain the code\\n  mount: function (object) {\\n    // init\\n\\n    let self = new Xt.Sticky(object, {\\n      sticky: 'absolute',\\n      contain: {\\n        top: 0,\\n        bottom: '.product-page_limit-bottom',\\n      },\\n    })\\n\\n    // unmount\\n\\n    const unmount = function () {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\\n/**\\n * scroll-to-anchor\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-gallery-v1 body #gatsby_body-inner', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    object = document.documentElement\\n\\n    // init\\n\\n    let self = new Xt.ScrollToAnchor(object, {\\n      scrollElements: [document.scrollingElement, object.querySelector('.product-page_left'), object.querySelector('#overlay--product-page_images')],\\n    })\\n\\n    // change\\n\\n    const eventChange = () => {\\n      // val\\n      const scrollingElement = self.scrollElementCurrent\\n      let pos = self.position - self.scrollSpace - self.scrollDistance\\n      const min = 0\\n      const max = scrollingElement.scrollHeight - scrollingElement.offsetHeight\\n      pos = pos < min ? min : pos\\n      pos = pos > max ? max : pos\\n      // scroll\\n      const component = self.scrollElementCurrent.closest('.overlay')\\n      if (component) {\\n        // if component on activation\\n        gsap.set(scrollingElement, { scrollTo: pos })\\n      } else {\\n        gsap.to(scrollingElement, { scrollTo: pos, duration: Xt.vars.timeLarge, ease: 'quart.inOut' })\\n      }\\n    }\\n\\n    self.object.addEventListener('change.xt.scrolltoanchor', eventChange)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.object.removeEventListener('change.xt.scrolltoanchor', eventChange)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\\n/**\\n *  .product-page_continue\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-gallery-v1 body .product-page_continue', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const icon = object.querySelector(':scope > *')\\n\\n    // interval\\n\\n    const move = () => {\\n      gsap.to(icon, { y: 6, duration: Xt.vars.timeSmall, ease: 'back.out(4)' }).eventCallback('onComplete', () => {\\n        gsap.to(icon, { y: 0, duration: Xt.vars.timeSmall, ease: 'quart.out' }).delay(Xt.vars.timeMedium)\\n      })\\n    }\\n\\n    let interval = setInterval(move, Xt.vars.timeGiant)\\n\\n    // scroll\\n\\n    const eventScroll = () => {\\n      if (document.scrollingElement.scrollTop > 0) {\\n        object.classList.add('scrolled')\\n      } else {\\n        object.classList.remove('scrolled')\\n      }\\n    }\\n\\n    addEventListener('scroll', eventScroll)\\n    eventScroll()\\n\\n    // unmount\\n\\n    const unmount = function () {\\n      clearInterval(interval)\\n      removeEventListener('scroll', eventScroll)\\n    }\\n    return unmount\\n  },\\n})\\n\\n/**\\n * media mask\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-gallery-v1 body .product-page_image', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // markup\\n\\n    if (!object.querySelector('.media_mask')) {\\n      object.querySelector('.media-container').prepend(Xt.createElement('<span class=\\\"media_mask\\\"></span>'))\\n    }\\n\\n    // vars\\n\\n    const maskOpacityOn = 0.2\\n    const maskOpacityOff = 0.2\\n    const maskOpacityDone = 0.1\\n\\n    // enter\\n\\n    const eventEnter = e => {\\n      const tr = e.target\\n      // mask\\n      const img = tr.querySelector('.media-container')\\n      const mask = tr.querySelector('.media_mask')\\n      gsap.set(mask, { height: 0, y: img.offsetHeight, skewY: 0, opacity: maskOpacityOff })\\n      gsap.to(mask, { height: '150%', y: 0, opacity: maskOpacityOn, duration: Xt.vars.timeSmall, ease: 'quart.out' }) // @FIX to cover height: '150%'\\n      gsap.to(mask, { skewY: -10, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' }).eventCallback('onComplete', () => {\\n        gsap.to(mask, { skewY: 0, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' })\\n      })\\n      gsap.to(mask, { opacity: maskOpacityDone, duration: Xt.vars.timeMedium, ease: 'quart.out', delay: Xt.vars.timeSmall })\\n    }\\n\\n    object.addEventListener('mouseenter', eventEnter)\\n\\n    // leave\\n\\n    const eventLeave = e => {\\n      const tr = e.target\\n      // mask\\n      const mask = tr.querySelector('.media_mask')\\n      gsap.to(mask, { height: '50%', y: '-100%', opacity: maskOpacityOff, duration: Xt.vars.timeSmall, ease: 'quart.out' }) // @FIX to cover height: '50%', y: '-100%'\\n      gsap.to(mask, { skewY: 10, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' }).eventCallback('onComplete', () => {\\n        gsap.to(mask, { skewY: 0, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' })\\n      })\\n    }\\n\\n    object.addEventListener('mouseleave', eventLeave)\\n\\n    // unmount\\n\\n    const unmount = () => {}\\n    return unmount\\n  },\\n})\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\nconst iconChevronLeft = require('components/snippets/icons').iconChevronLeft\\nconst iconChevronRight = require('components/snippets/icons').iconChevronRight\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\">\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">1</div>\\n        <nav class=\\\"slider-navigation list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n            ${iconChevronLeft({ classes: 'icon-lg' })}\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n            ${iconChevronRight({ classes: 'icon-lg' })}\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">2</div>\\n        <nav class=\\\"slider-navigation list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n            ${iconChevronLeft({ classes: 'icon-lg' })}\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n            ${iconChevronRight({ classes: 'icon-lg' })}\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">3</div>\\n        <nav class=\\\"slider-navigation list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n            ${iconChevronLeft({ classes: 'icon-lg' })}\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n            ${iconChevronRight({ classes: 'icon-lg' })}\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">4</div>\\n        <nav class=\\\"slider-navigation list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n            ${iconChevronLeft({ classes: 'icon-lg' })}\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n            ${iconChevronRight({ classes: 'icon-lg' })}\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">5</div>\\n        <nav class=\\\"slider-navigation list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n            ${iconChevronLeft({ classes: 'icon-lg' })}\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n            ${iconChevronRight({ classes: 'icon-lg' })}\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n    ${iconChevronLeft({ classes: 'icon-lg' })}\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n    ${iconChevronRight({ classes: 'icon-lg' })}\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"const round = num =>\\n  num\\n    .toFixed(7)\\n    .replace(/(\\\\.[0-9]+?)0+$/, '$1')\\n    .replace(/\\\\.0$/, '')\\nconst rem = px => `${round(px / 16)}rem`\\n\\nmodule.exports = {\\n  variant: ['responsive'],\\n  utility: {\\n    '.card-group': {\\n      // setup\\n      display: 'flex',\\n      alignItems: 'inherit',\\n    },\\n    '.card-disable': {\\n      // setup\\n      '@apply text-black links-default': '',\\n      borderWidth: '0',\\n      backgroundColor: 'transparent',\\n      boxShadow: 'none',\\n      '> .card-design': {\\n        display: 'none',\\n      },\\n      '&, > *, > * > *': {\\n        padding: '0',\\n      },\\n      '> .btn-close': {\\n        display: 'none',\\n      },\\n    },\\n  },\\n  component: theme => ({\\n    '.card': {\\n      // setup\\n      position: 'relative',\\n      display: 'flex',\\n      flexDirection: 'column',\\n      alignItems: 'stretch',\\n      justifyContent: 'flex-start',\\n      flex: '1 1 auto',\\n      width: '100%',\\n      // animation\\n      'a&, button&, label&': {\\n        zIndex: theme('zIndex.base'),\\n        transitionProperty: 'all',\\n        transitionDuration: theme('transitionDuration.500'),\\n        transitionTimingFunction: theme('transitionTimingFunction.out'),\\n        '&:hover, &:active, &.active': {\\n          zIndex: theme('zIndex.active'),\\n          transitionTimingFunction: theme('transitionTimingFunction.in'),\\n        },\\n      },\\n    },\\n    '.card-sm': {\\n      // styles\\n      '@apply text-sm': '',\\n      padding: `${rem(20)} ${rem(25)}`,\\n    },\\n    '.card-md': {\\n      // styles\\n      '@apply text-base': '',\\n      padding: `${rem(30)} ${rem(35)}`,\\n    },\\n    '.card-lg': {\\n      // styles\\n      '@apply text-lg': '',\\n      padding: `${rem(40)} ${rem(45)}`,\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst btnPrimaryDrop = require('components/snippets/classes/btn-primary-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\nconst cardPrimaryDropList = require('components/snippets/classes/card-primary-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container demo--drop-container-disable\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      disable sm\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n                Drop inner\\n              </button>\\n\\n              <div class=\\\"drop drop-center drop-middle\\\">\\n                <div class=\\\"drop-inner\\\">\\n                  <div class=\\\"w-64 py-3 ${cardPrimaryDropList()}\\\">\\n                    <nav class=\\\"list flex-col\\\">\\n                      <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnPrimaryDrop()}\\\">\\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n                      </a>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimaryDrop()}\\\">\\n                        Dolor sit\\n                      </button>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimaryDrop()}\\\">\\n                        Amet\\n                      </button>\\n                    </nav>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"sticky-0\\\" data-xt-sticky>\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-1\\\" data-xt-sticky=\\\"{ contain: { top: '.sticky-0:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-2\\\" data-xt-sticky=\\\"{ contain: { top: '.sticky-0:not(.xt-clone), .sticky-1:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"toolbar\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse [group space](/components/core/group/content#space) to create a toolbar.\\n\\nFor aria purpose use `role=\\\"toolbar\\\"`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/group-toolbar\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"#iframe--google-locator {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    .google-locator {\\n      display: flex;\\n      flex-wrap: wrap;\\n      flex: 1 1 auto;\\n      @media (max-width: theme('screens.md')) {\\n        flex-flow: column;\\n      }\\n      @screen md {\\n        min-height: 100vh;\\n        min-height: calc(var(--vh, 1vh) * 100);\\n      }\\n    }\\n\\n    .google-locator_main {\\n      flex: 1 1 auto;\\n      position: relative;\\n      min-height: 100%;\\n      @screen md {\\n        position: fixed;\\n        top: 0;\\n        right: 0;\\n        width: 100%;\\n        height: 100%;\\n        padding-left: 20rem;\\n      }\\n      @screen lg {\\n        padding-left: 25rem;\\n      }\\n      @screen xl {\\n        padding-left: 30rem;\\n      }\\n      /* hide map on mobile */\\n      @media (max-width: theme('screens.md')) {\\n        @apply sr-only;\\n        height: 100vh;\\n        visibility: hidden;\\n        pointer-events: none;\\n        position: fixed; /* @FIX no absolute or bugs search */\\n        z-index: -1;\\n        top: -100vh;\\n        left: -100vw;\\n        opacity: 0;\\n      }\\n    }\\n\\n    .google-locator_main_inner {\\n      position: relative;\\n      width: 100%;\\n      height: 100%;\\n    }\\n\\n    .google-locator_main_map {\\n      width: 100%;\\n      height: 100%;\\n    }\\n\\n    .google-locator_aside {\\n      position: relative;\\n      z-index: 1;\\n      @screen md {\\n        width: 20rem;\\n        min-height: 100%;\\n        box-shadow: 0 0 0.7rem rgba(0, 0, 0, 0.2);\\n      }\\n      @screen lg {\\n        width: 25rem;\\n      }\\n      @screen xl {\\n        width: 30rem;\\n      }\\n    }\\n\\n    .google-locator_aside_head {\\n      position: relative;\\n      padding: 2rem;\\n      border-bottom: 1px solid theme('colors.gray.200');\\n    }\\n\\n    .google-locator_result {\\n      @apply text-xs;\\n      padding-bottom: 0.7rem;\\n      border-bottom: 1px solid theme('colors.gray.200');\\n    }\\n\\n    .google-locator_aside_body {\\n      position: relative;\\n      padding: 2rem;\\n      .google-locator_result {\\n        display: none;\\n      }\\n      [data-xt-google-locator-result-initial] {\\n        display: block;\\n      }\\n      &.found {\\n        .google-locator_result {\\n          display: none;\\n        }\\n        [data-xt-google-locator-result-founds] {\\n          display: block;\\n        }\\n      }\\n      &.noplace {\\n        .google-locator_result {\\n          display: none;\\n        }\\n        [data-xt-google-locator-result-noplace] {\\n          display: block;\\n        }\\n      }\\n      &.empty {\\n        .google-locator_result {\\n          display: none;\\n        }\\n        [data-xt-google-locator-result-empty] {\\n          display: block;\\n        }\\n      }\\n      &.error {\\n        .google-locator_result {\\n          display: none;\\n        }\\n        [data-xt-google-locator-result-error] {\\n          display: block;\\n        }\\n      }\\n    }\\n\\n    .google-locator_repeat {\\n      position: absolute;\\n      z-index: 2;\\n      top: 2rem;\\n      left: 2rem;\\n    }\\n\\n    .google-locator_items {\\n      @apply mt-4;\\n    }\\n\\n    .google-locator_item {\\n      @apply py-2;\\n      > .list {\\n        @apply list-2;\\n        flex-wrap: nowrap;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n    }\\n\\n    .google-locator_items .google-locator_item {\\n      /* activation when clicking marker */\\n      cursor: pointer;\\n      border-bottom: 1px solid theme('colors.gray.200');\\n      transition-property: border;\\n      transition-duration: theme('transitionDuration.500');\\n      transition-timing-function: theme('transitionTimingFunction.out');\\n      &.active {\\n        border-bottom: 1px solid theme('colors.accent.500');\\n        transition-timing-function: theme('transitionTimingFunction.in');\\n      }\\n    }\\n\\n    .google-locator_item_name {\\n      @apply h5;\\n    }\\n\\n    .google-locator_item_address {\\n      @apply text-sm;\\n      font-style: normal;\\n      text-transform: uppercase;\\n    }\\n\\n    .google-locator_item_additional {\\n      @apply text-sm;\\n      text-transform: uppercase;\\n    }\\n\\n    .google-locator_item_directions {\\n      @apply text-sm;\\n      text-transform: uppercase;\\n    }\\n\\n    /* infoWindow */\\n\\n    .gm-style {\\n      /* reset */\\n      .gm-style-iw-d {\\n        overflow: visible !important;\\n        max-width: none !important;\\n        max-height: none !important;\\n      }\\n      /* arrow */\\n      .gm-style-iw-t {\\n        &:after {\\n          background: theme('colors.white');\\n        }\\n      }\\n      /* box */\\n      .gm-style-iw-c {\\n        @apply p-4 !important;\\n        border: 0;\\n        border-radius: 0;\\n        //box-shadow: @shadow-light;\\n        background: theme('colors.white');\\n        /* scroll */\\n        @apply overflow-sub;\\n        overflow-x: hidden !important;\\n        overflow-y: auto !important;\\n        max-height: 15rem !important;\\n      }\\n      /* close */\\n      .gm-style-iw-d + button {\\n        top: 0 !important;\\n        right: 0 !important;\\n        width: 3rem !important;\\n        height: 3rem !important;\\n        background: theme('colors.gray.200') !important;\\n        border-bottom-left-radius: 0.7rem;\\n        font-size: 25px;\\n        color: theme('colors.black') !important;\\n        line-height: 0;\\n        text-align: center;\\n        opacity: 1 !important;\\n        &:before {\\n          content: '×';\\n          position: relative;\\n          top: -2px;\\n        }\\n        img {\\n          display: none !important;\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \".demo--slider-touch-overflow {\\n  @media (hover: none) {\\n    @apply xt-disable-after-init;\\n    .slides {\\n      @apply overflow-sub;\\n      overflow-x: auto;\\n      overflow-y: hidden;\\n    }\\n    .slides-inner {\\n      @apply duration-none transform-none !important;\\n      cursor: auto !important;\\n    }\\n    .slider-pagination {\\n      display: none !important;\\n    }\\n  }\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport gsap from 'gsap'\\n\\n/**\\n * listing-page\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--furniture-listing-v1 body .listing-page_item', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const imgScale = 0.04\\n\\n    // enter\\n\\n    const eventEnter = e => {\\n      const tr = e.target\\n      // img\\n      const img = tr.querySelector('.media-container')\\n      gsap.to(img, { scale: 1 - imgScale, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n      const imgInner = tr.querySelector('.media-inner')\\n      gsap.to(imgInner, { scale: 1 + imgScale, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n    }\\n\\n    object.addEventListener('mouseenter', eventEnter)\\n\\n    // leave\\n\\n    const eventLeave = e => {\\n      const tr = e.target\\n      // img\\n      const img = tr.querySelector('.media-container')\\n      gsap.to(img, { scale: 1, duration: Xt.vars.timeMedium, ease: 'expo.out' })\\n      const imgInner = tr.querySelector('.media-inner')\\n      gsap.to(imgInner, { scale: 1, duration: Xt.vars.timeMedium, ease: 'expo.out' })\\n    }\\n\\n    object.addEventListener('mouseleave', eventLeave)\\n\\n    // unmount\\n\\n    const unmount = () => {}\\n    return unmount\\n  },\\n})\\n\\n/**\\n * scroll\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--furniture-listing-v1 body #gatsby_body-inner', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    object = document.documentElement\\n\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      // the same css and js\\n      elements: '.scroll-item, .listing-page_item',\\n      delayOn: current => {\\n        return Math.min((current + 1) * 75, 300)\\n      },\\n      delayOff: (current, total) => {\\n        return Math.min((total - (current + 1)) * 75, 300)\\n      },\\n      distance: 100,\\n    })\\n\\n    // unmount\\n\\n    const unmount = function () {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Loader\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Spinner\\n\\nUse **tailwind classes** to assign variant (e.g. [stroke](https://tailwindcss.com/docs/stroke), [opacity](https://tailwindcss.com/docs/opacity)).\\n\\nUse `.spinner-animated` to assing spinner animation.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.spinner-animated`                     | `spinner-animated`                | Spinner animation            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/spinner\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/spinner-inverse\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Filler\\n\\n#### Direction\\n\\nUse **component classes** to assign direction. For `<direction>` values use `x` or `y`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.loader-<direction>`                     | `loader-<direction>`                | Loader direction for filler            |\\n\\n</div>\\n\\nUse `.loader-<direction>-animated` to assing filler animation. For `<direction>` values use `x` or `y`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.loader-<direction>-animated`                     | `loader-<direction>-animated`                | Filler animation            |\\n\\n</div>\\n\\nUse **tailwind classes** to assign variant (e.g. [background-color](https://tailwindcss.com/docs/background-color), [opacity](https://tailwindcss.com/docs/opacity)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-x\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-y\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-inverse\\\">\\n  </demovanilla>\\n</demo>\\n\\n#### Size\\n\\nFor `<size>` values use `x`, `top` or `bottom`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.loader-x.loader-size-<size>`                     | `loader-x loader-size-<size>`                | Loader size for filler direction `x`             |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-size-x\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-size-top\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-size-bottom\\\">\\n  </demovanilla>\\n</demo>\\n\\nFor `<size>` values use `y`, `left` or `right`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.loader-y.loader-size-<size>`                     | `loader-y loader-size-<size>`                | Loader size for filler direction `y`             |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-size-y\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-size-left\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-size-right\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"/**\\n * footer\\n */\\n\\n.gatsby_site_footer_inner {\\n  @apply py-5;\\n}\\n\\n.gatsby_site_footer_bottom {\\n  a {\\n    font-weight: theme('fontWeight.semibold');\\n    color: theme('colors.black');\\n    text-decoration: none;\\n    &:hover, &:active, &.active {\\n      color: theme('colors.black');\\n      text-decoration: underline;\\n    }\\n  }\\n  opacity: 0.5;\\n  transition-property: opacity;\\n  transition-duration: theme('transitionDuration.500');\\n  transition-timing-function: theme('transitionTimingFunction.out');\\n  &:hover {\\n    opacity: 1;\\n    transition-timing-function: theme('transitionTimingFunction.in');\\n  }\\n}\\n\\n.gatsby_site_footer_bottom_row {\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  flex: 1 1 auto;\\n  font-size: 11px;\\n  @screen md {\\n    font-size: 12px;\\n  }\\n  @screen lg {\\n    font-size: 13px;\\n  }\\n}\\n\\n.gatsby_site_footer_bottom_right {\\n  @screen md {\\n    margin-left: auto;\\n  }\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Form\\\"\\ntitle: \\\"Form\\\"\\ndescription: \\\"Form styles with multiple layouts, custom checkbox/radio, and more.\\\"\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"number\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/addons/group-number'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/addons/group-number.css.js](https://github.com/minimit/xtendui/blob/master/src/addons/group-number.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      'group-number': {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **group number**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/group-number\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"Group\\\"\\ndescription: \\\"Css component to group up buttons and inputs. Can easily create toolbar and navigations.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/group.css.js](https://github.com/minimit/xtendui/blob/master/src/core/group.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      group: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\n#### Horizontal\\n\\nUse this code to create a **group horizontal**.\\n\\nUse **tailwind classes** to assign styles (e.g. [border-color](https://tailwindcss.com/docs/border-color), [border-radius](https://tailwindcss.com/docs/border-radius)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\n#### Vertical\\n\\nUse this code to create a **group vertical** with `.flex-col`.\\n\\nUse **tailwind classes** to assign styles (e.g. [border-color](https://tailwindcss.com/docs/border-color), [border-radius](https://tailwindcss.com/docs/border-radius)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/usage-vertical\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/group/content).\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-x loader-x-animated\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-x loader-x-animated\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnCloseOutside = require('components/snippets/classes/btn-close-outside').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst cardDefaultOverlayScreen = require('components/snippets/classes/card-default-overlay-screen').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      default\\n    </button>\\n\\n    <div class=\\\"overlay overlay-close-outside\\\">\\n      <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 ${btnCloseOutside()} md:p-2 md:right-auto md:left-100\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-lg\\\">\\n              <div class=\\\"h2\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container w-80 ml-0 mr-auto\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 ${btnCloseOutside()} md:p-2 md:right-auto md:left-100\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-lg\\\">\\n              <div class=\\\"h3\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      right\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container w-80 ml-auto mr-0\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 ${btnCloseOutside()} md:p-2 md:left-auto md:right-100\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-lg\\\">\\n              <div class=\\\"h3\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Theme\\\"\\ntitle: \\\"collapse-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-24\\\"\\ndemos: [\\n  \\\"iframe/themes/collapse-theme-v1\\\"\\n]\\n---\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md bg-gray-200 hover:bg-gray-300 active:bg-gray-400`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/slider'\\nimport 'xtendui/src/addons/propagate-interaction'\\nimport gsap from 'gsap'\\n\\n/**\\n * PropagateInteraction\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-hero-v1 body a, #iframe--fashion-hero-v1 body button', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    new Xt.PropagateInteraction(object, {\\n      targets: '.btn',\\n    })\\n  },\\n})\\n\\n/**\\n * link animation\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-hero-v1 body .slide', // add your own selector instead of body to contain the code\\n  mount: function (object) {\\n    // vars\\n\\n    const links = object.tagName === 'A' || object.tagName === 'BUTTON' ? Xt.arrSingle(object) : object.querySelectorAll('a, button')\\n    const img = object.querySelector('.media')\\n    const imgOpacityIn = 0.75\\n    const imgOpacityOut = 1\\n\\n    // enter\\n\\n    const eventEnter = () => {\\n      // img\\n      gsap.to(img, { opacity: imgOpacityIn, duration: Xt.vars.timeSmall, ease: 'quart.out' })\\n    }\\n\\n    for (const link of links) {\\n      link.addEventListener('mouseenter', eventEnter)\\n    }\\n\\n    // enter\\n\\n    const eventLeave = () => {\\n      // img\\n      gsap.to(img, { opacity: imgOpacityOut, duration: Xt.vars.timeSmall, ease: 'quart.out', overwrite: true })\\n    }\\n\\n    for (const link of links) {\\n      link.addEventListener('mouseleave', eventLeave)\\n    }\\n  },\\n})\\n\\n/**\\n * slider\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-hero-v1 body .slider', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const assetMaskTimeOn = Xt.vars.timeBig\\n    const assetMaskEaseOn = 'quint.inOut'\\n    const assetMaskTimeOff = Xt.vars.timeBig\\n    const assetMaskEaseOff = 'quint.inOut'\\n    const assetMaskEaseDragging = 'quint.out'\\n\\n    const assetZoom = 0.25\\n    const assetOpacity = 0.5\\n    const assetTimeOn = Xt.vars.timeBig\\n    const assetEaseOn = 'quint.inOut'\\n    const assetTimeOff = Xt.vars.timeBig\\n    const assetEaseOff = 'quint.inOut'\\n    const assetTimeDragging = Xt.vars.timeBig + Xt.vars.timeBig\\n    const assetEaseDragging = 'quint.out'\\n\\n    const contentX = 50\\n    const contentTime = Xt.vars.timeBig\\n    const contentEase = 'quint.inOut'\\n    const contentEaseDragging = 'quint.out'\\n\\n    // slider\\n\\n    let self = new Xt.Slider(object, {\\n      instant: true,\\n      durationOn: Xt.vars.timeBig,\\n      durationOff: Xt.vars.timeBig,\\n      auto: {\\n        time: 5000,\\n        pause: '.hero_content_inner',\\n      },\\n      autoHeight: false,\\n      groupMq: false,\\n      drag: {\\n        duration: Xt.vars.timeBig,\\n        overflow: false,\\n      },\\n    })\\n\\n    // drag\\n\\n    const eventDrag = () => {\\n      const tr = self.targets.filter(x => self.hasCurrent(x))[0]\\n      // assetMask\\n      const assetMask = tr.querySelector('.hero')\\n      gsap.set(assetMask, { x: -100 * self.detail.dragRatio * self.direction + '%' })\\n      const assetMaskInner = assetMask.querySelector('.hero_inner')\\n      gsap.set(assetMaskInner, { x: (100 * self.detail.dragRatio * self.direction) / 2 + '%' })\\n      // asset\\n      const asset = tr.querySelector('.hero_asset .media')\\n      gsap.set(asset, { opacity: self.detail.dragRatioInverse + assetOpacity })\\n      // nextsOld\\n      const nextsOld = self.targets.filter(x => x.classList.contains('next'))\\n      for (const next of nextsOld) {\\n        next.classList.remove('next')\\n      }\\n      // next\\n      const nexts = self.direction > 0 ? self.getTargets(self.getNext()) : self.getTargets(self.getPrev())\\n      for (const next of nexts) {\\n        next.classList.add('next')\\n        // assetMask\\n        const assetMask = next.querySelector('.hero')\\n        gsap.set(assetMask, { x: 100 * self.detail.dragRatioInverse * self.direction + '%' })\\n        const assetMaskInner = assetMask.querySelector('.hero_inner')\\n        gsap.set(assetMaskInner, { x: (-100 * self.detail.dragRatioInverse * self.direction) / 2 + '%' })\\n        // asset\\n        const asset = next.querySelector('.hero_asset .media')\\n        gsap.set(asset, { scale: 1 + assetZoom * self.detail.dragRatioInverse, opacity: self.detail.dragRatio + assetOpacity })\\n        // content\\n        const content = next.querySelector('.hero_content')\\n        gsap.set(content, { x: contentX * self.detail.dragRatioInverse * self.direction })\\n      }\\n    }\\n\\n    self.dragger.addEventListener('drag.xt', eventDrag)\\n\\n    // dragreset\\n\\n    const eventDragReset = () => {\\n      const tr = self.targets.filter(x => self.hasCurrent(x))[0]\\n      // assetMask\\n      const assetMask = tr.querySelector('.hero')\\n      gsap.to(assetMask, { x: 0, duration: Xt.vars.timeTiny, ease: assetMaskEaseOff })\\n      const assetMaskInner = assetMask.querySelector('.hero_inner')\\n      gsap.to(assetMaskInner, { x: 0, duration: Xt.vars.timeTiny, ease: assetMaskEaseOff })\\n      // asset\\n      const asset = tr.querySelector('.hero_asset .media')\\n      gsap.to(asset, { x: 0, opacity: 1, duration: Xt.vars.timeTiny, ease: assetEaseOn })\\n      // next\\n      const nexts = self.targets.filter(x => x.classList.contains('next'))\\n      for (const next of nexts) {\\n        // assetMask\\n        const assetMask = next.querySelector('.hero')\\n        const xCurrent = assetMask.clientWidth * self.direction\\n        gsap.to(assetMask, { x: xCurrent, duration: Xt.vars.timeTiny, ease: assetMaskEaseOff })\\n        const assetMaskInner = assetMask.querySelector('.hero_inner')\\n        gsap.to(assetMaskInner, { x: -xCurrent / 2, duration: Xt.vars.timeTiny, ease: assetMaskEaseOff })\\n        // asset\\n        const asset = next.querySelector('.hero_asset .media')\\n        gsap.set(asset, { opacity: assetOpacity, duration: Xt.vars.timeTiny, ease: assetEaseOn })\\n      }\\n    }\\n\\n    self.dragger.addEventListener('dragreset.xt', eventDragReset)\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        if (self.initial) {\\n          // assetMask\\n          const assetMask = tr.querySelector('.hero')\\n          gsap.killTweensOf(assetMask)\\n          gsap.set(assetMask, { x: 0 })\\n          const assetMaskInner = assetMask.querySelector('.hero_inner')\\n          gsap.killTweensOf(assetMaskInner)\\n          gsap.set(assetMaskInner, { x: 0 })\\n          // asset\\n          const asset = tr.querySelector('.hero_asset .media')\\n          gsap.killTweensOf(asset)\\n          gsap.set(asset, { opacity: 1, scale: 1 })\\n          // content\\n          const content = tr.querySelector('.hero_content')\\n          gsap.killTweensOf(content)\\n          gsap.set(content, { x: 0 })\\n        } else {\\n          // assetMask\\n          const assetMask = tr.querySelector('.hero')\\n          if (!self.detail.dragging) {\\n            gsap.set(assetMask, { x: 100 * self.direction + '%' })\\n          }\\n          gsap.to(assetMask, { x: 0, duration: assetMaskTimeOn, ease: self.detail.dragging ? assetMaskEaseDragging : assetMaskEaseOn })\\n          const assetMaskInner = assetMask.querySelector('.hero_inner')\\n          if (!self.detail.dragging) {\\n            gsap.set(assetMaskInner, { x: -((100 * self.direction) / 2) + '%' })\\n          }\\n          gsap.to(assetMaskInner, { x: 0, duration: assetMaskTimeOn, ease: self.detail.dragging ? assetMaskEaseDragging : assetMaskEaseOn })\\n          // asset\\n          const asset = tr.querySelector('.hero_asset .media')\\n          if (!self.detail.dragging) {\\n            gsap.set(asset, { opacity: 1, scale: 1 + assetZoom })\\n          }\\n          gsap.to(asset, {\\n            opacity: 1,\\n            scale: 1,\\n            duration: self.detail.dragging ? assetTimeDragging : assetTimeOn,\\n            ease: self.detail.dragging ? assetEaseDragging : assetEaseOn,\\n          })\\n          // content\\n          const content = tr.querySelector('.hero_content')\\n          if (!self.detail.dragging) {\\n            gsap.set(content, { x: contentX * self.direction })\\n          }\\n          gsap.to(content, { x: 0, duration: contentTime, ease: self.detail.dragging ? contentEaseDragging : contentEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('on.xt', eventOn, true)\\n\\n    // off\\n\\n    const eventOff = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        // assetMask\\n        const assetMask = tr.querySelector('.hero')\\n        gsap.to(assetMask, {\\n          x: -100 * self.direction + '%',\\n          duration: assetMaskTimeOff,\\n          ease: self.detail.dragging ? assetMaskEaseDragging : assetMaskEaseOff,\\n        })\\n        const assetMaskInner = assetMask.querySelector('.hero_inner')\\n        gsap.to(assetMaskInner, {\\n          x: (100 * self.direction) / 2 + '%',\\n          duration: assetMaskTimeOff,\\n          ease: self.detail.dragging ? assetMaskEaseDragging : assetMaskEaseOff,\\n        })\\n        // asset\\n        const asset = tr.querySelector('.hero_asset .media')\\n        gsap.to(asset, {\\n          opacity: assetOpacity,\\n          duration: self.detail.dragging ? assetTimeDragging : assetTimeOff,\\n          ease: self.detail.dragging ? assetEaseDragging : assetEaseOff,\\n        })\\n        // nextsOld\\n        const nextsOld = self.targets.filter(x => x.classList.contains('next'))\\n        for (const next of nextsOld) {\\n          next.classList.remove('next')\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('off.xt', eventOff, true)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupSliderHero = require('components/snippets/themes/markup-slider-hero').default\\nconst indentString = require('indent-string')\\nconst iconArrowLeft = require('components/snippets/icons').iconArrowLeft\\nconst iconArrowRight = require('components/snippets/icons').iconArrowRight\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\">\\n${indentString(markupSliderHero(), 2)}\\n  <div class=\\\"slider-navigation-sides left-0\\\" data-xt-nav=\\\"-1\\\" aria-label=\\\"Previous slide\\\" data-xt-mouse-follow=\\\"{ targets: '.slider-navigation-sides-btn' }\\\">\\n    <div class=\\\"slider-navigation-sides-btn mouse-follow text-white text-2xl\\\">\\n      ${iconArrowLeft({ classes: 'icon-md' })}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"slider-navigation-sides right-0\\\" data-xt-nav=\\\"1\\\" aria-label=\\\"Next slide\\\" data-xt-mouse-follow=\\\"{ targets: '.slider-navigation-sides-btn' }\\\">\\n    <div class=\\\"slider-navigation-sides-btn mouse-follow text-white text-2xl\\\">\\n      ${iconArrowRight({ classes: 'icon-md' })}\\n    </div>\\n  </div>\\n\\n  <nav class=\\\"slider-pagination w-full list list-2 hidden\\\">\\n    <button type=\\\"button\\\" class=\\\"btn xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n    </button>\\n  </nav>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/search.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/x.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/arrow-left.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/arrow-right.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/arrow-up.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/arrow-down.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/chevron-left.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/chevron-right.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/chevron-up.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/chevron-down.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/locate.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/github.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/package.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/link.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/code.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/maximize.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/external-link.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n\\n<img class=\\\"icon icon-md ml-2\\\" src=\\\"/icons/copy.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n`\\n\";","export default \".demo--overlay-animation {\\n  @apply duration-500; /* needed for animation time, put max animation time */\\n  /* initial */\\n  .overlay-inner {\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n  }\\n  .backdrop {\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0;\\n  }\\n  /* in */\\n  &.in {\\n    .overlay-inner {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    .backdrop {\\n      @apply opacity-100 ease-in;\\n    }\\n  }\\n  /* out */\\n  &.out {\\n    .overlay-inner {\\n      @apply opacity-0 translate-x-4 ease-out;\\n    }\\n    .backdrop {\\n      @apply opacity-0 ease-out;\\n    }\\n  }\\n}\\n\";","export default \"#demo--overlay-nested-disable-toggle {\\n  /*@apply md:hidden !important;*/\\n  @apply hidden !important;\\n}\\n\\n#demo--overlay-nested-disable {\\n  /*@apply md:overlay-disable !important;*/\\n  @apply overlay-disable !important;\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\n\\n/**\\n * Radio change event on same name radios\\n */\\n\\nXt.mount.push({\\n  matches: 'input[type=\\\"radio\\\"]',\\n  mount: object => {\\n    // vars\\n\\n    const name = object.getAttribute('name')\\n    const others = document.querySelectorAll('input[type=\\\"radio\\\"][name=\\\"' + name + '\\\"]')\\n\\n    // eventInput\\n\\n    const eventInput = () => {\\n      // propagate to other radios\\n      for (const other of Array.from(others).filter(x => x !== object)) {\\n        other.dispatchEvent(new Event('change'))\\n      }\\n    }\\n\\n    object.addEventListener('input', eventInput)\\n  },\\n})\\n\\n/**\\n * checks labels .active\\n */\\n\\nXt.mount.push({\\n  matches: 'label input[type=\\\"checkbox\\\"], label input[type=\\\"radio\\\"]',\\n  mount: object => {\\n    // vars\\n\\n    const label = object.closest('label')\\n\\n    // eventChange\\n\\n    const eventChange = () => {\\n      if (object.checked) {\\n        label.classList.add('active')\\n      } else {\\n        label.classList.remove('active')\\n      }\\n    }\\n\\n    object.addEventListener('change', eventChange)\\n    eventChange()\\n  },\\n})\\n\\n/**\\n * Validation\\n */\\n\\nXt.mount.push({\\n  matches: 'form:not([novalidate])',\\n  mount: object => {\\n    // vars\\n\\n    const scrollWindowFactor = 0.2\\n    const items = object.querySelectorAll('input, select, textarea')\\n    let raf\\n\\n    // valid\\n\\n    const eventChange = e => {\\n      const item = e.target\\n      if (item.dataset.xtValidate === 'true') {\\n        item.classList.add('form-valid')\\n        item.classList.remove('form-invalid')\\n        item.checkValidity()\\n      }\\n    }\\n\\n    for (const item of items) {\\n      item.addEventListener('input', eventChange)\\n      item.addEventListener('change', eventChange)\\n    }\\n\\n    // invalid\\n\\n    const eventScroll = () => {\\n      window.scrollTo(window.scrollX, window.scrollY - Xt.windowHeight * scrollWindowFactor)\\n    }\\n\\n    const eventInvalid = e => {\\n      const item = e.target\\n      item.classList.remove('form-valid')\\n      item.classList.add('form-invalid')\\n      item.dataset.xtValidate = 'true'\\n      // scroll to views\\n      addEventListener('scroll', eventScroll)\\n      cancelAnimationFrame(raf)\\n      raf = requestAnimationFrame(() => {\\n        removeEventListener('scroll', eventScroll)\\n      })\\n    }\\n\\n    const eventSubmit = () => {\\n      for (const item of items) {\\n        delete item.dataset.xtValidate\\n      }\\n    }\\n\\n    for (const item of items) {\\n      item.addEventListener('invalid', eventInvalid)\\n      item.addEventListener('submit', eventSubmit)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      removeEventListener('scroll', eventScroll)\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ min: 2, max: 2, autoDisable: true }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 3\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 3\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider-pagination').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\"\\n  data-xt-slider=\\\"{ groupMq: { all: 1 } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Introduction\\\"\\ncategory: \\\"Getting Started\\\"\\nparent: \\\"Customization\\\"\\ntitle: \\\"Customization\\\"\\ndescription: \\\"Css and js customization instructions.\\\"\\ndate: \\\"2050-10-15\\\"\\n---\\n\\n## Css\\n\\nYou can **customize theme** inside `tailwind.config.js`, check [xtendui/src/tailwind-config.js](https://github.com/minimit/xtendui/blob/master/src/tailwind-config.js) for default values.\\n\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    // only some tailwind colors\\n    colors: {\\n      transparent: 'transparent',\\n      current: 'currentColor',\\n      black: '#000',\\n      white: '#fff',\\n      gray: {\\n        50: '#FCFDFF',\\n        100: '#FAFCFF',\\n        200: '#F2F6FF',\\n        300: '#EAF1FF',\\n        400: '#DBE7FF',\\n        500: '#CBDCFF',\\n        600: '#B7C6E6',\\n        700: '#7A8499',\\n        800: '#5B6373',\\n        900: '#3D424D',\\n      },\\n    },\\n    extend: {\\n      colors: {\\n        // customize xtendui colors\\n        success: '#48bb78',\\n        error: '#f56565',\\n        accent: {\\n          50: '#F8F7FF',\\n          100: '#F1F0FE',\\n          200: '#DDD9FD',\\n          300: '#C8C2FC',\\n          400: '#9E95FA',\\n          500: '#7567F8',\\n          600: '#695DDF',\\n          700: '#463E95',\\n          800: '#352E70',\\n          900: '#231F4A',\\n        },\\n      },\\n      // customize xtendui timing functions\\n      transitionTimingFunction: {\\n        in: 'cubic-bezier(.19,1,.22,1)',\\n        out: 'cubic-bezier(1,0,0,1)',\\n      },\\n    },\\n  },\\n}\\n```\\n\\nYou can **customize components** inside `tailwind.config.js`, check [xtendui/src/tailwind-xtend.js](https://github.com/minimit/xtendui/blob/master/src/tailwind-xtend.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      typography: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Javascript\\n\\nYou need to install [corejs](https://www.npmjs.com/package/core-js), [@babel/core](https://www.npmjs.com/package/@babel/core), [@babel/preset-env](https://www.npmjs.com/package/@babel/preset-env), [@babel/plugin-transform-runtime](https://www.npmjs.com/package/@babel/plugin-transform-runtime), [babel-plugin-module-resolver](https://www.npmjs.com/package/babel-plugin-module-resolver).\\n\\n```sh\\nnpm install core-js@3 @babel/core @babel/preset-env @babel/plugin-transform-runtime babel-plugin-module-resolver --save-dev\\n```\\n\\nThen in the root of your project set up polyfills with `babel.config.js`.\\n\\n```jsx\\nconst path = require('path')\\n\\nmodule.exports = {\\n  presets: [\\n    [\\n      '@babel/preset-env',\\n      {\\n        useBuiltIns: 'entry',\\n        corejs: 3,\\n      },\\n    ],\\n  ],\\n  plugins: [\\n    [require.resolve('@babel/plugin-transform-runtime')],\\n    [\\n      require.resolve('babel-plugin-module-resolver'),\\n      {\\n        alias: {\\n          // if you want to fork javascript file add a local path.resolve as first in array\\n          'xtendui': [path.resolve(__dirname, './node_modules/xtendui')],\\n        },\\n      },\\n    ],\\n  ],\\n}\\n```\\n\\nThen import the **corejs**.\\n\\n```jsx\\nimport 'core-js'\\n```\\n\\nYou need also to set a `.browserslistrc` in the root of your project.\\n\\n```\\nChrome >= 38\\nSafari >= 10\\niOS >= 10\\nFirefox >= 38\\nEdge >= 12\\nOpera >= 25\\n```\\n\";","export default \"import path from 'path'\\nimport React from 'react'\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div>\\n  Vanilla Iframe\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"leading-none ellipsis\\\">\\n  <a href=\\\"#\\\" class=\\\"btn btn-md px-0\\\">\\n    Home\\n  </a>\\n  <span class=\\\"separator separator-slash mx-2\\\"></span>\\n  <a href=\\\"#\\\" class=\\\"btn btn-md px-0\\\">\\n    Lorem ipsum dolor sit amet\\n  </a>\\n  <span class=\\\"separator separator-slash mx-2\\\"></span>\\n  <div class=\\\"btn btn-md px-0 pointer-events-none\\\">\\n    Lorem ipsum\\n  </div>\\n</nav>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Layout\\\"\\ntitle: \\\"furniture-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-02-27\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-featured-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\nconst cardPrimaryDrop = require('components/snippets/classes/card-primary-drop').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      default\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-80 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      primary\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card ${cardPrimaryDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <a href=\\\"#\\\">\\n    link\\n  </a>\\n\\n  <a href=\\\"#\\\" class=\\\"text-accent-500 text-opacity-75 underline\\\">\\n    link custom\\n  </a>\\n\\n  <button type=\\\"button\\\" class=\\\"btn link\\\">\\n    link btn\\n  </button>\\n\\n  <div class=\\\"link\\\">\\n    link class\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider-media').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-media-loaded\\\" data-xt-slider=\\\"{ mediaLoaded: true, mediaLoadedReinit: true }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Navigation\\\"\\ntitle: \\\"sequential-megamenu-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-07\\\"\\ndemos: [\\n  \\\"iframe/themes/sequential-megamenu-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"List\\\"\\ntitle: \\\"List\\\"\\ndescription: \\\"Flex lists to space any element with margins, also spaces vertically.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/list.css.js](https://github.com/minimit/xtendui/blob/master/src/core/list.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      list: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\n#### Horizontal\\n\\nUse this code to create a **list horizontal**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/list/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\n#### Vertical\\n\\nUse this code to create a **list vertical** with `.flex-col`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/list/usage-vertical\\\">\\n  </demovanilla>\\n</demo>\\n\\n[[notePrimary]]\\n| You can space anything inside `.list`. If you need to use **tailwind width classes** use [row](/components/core/row).\\n\\nCheck subpage to [customize content](/components/core/list/content).\\n\";","export default \"export default () => {\\n  return `text-white links-inverse placeholder-white placeholder-opacity-50 rounded-md border border-accent-600 bg-accent-600 focus:bg-accent-700`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-responsive\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center inline-flex\\\"\\n  data-xt-drop=\\\"{ elements: ':scope > .drop-container', targets: ':scope > .drop-container > .drop' }\\\">\\n\\n  <div class=\\\"drop-container demo--drop-animation\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container demo--drop-animation\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/slider'\\nimport 'xtendui/src/addons/mouse-follow'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--slider-progress',\\n  mount: object => {\\n    // vars\\n\\n    const spinnerTime = Xt.vars.timeTiny\\n    const spinnerEase = 'linear'\\n    const fillerTime = Xt.vars.timeTiny\\n    const fillerEase = 'linear'\\n\\n    // init\\n\\n    let self = new Xt.Slider(object, {\\n      auto: {\\n        time: 4000,\\n      },\\n    })\\n\\n    // start auto\\n\\n    const eventAutostart = () => {\\n      // slider\\n      const spinner = self.object.querySelectorAll('.spinner svg:nth-child(1) circle')\\n      const timeline = gsap.timeline({ overwrite: false })\\n      timeline.to(spinner, { strokeDashoffset: 628, duration: spinnerTime, ease: spinnerEase, autoRound: false })\\n      timeline.to(spinner, { strokeDashoffset: 0, duration: self.options.auto.time - spinnerTime, ease: spinnerEase, autoRound: false })\\n      // elements\\n      const elements = self.elements.filter(x => self.hasCurrent(x))\\n      for (const element of elements) {\\n        const fillers = element.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.set(filler, { height: 0, top: '100%' })\\n          gsap.to(filler, { height: '100%', top: 0, duration: self.options.auto.time, ease: fillerEase })\\n        }\\n      }\\n      // targets\\n      const targets = self.targets.filter(x => self.hasCurrent(x))\\n      for (const target of targets) {\\n        const fillers = target.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.set(filler, { width: 0, left: 0 })\\n          gsap.to(filler, { width: '100%', left: 0, duration: self.options.auto.time, ease: fillerEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('autostart.xt', eventAutostart)\\n\\n    // stop auto\\n\\n    const eventAutostop = () => {\\n      // elements\\n      const elements = self.elements.filter(x => self.hasCurrent(x))\\n      for (const element of elements) {\\n        const fillers = element.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { height: 0, top: 0, duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n      // targets\\n      const targets = self.targets.filter(x => self.hasCurrent(x))\\n      for (const target of targets) {\\n        const fillers = target.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { width: 0, left: '100%', duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('autostop.xt', eventAutostop)\\n\\n    // pause auto\\n\\n    const eventAutopause = () => {\\n      // slider\\n      const spinner = self.object.querySelectorAll('.spinner svg:nth-child(1) circle')\\n      gsap.to(spinner, { strokeDashoffset: 628, duration: spinnerTime, ease: spinnerEase, autoRound: false })\\n      // elements\\n      const elements = self.elements.filter(x => self.hasCurrent(x))\\n      for (const element of elements) {\\n        const fillers = element.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { height: 0, top: '100%', duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n      // targets\\n      const targets = self.targets.filter(x => self.hasCurrent(x))\\n      for (const target of targets) {\\n        const fillers = target.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { width: 0, left: 0, duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('autopause.xt', eventAutopause)\\n\\n    // mousefollow\\n\\n    let mouseFollow = new Xt.MouseFollow(object, {\\n      targets: ':scope > .loader',\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n      mouseFollow.destroy()\\n      mouseFollow = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Theme\\\"\\ntitle: \\\"Theme\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \".demo--slider-media-loaded {\\n  .slide {\\n    img {\\n      height: 30rem;\\n      width: auto;\\n    }\\n    /* animation */\\n    opacity: 0;\\n    &.xt-medialoaded {\\n      opacity: 1;\\n      transition-property: opacity;\\n      transition-duration: theme('transitionDuration.500');\\n      transition-timing-function: theme('transitionTimingFunction.in');\\n    }\\n  }\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"sequential-megamenu-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-07\\\"\\ndemos: [\\n  \\\"iframe/themes/sequential-megamenu-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Layout\\\"\\ntitle: \\\"sticky-footer\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **sticky footer**.\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/addons/sticky-footer\\\">\\n  </div>\\n</demo>\\n\";","export default \"// Vanilla js\\n\";","export default \"#iframe--collapse-theme-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * vars\\n      */\\n\\n    // ease\\n\\n    @ease-in: @ease-out-quint;\\n    @ease-out: @ease-in-out-quint;\\n\\n    /**\\n      * drop\\n      */\\n\\n    .drop-default {\\n      > .drop-inner {\\n        box-shadow: @shadow-light;\\n        > .drop-design {\\n          box-shadow: none;\\n        }\\n      }\\n    }\\n\\n    .drop-primary {\\n      > .drop-inner {\\n        box-shadow: @shadow-dark;\\n        > .drop-design {\\n          box-shadow: none;\\n        }\\n      }\\n    }\\n\\n    // animation\\n\\n  .drop {\\n    > .drop-inner {\\n      .collapse-height();\\n      transition: height @time-md @ease-in;\\n        > .drop-design {\\n          opacity: 0;\\n          transform: translateY(-0.7rem);\\n        }\\n        > .drop-content {\\n          opacity: 0;\\n          transform: translateY(-1rem);\\n        }\\n      }\\n      &.in {\\n        animation-duration: @time-md; // needed for animation time, put max animation time\\n        > .drop-inner {\\n          transition: height @time-md @ease-in;\\n          > .drop-design {\\n            opacity: 1;\\n            transform: none;\\n            transition: height @time-md @ease-in, transform @time-md @ease-in, opacity @time-tiny @ease-in;\\n          }\\n          > .drop-content {\\n            opacity: 1;\\n            transform: none;\\n            transition: transform @time-md @ease-in, opacity @time-md @ease-in;\\n          }\\n        }\\n      }\\n      &.out {\\n        animation-duration: @time-sm; // needed for animation time, put max animation time\\n        > .drop-inner {\\n          transition: height @time-sm @ease-out;\\n          > .drop-design {\\n            opacity: 0;\\n            transform: translateY(0.7rem);\\n            transition: height @time-sm @ease-out, transform @time-sm @ease-out, opacity @time-tiny @ease-out @time-tiny;\\n          }\\n          > .drop-content {\\n            opacity: 0;\\n            transform: translateY(1rem);\\n            transition: transform @time-sm @ease-out, opacity @time-sm @ease-out;\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n      * overlay\\n      */\\n\\n    .overlay {\\n      .card-item--menu {\\n        background: @accent;\\n      }\\n    }\\n\\n    // animation\\n\\n    .overlay {\\n      .collapse-height();\\n      .overlay-design {\\n        opacity: 0;\\n        transform: translateY(-2rem);\\n      }\\n      .card-overlay {\\n        > .btn-close {\\n          opacity: 0;\\n        }\\n        .card-block, .card-content {\\n          opacity: 0;\\n          transform: translateY(-2.5rem);\\n        }\\n      }\\n      &.in {\\n        animation-duration: @time-md; // needed for animation time, put max animation time\\n        transition: height @time-md @ease-in;\\n        .overlay-design {\\n          opacity: 1;\\n          transform: none;\\n          transition: transform @time-md @ease-in, opacity @time-tiny @ease-in;\\n        }\\n        .card-overlay {\\n          > .btn-close {\\n            // use animation to not override .btn transitions\\n            .anim-zoom.in();\\n            animation-delay: @time-md;\\n            animation-fill-mode: forwards;\\n            opacity: 0;\\n          }\\n          .card-block, .card-content {\\n            opacity: 1;\\n            transform: none;\\n            transition: transform @time-md @ease-in, opacity @time-tiny @ease-in;\\n          }\\n        }\\n      }\\n      &.out {\\n        animation-duration: @time-sm; // needed for animation time, put max animation time\\n        transition: height @time-sm @ease-out;\\n        .overlay-design {\\n          opacity: 0;\\n          transform: translateY(2rem);\\n          transition: transform @time-sm @ease-out, opacity @time-tiny @ease-out @time-tiny;\\n        }\\n        .card-overlay {\\n          > .btn-close {\\n            // use animation to not override .btn transitions\\n            .anim-zoom.out();\\n            animation-delay: initial;\\n          }\\n          .card-block, .card-content {\\n            opacity: 0;\\n            transform: translateY(2.5rem);\\n            transition: transform @time-sm @ease-out, opacity @time-tiny @ease-out @time-tiny;\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n      * group\\n      */\\n\\n    .group {\\n      .collapse-width();\\n      &.in {\\n        transition: width @time-md @ease-out;\\n      }\\n      &.out {\\n        transition: width @time-md @ease-out;\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Button\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\nUse `.link` to create a [link](/components/core/link).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/variant\\\">\\n  </demovanilla>\\n</demo>\\n\\nUse **tailwind classes** to assign styles (e.g. [text-color](https://tailwindcss.com/docs/text-color), [text-opacity](https://tailwindcss.com/docs/text-opacity)).\\n\\nText styles on **parent elements** are applied when **inerithed**.\\n\\nSee [link variant](/components/core/link#variant) to style links.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/variant-inverse\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **component classes** to assign size. You can add **additional size** for example `.btn-xs` or `.btn-xl`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |\\n| Component                  | `.btn-sm`       | `btn-sm`                | Size small            |\\n| Component                  | `.btn-md`       | `btn-md`                | Size medium            |\\n| Component                  | `.btn-lg`       | `btn-lg`                | Size large            |\\n\\n</div>\\n\\nOtherwise use **tailwind classes** to assign custom size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/size\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Icons and Alignment\\n\\nUse [icons](/components/core/icons) as content.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/icons\\\">\\n  </demovanilla>\\n</demo>\\n\\nUse **tailwind classes** to assign alignment (e.g. [align-items](https://tailwindcss.com/docs/align-items), [justify-content](https://tailwindcss.com/docs/justify-content), [text-align](https://tailwindcss.com/docs/text-align)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/alignment\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"stores-listing-v2\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-07-09\\\"\\ndemos: [\\n  \\\"iframe/themes/stores-v2\\\"\\n]\\n---\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\n\\nclass Footer extends React.Component {\\n  render() {\\n    const { site } = this.props\\n    return (\\n      <div className=\\\"gatsby_site_footer_bottom\\\">\\n        <div className=\\\"row row-2 gatsby_site_footer_bottom_row\\\">\\n          <div>\\n            {site.site.siteMetadata.title} v{site.site.siteMetadata.version} and demos licensed{' '}\\n            <a href=\\\"https://github.com/minimit/xtendui/blob/master/LICENSE\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">\\n              MIT\\n            </a>\\n            <span className=\\\"separator separator-dash\\\"></span> Docs licensed{' '}\\n            <a href=\\\"https://creativecommons.org/licenses/by/3.0/\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">\\n              CC BY 3.0\\n            </a>{' '}\\n          </div>\\n          <div className=\\\"gatsby_site_footer_bottom_right\\\">\\n            © 2017 <span className=\\\"separator separator-dash\\\"></span> {new Date().getFullYear()} {site.site.siteMetadata.author}\\n          </div>\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nFooter.propTypes = {\\n  site: PropTypes.shape({\\n    site: PropTypes.shape({\\n      siteMetadata: PropTypes.shape({\\n        title: PropTypes.string.isRequired,\\n        version: PropTypes.string.isRequired,\\n        author: PropTypes.string.isRequired,\\n      }).isRequired,\\n    }).isRequired,\\n  }).isRequired,\\n}\\n\\nexport default Footer\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"industrial-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-24\\\"\\ndemos: [\\n  \\\"iframe/themes/industrial-featured-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"Group\\\"\\ndescription: \\\"Css component to group up buttons and form inputs.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form class=\\\"text-sm\\\">\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        Input\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\">\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" multiple>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-2\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n            <span class=\\\"ml-2\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-sm\\\" checked>\\n            <span class=\\\"ml-2\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-sm\\\">\\n            <span class=\\\"ml-2\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-3 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n            <span class=\\\"ml-2\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-sm\\\" checked>\\n            <span class=\\\"ml-2\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-sm\\\">\\n            <span class=\\\"ml-2\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Loader\\\"\\ntitle: \\\"Loader\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/loader.css.js](https://github.com/minimit/xtendui/blob/master/src/core/loader.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      loader: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\nTo **see the default values** see the source code of `node_modules/xtendui/src/tailwind-xtend.js`.\\n\\n## Usage\\n\\nUse this code to create a **loader spinner**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/spinner\\\">\\n  </demovanilla>\\n</demo>\\n\\nUse this code to create a **loader filler**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/filler-x\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/loader/content#filler).\\n\";","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\" style=\\\"padding-bottom: 37.5%\\\">\\n  <div class=\\\"media-inner\\\">\\n    <img class=\\\"media object-cover object-center\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n  </div>\\n</div>\\n`\\n\";","export default \"module.exports = {\\n  component: theme => ({\\n    '.loader': {\\n      // setup\\n      position: 'absolute',\\n      zIndex: theme('zIndex.top'),\\n      top: '0',\\n      left: '0',\\n      bottom: '0',\\n      right: '0',\\n      borderRadius: 'inherit !important',\\n      overflow: 'hidden',\\n    },\\n    '.filler': {\\n      // setup\\n      position: 'absolute',\\n      top: '0',\\n      left: '0',\\n      bottom: '0',\\n      right: '0',\\n      margin: 'auto',\\n      span: {\\n        position: 'absolute',\\n        top: '0',\\n        left: '0',\\n      },\\n    },\\n    '.spinner': {\\n      // setup\\n      position: 'absolute',\\n      top: '0',\\n      left: '0',\\n      bottom: '0',\\n      right: '0',\\n      margin: 'auto',\\n      // styles\\n      width: '25px',\\n      height: '25px',\\n      lineHeight: '0',\\n      '.btn &': {\\n        width: '1em',\\n        height: '1em',\\n      },\\n      svg: {\\n        circle: {\\n          fill: 'none',\\n          strokeWidth: '30',\\n          transformBox: 'border-box',\\n          transformOrigin: 'center center',\\n          '.btn &': {\\n            strokeWidth: '40',\\n          },\\n        },\\n        '&:nth-child(1)': {\\n          position: 'relative',\\n          zIndex: theme('zIndex.active'),\\n          circle: {\\n            strokeDashoffset: '628',\\n            transform: 'rotateY(0deg) rotateZ(-90deg)',\\n          },\\n        },\\n        '&:nth-child(2)': {\\n          position: 'absolute',\\n          top: '0',\\n          left: '0',\\n          circle: {\\n            strokeDashoffset: '0',\\n          },\\n        },\\n      },\\n    },\\n    '.loader-x': {\\n      // setup\\n      '.filler': {\\n        span: {\\n          width: '100%',\\n          height: '100%',\\n        },\\n        // styles\\n        'span:nth-child(1)': {\\n          width: '0',\\n        },\\n      },\\n    },\\n    '.loader-y': {\\n      // setup\\n      '.filler': {\\n        span: {\\n          width: '100%',\\n          height: '100%',\\n        },\\n        // styles\\n        'span:nth-child(1)': {\\n          height: '0',\\n        },\\n      },\\n    },\\n    '.loader-size-top': {\\n      // setup\\n      '.filler': {\\n        bottom: 'auto',\\n        span: {\\n          top: '0',\\n        },\\n      },\\n    },\\n    '.loader-size-bottom': {\\n      // setup\\n      '.filler': {\\n        top: 'auto',\\n        span: {\\n          bottom: '0',\\n        },\\n      },\\n    },\\n    '.loader-size-left': {\\n      // setup\\n      '.filler': {\\n        right: 'auto',\\n        span: {\\n          left: '0',\\n        },\\n      },\\n    },\\n    '.loader-size-right': {\\n      // setup\\n      '.filler': {\\n        left: 'auto',\\n        span: {\\n          right: '0',\\n        },\\n      },\\n    },\\n    '.loader-size-x, .loader-size-top, .loader-size-bottom': {\\n      // styles\\n      '.filler': {\\n        height: '3px',\\n      },\\n    },\\n    '.loader-size-y, .loader-size-left, .loader-size-right': {\\n      // styles\\n      '.filler': {\\n        width: '3px',\\n      },\\n    },\\n    '.loader-size-x': {\\n      // styles\\n      '.filler': {\\n        left: '25%',\\n        right: '25%',\\n      },\\n    },\\n    '.loader-size-y': {\\n      // styles\\n      '.filler': {\\n        top: '25%',\\n        bottom: '25%',\\n      },\\n    },\\n    '.loader-mouse': {\\n      overflow: 'visible',\\n      '.filler, .spinner': {\\n        display: 'block',\\n        position: 'relative',\\n        marginTop: '-10px',\\n        marginLeft: '40px',\\n      },\\n    },\\n    '.spinner-animated': {\\n      // animation\\n      svg: {\\n        '&:nth-child(1)': {\\n          circle: {\\n            animation: 'anim-spinner 1500ms infinite', // see node_modules/xtendui/src/tailwind-config.js\\n          },\\n        },\\n      },\\n    },\\n    '.loader-x-animated': {\\n      // animation\\n      '.filler': {\\n        'span:nth-child(1)': {\\n          animation: 'anim-filler-x 1500ms infinite', // see node_modules/xtendui/src/tailwind-config.js\\n        },\\n      },\\n    },\\n    '.loader-y-animated': {\\n      // animation\\n      '.filler': {\\n        'span:nth-child(1)': {\\n          animation: 'anim-filler-y 1500ms infinite', // see node_modules/xtendui/src/tailwind-config.js\\n        },\\n      },\\n    },\\n    '.loader-animated': {\\n      // animation\\n      opacity: '0',\\n      transitionProperty: 'opacity',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      '> *': {\\n        opacity: '0',\\n        transform: 'scale(.75)',\\n        transitionProperty: 'all',\\n        transitionDuration: theme('transitionDuration.500'),\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      },\\n      '&.in': {\\n        opacity: '1',\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n        '> *': {\\n          opacity: '1',\\n          transform: 'scale(1)',\\n          transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n        },\\n      },\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Horizontal\\n</div>\\n\\n<form>\\n\\n  <div class=\\\"group group-number\\\" data-xt-group-number>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-l-md border border-gray-500 ${btnDefaultGroup()}\\\" data-xt-group-number-step=\\\"-1\\\">\\n      -\\n    </button>\\n\\n    <input type=\\\"number\\\" class=\\\"form-item border border-l-0 border-gray-500 ${inputDefaultGroup()}\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"100\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-r-md border border-l-0 border-gray-500 ${btnDefaultGroup()}\\\" data-xt-group-number-step=\\\"1\\\">\\n      +\\n    </button>\\n\\n  </div>\\n\\n</form>\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Vertical\\n</div>\\n\\n<form>\\n\\n  <div class=\\\"group\\\" data-xt-group-number>\\n\\n    <input type=\\\"number\\\" class=\\\"form-item rounded-tl-md rounded-bl-md border border-r-0 border-gray-500 ${inputDefaultGroup()}\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"100\\\">\\n\\n    <div class=\\\"group-inner flex-col\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm py-1 rounded-tr-md border border-gray-500 ${btnDefaultGroup()}\\\" data-xt-group-number-step=\\\"1\\\">\\n        +\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm py-1 rounded-br-md border border-t-0 border-gray-500 ${btnDefaultGroup()}\\\" data-xt-group-number-step=\\\"-1\\\">\\n        -\\n      </button>\\n    </div>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group flex-col\\\">\\n\\n    <div class=\\\"group-inner\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-md rounded-tl-md rounded-bl-md ${btnDefaultGroup()}\\\">\\n        ${iconSearch({ classes: 'icon-lg' })}\\n      </button>\\n      <input type=\\\"text\\\" class=\\\"form-item rounded-tr-md rounded-br-md ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-md mt-2 ${btnPrimaryGroup()}\\\">\\n      Search\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider-overflow').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-overflow-auto\\\" data-xt-slider=\\\"{ align: 'center', drag: { wrap: true, overflow: false }, overflowAuto: false }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/drop'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--drop-animation-js',\\n  mount: object => {\\n    // vars\\n\\n    const targetTimeOn = Xt.vars.timeSmall\\n    const targetEaseOn = 'quad.out'\\n    const targetTimeOff = Xt.vars.timeSmall\\n    const targetEaseOff = 'quad.inOut'\\n\\n    // init\\n\\n    let self = new Xt.Drop(object, {\\n      elements: ':scope > .drop-container',\\n      targets: ':scope > .drop-container > .drop',\\n      durationOn: Xt.vars.timeSmall,\\n      durationOff: Xt.vars.timeSmall,\\n    })\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      gsap.set(tr, { opacity: 0 })\\n      if (!tr.classList.contains('inverse')) {\\n        gsap.set(tr, { x: -15 })\\n      } else {\\n        gsap.set(tr, { x: 15 })\\n      }\\n      gsap.to(tr, { x: 0, opacity: 1, duration: targetTimeOn, ease: targetEaseOn })\\n    }\\n\\n    for (const target of self.targets) {\\n      target.addEventListener('on.xt', eventOn)\\n    }\\n\\n    // off\\n\\n    const eventOff = e => {\\n      const tr = e.target\\n      if (!tr.classList.contains('inverse')) {\\n        gsap.to(tr, { x: 15, opacity: 0, duration: targetTimeOff, ease: targetEaseOff })\\n      } else {\\n        gsap.to(tr, { x: -15, opacity: 0, duration: targetTimeOff, ease: targetEaseOff })\\n      }\\n    }\\n\\n    for (const target of self.targets) {\\n      target.addEventListener('off.xt', eventOff)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-disable\\\" data-xt-slider=\\\"{ align: 'center', drag: { wrap: true } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Sticky\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Disable\\n\\nUse **component utility** `.sticky-disable` to disable styles and javascript.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.sticky-disable`       | `sticky-disable`                | `responsive`                | Disable the slider            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/disable\\\">\\n  </div>\\n</demo>\\n\\n## Show and Hide\\n\\nTo show or hide content when sticky activates use `.show-sticky` or `.hide-sticky`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.show-sticky`                     | `NOT POSSIBLE`                | Show node only on sticky activation            |\\n| Component                  | `.hide-sticky`                     | `NOT POSSIBLE`                | Show node only on sticky deactivation            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/showhide-top\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/showhide-bottom\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/showhide-hide\\\">\\n  </div>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider-overflow').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-overflow-auto\\\" data-xt-slider=\\\"{ align: 'center', drag: { wrap: true } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/slider'\\nimport 'xtendui/src/addons/propagate-interaction'\\nimport gsap from 'gsap'\\n\\n/**\\n * mouse events instead of click you can remove this\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--sequential-megamenu-v1 #check-sequential-megamenu-v1',\\n  mount: object => {\\n    // mouse events instead of click\\n\\n    const checkChange = () => {\\n      const component = document.querySelector('#iframe--sequential-megamenu-v1 body .megamenus')\\n      if (component) {\\n        const self = Xt.get('xt-drop', component)\\n        if (self) {\\n          if (object.checked) {\\n            self.options.on = 'mouseenter'\\n            self.options.off = 'mouseleave'\\n          } else {\\n            self.options.on = 'click'\\n            self.options.off = false\\n          }\\n          self.reinit()\\n        }\\n      }\\n    }\\n\\n    object.addEventListener('change', checkChange)\\n  },\\n})\\n\\n/**\\n * .megamenus drops\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--sequential-megamenu-v1 body .megamenus', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const contentXOn = -40\\n    const contentXOff = -40\\n    const contentTime = Xt.vars.timeMedium\\n    const contentDelayOn = Xt.vars.timeTiny\\n    const contentEase = 'quint.out'\\n\\n    const designTime = Xt.vars.timeLarge\\n    const designEase = 'expo.out'\\n\\n    const innerTime = Xt.vars.timeLarge\\n    const innerEase = 'expo.out'\\n\\n    // init\\n\\n    let self = new Xt.Drop(object, {\\n      elements: '.megamenu_outer',\\n      targets: '.megamenu_outer > .drop',\\n      durationOn: Xt.vars.timeLarge,\\n      durationOff: Xt.vars.timeLarge,\\n      preventEvent: true,\\n      // on: 'mouseenter',\\n      // off: 'mouseleave',\\n      instant: true,\\n      zIndex: {\\n        targets: {\\n          start: 500,\\n          factor: -1,\\n        },\\n      },\\n    })\\n\\n    // setup\\n\\n    for (const tr of self.targets) {\\n      const inner = tr.querySelector('.drop-inner')\\n      gsap.set(inner, { height: 0 })\\n    }\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        // content\\n        const content = tr.querySelector('.drop-content')\\n        gsap.set(content, { x: contentXOn * self.direction, opacity: 0 })\\n        gsap.to(content, { x: 0, opacity: 1, duration: contentTime, delay: contentDelayOn, ease: contentEase })\\n        // design\\n        const design = tr.querySelector('.drop-design')\\n        const designOpacityCache = Xt.dataStorage.get(self.object, 'designOpacityCache') || 0\\n        gsap.set(design, { opacity: designOpacityCache })\\n        gsap.to(design, { opacity: 1, duration: designTime, ease: designEase }).eventCallback('onUpdate', () => {\\n          Xt.dataStorage.set(self.object, 'designOpacityCache', design.style.opacity)\\n        })\\n        // inner\\n        const inner = tr.querySelector('.drop-inner')\\n        gsap.set(inner, { height: '' })\\n        const innerHeight = inner.clientHeight\\n        const innerHeightCache = Xt.dataStorage.get(self.object, 'innerHeightCache') || 0\\n        gsap.set(inner, { height: innerHeightCache })\\n        gsap.to(inner, { height: innerHeight, duration: innerTime, ease: innerEase }).eventCallback('onUpdate', () => {\\n          Xt.dataStorage.set(self.object, 'innerHeightCache', inner.clientHeight)\\n        })\\n      }\\n    }\\n\\n    self.object.addEventListener('on.xt', eventOn, true)\\n\\n    // on\\n\\n    const eventOff = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        // eventOff after eventOn sequential interaction\\n        cancelAnimationFrame(Xt.dataStorage.get(self.object, 'dropMegamenusFrame'))\\n        Xt.dataStorage.set(\\n          self.object,\\n          'dropMegamenusFrame',\\n          requestAnimationFrame(() => {\\n            // when self.direction it's sequential interaction\\n            if (self.direction) {\\n              // content\\n              const content = tr.querySelector('.drop-content')\\n              gsap.to(content, { x: contentXOff * self.direction * -1, opacity: 0, duration: contentTime, ease: contentEase, overwrite: true })\\n              // design\\n              const design = tr.querySelector('.drop-design')\\n              gsap.set(design, { opacity: 0 })\\n            } else {\\n              // others\\n              for (const other of self.targets.filter(x => x !== tr)) {\\n                // design\\n                const design = other.querySelector('.drop-design')\\n                gsap.set(design, { opacity: 0 })\\n                // inner\\n                const inner = other.querySelector('.drop-inner')\\n                gsap.set(inner, { height: 0 })\\n              }\\n              // content\\n              const content = tr.querySelector('.drop-content')\\n              gsap.to(content, { opacity: 0, duration: contentTime, ease: contentEase })\\n              // design\\n              const design = tr.querySelector('.drop-design')\\n              gsap.to(design, { opacity: 0, duration: designTime, ease: designEase }).eventCallback('onUpdate', () => {\\n                Xt.dataStorage.set(self.object, 'designOpacityCache', design.style.opacity)\\n              })\\n              // inner\\n              const inner = tr.querySelector('.drop-inner')\\n              const innerHeight = 0\\n              gsap.to(inner, { height: innerHeight, duration: innerTime, ease: innerEase }).eventCallback('onUpdate', () => {\\n                Xt.dataStorage.set(self.object, 'innerHeightCache', inner.clientHeight)\\n              })\\n            }\\n          })\\n        )\\n      }\\n    }\\n\\n    self.object.addEventListener('off.xt', eventOff, true)\\n\\n    // unmount\\n\\n    const unmount = function () {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\\n/**\\n * .megamenus line\\n */\\n\\nXt.mount.push({\\n  matches: '.megamenus',\\n  mount: function (object) {\\n    // vars\\n\\n    let lineFirst = true\\n    const btns = object.querySelectorAll('.btn_megamenus')\\n    const line = object.querySelector('.megamenus_line')\\n\\n    const lineHeight = 4\\n    const lineTime = Xt.vars.timeSmall\\n    const lineEase = 'quint.out'\\n\\n    // enter\\n\\n    const eventEnter = e => {\\n      const el = e.target\\n      // raf fix not off on sequential\\n      cancelAnimationFrame(Xt.dataStorage.get(object, 'lineFrame'))\\n      // line\\n      const lineX = el.offsetLeft\\n      const lineY = el.getBoundingClientRect().top + el.offsetHeight\\n      const lineWidth = el.offsetWidth\\n      if (lineFirst) {\\n        gsap.set(line, { x: lineX, y: lineY, width: lineWidth, height: 0 })\\n        lineFirst = false\\n      }\\n      gsap.to(line, { x: lineX, y: lineY - lineHeight, width: lineWidth, height: lineHeight, opacity: 1, duration: lineTime, ease: lineEase })\\n    }\\n\\n    for (const btn of btns) {\\n      btn.addEventListener('mouseenter', eventEnter, true)\\n    }\\n\\n    // leave\\n\\n    const eventLeave = function () {\\n      // eslint-disable-next-line no-invalid-this\\n      const el = this\\n      // eventEnter after eventLeave sequential interaction\\n      cancelAnimationFrame(Xt.dataStorage.get(object, 'lineFrame'))\\n      Xt.dataStorage.set(\\n        object,\\n        'lineFrame',\\n        requestAnimationFrame(() => {\\n          // not when drop is still open\\n          const dropBtnActive = object.querySelector('.megamenus .drop-container > .btn.active')\\n          if (!dropBtnActive) {\\n            // line\\n            const lineY = el.getBoundingClientRect().top + el.offsetHeight\\n            lineFirst = true\\n            gsap.to(line, { y: lineY, opacity: 0, duration: lineTime, ease: lineEase })\\n          } else {\\n            // line\\n            const lineX = dropBtnActive.offsetLeft\\n            const lineY = dropBtnActive.getBoundingClientRect().top + dropBtnActive.offsetHeight\\n            const lineWidth = dropBtnActive.offsetWidth\\n            gsap.to(line, { x: lineX, y: lineY - lineHeight, width: lineWidth, height: lineHeight, opacity: 1, duration: lineTime, ease: lineEase })\\n          }\\n        })\\n      )\\n    }\\n\\n    for (const btn of btns) {\\n      btn.addEventListener('mouseleave', eventLeave, true)\\n      const drop = btn.closest('.drop-container')\\n      if (drop) {\\n        drop.addEventListener('off.xt', eventLeave.bind(btn), true)\\n      }\\n    }\\n\\n    // unmount\\n\\n    const unmount = function () {}\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\" style=\\\"padding-bottom: 37.5%; min-height: 30rem\\\">\\n  <div class=\\\"media-inner\\\">\\n    <img class=\\\"media object-cover object-center\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n  </div>\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\">\\n    small\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    medium\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnPrimary()}\\\">\\n    large\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Media\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Responsive\\n\\nUse **tailwind classes** to assign relative position. The result is a **responsive media**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Tailwind                  | `.relative`                     | `relative`                | Relative size            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/media/responsive\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Object fit\\n\\nUse **tailwind classes** to assign object fit and `padding-bottom` to assign aspect ratio.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/media/cover\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/media/contain\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can also use **video** or **iframe** for media. Just use `padding-bottom` to assign aspect ratio.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/media/16-9\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/media/16-9-video\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/media/16-9-iframe\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Min height\\n\\nUse `min-height: <Value>` to have a min height (use narrow screen to see it in action).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/media/cover-min-height\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst cardDefaultFull = require('components/snippets/classes/card-default-full').default\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"rounded-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"rounded\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md px-0 pb-0\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"card-md rounded-md bg-gray-500\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n      </div>\\n      <div class=\\\"card-md px-0\\\">\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n      <div class=\\\"card-sm px-0 pb-0 pt-0\\\">\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const img = require('components/snippets/img').default\\nconst imgAlt = require('components/snippets/img').alt\\n\\nexport default () => {\\n  return `\\n<div class=\\\"listing-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"listing-page_inner\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${img({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Lorem Ipsum\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    3.772,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${imgAlt({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Dolor sit amet\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    2.150,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${img({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Consectetur adipiscing elit\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    1.520,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${imgAlt({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Lorem Ipsum\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    3.772,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${img({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Dolor sit amet\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    2.150,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${imgAlt({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Consectetur adipiscing elit\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    1.520,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${img({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Lorem Ipsum\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    3.772,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${imgAlt({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Dolor sit amet\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    2.150,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col listing-page_col--big\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${img({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Lorem Ipsum\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    3.772,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing-page_col listing-page_col--big\\\">\\n          <a href=\\\"#\\\" class=\\\"card listing-page_item\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"w-full\\\">\\n                  ${imgAlt({})}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">\\n                    Dolor sit amet\\n                  </div>\\n                  <div class=\\\"listing-page_price\\\">\\n                    2.150,00 €\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n`\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/variant\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **tailwind classes** to assign width ([width](https://tailwindcss.com/docs/width), [max-width](https://tailwindcss.com/docs/max-width)).\\n\\nUse **component classes** to assign size. You can add **additional size** for example `.card-xs` or `.card-xl`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |\\n| Component                  | `.card-sm`       | `card-sm`                | Size small            |\\n| Component                  | `.card-md`       | `card-md`                | Size medium            |\\n| Component                  | `.card-lg`       | `card-lg`                | Size large            |\\n\\n</div>\\n\\nOtherwise use **tailwind classes** to assign custom size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/size\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Content\\n\\nCard content **stack vertically**. Use **tailwind classes** to assign styles (e.g. [padding](https://tailwindcss.com/docs/padding), [background-color](https://tailwindcss.com/docs/background-color), [border-radius](https://tailwindcss.com/docs/border-radius)) \\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/content\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nUse **component utility** `.card-group` to stack card content **horizontally**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- | ----------------------------- |\\n| Utility                  | `.card-group`       | `card-group`                | `responsive`                | Card stack horizontal wrapper           |\\n\\n</div>\\n\\nUse **tailwind classes** to assign size (e.g. [width](https://tailwindcss.com/docs/width)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/group\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Separator\\n\\nUse **tailwind classes** to style borders for separation.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/separator\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Overflow\\n\\nUse **tailwind classes** to overflow divs. Use **component classes** to style overflow.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.overflow-main`                     | `overflow-main`                | Overflow scrollbar style            |\\n| Component                  | `.overflow-sub`                     | `overflow-sub`                | Overflow scrollbar style small version            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/overflow-y\\\">\\n  </demovanilla>\\n</demo>\\n\\n## List\\n\\nYou can use [list component](/components/core/list) to space card's internal content.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/list\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"export default () => {\\n  return `px-6 w-full text-white links-inverse hover:text-opacity-75 active:text-opacity-75`\\n}\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md bg-white shadow-lg`\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      small\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      medium\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-80 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-md ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      large\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-96 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-lg ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-2\\\">\\n\\n  <div class=\\\"w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-8/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-auto flex-1\\\">\\n    <div class=\\\"w-full py-3 px-4 text-sm bg-gray-500\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list flex-col list-1\\\">\\n\\n  <div>\\n    <div class=\\\"list list-1\\\">\\n\\n      <div>\\n        <div class=\\\"list flex-col list-1\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Lorem Ipsum\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Dolor sit\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Amet\\n          </button>\\n\\n        </div>\\n      </div>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div class=\\\"list list-1\\\">\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Lorem Ipsum\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n</nav>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst img = require('components/snippets/img').default\\nconst imgAlt = require('components/snippets/img').alt\\nconst spinner = require('components/snippets/spinner').default\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"listing\\\" data-xt-infinite-scroll=\\\"{ max: 2 }\\\">\\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"infinite-scroll-pre mb-4\\\">\\n      <div class=\\\"list w-full flex-col list-1 items-center\\\">\\n        <div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-infinitescroll-reset>\\n            Load previous pages\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"listing_inner\\\">\\n      <div class=\\\"row row-3\\\" data-xt-infinite-scroll-items>\\n\\n        <div class=\\\"listing_col w-full md:w-6/12 lg:w-4/12\\\">\\n          <a href=\\\"/\\\" class=\\\"listing_item\\\">\\n            <div class=\\\"listing_img\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '75%' })}\\n            </div>\\n            <div class=\\\"listing_content py-4\\\">\\n              <div class=\\\"listing_title h5\\\">\\n                Lorem ipsum\\n              </div>\\n              <div class=\\\"listing_price h6\\\">\\n                3.772,00 €\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing_col w-full md:w-6/12 lg:w-4/12\\\">\\n          <a href=\\\"/\\\" class=\\\"listing_item\\\">\\n            <div class=\\\"listing_img\\\">\\n              ${imgAlt({ classes: 'object-cover object-center', ratio: '75%' })}\\n            </div>\\n            <div class=\\\"listing_content py-4\\\">\\n              <div class=\\\"listing_title h5\\\">\\n                Dolor sit amet\\n              </div>\\n              <div class=\\\"listing_price h6\\\">\\n                3.772,00 €\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing_col w-full md:w-6/12 lg:w-4/12\\\">\\n          <a href=\\\"/\\\" class=\\\"listing_item\\\">\\n            <div class=\\\"listing_img\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '75%' })}\\n            </div>\\n            <div class=\\\"listing_content py-4\\\">\\n              <div class=\\\"listing_title h5\\\">\\n                Consectetur\\n              </div>\\n              <div class=\\\"listing_price h6\\\">\\n                3.772,00 €\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing_col w-full md:w-6/12 lg:w-4/12\\\">\\n          <a href=\\\"/\\\" class=\\\"listing_item\\\">\\n            <div class=\\\"listing_img\\\">\\n              ${imgAlt({ classes: 'object-cover object-center', ratio: '75%' })}\\n            </div>\\n            <div class=\\\"listing_content py-4\\\">\\n              <div class=\\\"listing_title h5\\\">\\n                Adipiscing elit\\n              </div>\\n              <div class=\\\"listing_price h6\\\">\\n                3.772,00 €\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing_col w-full md:w-6/12 lg:w-4/12\\\">\\n          <a href=\\\"/\\\" class=\\\"listing_item\\\">\\n            <div class=\\\"listing_img\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '75%' })}\\n            </div>\\n            <div class=\\\"listing_content py-4\\\">\\n              <div class=\\\"listing_title h5\\\">\\n                Lorem Ipsum\\n              </div>\\n              <div class=\\\"listing_price h6\\\">\\n                3.772,00 €\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n\\n        <div class=\\\"listing_col w-full md:w-6/12 lg:w-4/12\\\">\\n            <a href=\\\"/\\\" class=\\\"listing_item\\\">\\n              <div class=\\\"listing_img\\\">\\n                ${imgAlt({ classes: 'object-cover object-center', ratio: '75%' })}\\n              </div>\\n              <div class=\\\"listing_content py-4\\\">\\n                <div class=\\\"listing_title h5\\\">\\n                  Dolor sit amet\\n                </div>\\n                <div class=\\\"listing_price h6\\\">\\n                  3.772,00 €\\n                </div>\\n              </div>\\n            </a>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"infinite-scroll mt-4\\\" data-xt-infinite-scroll-scroll>\\n      <div class=\\\"list w-full flex-col list-1 items-center\\\">\\n\\n        <div class=\\\"infinite-scroll--trigger\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\" data-xt-infinite-scroll-trigger>\\n\\n            <span class=\\\"infinite-scroll--trigger_content\\\">\\n              Show more products\\n            </span>\\n\\n            <span class=\\\"infinite-scroll--trigger_content-nomore\\\">\\n              There are no more products\\n            </span>\\n\\n            <span class=\\\"loader infinite-scroll--spinner\\\">\\n              <span class=\\\"spinner spinner-animated text-white\\\">\\n                ${spinner({})}\\n              </span>\\n            </span>\\n\\n          </button>\\n        </div>\\n\\n        <div class=\\\"infinite-scroll--more h6\\\">\\n          Page <span data-xt-infinite-scroll-num></span> of <span data-xt-infinite-scroll-tot></span>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--scroll-delay',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      elements: '.card',\\n      delayOn: current => {\\n        return Math.min((current + 1) * 75, 300)\\n      },\\n      delayOff: (current, total) => {\\n        return Math.min((total - (current + 1)) * 75, 300)\\n      },\\n      distance: '20%',\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md bg-white shadow-lg`\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"Drop\\\"\\ndescription: \\\"Highly customizable dropdowns that can contain anything you want.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/core/drop'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/drop.css.js](https://github.com/minimit/xtendui/blob/master/src/core/drop.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      drop: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nPass **elements** and **targets** options if different from defaults. **Elements** listens to events, **targets and inners** activate on events.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `elements:Query`                          | `false`        | Elements query            |\\n| Option                  | `targets:Query`                          | `:scope > .drop`        | Targets query            |\\n| Option                  | `elementsInner:Query`                          | `:scope > a, :scope > button`        | Inner elements query (scope inside elements)            |\\n| Option                  | `targetsInner:Query`                          | `:scope > .drop-inner`        | Inner targets query (scope inside targets)           |\\n\\n</div>\\n\\n#### Self\\n\\nUse this code to create a **self drop**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/usage-self\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/drop/interaction) and [customize lists](/components/core/drop/content-list) or [customize card](/components/core/drop/content-card).\\n\\n#### Unique\\n\\nUse this code to create a **unique drop**.\\n\\nThe **unique** mode is useful when triggering **targets outside the scope** of the component.\\n\\n[[notePrimary]]\\n| To activate **unique mode** you **need** to specify targets with **#id**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/usage-unique\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/drop/interaction) and [customize lists](/components/core/drop/content-list) or [customize card](/components/core/drop/content-card).\\n\\n#### Multiple\\n\\nUse this code to create **multiple drop**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/usage-multiple\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/drop/interaction) and [customize lists](/components/core/drop/content-list) or [customize card](/components/core/drop/content-card).\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ntitle: \\\"Themes\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <button type=\\\"button\\\" class=\\\"group flex-col\\\"\\n    data-xt-propagate-interaction=\\\"{ targets: '.btn' }\\\">\\n\\n    <div class=\\\"btn btn-md rounded-t-md ${btnPrimaryGroup()}\\\">\\n      Search\\n    </div>\\n\\n    <div class=\\\"btn btn-md rounded-b-md ${btnDefaultGroup()}\\\">\\n      ${iconSearch({ classes: 'icon-lg' })}\\n    </div>\\n\\n  </button>\\n\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Hero\\\"\\ntitle: \\\"fashion-hero-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-04-27\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-hero-v1\\\"\\n]\\n---\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Sticky\\n */\\nclass Sticky extends Xt.Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    super(object, optionsCustom)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init setup\\n   */\\n  initSetup() {\\n    const self = this\\n    // container\\n    let container = self.object.closest('.xt-container')\\n    if (!container) {\\n      container = Xt.createElement('<div class=\\\"xt-container xt-fixed-check xt-cloned\\\"></div>')\\n      self.object.before(container)\\n      // @FIX mount inside clone components (sticky, scroll etc..)\\n      requestAnimationFrame(() => {\\n        container.classList.add('xt-ignore', 'xt-ignore-once')\\n        container.append(self.object)\\n      })\\n    }\\n    // super\\n    super.initSetup()\\n    // mode\\n    self.mode = 'unique'\\n  }\\n\\n  /**\\n   * init logic\\n   * @param {Boolean} saveCurrents\\n   */\\n  initLogic(saveCurrents = true) {\\n    const self = this\\n    // @FIX mount inside clone components (sticky, scroll etc..)\\n    requestAnimationFrame(() => {\\n      // init\\n      self.enable()\\n      self.initScope()\\n      self.initAria()\\n      self.eventStatusHandler()\\n      self.initEvents()\\n      self.initStart(saveCurrents)\\n    })\\n  }\\n\\n  /**\\n   * init elements, targets and currents\\n   */\\n  initScope() {\\n    super.initScope()\\n    const self = this\\n    const options = self.options\\n    // sticky container\\n    for (const el of self.elements) {\\n      el.style[options.position] = '0px'\\n      // sticky clone\\n      const container = self.object.closest('.xt-container')\\n      let target = container.querySelector('.xt-clone')\\n      if (!target) {\\n        target = el.cloneNode(true)\\n        target.classList.add('xt-clone', 'xt-ignore')\\n        target.classList.remove('xt-ignore-once') // @FIX ignore once for mount when moving\\n        for (const elId of target.querySelectorAll('[id]')) {\\n          elId.setAttribute('id', elId.getAttribute('id') + '-clone')\\n        }\\n        for (const elName of target.querySelectorAll('[name]')) {\\n          elName.setAttribute('name', elName.getAttribute('name') + '-clone')\\n        }\\n        container.append(target)\\n      }\\n      self.targets.push(target)\\n      // sticky\\n      el.classList.add('xt-fixed', 'xt-sticky')\\n      if (options.sticky === 'absolute') {\\n        el.classList.add('xt-sticky-absolute')\\n      } else if (options.sticky === 'fixed') {\\n        el.classList.add('xt-sticky-fixed')\\n      } else if (options.sticky === 'fixed-always') {\\n        el.classList.add('xt-sticky-fixed-always')\\n      }\\n      if (target) {\\n        target.classList.add('xt-fixed', 'xt-sticky')\\n        if (options.sticky === 'absolute') {\\n          target.classList.add('xt-sticky-absolute')\\n        } else if (options.sticky === 'fixed') {\\n          target.classList.add('xt-sticky-fixed')\\n        } else if (options.sticky === 'fixed-always') {\\n          target.classList.add('xt-sticky-fixed-always')\\n        }\\n      }\\n      // hide\\n      if (options.hide === 'down') {\\n        el.classList.add('sticky-hide--down')\\n      } else {\\n        el.classList.remove('sticky-hide--down')\\n      }\\n      if (options.hide === 'up') {\\n        el.classList.add('sticky-hide--up')\\n      } else {\\n        el.classList.remove('sticky-hide--up')\\n      }\\n      // @index-sticky decreses with sequential sticky\\n      el.style.zIndex = Xt.getStickyIndex()\\n    }\\n  }\\n\\n  /**\\n   * init events\\n   */\\n  initEvents() {\\n    super.initEvents()\\n    const self = this\\n    const options = self.options\\n    // event scroll and resize\\n    const stickyHandler = Xt.dataStorage.put(window, options.on + '/' + self.namespace, self.eventStickyHandler.bind(self))\\n    const events = [...'scroll resize'.split(' ')]\\n    for (const event of events) {\\n      addEventListener(event, stickyHandler, { passive: true })\\n    }\\n    addEventListener('sticky.trigger.xt', stickyHandler)\\n    self.eventStickyHandler()\\n    // focusin\\n    const focusInHandler = Xt.dataStorage.put(document, 'focusin/sticky' + '/' + self.namespace, self.eventFocusinHandler.bind(self))\\n    document.addEventListener('focusin', focusInHandler, { passive: true })\\n  }\\n\\n  //\\n  // handler\\n  //\\n\\n  /**\\n   * element on handler\\n   * @param {Event} e\\n   */\\n  eventStickyHandler(e = null) {\\n    const self = this\\n    Xt.eventDelay(\\n      e,\\n      self.object,\\n      () => {\\n        // handler\\n        self.eventSticky()\\n      },\\n      self.componentNamespace + 'Sticky'\\n    )\\n  }\\n\\n  /**\\n   * element focusin handler\\n   * @param {Event} e\\n   */\\n  eventFocusinHandler(e) {\\n    const self = this\\n    // handler\\n    for (const tr of self.targets) {\\n      const el = self.getElements(tr)[0]\\n      // show element if is hiding on focus\\n      if (el.classList.contains('sticky-hide')) {\\n        const active = el.contains(e.target)\\n        if (active) {\\n          el.style.top = '0px'\\n        } else {\\n          el.style.top = Xt.dataStorage.get(el, self.componentNamespace + 'AddOld') + 'px'\\n        }\\n      }\\n    }\\n  }\\n\\n  //\\n  // event\\n  //\\n\\n  /**\\n   * window scroll\\n   */\\n  eventSticky() {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // vars\\n    let anim = true\\n    let hide = false\\n    let add = 0\\n    let addHide = 0\\n    const windowHeight = Xt.windowHeight\\n    const scrollingElement = document.scrollingElement\\n    const scrollHeight = scrollingElement.scrollHeight\\n    const scrollTop = scrollingElement.scrollTop\\n    // direction\\n    self.inverse = scrollTop < self.detail.scrollTopOld\\n    // loop\\n    for (const el of self.elements) {\\n      const tr = self.getTargets(el)[0]\\n      // vars\\n      const heightEl = parseFloat(getComputedStyle(el).height)\\n      const heightTr = parseFloat(getComputedStyle(tr).height)\\n      const topTr = tr.getBoundingClientRect().top\\n      // hide\\n      if (options.hide === 'down') {\\n        if (!self.inverse) {\\n          addHide = heightTr\\n        }\\n      }\\n      if (options.hide === 'up') {\\n        if (self.inverse) {\\n          addHide = heightTr\\n        }\\n      }\\n      // scroll\\n      let top = self.eventStickypos(options.limit.top || self.targets, scrollTop, topTr)\\n      let bottom = self.eventStickypos(options.limit.bottom, scrollTop, Infinity)\\n      if (options.position === 'top') {\\n        bottom -= heightTr\\n      }\\n      if (options.position === 'bottom') {\\n        top -= windowHeight - heightTr\\n        bottom = Math.abs(scrollHeight - windowHeight - bottom)\\n      }\\n      // contain and add\\n      let addTop = 0\\n      let addBottom = 0\\n      if (options.contain) {\\n        if (options.contain.top) {\\n          const addTopObj = self.eventStickyheight(options.contain.top)\\n          addTop = addTopObj.val\\n          if (addTop !== null && addTop > topTr) {\\n            add = addTop\\n            if (!addTopObj.foundHide) {\\n              anim = false\\n            }\\n          } else {\\n            addTop = null\\n          }\\n        }\\n        if (options.contain.bottom) {\\n          addBottom = self.eventStickypos(options.contain.bottom)\\n          if (addBottom !== null && addBottom < heightEl + addTop) {\\n            add = addBottom - heightEl\\n            anim = false\\n          } else {\\n            addBottom = null\\n          }\\n        }\\n      }\\n      // save real add for calculation\\n      Xt.dataStorage.set(el, self.componentNamespace + 'Add', add)\\n      // activation\\n      const checkTop = scrollTop >= top - add + addHide\\n      const checkBottom = scrollTop < bottom + add - addHide\\n      if (checkTop && checkBottom) {\\n        // inside\\n        const changed = self.checkOn(el)\\n        if (changed) {\\n          self.eventOn(el)\\n        }\\n        // hide\\n        if (addHide) {\\n          hide = true\\n        }\\n      } else {\\n        const changed = self.checkOff(el)\\n        if (changed) {\\n          // outside\\n          self.eventOff(el)\\n        }\\n      }\\n      // after active\\n      if (el.classList.contains(self.classes[0])) {\\n        // hide\\n        if (hide) {\\n          add = -heightEl\\n          if (!el.classList.contains('sticky-hide')) {\\n            el.classList.add('sticky-hide')\\n            // closeauto\\n            dispatchEvent(new CustomEvent('closeauto.trigger.xt', { detail: { container: el } }))\\n            // listener dispatch\\n            el.dispatchEvent(new CustomEvent('hide.xt'))\\n          }\\n        } else {\\n          if (el.classList.contains('sticky-hide')) {\\n            el.classList.remove('sticky-hide')\\n            // listener dispatch\\n            el.dispatchEvent(new CustomEvent('show.xt'))\\n          }\\n        }\\n      } else {\\n        // reset\\n        add = 0\\n        anim = false\\n      }\\n      // anim\\n      if (anim && (addTop || !addBottom) && self.detail.scrollTopOld !== undefined) {\\n        if (!el.classList.contains('sticky-moving')) {\\n          el.classList.add('sticky-moving')\\n        }\\n      } else {\\n        if (el.classList.contains('sticky-moving')) {\\n          el.classList.remove('sticky-moving')\\n        }\\n      }\\n      // top and bottom\\n      /*\\n      if (!checkTop) {\\n        if (!el.classList.contains('sticky-top')) {\\n          el.classList.add('sticky-top')\\n        }\\n      } else {\\n        if (el.classList.contains('sticky-top')) {\\n          el.classList.remove('sticky-top')\\n        }\\n      }\\n      if (!checkBottom) {\\n        if (!el.classList.contains('sticky-bottom')) {\\n          el.classList.add('sticky-bottom')\\n        }\\n      } else {\\n        if (el.classList.contains('sticky-bottom')) {\\n          el.classList.remove('sticky-bottom')\\n        }\\n      }\\n      */\\n      // set add\\n      if (add !== Xt.dataStorage.get(el, self.componentNamespace + 'AddOld')) {\\n        el.style[options.position] = add + 'px'\\n      }\\n      // fix position fixed width 100% of parent\\n      const width = Xt.normalizeWidth(tr.clientWidth)\\n      if (el.style.width !== width) {\\n        el.style.width = width\\n      }\\n      // listener dispatch\\n      el.dispatchEvent(new CustomEvent('change.xt'))\\n      // save for direction\\n      Xt.dataStorage.set(el, self.componentNamespace + 'AddOld', add)\\n    }\\n    // save for direction\\n    self.detail.scrollTopOld = scrollTop\\n  }\\n\\n  /**\\n   * get position of option\\n   * @param {String|Number|Element} option\\n   * @param {Number} scrollTop Window's scrollTop\\n   * @param {Number} val Default value\\n   * @return {Number} value Option's position (px)\\n   */\\n  eventStickypos(option, scrollTop = 0, val = null) {\\n    if (!isNaN(parseFloat(option))) {\\n      val = option\\n    } else {\\n      const elements = Array.isArray(option) || option instanceof Element ? option : document.querySelectorAll(option)\\n      if (elements.length) {\\n        let found = false\\n        val = 0\\n        for (const el of elements) {\\n          const add = Xt.dataStorage.get(el, self.componentNamespace + 'Add')\\n          if (add) {\\n            // if sticky-hide get real add\\n            const style = getComputedStyle(el)\\n            if (style.display !== 'none') {\\n              val += add\\n              found = true\\n            }\\n          } else {\\n            const rect = el.getBoundingClientRect()\\n            val += rect.top\\n            found = true\\n          }\\n        }\\n        if (found) {\\n          val += scrollTop\\n        } else {\\n          val = null\\n        }\\n      }\\n    }\\n    return val\\n  }\\n\\n  //\\n  // event util\\n  //\\n\\n  /**\\n   * get height of option\\n   * @param {String|Number|Element} option\\n   * @param {Number} val Default value\\n   * @return {Object} obj Option's height (px) and if found hide element\\n   */\\n  eventStickyheight(option, val = null) {\\n    const self = this\\n    // logic\\n    let foundHide = false\\n    if (!isNaN(parseFloat(option))) {\\n      val = option\\n    } else {\\n      const elements = Array.isArray(option) || option instanceof Element ? option : document.querySelectorAll(option)\\n      if (elements.length) {\\n        for (const el of elements) {\\n          if (el.classList.contains('sticky-hide--down') && el.classList.contains(self.classes[0])) {\\n            if (self.inverse) {\\n              val += el.clientHeight\\n              foundHide = true\\n            }\\n          } else if (el.classList.contains('sticky-hide--up') && el.classList.contains(self.classes[0])) {\\n            if (!self.inverse) {\\n              val += el.clientHeight\\n              foundHide = true\\n            }\\n          } else {\\n            val += el.clientHeight\\n          }\\n        }\\n      }\\n    }\\n    return { val: val, foundHide: foundHide }\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nSticky.componentName = 'xt-sticky'\\nSticky.optionsDefault = {\\n  // sticky\\n  sticky: true,\\n  position: 'top',\\n  limit: { bottom: 'Infinity' },\\n  contain: false,\\n  hide: false,\\n  // element\\n  elements: false,\\n  targets: false,\\n  // class\\n  class: 'active active-sticky',\\n  // quantity\\n  min: 0,\\n  max: 'Infinity',\\n  // event\\n  on: 'on.xt.sticky',\\n  // timing\\n  instant: true,\\n  // other\\n  aria: false,\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Sticky = Sticky\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Sticky.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Sticky.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Sticky(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      group\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"md:card-group\\\">\\n              <div class=\\\"card-md md:w-7/12\\\">\\n                <div class=\\\"h4\\\">Lorem ipsum</div>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              </div>\\n              <div class=\\\"card-sm md:w-5/12 rounded-b-md md:rounded-b-none md:rounded-r-md bg-gray-400\\\">\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      group complex\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"md:card-group\\\">\\n              <div class=\\\"card-md md:w-7/12 bg-gray-400 md:rounded-tl-md\\\">\\n                <div class=\\\"h4\\\">Lorem ipsum</div>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              </div>\\n              <div class=\\\"md:w-5/12\\\">\\n                <div class=\\\"card-sm bg-gray-500 md:rounded-tr-md\\\">\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n                </div>\\n                <div class=\\\"card-md\\\">\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"rounded-b-md\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '15%' })}\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \".demo--slider-disable {\\n  /*@apply md:slider-disable;*/\\n  @apply slider-disable;\\n}\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\" style=\\\"padding-bottom: 56.2%\\\">\\n  <div class=\\\"media-inner\\\">\\n    <video class=\\\"media\\\" poster=\\\"/placeholder-1080.jpg\\\" preload=\\\"metadata\\\" muted playsinline loop autoplay>\\n      <source type=\\\"video/mp4\\\" src=\\\"/placeholder-1080.mp4\\\" />\\n    </video>\\n  </div>\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `border rounded-md text-accent-400 border-accent-200 bg-accent-200`\\n}\\n\";","export default \"#iframe--xtend-theme-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * vars\\n      */\\n\\n    // ease\\n\\n    @ease-in: @ease-out-quint;\\n    @ease-out: @ease-in-out-quint;\\n\\n    /**\\n      * button\\n      */\\n\\n    // variant\\n\\n    .btn-default {\\n      &:hover {\\n        transform: translateY(-.25rem);\\n        box-shadow: @shadow-light;\\n      }\\n      &:active, &.active {\\n        transform: none;\\n        box-shadow: @shadow-none;\\n      }\\n    }\\n\\n    .btn-primary {\\n      &:hover {\\n        transform: translateY(-.25rem);\\n        box-shadow: @shadow-accent;\\n      }\\n      &:active, &.active {\\n        transform: none;\\n        box-shadow: @shadow-none;\\n      }\\n    }\\n\\n    // animation\\n\\n    .btn {\\n      transition: all @time-tiny @ease-out;\\n      &:hover {\\n        transition: all @time-tiny @ease-in;\\n      }\\n      &:active, &.active {\\n        transition: all @time-tiny @ease-in;\\n      }\\n    }\\n\\n    /**\\n      * drop\\n      */\\n\\n    // animation\\n\\n    .drop {\\n      > .drop-inner {\\n        > .drop-design {\\n          opacity: 0;\\n          transform: scale(.75);\\n        }\\n        > .drop-content {\\n          opacity: 0;\\n          transform: translateY(-1rem);\\n        }\\n      }\\n      &.in {\\n        animation-duration: @time-sm + @time-tiny; // needed for animation time, put max animation time\\n        > .drop-inner {\\n          > .drop-design {\\n            opacity: 1;\\n            transform: none;\\n            transition: transform @time-md @ease-in, opacity @time-md @ease-in;\\n          }\\n          > .drop-content {\\n            opacity: 1;\\n            transform: none;\\n            transition: transform @time-md @ease-in @time-tiny, opacity @time-md @ease-in @time-tiny;\\n          }\\n        }\\n      }\\n      &.out {\\n        animation-duration: @time-sm + @time-tiny; // needed for animation time, put max animation time\\n        > .drop-inner {\\n          > .drop-design {\\n            opacity: 0;\\n            transform: scale(.75);\\n            transition: transform @time-sm @ease-out @time-tiny, opacity @time-sm @ease-out @time-tiny;\\n          }\\n          > .drop-content {\\n            opacity: 0;\\n            transform: translateY(1rem);\\n            transition: transform @time-sm @ease-out, opacity @time-sm @ease-out;\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n      * overlay\\n      */\\n\\n    .overlay {\\n      .card-item--menu {\\n        background: @accent;\\n      }\\n    }\\n\\n    // animation\\n\\n    .overlay {\\n      .card-overlay {\\n        .card-design {\\n          opacity: 0;\\n          transform: scale(.75);\\n        }\\n        > .btn-close {\\n          opacity: 0;\\n        }\\n        .card-block, .card-content {\\n          opacity: 0;\\n          transform: translateY(-1rem);\\n        }\\n      }\\n      &.in {\\n        animation-duration: @time-md + @time-tiny; // needed for animation time, put max animation time\\n        .card-overlay {\\n          .card-design {\\n            opacity: 1;\\n            transform: scale(1);\\n            transition: transform @time-md @ease-in, opacity @time-md @ease-in;\\n          }\\n          > .btn-close {\\n            // use animation to not override .btn transitions\\n            .anim-zoom.in();\\n            animation-delay: @time-md;\\n            animation-fill-mode: forwards;\\n            opacity: 0;\\n          }\\n          .card-block, .card-content {\\n            opacity: 1;\\n            transform: none;\\n            transition: transform @time-md @ease-in @time-tiny, opacity @time-md @ease-in @time-tiny;\\n          }\\n        }\\n      }\\n      &.out {\\n        animation-duration: @time-sm + @time-tiny; // needed for animation time, put max animation time\\n        .card-overlay {\\n          .card-design {\\n            opacity: 0;\\n            transform: scale(.75);\\n            transition: transform @time-sm @ease-out @time-tiny, opacity @time-sm @ease-out @time-tiny;\\n          }\\n          > .btn-close {\\n            // use animation to not override .btn transitions\\n            .anim-zoom.out();\\n            animation-delay: initial;\\n          }\\n          .card-block, .card-content {\\n            opacity: 0;\\n            transform: translateY(1rem);\\n            transition: transform @time-sm @ease-out, opacity @time-sm @ease-out;\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n      * card interactive\\n      */\\n\\n    // variant\\n\\n    a.card-default, label.card-default {\\n      &:hover {\\n        .card-design {\\n          box-shadow: @shadow-light;\\n        }\\n      }\\n      &:active, &.active {\\n        .card-design {\\n          box-shadow: none;\\n        }\\n      }\\n    }\\n\\n    a.card-primary, label.card-primary {\\n      &:hover {\\n        .card-design {\\n          box-shadow: @shadow-accent;\\n        }\\n      }\\n      &:active, &.active {\\n        .card-design {\\n          box-shadow: none;\\n        }\\n      }\\n    }\\n\\n    // animation\\n\\n    a.card, label.card {\\n      transition: all @time-sm @ease-out;\\n      .card-design {\\n        transition: all @time-sm @ease-out;\\n      }\\n      &:hover {\\n        transform: translateY(-.5rem);\\n        transition: all @time-sm @ease-in;\\n        .card-design {\\n          transition: all @time-sm @ease-in;\\n        }\\n      }\\n      &:active, &.active {\\n        transform: none;\\n        transition: all @time-sm @ease-in;\\n        .card-design {\\n          transition: all @time-sm @ease-in;\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Markdown\\\"\\ntitle: \\\"Markdown\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Demos\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/toggle/events-methods\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/slider/events-methods\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/addons/scroll-to-anchor\\\">\\n  </div>\\n  <demovanilla src=\\\"vanilla/components/core/slider/progress\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/timing\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/auto\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/prevent-event\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/slider/overflow-auto-false\\\">\\n  </demovanilla>\\n</demo>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/event\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/drop/backdrop\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/disable\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/position\\\">\\n  </demovanilla>\\n</demo>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/brands-featured-v1\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/fashion-hero-v2\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/industrial-featured-v1\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/fashion-hero-v1\\\">\\n  </div>\\n</demo>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/sequential-megamenu-v1\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/xtend-theme-v1\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/collapse-theme-v1\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/furniture-featured-v1\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/furniture-listing-v1\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/themes/fashion-listing-v1\\\">\\n  </div>\\n</demo>\\n\\n## Markdown\\n\\nUse this code to create a **card**.\\n\\nUse this code to create a **group vertical** with `.flex-col`.\\n\\nCheck subpage to [customize content](/components/core/loader/content#spinner).\\n\\nUse **tailwind classes** to assign size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\nUse **tailwind classes** to create a navigation. Remember to use `.whitespace-normal`.\\n\\nUse **component classes** to create a style disabled.\\n\\nFor aria purpose use `role=\\\"toolbar\\\"`.\\n\\nFor aria purpose use `aria-selected=\\\"true\\\"` when using the class `.active`.\\n\\nFor aria purpose use `aria-disabled=\\\"true\\\"` when using the class `.disabled`.\\n\\nSee [group component](/components/core/loader) to create a button with group.\\n\\nSee [mouse follow addon](/components/core/loader) to create a loader with mouse follow.\\n\\n[[notePrimary]]\\n| This addon uses [separator](/components/core/separator). Visit the component page to import and customize.\\n\\n[[noteDefault]]\\n| List `ul` and `old` are automatically styled when they **don't have `[class]`**. To have custom styles use **tailwind classes**.\\n\\n(use touch device to see it in action)\\n\\n(use narrow screen to see it in action)\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Function                  | `Xt.eventDelay:Function`              | `e:Event, element:Node, function:Function, prefix:String = '', instant:Boolean = false`       | event delay wrapper                  |\\n| Variable                  | `Xt.resizeDelay:Number|Boolean`              | `500`        | Delay for the `resize` event with `Xt.eventDelay`            |\\n| Option                    | `elements:Query`                          | `false`        | Elements query            |\\n| Object                   | `let self = Xt.get('xt-drop', {DOM element})`       | `object` `elements` `targets` | Get object self for this component class             |\\n| Property                  | `initial:Boolean`       | If initial or reset activation            |\\n\\n</div>\\n\\nUse **component utility** `.row-<space>` to space content.\\n\\nFor `<space>` values use any of [tailwind spacing](https://tailwindcss.com/docs/customizing-spacing) up to 10.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.list-<space>`       | `list-<space>`                | `responsive`                | Space contents horizontally and vertically            |\\n\\n</div>\\n\\nFor `<direction>` values use `x` or `y`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.loader-<direction>`                     | `loader-<direction>`                | Loader direction for filler            |\\n\\n</div>\\n\\nYou can set **scroll mode** with css selectors.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          |  Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Selector                  | `&:not(.scroll-done) {`                     | Animate once            |\\n\\n</div>\\n\\nLorem ipsum `dolor sit` amet, *consectetur* **adipiscing** elit. Nam in [laoreet tellus](/components/group/button), nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n\\n<script type=\\\"text/plain\\\" class=\\\"language-markup\\\">\\n  <a href=\\\"#\\\" class=\\\"btn btn-default\\\">\\n    <!-- content -->\\n  </a>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n    <!-- content -->\\n  </button>\\n</script>\\n\\n```\\nmkdir -p xtendui/\\ncp -r node_modules/xtendui/dist/ xtendui/\\n```\\n\\n```css\\nbody {\\n  background: #ff0000;\\n}\\n\\n.test > * {\\n}\\n```\\n\\n```jsx\\nconst test = 'test'\\n```\\n\\n## Demo\\n\\n<demo>\\n  <div class=\\\"gatsby_demo-inline\\\">\\n    <div class=\\\"gatsby_demo_item toggle gatsby_demo_preview\\\" data-name=\\\"inline\\\">\\n      <div class=\\\"gatsby_demo_source gatsby_demo_source--from\\\" data-lang=\\\"language-markup\\\">\\n        Inline\\n      </div>\\n    </div>\\n  </div>\\n  <demovanilla src=\\\"vanilla/test/demo-vanilla\\\" name=\\\"demo vanilla\\\">\\n    <div class=\\\"gatsby_demo_text\\\">\\n      test vanilla <strong>strong</strong> <code>code</code>\\n    </div>\\n  </demovanilla>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/test/demo-vanilla-iframe\\\" data-name=\\\"demo vanilla frame\\\">\\n    <div class=\\\"gatsby_demo_text\\\">\\n      <a href=\\\"/iframe/test/demo-vanilla-iframe\\\">test vanilla iframe</a>\\n    </div>\\n  </div>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"API\\\"\\ndate: \\\"1980-05-05\\\"\\n---\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-drop=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.Drop(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Drop(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\\n## Util\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Object                   | `let self = Xt.get('xt-drop', {DOM element})`       | `object` `elements` `targets` | Get object self for this component class             |\\n\\n</div>\\n\\n## Trigger\\n\\nTrigger events on **DOM elements**.\\n\\n```js\\ndocument.querySelector('#my-element-or-target').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.trigger.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.trigger.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `closeauto.trigger.xt`           | `window` | Autclose all components with `closeAuto: true` option             |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n```js\\nconst el = document.querySelector('#my-element-or-target')\\n\\nconst eventOn = e => {\\n  if (e.target === el) {\\n  // logic\\n  }\\n}\\n\\nel.addEventListener('on.xt', eventOn)\\n```\\n\\nListen to events delegation with **useCapture** this way:\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-drop', object)\\n\\nconst eventOn = e => {\\n  const element = e.target\\n  // useCapture delegation\\n  if (self.elements.includes(element)) {\\n    // logic\\n  }\\n  if (self.targets.includes(element)) {\\n    // logic\\n  }\\n}\\n\\nobject.addEventListener('on.xt', eventOn, true)\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `ondone.xt`           | `elements` `targets` | Activation event after delay and duration             |\\n| Event                   | `offdone.xt`           | `elements` `targets` | Deactivation event after delay and duration             |\\n| Event                   | `medialoaded.xt`           | `elements` `targets` | Images loaded event            |\\n| Event                   | `init.xt`           | `object` | Init event             |\\n| Event                   | `restart.xt`           | `object` | Restart event             |\\n| Event                   | `reinit.xt`           | `object` | Reinit event             |\\n| Event                   | `destroy.xt`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-drop', object)\\nconst elements = self.elements\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `elements:Array`       | Elements nodes             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n| Property                  | `initial:Boolean`       | If initial or reset activation            |\\n\\n</div>\\n\\n## Methods\\n\\nCall methods by getting component object.\\n\\n```js\\nlet self = Xt.get('xt-drop', document.querySelector('#my-object'))\\nself.destroy()\\nself = null\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getElements(el:Node|null)`                          | Get all elements or all elements from element or target             |\\n| Method                  | `self.getTargets(el:Nod|null)`                          | Get all targets from or all targets from element or target             |\\n| Method                  | `self.getElementsGroups()`                          | Get elements (one per group)             |\\n| Method                  | `self.getTargetsGroups()`                          | Get targets (one per group)             |\\n| Method                  | `self.hasCurrent(el:Node)`                          | Returns `true` or `false` if element or target is activated             |\\n| Method                  | `self.reinit(saveCurrents:Boolean)`       | Reinit component and save currents as initial (default: `true`)             |\\n| Method                  | `self.restart()`                          | Restart component to initial             |\\n| Method                  | `self.destroy(weak:Boolean)`              | Destroy component            |\\n\\n</div>\\n\\nYou can get activated elements or targets with `hasCurrent`.\\n\\n```js\\nself.elements.filter(x => self.hasCurrent(x))\\nself.targets.filter(x => self.hasCurrent(x))\\n```\\n\\n## Demo\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/drop/events-methods\\\">\\n  </div>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      after top\\n    </button>\\n\\n    <div class=\\\"drop md:drop-after md:drop-top\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      after bottom\\n    </button>\\n\\n    <div class=\\\"drop md:drop-after md:drop-bottom\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      after middle\\n    </button>\\n\\n    <div class=\\\"drop md:drop-center md:drop-middle\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      after contain-bottom\\n    </button>\\n\\n    <div class=\\\"drop md:drop-after md:drop-contain-bottom\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      after contain-top\\n    </button>\\n\\n    <div class=\\\"drop md:drop-after md:drop-contain-top\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const spinner = require('components/snippets/spinner').default\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\n\\nexport default () => {\\n  return `\\n<span class=\\\"loader loader-animated\\\">\\n  <span class=\\\"spinner text-accent-500\\\">\\n      ${spinner({})}\\n  </span>\\n</span>\\n\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\">\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">1</div>\\n        <span class=\\\"loader loader-x loader-size-bottom\\\">\\n          <span class=\\\"filler text-accent-500\\\">\\n            <span class=\\\"bg-current\\\"></span>\\n            <span class=\\\"bg-current opacity-25\\\"></span>\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">2</div>\\n        <span class=\\\"loader loader-x loader-size-bottom\\\">\\n          <span class=\\\"filler text-accent-500\\\">\\n            <span class=\\\"bg-current\\\"></span>\\n            <span class=\\\"bg-current opacity-25\\\"></span>\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">3</div>\\n        <span class=\\\"loader loader-x loader-size-bottom\\\">\\n          <span class=\\\"filler text-accent-500\\\">\\n            <span class=\\\"bg-current\\\"></span>\\n            <span class=\\\"bg-current opacity-25\\\"></span>\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">4</div>\\n        <span class=\\\"loader loader-x loader-size-bottom\\\">\\n          <span class=\\\"filler text-accent-500\\\">\\n            <span class=\\\"bg-current\\\"></span>\\n            <span class=\\\"bg-current opacity-25\\\"></span>\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">5</div>\\n        <span class=\\\"loader loader-x loader-size-bottom\\\">\\n          <span class=\\\"filler text-accent-500\\\">\\n            <span class=\\\"bg-current\\\"></span>\\n            <span class=\\\"bg-current opacity-25\\\"></span>\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n    <span class=\\\"loader loader-y\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"export default () => {\\n  return `card-sm text-black links-default rounded-md bg-gray-200`\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"Infinite Scroll\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/addons/infinite-scroll'\\n```\\n\\n## Usage\\n\\nUse this code to create a **infinite scroll**.\\n\\nNavigate pages by opening [this demo on a new page](http://localhost:8888/iframe/components/addons/infinite-scroll). You can see on page refresh and browser navigation that **the page is retained**.\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/addons/infinite-scroll\\\">\\n  </div>\\n</demo>\\n\\n## Options\\n\\nHere are the main **javascript options**.\\n\\nFor advanced options see javascript file source code `xtendui/src/addons/infinite-scroll.js`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                    | `get:String`                          | `'page'`        | **url get** variable to use            |\\n| Option                    | `min:Number`                          | `1`        | Initial and minimum page number            |\\n| Option                    | `max:Number`                          | `'Infinity'`        | Maximum page number            |\\n| Option                    | `add:Number`                          | `1`        | Amount to increase page number            |\\n| Option                    | `events.scroll:Boolean`                          | `true`        | Automatically activate on scroll            |\\n| Option                    | `events.trigger:String`                          | `'click'`        | Event to trigger infinite scroll            |\\n| Option                    | `events.reset:String`                          | `'click'`        | Event to trigger infinite scroll reset            |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `init.xt.infinitescroll`           | `object` | Init event             |\\n| Event                   | `destroy.xt.infinitescroll`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `current:Number`       | Current page             |\\n| Property                   | `scrollElement:Node`       | Scroll node             |\\n| Property                   | `triggerElement:Node`       | Trigger node             |\\n| Property                   | `resetElement:Node`       | Reset node             |\\n| Property                   | `itemsElement:Node`       | Items node             |\\n\\n</div>\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-infinite-scroll=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.InfiniteScroll(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.InfiniteScroll(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\nconst iconPackage = require('components/snippets/icons').iconPackage\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      list\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-96 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"card-md\\\">\\n            <div class=\\\"list list-3 flex-no-wrap items-baseline\\\">\\n              <div>\\n                ${iconPackage({ classes: 'icon-lg text-2xl' })}\\n              </div>\\n              <div>\\n                <div class=\\\"h4\\\">Lorem ipsum</div>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider-navigation').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider>\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"Interaction\\\"\\ndate: \\\"2010-10-10\\\"\\n---\\n\\n## Class\\n\\nYou can customize the **class names** used with the component.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `class:String`                          | `active active-drop`        | Class name for activation            |\\n| Option                  | `classIn:String`                          | `in`        | Class name for in animation            |\\n| Option                  | `classOut:String`                          | `out`        | Class name for out animation            |\\n| Option                  | `classDone:String`                          | `done`        | Class name for in animation done            |\\n| Option                  | `classInitial:String`                          | `initial`        | Class name for initialization            |\\n| Option                  | `classInverse:String`                          | `inverse`        | Class name for inverse direction activation            |\\n\\n</div>\\n\\nYou can start with toggled elements and targets just by adding **one of the class names for activation** to the **elements** or **targets**.\\n\\nAdditionally on component initialization the class `xt-drop` gets added to the **object** (the DOM element you assigned the component).\\n\\n## Animations\\n\\nYou can use **css animations**, just add them with **class names**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/animation\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can use **javascript animations**, just use [drop api](/components/core/drop/api), and remember to set `durationOn: Milliseconds` and `durationOff: Milliseconds`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/animation-js\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Event\\n\\nYou can specify **on** and **off** events for the drop. Fore example `on: 'mouseenter'` `off: 'mouseleave'`. Default is `on: 'click'`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `on:String`                              | `'click'`                     | Set event to listen for activation           |\\n| Option                  | `off:String`                             | `false`                       | Set event to listen for deactivation if not present `options.on` deactivate when already activated          |\\n| Option                  | `eventLimit:Query`                          | `'.event-limit, .drop-inner'`        | Limit events inside self.object            |\\n| Option                  | `preventEvent:Boolean`                          | `false`        | Prevent interaction until activated depending on `on` and `off` events (second click or mouseenter)            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/event\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Backdrop\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `backdrop:Boolean`                              | `false`                     | Generate backdrop on targets or on object if no targets           |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/backdrop\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Position\\n\\nSet drop position with this utils.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.drop-bottom`       | `drop-bottom`                | `responsive`                | Position bottom            |\\n| Utility                  | `.drop-top`       | `drop-top`                | `responsive`                | Position top            |\\n| Utility                  | `.drop-left`       | `drop-left`                | `responsive`                | Position left            |\\n| Utility                  | `.drop-right`       | `drop-right`                | `responsive`                | Position right            |\\n| Utility                  | `.drop-center`       | `drop-center`                | `responsive`                | Position center            |\\n| Utility                  | `.drop-before`       | `drop-before`                | `responsive`                | Position before            |\\n| Utility                  | `.drop-after`       | `drop-after`                | `responsive`                | Position after            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/left\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/drop/right\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/drop/center\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/drop/before\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/drop/after\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Block\\n\\nYou can block the activations with the class `.xt-block` on elements.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.xt-block`                     | `NOT POSSIBLE`                | Block scroll on element            |\\n\\n</div>\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div data-xt-overlay>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    overlay\\n  </button>\\n\\n  <div class=\\\"overlay\\\">\\n    <div class=\\\"overlay-container max-w-3xl\\\">\\n      <div class=\\\"overlay-inner\\\">\\n\\n        <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n            <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      group\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-screen max-w-2xl ${cardDefaultDrop()}\\\">\\n          <div class=\\\"md:card-group\\\">\\n            <div class=\\\"card-md md:w-7/12\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n            <div class=\\\"card-sm md:w-5/12 rounded-b-md md:rounded-b-none md:rounded-r-md bg-gray-400\\\">\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      group complex\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-screen max-w-2xl ${cardDefaultDrop()}\\\">\\n          <div class=\\\"md:card-group\\\">\\n            <div class=\\\"card-md md:w-7/12 bg-gray-400 md:rounded-tl-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n            <div class=\\\"md:w-5/12\\\">\\n              <div class=\\\"card-sm bg-gray-500 md:rounded-tr-md\\\">\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              </div>\\n              <div class=\\\"card-md\\\">\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"rounded-b-md\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '15%' })}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ align: 'center' }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { Link } from 'gatsby'\\nimport kebabCase from 'lodash.kebabcase'\\n\\nclass DocFoot extends React.Component {\\n  render() {\\n    const { page } = this.props\\n    const postsIntroduction = page.postsAll.posts.filter(\\n      x => ['Introduction'].includes(x.post.frontmatter.type) && x.post.frontmatter.title !== x.post.frontmatter.parent\\n    )\\n    const postsCore = page.postsAll.posts.filter(\\n      x =>\\n        ['Components'].includes(x.post.frontmatter.type) && x.post.frontmatter.category === 'Core' && x.post.frontmatter.parent === page.post.frontmatter.parent\\n    )\\n    const postsAddons = page.postsAll.posts.filter(\\n      x =>\\n        ['Components'].includes(x.post.frontmatter.type) &&\\n        x.post.frontmatter.category === 'Addons' &&\\n        x.post.frontmatter.parent === page.post.frontmatter.parent &&\\n        x.post.frontmatter.title !== x.post.frontmatter.parent\\n    )\\n    const postsThemes = page.postsAll.posts.filter(\\n      x =>\\n        ['Themes'].includes(x.post.frontmatter.type) &&\\n        x.post.frontmatter.parent === page.post.frontmatter.parent &&\\n        x.post.frontmatter.title !== x.post.frontmatter.parent\\n    )\\n    return (\\n      <div className=\\\"gatsby_site_article_foot\\\">\\n        <div className=\\\"gatsby_listing_group\\\">\\n          <div className=\\\"gatsby_listing_items\\\">\\n            <div className=\\\"row\\\">\\n              {page.post.frontmatter.type !== 'Introduction' && postsIntroduction ? (\\n                <div className=\\\"gatsby_listing_column\\\">\\n                  <Link to={'/'} className=\\\"card gatsby_listing_item\\\">\\n                    <div className=\\\"h4\\\">Setup or other problems?</div>\\n                    <p>\\n                      Check out the <strong>Getting Started</strong> pages.\\n                    </p>\\n                  </Link>\\n                </div>\\n              ) : null}\\n\\n              {page.post.frontmatter.category !== 'Core' && page.post.frontmatter.category !== 'Core' && postsCore.length ? (\\n                <div className=\\\"gatsby_listing_column\\\">\\n                  <Link to={`/components/core/${kebabCase(page.post.frontmatter.parent)}`} className=\\\"card gatsby_listing_item\\\">\\n                    <div className=\\\"h4\\\">Visit the Core pages</div>\\n                    <p>\\n                      There {postsCore.length === 1 ? 'is' : 'are'}{' '}\\n                      <strong>\\n                        {postsCore.length} core page{postsAddons.length === 1 ? '' : 's'}{' '}\\n                      </strong>{' '}\\n                      for {page.post.frontmatter.parent}.\\n                    </p>\\n                  </Link>\\n                </div>\\n              ) : null}\\n\\n              {page.post.frontmatter.type !== 'Addons' && page.post.frontmatter.category !== 'Addons' && postsAddons.length ? (\\n                <div className=\\\"gatsby_listing_column\\\">\\n                  <Link to={`/components/addons/${kebabCase(page.post.frontmatter.parent)}`} className=\\\"card gatsby_listing_item\\\">\\n                    <div className=\\\"h4\\\">Visit the Addons page</div>\\n                    <p>\\n                      There {postsAddons.length === 1 ? 'is' : 'are'}{' '}\\n                      <strong>\\n                        {postsAddons.length} addon{postsAddons.length === 1 ? '' : 's'}{' '}\\n                      </strong>\\n                      for {page.post.frontmatter.parent}.\\n                    </p>\\n                  </Link>\\n                </div>\\n              ) : null}\\n\\n              {page.post.frontmatter.type !== 'Themes' && postsThemes.length ? (\\n                <div className=\\\"gatsby_listing_column\\\">\\n                  <Link\\n                    to={`/themes/${kebabCase(\\n                      page.postsAll.posts.filter(x => x.post.frontmatter.title === page.post.frontmatter.parent)[0].post.frontmatter.category\\n                    )}/${kebabCase(page.post.frontmatter.parent)}`}\\n                    className=\\\"card gatsby_listing_item\\\"\\n                  >\\n                    <div className=\\\"h4\\\">Visit the Theme page</div>\\n                    <p>\\n                      There {postsThemes.length === 1 ? 'is' : 'are'}{' '}\\n                      <strong>\\n                        {postsThemes.length} theme{postsThemes.length === 1 ? '' : 's'}{' '}\\n                      </strong>\\n                      for {page.post.frontmatter.parent}.\\n                    </p>\\n                  </Link>\\n                </div>\\n              ) : null}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nDocFoot.propTypes = {\\n  page: PropTypes.shape({\\n    post: PropTypes.shape({\\n      htmlAst: PropTypes.object.isRequired,\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n        description: PropTypes.string,\\n      }).isRequired,\\n    }).isRequired,\\n    postsAll: PropTypes.shape({\\n      posts: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          post: PropTypes.shape({\\n            frontmatter: PropTypes.shape({\\n              type: PropTypes.string.isRequired,\\n              category: PropTypes.string,\\n              parent: PropTypes.string,\\n              title: PropTypes.string.isRequired,\\n              description: PropTypes.string,\\n            }).isRequired,\\n          }).isRequired,\\n        }).isRequired\\n      ),\\n    }).isRequired,\\n  }),\\n}\\n\\nexport default DocFoot\\n\";","export default \"import path from 'path'\\nconst spinner = require('components/snippets/spinner').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardPrimary = require('components/snippets/classes/card-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardPrimary()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <div class=\\\"loader\\\">\\n      <div class=\\\"spinner spinner-animated text-white\\\">\\n        ${spinner({})}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader\\\">\\n      <span class=\\\"spinner spinner-animated text-white\\\">\\n          ${spinner({})}\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"w-full p-8 md:p-10 lg:p-12 bg-gray-200\\\">\\n\\n  <nav class=\\\"leading-none ellipsis\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-md px-0\\\">\\n      Home\\n    </a>\\n    <span class=\\\"separator separator-slash mx-2\\\"></span>\\n    <a href=\\\"#\\\" class=\\\"btn btn-md px-0\\\">\\n      Lorem ipsum dolor sit amet\\n    </a>\\n    <span class=\\\"separator separator-slash mx-2\\\"></span>\\n    <div class=\\\"btn btn-md px-0 pointer-events-none\\\">\\n      Lorem ipsum\\n    </div>\\n  </nav>\\n\\n  <h1 class=\\\"h2 mt-4\\\">\\n    Lorem ipsum dolor sit amet\\n  </h1>\\n\\n</div>\\n`\\n\";","export default \"module.exports = {\\n  variant: ['responsive'],\\n  utility: {\\n    space: {\\n      // styles\\n      px: '1px',\\n      0: '0',\\n      0.5: '0.125rem',\\n      1: '0.25rem',\\n      1.5: '0.375rem',\\n      2: '0.5rem',\\n      2.5: '0.625rem',\\n      3: '0.75rem',\\n      3.5: '0.875rem',\\n      4: '1rem',\\n      5: '1.25rem',\\n      6: '1.5rem',\\n      7: '1.75rem',\\n      8: '2rem',\\n      9: '2.25rem',\\n      10: '2.5rem',\\n    },\\n  },\\n  component: {\\n    '.list': {\\n      // setup\\n      display: 'inline-flex',\\n      flexWrap: 'wrap',\\n      flexDirection: 'row',\\n      alignItems: 'flex-start',\\n      '&:empty': {\\n        display: 'none',\\n      },\\n    },\\n  },\\n}\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-2 items-center justify-center\\\">\\n\\n  <div class=\\\"w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-8/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-6 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-auto flex-1\\\">\\n    <div class=\\\"w-full py-3 px-4 text-sm bg-gray-500\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      bottom center\\n    </button>\\n\\n    <div class=\\\"drop md:drop-bottom md:drop-center\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      top center\\n    </button>\\n\\n    <div class=\\\"drop md:drop-top md:drop-center\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      center middle\\n    </button>\\n\\n    <div class=\\\"drop md:drop-center md:drop-middle\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-touch-overflow\\\" data-xt-slider>\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Media\\\"\\ntitle: \\\"opacity-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-01\\\"\\ndemos: [\\n  \\\"iframe/themes/opacity-listing-v1\\\"\\n]\\n---\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '#demo--overlay-events, #demo--overlay-events-alt',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Overlay(object, {\\n      targets: '#overlay-nested',\\n    })\\n\\n    // log\\n\\n    const log = document.querySelector('#demo--overlay-events-log')\\n\\n    const logAdd = text => {\\n      log.innerHTML += text + '<br/>'\\n      // scroll\\n      log.scrollTo(0, log.scrollHeight)\\n      // hr\\n      clearTimeout(window.logTimeout)\\n      window.logTimeout = setTimeout(() => {\\n        log.innerHTML += '<hr/>'\\n      }, 1000)\\n    }\\n\\n    // first element\\n\\n    const firstEl = document.querySelector('#demo--overlay-events-first-element')\\n\\n    const firstElFnc = () => {\\n      logAdd('<strong>1st element</strong>')\\n      const elements = self.elements\\n      elements[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstEl.addEventListener('click', firstElFnc)\\n\\n    // first target\\n\\n    const firstTr = document.querySelector('#demo--overlay-events-first-target')\\n\\n    const firstTrFnc = () => {\\n      logAdd('<strong>1st target</strong>')\\n      const targets = self.targets\\n      targets[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstTr.addEventListener('click', firstTrFnc)\\n\\n    // block\\n\\n    const blockBtn = document.querySelector('#demo--overlay-events-block')\\n\\n    const blockFnc = () => {\\n      logAdd('<strong>block/unblock</strong>')\\n      for (const element of self.elements) {\\n        if (element.classList.contains('xt-block')) {\\n          element.classList.remove('xt-block')\\n        } else {\\n          element.classList.add('xt-block')\\n        }\\n      }\\n    }\\n\\n    blockBtn.addEventListener('click', blockFnc)\\n\\n    // reinit\\n\\n    const reinitBtn = document.querySelector('#demo--overlay-events-reinit')\\n\\n    const reinitFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    reinitBtn.addEventListener('click', reinitFnc)\\n\\n    // restart\\n\\n    const restartBtn = document.querySelector('#demo--overlay-events-restart')\\n\\n    const restartFnc = () => {\\n      logAdd('<strong>restart</strong>')\\n      self.restart()\\n    }\\n\\n    restartBtn.addEventListener('click', restartFnc)\\n\\n    // destroy\\n\\n    const destroyBtn = document.querySelector('#demo--overlay-events-destroy')\\n\\n    const destroyFnc = () => {\\n      logAdd('<strong>destroy</strong>')\\n      self.destroy()\\n    }\\n\\n    destroyBtn.addEventListener('click', destroyFnc)\\n\\n    // unmount\\n\\n    const unmountBtn = document.querySelector('#demo--overlay-events-unmount')\\n\\n    const unmountFnc = () => {\\n      logAdd('<strong>unmount</strong>')\\n      unmount()\\n    }\\n\\n    unmountBtn.addEventListener('click', unmountFnc)\\n\\n    // events\\n\\n    const events = e => {\\n      let str = 'event <strong>' + e.type + '</strong>' + ' direction <strong>' + self.direction + '</strong>'\\n      if (e.target.getAttribute('title')) {\\n        str += ' from <strong>' + e.target.getAttribute('title') + '</strong>'\\n      } else if (e.target.querySelector(':scope > .btn')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > .btn').textContent + '</strong>'\\n      } else if (e.target.querySelector('.card > *:not(.btn-close) > *')) {\\n        str += ' from <strong>' + e.target.querySelector('.card > *:not(.btn-close) > *').textContent + '</strong>'\\n      } else if (e.target.querySelector(':scope > *')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > *').textContent + '</strong>'\\n      } else if (!e.target.querySelector('*')) {\\n        str += ' from <strong>' + e.target.innerHTML + '</strong>'\\n      }\\n      logAdd(str)\\n    }\\n\\n    object.addEventListener('init.xt', events)\\n    object.addEventListener('destroy.xt', events)\\n    document.addEventListener('on.xt', events, true)\\n    document.addEventListener('off.xt', events, true)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      firstEl.removeEventListener('click', firstElFnc)\\n      firstTr.removeEventListener('click', firstTrFnc)\\n      reinitBtn.removeEventListener('click', reinitFnc)\\n      restartBtn.removeEventListener('click', restartFnc)\\n      destroyBtn.removeEventListener('click', destroyFnc)\\n      unmountBtn.removeEventListener('click', unmountFnc)\\n      object.removeEventListener('init.xt', events)\\n      object.removeEventListener('destroy.xt', events)\\n      document.removeEventListener('on.xt', events, true)\\n      document.removeEventListener('off.xt', events, true)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Scroll\\n */\\nclass Scroll extends Xt.Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    super(object, optionsCustom)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init elements, targets and currents\\n   */\\n  initScope() {\\n    super.initScope()\\n    const self = this\\n    const options = self.options\\n    // loop\\n    self.targets = []\\n    for (const el of self.elements) {\\n      if (!options.sticky) {\\n        // not sticky\\n        self.targets.push(el)\\n      } else {\\n        // sticky container\\n        let container = el.closest('.xt-container')\\n        if (!container) {\\n          container = Xt.createElement('<div class=\\\"xt-container xt-fixed-check\\\"></div>')\\n          el.before(container)\\n          // @FIX mount inside clone components (sticky, scroll etc..)\\n          container.classList.add('xt-ignore', 'xt-ignore-once')\\n          container.append(el)\\n        }\\n        // sticky clone\\n        let target = container.querySelector('.xt-clone')\\n        if (!target) {\\n          target = el.cloneNode(true)\\n          target.classList.add('xt-clone', 'xt-ignore')\\n          target.classList.remove('xt-ignore-once') // @FIX ignore once for mount when moving\\n          for (const elId of target.querySelectorAll('[id]')) {\\n            elId.setAttribute('id', elId.getAttribute('id') + '-clone')\\n          }\\n          for (const elName of target.querySelectorAll('[name]')) {\\n            elName.setAttribute('name', elName.getAttribute('name') + '-clone')\\n          }\\n          container.append(target)\\n        }\\n        self.targets.push(target)\\n        // sticky\\n        el.classList.add('xt-fixed', 'xt-sticky')\\n        if (options.sticky === 'absolute') {\\n          el.classList.add('xt-sticky-absolute')\\n        } else if (options.sticky === 'fixed') {\\n          el.classList.add('xt-sticky-fixed')\\n        } else if (options.sticky === 'fixed-always') {\\n          el.classList.add('xt-sticky-fixed-always')\\n        }\\n        if (target) {\\n          target.classList.add('xt-fixed', 'xt-sticky')\\n          if (options.sticky === 'absolute') {\\n            target.classList.add('xt-sticky-absolute')\\n          } else if (options.sticky === 'fixed') {\\n            target.classList.add('xt-sticky-fixed')\\n          } else if (options.sticky === 'fixed-always') {\\n            target.classList.add('xt-sticky-fixed-always')\\n          }\\n        }\\n      }\\n      // indicator\\n      if (el.classList.contains('scroll-indicator')) {\\n        const indicatorTrigger = Xt.createElement('<div class=\\\"xt-ignore xt-indicator xt-indicator-trigger\\\"></div>')\\n        document.body.append(indicatorTrigger)\\n        const indicatorStart = Xt.createElement('<div class=\\\"xt-ignore xt-indicator xt-indicator-start\\\"></div>')\\n        document.body.append(indicatorStart)\\n        const indicatorEnd = Xt.createElement('<div class=\\\"xt-ignore xt-indicator xt-indicator-end\\\"></div>')\\n        document.body.append(indicatorEnd)\\n        const indicatorStartReal = Xt.createElement('<div class=\\\"xt-ignore xt-indicator xt-indicator-start-real\\\"></div>')\\n        document.body.append(indicatorStartReal)\\n        const indicatorEndReal = Xt.createElement('<div class=\\\"xt-ignore xt-indicator xt-indicator-end-real\\\"></div>')\\n        document.body.append(indicatorEndReal)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * init events\\n   */\\n  initEvents() {\\n    super.initEvents()\\n    const self = this\\n    const options = self.options\\n    // if browser doesn't support scroll\\n    if (!Xt.supportScroll) {\\n      // show all and block\\n      for (const el of self.elements) {\\n        self.eventOn(el, true)\\n        el.classList.add('xt-block')\\n      }\\n      // no events\\n      return\\n    }\\n    // event scroll and resize\\n    const scrollHandler = Xt.dataStorage.put(window, options.on + '/' + self.namespace, self.eventScrollHandler.bind(self).bind(self, false))\\n    const events = [...'scroll resize'.split(' ')]\\n    for (const event of events) {\\n      addEventListener(event, scrollHandler, { passive: true })\\n    }\\n    addEventListener('scroll.trigger.xt', scrollHandler)\\n    requestAnimationFrame(() => {\\n      self.eventScrollHandler()\\n    })\\n  }\\n\\n  //\\n  // handler\\n  //\\n\\n  /**\\n   * element on handler\\n   * @param {Event} e\\n   */\\n  eventScrollHandler(e = null) {\\n    const self = this\\n    Xt.eventDelay(\\n      e,\\n      self.object,\\n      () => {\\n        // handler\\n        self.eventScroll()\\n      },\\n      self.componentNamespace + 'Scroll'\\n    )\\n  }\\n\\n  //\\n  // event\\n  //\\n\\n  /**\\n   * window scroll\\n   */\\n  eventScroll() {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // vars\\n    let currentOn = 0\\n    let currentOff = 0\\n    const currentsOn = []\\n    const currentsOff = []\\n    const scrollingElement = document.scrollingElement\\n    const scrollHeight = scrollingElement.scrollHeight\\n    const scrollTop = scrollingElement.scrollTop\\n    const windowHeight = Xt.windowHeight\\n    const fallback = Xt.windowPercent(options.fallback)\\n    self.detail.distance = Xt.windowPercent(options.distance)\\n    self.detail.trigger = Xt.windowPercent(options.trigger)\\n    const max = self.detail.trigger + scrollHeight - window.innerHeight\\n    // loop\\n    for (const el of self.elements) {\\n      const tr = self.getTargets(el)[0]\\n      if (!el.classList.contains('xt-block') && Xt.visible(el) && tr.offsetParent) {\\n        // filter out document.documentElement\\n        // vars\\n        const elTop = tr.offsetParent.getBoundingClientRect().top + tr.offsetTop + scrollTop // we use parents to not include transforms animations\\n        const elHeight = tr.offsetHeight\\n        // size fix when position fixed\\n        if (options.sticky) {\\n          el.style.width = tr.offsetWidth + 'px'\\n        }\\n        // position\\n        self.detail.start = self.detail.startReal = elTop - windowHeight + Xt.windowPercent(options.start) + self.detail.distance\\n        self.detail.start = self.detail.start < self.detail.trigger ? self.detail.trigger : self.detail.start // limit fixes activation on page top\\n        self.detail.start = self.detail.start > max ? max - fallback : self.detail.start // limit fixes activation on page bottom\\n        self.detail.end = self.detail.endReal = options.end\\n          ? self.detail.start + Xt.windowPercent(options.end) + elHeight - self.detail.distance\\n          : elTop + elHeight + self.detail.trigger - self.detail.distance\\n        self.detail.end = self.detail.end < self.detail.start + fallback ? self.detail.start + fallback : self.detail.end // limit fixes deactivation on page top\\n        // ratio\\n        const position = scrollTop + self.detail.trigger - self.detail.start\\n        Xt.dataStorage.set(el, self.componentNamespace + 'Position', position)\\n        const total = self.detail.end - self.detail.start\\n        self.detail.ratio = Math.max(0, position) / total\\n        self.detail.ratio = self.detail.ratio > 0 ? self.detail.ratio : 0\\n        self.detail.ratio = self.detail.ratio < 1 ? self.detail.ratio : 1\\n        self.detail.ratioInverse = 1 - self.detail.ratio\\n        self.detail.ratioDouble = 1 - Math.abs((self.detail.ratio - 0.5) * 2)\\n        // @FIX fixes on page top || self.detail.start > self.detail.end\\n        if ((position >= 0 && position <= total) || self.detail.start > self.detail.end) {\\n          // inside\\n          const changed = self.checkOn(el)\\n          if (changed) {\\n            currentsOn.push(el)\\n            // activation\\n            Xt.dataStorage.set(el, self.componentNamespace + 'OnCount', currentOn)\\n            Xt.dataStorage.set(el, self.componentNamespace + 'OnTot', currentsOn.length)\\n            currentOn++\\n          }\\n        } else {\\n          // outside\\n          const changed = self.checkOff(el)\\n          el.classList.add('scroll-outside')\\n          if (changed) {\\n            el.classList.add('scroll-done')\\n            currentsOff.push(el)\\n            // deactivate\\n            Xt.dataStorage.set(el, self.componentNamespace + 'OffCount', currentOff)\\n            Xt.dataStorage.set(el, self.componentNamespace + 'OffTot', currentsOff.length)\\n            currentOff++\\n          }\\n        }\\n        // indicator\\n        if (el.classList.contains('scroll-indicator')) {\\n          const triggerEl = document.body.querySelector('.xt-indicator-trigger')\\n          triggerEl.style.top = self.detail.trigger + 'px'\\n          const startEl = document.body.querySelector('.xt-indicator-start')\\n          startEl.style.top = self.detail.start - scrollTop + 'px'\\n          const endEl = document.body.querySelector('.xt-indicator-end')\\n          endEl.style.top = self.detail.end - scrollTop + 'px'\\n          const startRealEl = document.body.querySelector('.xt-indicator-start-real')\\n          startRealEl.style.top = self.detail.startReal - scrollTop + 'px'\\n          const endRealEl = document.body.querySelector('.xt-indicator-end-real')\\n          endRealEl.style.top = self.detail.endReal - scrollTop + 'px'\\n        }\\n        cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'ScrollDispatchFrame'))\\n        Xt.dataStorage.set(\\n          el,\\n          self.componentNamespace + 'ScrollDispatchFrame',\\n          requestAnimationFrame(() => {\\n            // disabled\\n            if (self.disabled) {\\n              return\\n            }\\n            // listener dispatch\\n            el.dispatchEvent(new CustomEvent('change.xt'))\\n          })\\n        )\\n      }\\n    }\\n    // direction\\n    self.inverse = self.detail.scrollTopOld > scrollTop\\n    self.detail.scrollTopOld = scrollTop\\n    // currents\\n    for (const el of currentsOn) {\\n      // event\\n      self.eventOn(el)\\n    }\\n    for (const el of currentsOff) {\\n      // event\\n      self.eventOff(el)\\n    }\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nScroll.componentName = 'xt-scroll'\\nScroll.optionsDefault = {\\n  // scroll\\n  sticky: false,\\n  distance: 100,\\n  trigger: '100%',\\n  start: '100%',\\n  end: false,\\n  fallback: 0,\\n  // element\\n  elements: false,\\n  targets: false,\\n  // class\\n  class: 'fade fade-scroll',\\n  classIn: 'fade-in',\\n  classOut: 'fade-out',\\n  // quantity\\n  min: 0,\\n  max: 'Infinity',\\n  // event\\n  on: 'on.xt.scroll',\\n  // timing\\n  instant: true,\\n  // other\\n  aria: false,\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Scroll = Scroll\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Scroll.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Scroll.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Scroll(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Featured\\\"\\ntitle: \\\"industrial-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-24\\\"\\ndemos: [\\n  \\\"iframe/themes/industrial-featured-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ auto: { time: 2000, initial: false, step: 3, inverse: true, pause: ':scope > button, .toggle' } }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()} active-toggle\\\">\\n    Toggle 2\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 3\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 4\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 3\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 4\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const img = require('components/snippets/img').default\\nconst imgAlt = require('components/snippets/img').alt\\nconst iconX = require('components/snippets/icons').iconX\\n\\nexport default () => {\\n  return `\\n<div class=\\\"listing-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"listing-page_inner\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <div class=\\\"listing-page_item\\\">\\n            <div class=\\\"listing-page_item_inner\\\">\\n\\n              <div class=\\\"card listing-page_front\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"w-full\\\">\\n                      ${img({})}\\n                    </div>\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"h4\\\">\\n                        Lorem Ipsum\\n                      </div>\\n                      <address class=\\\"listing-page_address\\\">\\n                        Street lorem ipsum 42, 00134 City, Nation\\n                      </address>\\n                      <div class=\\\"listing-page_btns\\\">\\n                        <a href=\\\"#\\\" class=\\\"btn\\\">\\n                          Take me here\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary listing-page_action\\\">\\n                            More info\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"card listing-page_back\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                  ${iconX()}\\n                </div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Contacts\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Email:</strong> <a href=\\\"mailto:info@info.com\\\">info@info.com</a><br/>\\n                        <strong>Phone:</strong> <a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/>\\n                      </div>\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Timetable\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Monday:</strong> 15:30–19:30<br/>\\n                        <strong>Tuesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Wednesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Thursday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Friday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Saturday:</strong> 10:00–19:30<br/>\\n                        <strong>Sunday:</strong> 10:00–13:00, 15:30–19:30\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <div class=\\\"listing-page_item\\\">\\n            <div class=\\\"listing-page_item_inner\\\">\\n\\n              <div class=\\\"card listing-page_front\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"w-full\\\">\\n                      ${imgAlt({})}\\n                    </div>\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"h4\\\">\\n                        Dolor sit amet\\n                      </div>\\n                      <address class=\\\"listing-page_address\\\">\\n                        Street lorem ipsum 42, 00134 City, Nation\\n                      </address>\\n                      <div class=\\\"listing-page_btns\\\">\\n                        <a href=\\\"#\\\" class=\\\"btn\\\">\\n                          Take me here\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary listing-page_action\\\">\\n                            More info\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"card listing-page_back\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                  ${iconX()}\\n                </div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Contacts\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Email:</strong> <a href=\\\"mailto:info@info.com\\\">info@info.com</a><br/>\\n                        <strong>Phone:</strong> <a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/>\\n                      </div>\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Timetable\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Monday:</strong> 15:30–19:30<br/>\\n                        <strong>Tuesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Wednesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Thursday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Friday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Saturday:</strong> 10:00–19:30<br/>\\n                        <strong>Sunday:</strong> 10:00–13:00, 15:30–19:30\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <div class=\\\"listing-page_item\\\">\\n            <div class=\\\"listing-page_item_inner\\\">\\n\\n              <div class=\\\"card listing-page_front\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"w-full\\\">\\n                      ${img({})}\\n                    </div>\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"h4\\\">\\n                        Consectetur adipiscing elit. Proin molestie diam nec euismod commodo\\n                      </div>\\n                      <address class=\\\"listing-page_address\\\">\\n                        Street lorem ipsum 42, 00134 City, Nation\\n                      </address>\\n                      <div class=\\\"listing-page_btns\\\">\\n                        <a href=\\\"#\\\" class=\\\"btn\\\">\\n                          Take me here\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary listing-page_action\\\">\\n                            More info\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"card listing-page_back\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                  ${iconX()}\\n                </div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Contacts\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Email:</strong> <a href=\\\"mailto:info@info.com\\\">info@info.com</a><br/>\\n                        <strong>Phone:</strong> <a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/>\\n                      </div>\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Timetable\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Monday:</strong> 15:30–19:30<br/>\\n                        <strong>Tuesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Wednesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Thursday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Friday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Saturday:</strong> 10:00–19:30<br/>\\n                        <strong>Sunday:</strong> 10:00–13:00, 15:30–19:30\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <div class=\\\"listing-page_item\\\">\\n            <div class=\\\"listing-page_item_inner\\\">\\n\\n              <div class=\\\"card listing-page_front\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"w-full\\\">\\n                      ${img({})}\\n                    </div>\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"h4\\\">\\n                        Lorem Ipsum\\n                      </div>\\n                      <address class=\\\"listing-page_address\\\">\\n                        Street lorem ipsum 42, 00134 City, Nation\\n                      </address>\\n                      <div class=\\\"listing-page_btns\\\">\\n                        <a href=\\\"#\\\" class=\\\"btn\\\">\\n                          Take me here\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary listing-page_action\\\">\\n                            More info\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"card listing-page_back\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                  ${iconX()}\\n                </div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item listing-page_content\\\">\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Contacts\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Email:</strong> <a href=\\\"mailto:info@info.com\\\">info@info.com</a><br/>\\n                        <strong>Phone:</strong> <a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/>\\n                      </div>\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Timetable\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Monday:</strong> 15:30–19:30<br/>\\n                        <strong>Tuesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Wednesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Thursday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Friday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Saturday:</strong> 10:00–19:30<br/>\\n                        <strong>Sunday:</strong> 10:00–13:00, 15:30–19:30\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <div class=\\\"listing-page_item\\\">\\n            <div class=\\\"listing-page_item_inner\\\">\\n\\n              <div class=\\\"card listing-page_front\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"w-full\\\">\\n                      ${imgAlt({})}\\n                    </div>\\n                    <div class=\\\"card-item\\\">\\n                      <div class=\\\"h4\\\">\\n                        Dolor sit amet\\n                      </div>\\n                      <address class=\\\"listing-page_address\\\">\\n                        Street lorem ipsum 42, 00134 City, Nation\\n                      </address>\\n                      <div class=\\\"listing-page_btns\\\">\\n                        <a href=\\\"#\\\" class=\\\"btn\\\">\\n                          Take me here\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary listing-page_action\\\">\\n                            More info\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"card listing-page_back\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                  ${iconX()}\\n                </div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item\\\">\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Contacts\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Email:</strong> <a href=\\\"mailto:info@info.com\\\">info@info.com</a><br/>\\n                        <strong>Phone:</strong> <a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/>\\n                      </div>\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Timetable\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Monday:</strong> 15:30–19:30<br/>\\n                        <strong>Tuesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Wednesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Thursday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Friday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Saturday:</strong> 10:00–19:30<br/>\\n                        <strong>Sunday:</strong> 10:00–13:00, 15:30–19:30\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"listing-page_col\\\">\\n          <div class=\\\"listing-page_item\\\">\\n            <div class=\\\"listing-page_item_inner\\\">\\n\\n              <div class=\\\"card listing-page_front\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"w-full\\\">\\n                      ${img({})}\\n                    </div>\\n                    <div class=\\\"card-item\\\">\\n                      <div class=\\\"h4\\\">\\n                        Consectetur adipiscing elit. Proin molestie diam nec euismod commodo\\n                      </div>\\n                      <address class=\\\"listing-page_address\\\">\\n                        Street lorem ipsum 42, 00134 City, Nation\\n                      </address>\\n                      <div class=\\\"listing-page_btns\\\">\\n                        <a href=\\\"#\\\" class=\\\"btn\\\">\\n                          Take me here\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary listing-page_action\\\">\\n                            More info\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"card listing-page_back\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                  ${iconX()}\\n                </div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item\\\">\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Contacts\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Email:</strong> <a href=\\\"mailto:info@info.com\\\">info@info.com</a><br/>\\n                        <strong>Phone:</strong> <a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/>\\n                      </div>\\n                      <div class=\\\"listing-page_subtitle\\\">\\n                        Timetable\\n                      </div>\\n                      <div class=\\\"listing-page_additional\\\">\\n                        <strong>Monday:</strong> 15:30–19:30<br/>\\n                        <strong>Tuesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Wednesday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Thursday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Friday:</strong> 10:00–13:00, 15:30–19:30<br/>\\n                        <strong>Saturday:</strong> 10:00–19:30<br/>\\n                        <strong>Sunday:</strong> 10:00–13:00, 15:30–19:30\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n`\\n}\\n\";","export default \"export default () => {\\n  return `text-white links-inverse rounded-md transform bg-accent-500 hover:bg-accent-600 hover:shadow-xl hover:-translate-y-2 active:bg-accent-700 active:shadow-md active:-translate-y-1`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-once\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Lorem ipsum\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Dolor sit amet\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Lorem Ipsum\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Dolor sit amet\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-6/12\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-row\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-6/12\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-row\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-6/12\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-row\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-6/12\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-row\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"export default () => {\\n  return `border rounded-full text-accent-400 border-accent-200 bg-accent-200`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '#demo--overlay-nested-disable-toggle',\\n  mount: object => {\\n    // event\\n\\n    const click = () => {\\n      document.querySelector('#demo--overlay-nested-disable').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    object.addEventListener('click', click)\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"brands-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-25\\\"\\ndemos: [\\n  \\\"iframe/themes/brands-featured-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<ul class=\\\"demo--list-custom\\\">\\n  <li>\\n    <p><strong>Lorem ipsum dolor sit amet.</strong></p>\\n    <ul class=\\\"demo--list-custom\\\">\\n      <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n      <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</li>\\n    </ul>\\n  </li>\\n  <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</li>\\n  <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur. Maecenas pulvinar mauris eget pharetra elementum.</li>\\n</ul>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center demo--toggle-animation-inverse\\\" data-xt-toggle>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <div class=\\\"card toggle-inverse ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle-inverse ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\"\\n  data-xt-toggle=\\\"{ elements: ':scope > .btn', targets: ':scope > .demo--toggle-custom-options' }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <div class=\\\"card demo--toggle-custom-options ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card demo--toggle-custom-options ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card demo--toggle-custom-options ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    button\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    button primary\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md\\\">\\n    button text\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md link\\\">\\n    button link\\n  </button>\\n\\n</div>\\n`\\n}\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"relative py-4 px-6 bg-accent-500\\\">\\n\\n  <div class=\\\"drop-container drop-container-static\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      static\\n    </button>\\n\\n    <div class=\\\"drop p-0\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-full ${cardDefaultDrop()}\\\">\\n          <div class=\\\"md:card-group\\\">\\n            <div class=\\\"card-md md:w-7/12 bg-gray-400\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n            <div class=\\\"md:w-5/12\\\">\\n              <div class=\\\"card-md bg-gray-500\\\">\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              </div>\\n              <div class=\\\"card-md\\\">\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"rounded-b-md\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '15%' })}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const img = require('components/snippets/img').default\\nconst imgAlt = require('components/snippets/img').alt\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner\\\">\\n\\n    <div class=\\\"slide\\\">\\n      <div class=\\\"hero hero--center hero--big\\\">\\n        <div class=\\\"hero_inner\\\">\\n          <div class=\\\"hero_asset\\\">\\n            ${img({ classes: 'object-cover object-center', loading: 'eager' })}\\n          </div>\\n          <div class=\\\"hero_content\\\">\\n            <a href=\\\"#\\\" class=\\\"hero_content_inner\\\">\\n              <div class=\\\"h1\\\">\\n                Lorem ipsum\\n              </div>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n      <div class=\\\"hero hero--center\\\">\\n        <div class=\\\"hero_inner\\\">\\n          <div class=\\\"hero_asset\\\">\\n            ${imgAlt({ classes: 'object-cover object-center', loading: 'eager' })}\\n          </div>\\n          <div class=\\\"hero_content\\\">\\n            <a href=\\\"#\\\" class=\\\"hero_content_inner\\\">\\n              <div class=\\\"h1\\\">\\n                Lorem ipsum dolor sit amet\\n              </div>\\n              <div class=\\\"list list-4\\\">\\n                <div class=\\\"btn\\\">\\n                    Lorem ipsum\\n                </div>\\n              </div>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n      <div class=\\\"hero\\\">\\n        <div class=\\\"hero_inner\\\">\\n          <div class=\\\"hero_asset\\\">\\n            ${img({ classes: 'object-cover object-center', loading: 'eager' })}\\n          </div>\\n          <div class=\\\"hero_content\\\">\\n            <a href=\\\"#\\\" class=\\\"hero_content_inner\\\">\\n              <div class=\\\"h1\\\">\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n              </div>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n      <div class=\\\"hero\\\">\\n        <div class=\\\"hero_inner\\\">\\n          <div class=\\\"hero_asset\\\">\\n            ${imgAlt({ classes: 'object-cover object-center', loading: 'eager' })}\\n          </div>\\n          <div class=\\\"hero_content\\\">\\n            <div class=\\\"hero_content_inner\\\">\\n              <div class=\\\"h1\\\">\\n                Lorem ipsum dolor sit amet\\n              </div>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              <div class=\\\"list list-4\\\">\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  Lorem ipsum\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  Dolor sit amet\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n      <div class=\\\"hero hero--middle hero--left\\\">\\n        <div class=\\\"hero_inner\\\">\\n          <div class=\\\"hero_asset\\\">\\n            ${img({ classes: 'object-cover object-center', loading: 'eager' })}\\n          </div>\\n          <div class=\\\"hero_content\\\">\\n            <div class=\\\"hero_content_inner\\\">\\n              <div class=\\\"h1\\\">\\n                Lorem ipsum dolor sit amet\\n              </div>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              <div class=\\\"list list-4\\\">\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  Lorem ipsum\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  Dolor sit amet\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n      <div class=\\\"hero hero--middle hero--right\\\">\\n        <div class=\\\"hero_inner\\\">\\n          <div class=\\\"hero_asset\\\">\\n            ${imgAlt({ classes: 'object-cover object-center', loading: 'eager' })}\\n          </div>\\n          <div class=\\\"hero_content\\\">\\n            <div class=\\\"hero_content_inner\\\">\\n              <div class=\\\"h1\\\">\\n                Lorem ipsum dolor sit amet\\n              </div>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              <div class=\\\"list list-4\\\">\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  Lorem ipsum\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  Dolor sit amet\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n`\\n}\\n\";","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","export default \"import path from 'path'\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"text-white links-inverse py-4 px-6 bg-accent-500\\\">\\n\\n  <div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n    Default\\n  </div>\\n\\n  ${iconSearch({ classes: 'icon-md' })}\\n\\n  <div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n    Accent\\n  </div>\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-50' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-100' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-200' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-300' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-400' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-500' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-600' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-700' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-800' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-accent-900' })}\\n\\n  <div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n    White opacity\\n  </div>\\n\\n  ${iconSearch({ classes: 'icon-md text-white text-opacity-0' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-white text-opacity-25' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-white text-opacity-50' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-white text-opacity-75' })}\\n\\n  ${iconSearch({ classes: 'icon-md text-white text-opacity-100' })}\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Media\\\"\\ntitle: \\\"fashion-gallery-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-10\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-gallery-v1\\\"\\n]\\n---\\n\";","export default \".demo--slider-overflow-auto {\\n  &.xt-disabled {\\n    .slide {\\n      @apply opacity-100;\\n    }\\n  }\\n  &.xt-overflow-auto {\\n    .slides-inner {\\n      justify-content: center;\\n    }\\n  }\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<br><br><br><br><br><br><br>\\n\\n<div data-xt-sticky=\\\"{ sticky: 'fixed-always' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Disable\\n\\nYou can disable styles and javascript using `.overlay-disable`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.overlay-disable`       | `overlay-disable !important`                | `responsive`                | Reset overlay styles and javascript            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/disable\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Preset\\n\\nYou can overlay that covers the screen with `.overlay-screen`, remember to use also align and justify the `.card`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.overlay-screen`       | `overlay-screen`                | `responsive`                | Overlay that covers the screen            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/screen\\\">\\n  </demovanilla>\\n</demo>\\n\\nWith `.overlay-screen` you can also use **tailwind classes** to modify `.overlay-container` **position** and **size**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/position\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Close fixed\\n\\nYou can have the `.btn-close` with `fixed z-top` to have it always visible also when scrolling.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/close-fixed\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Other\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `closeAuto:Boolean`                          | `true`        | Close automatically on `closeauto.trigger.xt` event            |\\n| Option                  | `closeInside:Query`                          | `'.overlay-dismiss, .btn-close, .backdrop'`        | Query Node inside to close on click            |\\n| Option                  | `appendTo:Query`                          | `'body'`        | Append targets to Node on activation            |\\n| Option                  | `scrollbar:Boolean`                          | `true`        | Hide body scrollbars on activation            |\\n| Option                  | `focusLimit:Boolean`                          | `true`        | Limit focus on activation            |\\n\\n</div>\\n\";","export default \"const scrollContainerBlocks = document.querySelectorAll('.demo--scroll-block > *')\\n\\nif (scrollContainerBlocks.length) {\\n  setTimeout(() => {\\n    // after 2 seconds\\n    for (const scrollContainerBlock of scrollContainerBlocks) {\\n      scrollContainerBlock.classList.add('scroll-block')\\n    }\\n    alert('scroll blocked')\\n  }, 2000)\\n}\\n\";","export default \"import React from 'react'\\n\\nclass DocFullscreen extends React.Component {\\n  render() {\\n    return (\\n      <>\\n        <div id=\\\"gatsby_open-full-trigger\\\"></div>\\n        <div id=\\\"gatsby_open-full\\\" className=\\\"toggle\\\">\\n          <div className=\\\"btn btn-close\\\" aria-label=\\\"Close\\\">\\n            <svg\\n              xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n              className=\\\"icon\\\"\\n              width=\\\"44\\\"\\n              height=\\\"44\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              strokeWidth=\\\"1.5\\\"\\n              stroke=\\\"#2c3e50\\\"\\n              fill=\\\"none\\\"\\n              strokeLinecap=\\\"round\\\"\\n              strokeLinejoin=\\\"round\\\"\\n            >\\n              <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n              <line x1=\\\"18\\\" y1=\\\"6\\\" x2=\\\"6\\\" y2=\\\"18\\\" />\\n              <line x1=\\\"6\\\" y1=\\\"6\\\" x2=\\\"18\\\" y2=\\\"18\\\" />\\n            </svg>\\n          </div>\\n          <div className=\\\"card-content\\\" id=\\\"gatsby_open-full-content\\\"></div>\\n        </div>\\n      </>\\n    )\\n  }\\n}\\n\\nexport default DocFullscreen\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--toggle-timing',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      delayOn: current => {\\n        return Math.min(current * 150, 300)\\n      },\\n      delayOff: (current, total) => {\\n        return Math.min((total - current) * 150, 300)\\n      },\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\\nXt.mount.push({\\n  matches: '.demo--toggle-timing--event',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      on: 'mouseenter',\\n      off: 'mouseleave',\\n      delayOn: current => {\\n        return Math.min(current * 150, 300)\\n      },\\n      delayOff: (current, total) => {\\n        return Math.min((total - current) * 150, 300)\\n      },\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \".demo--toggle-timing, .demo--toggle-timing--event {\\n  .card {\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n    &.inverse {\\n      @apply translate-x-4;\\n    }\\n    /* in */\\n    &.in {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    /* out */\\n    &.out {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"/**\\n * call only if in browser mode\\n * https://www.gatsbyjs.org/docs/debugging-html-builds/#how-to-check-if-code-classlanguage-textwindowcode-is-defined\\n */\\n\\nif (typeof window !== 'undefined') {\\n  /**\\n   * remove\\n   * https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/remove()/remove().md\\n   */\\n  (function (arr) {\\n    arr.forEach(function (item) {\\n      if (item.hasOwnProperty('remove')) {\\n        return;\\n      }\\n      Object.defineProperty(item, 'remove', {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true,\\n        value: function remove() {\\n          if (this.parentNode === null) {\\n            return;\\n          }\\n          this.parentNode.removeChild(this);\\n        }\\n      });\\n    });\\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\\n\\n  /**\\n   * prepend\\n   * https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/prepend()/prepend().md\\n   */\\n  (function (arr) {\\n    arr.forEach(function (item) {\\n      if (item.hasOwnProperty('prepend')) {\\n        return;\\n      }\\n      Object.defineProperty(item, 'prepend', {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true,\\n        value: function prepend() {\\n          var argArr = Array.prototype.slice.call(arguments),\\n            docFrag = document.createDocumentFragment();\\n\\n          argArr.forEach(function (argItem) {\\n            var isNode = argItem instanceof Node;\\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\\n          });\\n\\n          this.insertBefore(docFrag, this.firstChild);\\n        }\\n      });\\n    });\\n  })([Element.prototype, Document.prototype, DocumentFragment.prototype]);\\n\\n  /**\\n   * append\\n   * https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/append()/append().md\\n   */\\n  (function (arr) {\\n    arr.forEach(function (item) {\\n      if (item.hasOwnProperty('append')) {\\n        return;\\n      }\\n      Object.defineProperty(item, 'append', {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true,\\n        value: function append() {\\n          let argArr = Array.prototype.slice.call(arguments),\\n            docFrag = document.createDocumentFragment();\\n\\n          argArr.forEach(function (argItem) {\\n            let isNode = argItem instanceof Node;\\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\\n          });\\n\\n          this.appendChild(docFrag);\\n        }\\n      });\\n    });\\n  })([Element.prototype, Document.prototype, DocumentFragment.prototype]);\\n\\n  /**\\n   * before\\n   * https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/before()/before().md\\n   */\\n  (function (arr) {\\n    arr.forEach(function (item) {\\n      if (item.hasOwnProperty('before')) {\\n        return;\\n      }\\n      Object.defineProperty(item, 'before', {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true,\\n        value: function before() {\\n          let argArr = Array.prototype.slice.call(arguments),\\n            docFrag = document.createDocumentFragment();\\n\\n          argArr.forEach(function (argItem) {\\n            let isNode = argItem instanceof Node;\\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\\n          });\\n\\n          this.parentNode.insertBefore(docFrag, this);\\n        }\\n      });\\n    });\\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\\n\\n  /**\\n   * after\\n   * https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/after()/after().md\\n   */\\n  (function (arr) {\\n    arr.forEach(function (item) {\\n      if (item.hasOwnProperty('after')) {\\n        return;\\n      }\\n      Object.defineProperty(item, 'after', {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true,\\n        value: function after() {\\n          var argArr = Array.prototype.slice.call(arguments),\\n            docFrag = document.createDocumentFragment();\\n\\n          argArr.forEach(function (argItem) {\\n            var isNode = argItem instanceof Node;\\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\\n          });\\n\\n          this.parentNode.insertBefore(docFrag, this.nextSibling);\\n        }\\n      });\\n    });\\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\\n\\n  /**\\n   * composedPath\\n   * https://gist.github.com/rockinghelvetica/00b9f7b5c97a16d3de75ba99192ff05c\\n   */\\n  (function(E, d, w) {\\n    if(!E.composedPath) {\\n      E.composedPath = function() {\\n        if (this.path) {\\n          return this.path;\\n        }\\n        var target = this.target;\\n\\n        this.path = [];\\n        while (target.parentNode !== null) {\\n          this.path.push(target);\\n          target = target.parentNode;\\n        }\\n        this.path.push(d, w);\\n        return this.path;\\n      }\\n    }\\n  })(Event.prototype, document, window);\\n\\n  /**\\n   * :scope\\n   * https://github.com/jonathantneal/element-qsa-scope\\n   */\\n  (function (ElementPrototype) {\\n    try {\\n      // test for scope support\\n      document.querySelector(':scope *');\\n    } catch (error) {\\n      let polyfill = function (qsa) {\\n        return function (selectors) {\\n          // whether the selectors contain :scope\\n          let hasScope = selectors && scope.test(selectors);\\n          if (hasScope) {\\n            // fallback attribute\\n            let attr = 'q' + Math.floor(Math.random() * 9000000) + 1000000;\\n            // replace :scope with the fallback attribute\\n            arguments[0] = selectors.replace(scope, '[' + attr + ']');\\n            // add the fallback attribute\\n            this.setAttribute(attr, '');\\n            // results of the qsa\\n            let elementOrNodeList = qsa.apply(this, arguments);\\n            // remove the fallback attribute\\n            this.removeAttribute(attr);\\n            // return the results of the qsa\\n            return elementOrNodeList;\\n          } else {\\n            // return the results of the qsa\\n            return qsa.apply(this, arguments);\\n          }\\n        };\\n      }\\n      // scope regex\\n      let scope = /:scope(?![\\\\w-])/gi;\\n      // polyfill Element#querySelector\\n      let querySelectorWithScope = polyfill(ElementPrototype.querySelector);\\n      ElementPrototype.querySelector = function querySelector(selectors) {\\n        return querySelectorWithScope.apply(this, arguments);\\n      };\\n      // polyfill Element#querySelectorAll\\n      let querySelectorAllWithScope = polyfill(ElementPrototype.querySelectorAll);\\n      ElementPrototype.querySelectorAll = function querySelectorAll(selectors) {\\n        return querySelectorAllWithScope.apply(this, arguments);\\n      };\\n      // polyfill Element#matches\\n      if (ElementPrototype.matches) {\\n        let matchesWithScope = polyfill(ElementPrototype.matches);\\n        ElementPrototype.matches = function matches(selectors) {\\n          return matchesWithScope.apply(this, arguments);\\n        };\\n      }\\n      // polyfill Element#closest\\n      if (ElementPrototype.closest) {\\n        let closestWithScope = polyfill(ElementPrototype.closest);\\n        ElementPrototype.closest = function closest(selectors) {\\n          return closestWithScope.apply(this, arguments);\\n        };\\n      }\\n    }\\n  })(Element.prototype);\\n\\n  /**\\n   * closest\\n   * https://github.com/jonathantneal/closest\\n   */\\n  (function (ElementProto) {\\n    if (typeof ElementProto.matches !== 'function') {\\n      ElementProto.matches = ElementProto.msMatchesSelector || ElementProto.mozMatchesSelector || ElementProto.webkitMatchesSelector || function matches(selector) {\\n        var element = this;\\n        var elements = (element.document || element.ownerDocument).querySelectorAll(selector);\\n        var index = 0;\\n        while (elements[index] && elements[index] !== element) {\\n          ++index;\\n        }\\n        return Boolean(elements[index]);\\n      };\\n    }\\n    if (typeof ElementProto.closest !== 'function') {\\n      ElementProto.closest = function closest(selector) {\\n        var element = this;\\n        while (element && element.nodeType === 1) {\\n          if (element.matches(selector)) {\\n            return element;\\n          }\\n          element = element.parentNode;\\n        }\\n        return null;\\n      };\\n    }\\n  })(window.Element.prototype);\\n\\n  /**\\n   * scrollingElement\\n   * https://github.com/yangg/scrolling-element\\n   */\\n  (function () {\\n    if (document.scrollingElement) {\\n      return;\\n    }\\n    let element = null;\\n\\n    function scrollingElement() {\\n      if (element) {\\n        return element;\\n      } else if (document.body.scrollTop) {\\n        // speed up if scrollTop > 0\\n        return (element = document.body);\\n      }\\n      let iframe = document.createElement('iframe');\\n      iframe.style.height = '1px';\\n      document.documentElement.appendChild(iframe);\\n      let doc = iframe.contentWindow.document;\\n      doc.write('<!DOCTYPE html><div style=\\\"height:9999em\\\">x</div>');\\n      doc.close();\\n      let isCompliant = doc.documentElement.scrollHeight > doc.body.scrollHeight;\\n      iframe.parentNode.removeChild(iframe);\\n      return (element = isCompliant ? document.documentElement : document.body);\\n    }\\n\\n    Object.defineProperty(document, 'scrollingElement', {\\n      get: scrollingElement\\n    })\\n  })();\\n\\n  /**\\n   * includes\\n   * https://tc39.github.io/ecma262/#sec-array.prototype.includes\\n   */\\n  if (!Array.prototype.includes) {\\n    Object.defineProperty(Array.prototype, 'includes', {\\n      value: function(valueToFind, fromIndex) {\\n\\n        if (this == null) {\\n          throw new TypeError('\\\"this\\\" is null or not defined');\\n        }\\n\\n        // 1. Let O be ? ToObject(this value).\\n        var o = Object(this);\\n\\n        // 2. Let len be ? ToLength(? Get(O, \\\"length\\\")).\\n        var len = o.length >>> 0;\\n\\n        // 3. If len is 0, return false.\\n        if (len === 0) {\\n          return false;\\n        }\\n\\n        // 4. Let n be ? ToInteger(fromIndex).\\n        //    (If fromIndex is undefined, this step produces the value 0.)\\n        var n = fromIndex | 0;\\n\\n        // 5. If n ≥ 0, then\\n        //  a. Let k be n.\\n        // 6. Else n < 0,\\n        //  a. Let k be len + n.\\n        //  b. If k < 0, let k be 0.\\n        var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\\n\\n        function sameValueZero(x, y) {\\n          return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\\n        }\\n\\n        // 7. Repeat, while k < len\\n        while (k < len) {\\n          // a. Let elementK be the result of ? Get(O, ! ToString(k)).\\n          // b. If SameValueZero(valueToFind, elementK) is true, return true.\\n          if (sameValueZero(o[k], valueToFind)) {\\n            return true;\\n          }\\n          // c. Increase k by 1.\\n          k++;\\n        }\\n\\n        // 8. Return false\\n        return false;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * findIndex\\n   * https://tc39.github.io/ecma262/#sec-array.prototype.findindex\\n   */\\n  if (!Array.prototype.findIndex) {\\n    Object.defineProperty(Array.prototype, 'findIndex', {\\n      value: function (predicate) {\\n        if (this == null) {\\n          throw new TypeError('\\\"this\\\" is null or not defined');\\n        }\\n        var o = Object(this);\\n        var len = o.length >>> 0;\\n        if (typeof predicate !== 'function') {\\n          throw new TypeError('predicate must be a function');\\n        }\\n        var thisArg = arguments[1];\\n        var k = 0;\\n        while (k < len) {\\n          var kValue = o[k];\\n          if (predicate.call(thisArg, kValue, k, o)) {\\n            return k;\\n          }\\n          k++;\\n        }\\n        return -1;\\n      },\\n      configurable: true,\\n      writable: true\\n    });\\n  }\\n}\\n\";","export default \"#iframe--sequential-megamenu-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * .megamenus\\n      */\\n\\n    .megamenus {\\n      display: flex;\\n      position: relative;\\n    }\\n\\n    .megamenus_line {\\n      position: fixed;\\n      left: 0;\\n      top: 0;\\n      background: @shade-700;\\n    }\\n\\n    .btn_megamenus {\\n      .btn-lg();\\n      .padding(y, 1.5em);\\n    }\\n\\n    .megamenu_outer {\\n      > .drop {\\n        .drop-nospace();\\n        .drop-squared();\\n        > .drop-inner {\\n          .text-white links-inverse();\\n          > .drop-design {\\n            border-color: @shade-700;\\n            background: @shade-700;\\n            box-shadow: @shadow-dark;\\n          }\\n        }\\n      }\\n      // animation\\n      > .drop {\\n        > .drop-inner {\\n          overflow: hidden;\\n          .transition-none() !important;\\n          > .drop-design {\\n            opacity: 1;\\n          }\\n          > .drop-content {\\n            opacity: 1;\\n          }\\n        }\\n      }\\n      &.in {\\n        > .drop {\\n          > .drop-inner {\\n            .transition-none() !important;\\n            > .drop-design {\\n              opacity: 1;\\n              .transition-none();\\n            }\\n            > .drop-content {\\n              opacity: 1;\\n              .transition-none();\\n            }\\n          }\\n        }\\n      }\\n      &.out {\\n        > .drop {\\n          > .drop-inner {\\n            .transition-none() !important;\\n            > .drop-design {\\n              opacity: 1;\\n              .transition-none();\\n            }\\n            > .drop-content {\\n              opacity: 1;\\n              .transition-none();\\n            }\\n          }\\n        }\\n      }\\n    }\\n\\n    .megamenu {\\n      .padding(y, 6rem);\\n    }\\n\\n    .megamenu_inner {\\n      > .row {\\n        .row(medium);\\n        .row(big, lg);\\n      }\\n    }\\n\\n    .megamenu_col_left {\\n      .col(12);\\n      .col(4, sm);\\n      .col(3, lg);\\n      padding-right: 4rem !important;\\n    }\\n\\n    .megamenu_col_right {\\n      .col(12);\\n      .col(8, sm);\\n      .col(9, lg);\\n      > .row {\\n        .row-y(small);\\n        .row-x(medium);\\n        .row-x(big, lg);\\n        // max-height set in style\\n        flex-direction: column;\\n        flex-wrap: wrap;\\n      }\\n    }\\n\\n    .megamenu_item_col {\\n      .col(6);\\n      .col(4, sm);\\n    }\\n\\n    .megamenu_item_title {\\n      .link-none();\\n      .spacing-tiny();\\n      .font-sans-semibold();\\n      .line-height-md();\\n      font-size: 1rem;\\n      color: @white;\\n      letter-spacing: .025em;\\n    }\\n\\n    .megamenu_item_content {\\n      > .list-block {\\n        .list(none);\\n      }\\n      a {\\n        .link-none();\\n        .padding(y, .25rem);\\n        .font-sans-semibold();\\n        .line-height-md();\\n        font-size: 13px;\\n        color: fade(@white, 50%) !important;\\n        &:hover, &:active, &.active {\\n          color: @white !important;\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-y loader-y-animated\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-y loader-y-animated\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Smooth\\n */\\nclass Smooth extends Xt.Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    super(object, optionsCustom)\\n  }\\n}\\n\\n//\\n// options\\n//\\n\\nSmooth.componentName = 'xt-smooth'\\nSmooth.optionsDefault = {\\n  // class\\n  class: false,\\n  // event\\n  on: false,\\n  // wheel\\n  wheel: {\\n    selector: 'scrollingElement',\\n    block: false,\\n    limit: true,\\n    transform: false,\\n    horizontal: false,\\n    factor: 1,\\n    friction: delta => {\\n      return delta / 9\\n    },\\n    frictionLimit: 1.5,\\n  },\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Smooth = Smooth\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Smooth.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Smooth.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Smooth(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-px\\\">\\n\\n  <div class=\\\"w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-8/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-auto flex-1\\\">\\n    <div class=\\\"w-full py-3 px-4 text-sm bg-gray-500\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `w-80 text-white links-inverse rounded-md bg-accent-500 shadow-lg`\\n}\\n\";","export default \"/**\\n * structure\\n */\\n\\nbody {\\n  @apply bg-white;\\n}\\n\\n/* indexes */\\n\\n.gatsby_site_main {\\n  position: relative;\\n  z-index: 5;\\n}\\n\\n.gatsby_site_article_hero {\\n  position: relative;\\n  z-index: 6;\\n}\\n\\n.gatsby_site_article_content {\\n  position: relative;\\n  z-index: 9;\\n}\\n\\n.gatsby_site_footer {\\n  position: relative;\\n  z-index: 7;\\n}\\n\\n/* spacing and background */\\n\\n.gatsby_site_article_hero {\\n  @apply pt-20 pb-16;\\n  border-bottom: 1px solid theme('colors.gray.200');\\n  background: theme('colors.gray.100');\\n  background: linear-gradient(225deg, theme('colors.gray.100') 33%, theme('colors.gray.200') 100%);\\n}\\n\\n.gatsby_site_article_content {\\n  @apply py-16;\\n  flex: 1 1 auto;\\n  background: theme('colors.white');\\n}\\n\\n.gatsby_site_footer {\\n  border-top: 1px solid theme('colors.gray.200');\\n  background: theme('colors.gray.100');\\n  background: linear-gradient(225deg, theme('colors.gray.100') 33%, theme('colors.gray.200') 100%);\\n}\\n\\n/* container */\\n\\n.gatsby_site_article_hero_inner, .gatsby_site_article_content, .gatsby_site_footer_inner {\\n  @apply container ml-0;\\n  @screen xl {\\n    max-width: 1152px;\\n  }\\n}\\n\\n/* prevent horizontal overflow */\\n\\n.gatsby_site_wrapper {\\n  overflow: hidden;\\n}\\n\\n.gatsby_site_header, .gatsby_site_main, .gatsby_site_footer {\\n  @apply w-full;\\n}\\n\\n/* sticky footer */\\n\\n.gatsby_site_wrapper {\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: column;\\n  min-height: 100vh;\\n  min-height: calc(var(--vh, 1vh) * 100);\\n}\\n\\n.gatsby_site_main,\\n.gatsby_site_main_inner,\\n.gatsby_site_article,\\n.gatsby_site_article_inner {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 1 auto;\\n}\\n\\n/**\\n * article\\n */\\n\\n.gatsby_site_article {\\n  @apply bg-white;\\n  @screen lg {\\n    margin-left: 18rem;\\n  }\\n  @screen xl {\\n    margin-left: 20rem;\\n  }\\n}\\n.gatsby_site_article_hero {\\n  .p {\\n    @apply -mt-2 mb-2 text-lg;\\n    line-height: theme('lineHeight.snug');\\n    opacity: 0.5;\\n  }\\n}\\n\\n.gatsby_site_article_hero_inner {\\n  position: relative;\\n}\\n\\n.gatsby_site_article_hero_content {\\n  .badge {\\n    @apply border-gray-300 bg-gray-300 -mt-4 ml-4;\\n  }\\n  h1 {\\n    span {\\n      display: inline-block;\\n    }\\n    span span {\\n      font-weight: theme('fontWeight.normal');\\n      color: theme('colors.gray.500');\\n    }\\n  }\\n}\\n\\n.gatsby_site_article_hero_content_inner {\\n  max-width: 70rem;\\n  &:not(.fade) {\\n     pointer-events: none;\\n   }\\n}\\n\\n/**\\n * listing\\n*/\\n\\n.gatsby_listing {\\n  @apply mt-16 mt-fc;\\n  div:empty + & {\\n    @apply mt-0;\\n  }\\n}\\n\\n.gatsby_listing_group {\\n  @apply w-full;\\n}\\n\\n.gatsby_listing_items {\\n  .gatsby_listing .h-block + & {\\n    @apply my-10;\\n  }\\n  .gatsby_listing_group:last-child & {\\n    @apply mb-0;\\n  }\\n  > .row {\\n    @media (max-width: theme('screens.sm')) {\\n      @apply row-x-1;\\n      @apply -m-4;\\n    }\\n    @screen sm {\\n      @apply -m-6;\\n    }\\n    .gatsby_site_article_foot & {\\n      @apply mt-0 mb-4;\\n    }\\n  }\\n}\\n\\n.gatsby_listing_column {\\n  @apply w-2/4 md:w-2/6 lg:w-2/4 xl:w-2/6;\\n  .gatsby_site_article_foot & {\\n    &:nth-child(1) {\\n      display: none;\\n      @screen md {\\n        display: block;\\n      }\\n    }\\n  }\\n}\\n\\n.gatsby_listing_item {\\n  @apply py-4 px-5 text-xs text-black links-default rounded-md transform hover:text-white hover:bg-accent-500 hover:shadow-xl hover:-translate-y-2 active:text-white active:bg-accent-600 active:shadow-md active:-translate-y-1;\\n  .h4 {\\n    @apply mb-1.5 mt-fc mb-lc;\\n    font-size: 1rem;\\n  }\\n  p {\\n    opacity: 0.5;\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\nconst iconArrowLeft = require('components/snippets/icons').iconArrowLeft\\nconst iconArrowRight = require('components/snippets/icons').iconArrowRight\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider>\\n${indentString(markupSlider(), 2)}\\n  <div class=\\\"slider-navigation-sides left-0\\\" data-xt-nav=\\\"-1\\\" aria-label=\\\"Previous slide\\\" data-xt-mouse-follow=\\\"{ targets: '.slider-navigation-sides-btn' }\\\">\\n    <div class=\\\"slider-navigation-sides-btn mouse-follow text-black text-2xl\\\">\\n      ${iconArrowLeft({ classes: 'icon-md' })}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"slider-navigation-sides right-0\\\" data-xt-nav=\\\"1\\\" aria-label=\\\"Next slide\\\" data-xt-mouse-follow=\\\"{ targets: '.slider-navigation-sides-btn' }\\\">\\n    <div class=\\\"slider-navigation-sides-btn mouse-follow text-black text-2xl\\\">\\n      ${iconArrowRight({ classes: 'icon-md' })}\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Typography\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Automatic spacing\\n\\nCheck out the [automatic spacing classes](/components/core/structure/css#utils) to **reset margin top** when `:first-child` with `mt-fc` and **reset margin bottom** when `:last-child` with `mb-lc`.\\n\\n## Html\\n\\nInside `html` we assign **default lineHeight** and **default font color** with `@apply text-black links-default`.\\n\\n#### Rem\\n\\nInside `html` there are the styles for **base rem typography**. We assign a root **responsive font size** for `html` and all **rem sizes** defined are relative to this font size.\\n\\n## Variant\\n\\nUse **tailwind classes** to assign styles (e.g. [text-color](https://tailwindcss.com/docs/text-color), [text-opacity](https://tailwindcss.com/docs/text-opacity)).\\n\\nText styles on **parent elements** are applied when **inerithed**.\\n\\nSee [link variant](/components/core/link#variant) to style links.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/typography/variant\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Header\\n\\nYou can use headers **tags or classes**, classes takes precedence with css specificity.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `h1` or `.h1`       | `h1`                | `responsive`                | Header h1            |\\n| Utility                  | `h2` or `.h2`       | `h2`                | `responsive`                | Header h2            |\\n| Utility                  | `h3` or `.h3`       | `h3`                | `responsive`                | Header h3            |\\n| Utility                  | `h4` or `.h4`       | `h4`                | `responsive`                | Header h4            |\\n| Utility                  | `h5` or `.h5`       | `h5`                | `responsive`                | Header h5            |\\n| Utility                  | `h6` or `.h6`       | `h6`                | `responsive`                | Header h6            |\\n| Utility                  | `.h-block`       | `h-block`                | `responsive`                | Header special block            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/typography/headers\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can add **additional headers** for example `.h7` or `.h-line`.\\n\\n## Paragraph\\n\\nYou can use paragraph **tags or classes**, classes takes precedence with css specificity.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `p` or `.p`       | `p`                | `responsive`                | Paragraph            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/typography/paragraph\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Text\\n\\nText tags are styles by **tailwind or tailwind classes or component classes**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/typography/text\\\">\\n  </demovanilla>\\n</demo>\\n\\n## List\\n\\n[[noteDefault]]\\n| List `ul` and `ol` are automatically styled when they **don't have `[class]`**. To have custom styles use **tailwind classes**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/typography/list\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Definition List\\n\\nUse **tailwind classes** to create a definition list.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/typography/definition-list\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Figure\\n\\nUse **component classes** to style `figure` and` figcaption`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `figure` or `.figure`                     | `figure`                | Media styles inside text            |\\n| Component                  | `figcaption` or `.figcaption`                     | `figcaption`                | Media caption styles inside text            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/typography/figure\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Other\\n\\nThese are typography's **component utilities**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.text-reset`       | `text-reset`                | `responsive`                | Reset text styles            |\\n| Utility                  | `.ellipsis`       | `ellipsis`                | `responsive`                | Ellipsis text styles            |\\n| Utility                  | `.lowercase-capitalize`       | `lowercase-capitalize`                | `responsive`                | Text transform lowercase and capitalize first letter            |\\n\\n</div>\\n\";","export default \"export default () => {\\n  return `text-black links-default bg-gray-200 hover:bg-gray-300 active:bg-gray-400`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"sticky-0\\\" data-xt-sticky=\\\"{ sticky: 'fixed', limit: { top: '.sticky-0-start' }, hide: 'down' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"sticky-0-start\\\"></div>\\n\\n<div class=\\\"sticky-1\\\" data-xt-sticky=\\\"{ sticky: 'absolute', contain: { top: '.sticky-0:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-2\\\" data-xt-sticky=\\\"{ contain: { top: '.sticky-0:not(.xt-clone), .sticky-1:not(.xt-clone)', bottom: '.sticky-3:not(.xt-clone)' }, hide: 'up' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n    <p>Sticky bottom <span class=\\\"hide-sticky\\\">.hide-sticky</span> <span class=\\\"show-sticky\\\">.show-sticky</span></p>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<h1>\\n  Lorem Ipsum h1\\n</h1>\\n\\n<p>\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<h2>\\n  Lorem Ipsum h2\\n</h2>\\n\\n<p>\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<h3>\\n  Lorem Ipsum h3\\n</h3>\\n\\n<p>\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<h4>\\n  Lorem Ipsum h4\\n</h4>\\n\\n<p>\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<h5>\\n  Lorem Ipsum h5\\n</h5>\\n\\n<p>\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<h6>\\n  Lorem Ipsum h6\\n</h6>\\n\\n<p>\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Lorem Ipsum h5\\n</div>\\n\\n<h3 class=\\\"h6 sm:h5 md:h4\\\">\\n  Lorem Ipsum h6 sm:h5 md:h4\\n</h6>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\" style=\\\"padding-bottom: 37.5%\\\">\\n  <div class=\\\"media-inner\\\">\\n    <img class=\\\"media object-cover object-center\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n  </div>\\n</div>\\n`\\n\";","export default \"/* Vanilla Iframe css */\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"List\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Space\\n\\nUse **component utility** `.list-<space>` to space content.\\n\\nFor `<space>` values use any of [tailwind spacing](https://tailwindcss.com/docs/customizing-spacing) up to 10.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.list-<space>`       | `list-<space>`                | `responsive`                | Space contents horizontally and vertically            |\\n| Utility                  | `.list-x-<space>`       | `list-x-<space>`                | `responsive`                | Space contents horizontally            |\\n| Utility                  | `.list-y-<space>`       | `list-y-<space>`                | `responsive`                | Space contents vertically            |\\n\\n</div>\\n\\n[[notePrimary]]\\n| **Do not use margin** css or classes on `.list` because it has automatic negative margins for internal spacing.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/list/space-px\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/list/space-1\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/list/space-2\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/list/space-3\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/list/space-4\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Alignment\\n\\nUse **tailwind classes** to assign alignment (e.g. [align-items](https://tailwindcss.com/docs/align-items), [justify-content](https://tailwindcss.com/docs/justify-content)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/list/alignment\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"fashion-hero-v2\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-05-27\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-hero-v2\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Featured\\\"\\ntitle: \\\"furniture-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-02-27\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-featured-v1\\\"\\n]\\n---\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Ajax\\n */\\nclass Ajax extends Xt.Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    super(object, optionsCustom)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // vars\\n    self.locationFrom = self.locationTo || null // fix popstate\\n    self.locationTo = null\\n    // super\\n    super.init()\\n  }\\n\\n  /**\\n   * init setup\\n   */\\n  initSetup() {\\n    super.initSetup()\\n    const self = this\\n    const options = self.options\\n    // queryElement\\n    self.queryElement = self.object.querySelector(options.query) || self.object\\n  }\\n\\n  /**\\n   * init elements\\n   */\\n  initScopeElements() {\\n    super.initScopeElements()\\n    const self = this\\n    // remove external links\\n    for (const element of self.elements) {\\n      if (location.hostname !== element.hostname || element.getAttribute('href').split('#')[0] === '') {\\n        self.elements = Array.from(self.elements).filter(x => x !== element)\\n      }\\n    }\\n    // generate groups\\n    self.groupUrl = []\\n    for (const element of self.elements) {\\n      // populate\\n      const url = element.getAttribute('href').split('#')[0]\\n      if (!self.groupUrl[url]) {\\n        self.groupUrl[url] = []\\n      }\\n      self.groupUrl[url].push(element)\\n      // assign group\\n      element.setAttribute('data-xt-group', self.namespace + '-' + url)\\n    }\\n  }\\n\\n  /**\\n   * init start\\n   */\\n  initStart() {\\n    const self = this\\n    // @fix raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // initial\\n      self.initial = true\\n      self.wrap = false\\n      self.currentIndex = null\\n      self.oldIndex = null\\n      // automatic initial currents\\n      const elements = self.getElementsGroups()\\n      if (elements.length) {\\n        let found = false\\n        for (const element of elements) {\\n          const loc = location.pathname + location.search\\n          const url = element.pathname + element.search\\n          if (url !== '') {\\n            if (loc === url) {\\n              found = true\\n              // activation\\n              self.eventOn(element, true)\\n            } else {\\n              // deactivate\\n              self.eventOff(element, true)\\n            }\\n          }\\n        }\\n        if (!found) {\\n          self.initial = false\\n        }\\n      } else {\\n        self.initial = false\\n      }\\n      // detect url\\n      let url\\n      if (history.state && history.state.url) {\\n        // detect from history\\n        url = history.state.url\\n      } else {\\n        // detect from url location (absolute url without domain name)\\n        url = location.pathname + location.search\\n      }\\n      // set pushstate\\n      if (!self.locationFrom) {\\n        self.locationFrom = new URL(url, location)\\n      }\\n      self.pushState(url, document.title)\\n    })\\n  }\\n\\n  /**\\n   * init events\\n   */\\n  initEvents() {\\n    super.initEvents()\\n    const self = this\\n    // event popstate\\n    window.onpopstate = self.eventPopstateHandler.bind(self)\\n  }\\n\\n  //\\n  // handler\\n  //\\n\\n  /**\\n   * element on handler\\n   * @param {Node|HTMLElement|EventTarget|Window} element\\n   * @param {Event} e\\n   */\\n  eventOnHandler(element, e) {\\n    // not when opening in new tab\\n    if (e.metaKey || e.ctrlKey) {\\n      return\\n    }\\n    // prevent links (needed for xt-ajax to go to links and propagate event if inside targets)\\n    e.preventDefault()\\n    // super\\n    super.eventOnHandler(element, e)\\n  }\\n\\n  /**\\n   * element popstate handler\\n   * @param {Event} e\\n   */\\n  eventPopstateHandler() {\\n    const self = this\\n    // handler\\n    if (history.state && history.state.url) {\\n      // reinit currents\\n      self.initStart()\\n      // request set\\n      requestAnimationFrame(() => {\\n        self.ajaxRequest(null, history.state.url)\\n      })\\n    }\\n  }\\n\\n  //\\n  // queue\\n  //\\n\\n  /**\\n   * logic to execute on queue complete\\n   * @param {String} actionCurrent Current action\\n   * @param {Object} obj Queue object\\n   */\\n  queueComplete(actionCurrent, obj) {\\n    const self = this\\n    if (actionCurrent === 'On') {\\n      if (!self.initial) {\\n        // trigger ajax request\\n        self.ajaxRequest(obj.elements.queueEls[0], null)\\n      }\\n    }\\n    super.queueComplete(actionCurrent, obj)\\n  }\\n\\n  //\\n  // special\\n  //\\n\\n  /**\\n   * ajax request\\n   * @param {Node|HTMLElement|EventTarget|Window} element Base node\\n   * @param {String} url Url to get\\n   */\\n  ajaxRequest(element, url) {\\n    const self = this\\n    const options = self.options\\n    // url\\n    if (element) {\\n      url = element.getAttribute('href').split('#')[0]\\n    }\\n    // location\\n    self.locationFrom = self.locationTo || self.locationFrom // fix fast change page\\n    self.locationTo = new URL(url, location)\\n    // closeauto\\n    dispatchEvent(new CustomEvent('closeauto.trigger.xt'))\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('request.xt'))\\n    // duration\\n    self.detail.requestDate = new Date()\\n    clearTimeout(Xt.dataStorage.get(self.object, self.componentNamespace + 'AjaxDurationTimeout'))\\n    if (self.detail.request) {\\n      self.detail.request.abort()\\n    } // fix fast change page\\n    requestAnimationFrame(() => {\\n      self.detail.requestDuration = options.duration || Xt.animTime(self.queryElement)\\n      // request\\n      const request = new XMLHttpRequest()\\n      request.open('GET', url, true)\\n      request.onload = () => {\\n        self.ajaxResponse(element, url, request, self.detail.requestDate)\\n      }\\n      request.onerror = () => {\\n        self.ajaxResponse(element, url, request, self.detail.requestDate)\\n      }\\n      // debug\\n      if (Xt.debug === true) {\\n        console.debug('Xt.debug: xt-ajax request', request)\\n      }\\n      // send\\n      request.send()\\n      self.detail.request = request\\n    })\\n  }\\n\\n  /**\\n   * ajax response\\n   * @param {Node|HTMLElement|EventTarget|Window} element Base node\\n   * @param {String} url Url to get\\n   * @param {XMLHttpRequest} request Html response\\n   * @param {Date} date Html response\\n   */\\n  ajaxResponse(element, url, request, date) {\\n    const self = this\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('response.xt.ajax'))\\n    // duration\\n    self.detail.requestDuration -= new Date() - date\\n    if (self.detail.requestDuration > 0) {\\n      Xt.dataStorage.set(\\n        self.object,\\n        self.componentNamespace + 'AjaxDurationTimeout',\\n        setTimeout(() => {\\n          // request\\n          if (request.status >= 200 && request.status <= 300) {\\n            self.ajaxSuccess(element, url, request, date)\\n          } else {\\n            self.ajaxError(element, url, request)\\n          }\\n        }, self.detail.requestDuration)\\n      )\\n    } else {\\n      // request\\n      if (request.status >= 200 && request.status <= 300) {\\n        self.ajaxSuccess(element, url, request, date)\\n      } else {\\n        self.ajaxError(element, url, request)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * ajax success\\n   * @param {Node|HTMLElement|EventTarget|Window} element Base node\\n   * @param {String} url Url to get\\n   * @param {XMLHttpRequest} request Html response\\n   * @param {Date} date Html response\\n   */\\n  ajaxSuccess(element, url, request, date) {\\n    const self = this\\n    const options = self.options\\n    // debug\\n    if (Xt.debug === true) {\\n      console.debug('Xt.debug: xt-ajax request success', request)\\n    }\\n    // set substitute\\n    let html = document.createElement('html')\\n    html.innerHTML = request.responseText.trim()\\n    const title = html.querySelector('head title').innerHTML\\n    let replace = html.querySelector(options.query)\\n    // populate dom\\n    self.queryElement.outerHTML = replace.outerHTML\\n    // queryElement\\n    self.queryElement = self.object.querySelector(options.query) || self.object\\n    // pushstate\\n    self.pushState(url, title)\\n    // garbage collector\\n    html = null\\n    replace = null\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('replace.xt.ajax'))\\n    // reinit\\n    if (!self.initial && date === self.detail.requestDate) {\\n      // fix fast change page\\n      requestAnimationFrame(() => {\\n        self.initial = true\\n        self.init()\\n      })\\n    }\\n  }\\n\\n  /**\\n   * ajax error\\n   * @param {Node|HTMLElement|EventTarget|Window} element Base node\\n   * @param {String} url Url to get\\n   * @param {XMLHttpRequest} request Html response\\n   */\\n  ajaxError(element, url, request) {\\n    const self = this\\n    // debug\\n    if (Xt.debug === true) {\\n      console.debug('Xt.debug: xt-ajax request failed', request)\\n    }\\n    // reinit currents\\n    self.initStart()\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('replace.xt.ajax'))\\n  }\\n\\n  /**\\n   * history pushstate\\n   */\\n  pushState(url, title) {\\n    // push object state\\n    if (!history.state || !history.state.url || history.state.url !== url) {\\n      document.title = title\\n      history.pushState({ url: url, title: title }, title, url)\\n    } else {\\n      document.title = history.state.title\\n    }\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nAjax.componentName = 'xt-ajax'\\nAjax.optionsDefault = {\\n  // ajax\\n  query: 'body', // needs to be unique\\n  baseUrl: '/',\\n  // element\\n  elements: 'a[href]:not([href^=\\\"#\\\"])',\\n  targets: false,\\n  // class\\n  class: 'active active-ajax',\\n  // quantity\\n  min: 0,\\n  max: 1,\\n  // event\\n  on: 'click',\\n  // timing\\n  instant: true,\\n  duration: false,\\n  // other\\n  aria: false,\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Ajax = Ajax\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Ajax.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Ajax.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Ajax(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"module.exports = {\\n  utility: theme => ({\\n    '.overlay-screen': {\\n      // setup\\n      '.overlay-container': {\\n        position: 'relative',\\n        zIndex: theme('zIndex.overlay'),\\n        padding: '0 !important',\\n        '.overlay-inner': {\\n          position: 'static',\\n        },\\n      },\\n      '.overlay-inner': {\\n        display: 'flex',\\n        flexDirection: 'column',\\n        flex: '1 1 auto',\\n      },\\n    },\\n    '.overlay-disable': {\\n      // setup\\n      '@apply xt-disable': '',\\n      display: 'flex !important',\\n      overflow: 'initial !important',\\n      position: 'static',\\n      zIndex: 'initial',\\n      top: 'auto',\\n      left: 'auto',\\n      bottom: 'auto',\\n      right: 'auto',\\n      width: 'auto',\\n      height: 'auto',\\n      '.overlay-design': {\\n        display: 'none',\\n      },\\n      '.overlay-container': {\\n        zIndex: 'initial',\\n        padding: '0',\\n        width: '100%',\\n        minHeight: 'auto',\\n        maxWidth: 'none',\\n      },\\n      '.overlay-inner': {\\n        '> .card': {\\n          '@apply card-disable !important': '',\\n        },\\n      },\\n      '> .backdrop': {\\n        display: 'none !important',\\n      },\\n    },\\n  }),\\n  component: theme => ({\\n    '.overlay': {\\n      // setup\\n      '@apply toggle overflow-main': '',\\n      position: 'fixed',\\n      zIndex: theme('zIndex.overlay'),\\n      top: '0',\\n      left: '0',\\n      bottom: '0', // @FIX no height or it bugs collapse animation\\n      right: '0', // @FIX no width or it bugs collapse animation\\n      overflow: 'hidden',\\n    },\\n    '.overlay-container': {\\n      // setup\\n      display: 'flex',\\n      flexWrap: 'nowrap',\\n      flexDirection: 'column',\\n      justifyContent: 'center',\\n      margin: 'auto', // @FIX http://stackoverflow.com/questions/33454533/cant-scroll-to-top-of-flex-item-that-is-overflowing-container\\n      width: '100%',\\n      minHeight: '100vh',\\n      padding: theme('container.padding.default'),\\n      '@screen sm': {\\n        padding: theme('container.padding.sm'),\\n      },\\n      '@screen md': {\\n        padding: theme('container.padding.md'),\\n      },\\n      '@screen lg': {\\n        padding: theme('container.padding.lg'),\\n      },\\n      '@screen xl': {\\n        padding: theme('container.padding.xl'),\\n      },\\n    },\\n    '.overlay-inner': {\\n      // setup\\n      display: 'flex',\\n      justifyContent: 'center',\\n      alignItems: 'center',\\n      alignSelf: 'center',\\n      position: 'relative',\\n      zIndex: theme('zIndex.overlay'),\\n      width: '100%',\\n      borderRadius: 'inherit',\\n    },\\n  }),\\n}\\n\";","export default \"#iframe--opacity-listing-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * .listing-page\\n      */\\n\\n    .listing-page_inner {\\n      > .row {\\n        .row-default();\\n      }\\n    }\\n\\n    .listing-page_col {\\n      .col(12);\\n      .col(6, sm);\\n      .col(4, lg);\\n    }\\n\\n    .listing-page_col--big {\\n      .col(12, sm);\\n      .col(12, lg);\\n    }\\n\\n    .listing-page_item {\\n      .full();\\n      .text-black links-default() !important;\\n      // card\\n      .card-white();\\n      .w-64();\\n      .card-squared();\\n      .card-none-x();\\n      .card-title {\\n        .font-sans-semibold();\\n        font-size: 2rem;\\n      }\\n      .card-asset {\\n        .media-container {\\n          .padding(bottom, 75%);\\n        }\\n        .media {\\n          .object-cover();\\n        }\\n      }\\n    }\\n\\n    .listing-page_col--big {\\n      .card-asset {\\n        .media-container {\\n          @media @min-sm {\\n            .padding(bottom, 37.5%);\\n          }\\n          @media @min-lg {\\n            .padding(bottom, 25%);\\n          }\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-x bg-white bg-opacity-75\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-x bg-white bg-opacity-75\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      bottom right\\n    </button>\\n\\n    <div class=\\\"drop md:drop-bottom md:drop-right\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      top right\\n    </button>\\n\\n    <div class=\\\"drop md:drop-top md:drop-right\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n      </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      right middle\\n    </button>\\n\\n    <div class=\\\"drop md:drop-right md:drop-middle\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      right contain-bottom\\n    </button>\\n\\n    <div class=\\\"drop md:drop-right md:drop-contain-bottom\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      right contain-top\\n    </button>\\n\\n    <div class=\\\"drop md:drop-right md:drop-contain-top\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<br><br><br><br><br><br><br>\\n\\n<div class=\\\"sticky-0 demo--sticky-disable\\\" data-xt-sticky=\\\"{ limit: { top: 0, bottom: '.sticky-1.xt-clone' } }\\\"> <!-- if limit to sticky use .xt-clone -->\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-1 demo--sticky-disable\\\" data-xt-sticky=\\\"{ position: 'bottom', limit: { bottom: 50 } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Badge\\\"\\ntitle: \\\"Badge\\\"\\ndescription: \\\"Badge component for showing very short messages.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/badge.css.js](https://github.com/minimit/xtendui/blob/master/src/core/badge.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      badge: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **badge**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/badge/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/badge/content).\\n\";","export default \"#iframe--slide-overlay-v1 {\\n  /*##START*/\\n  @import 'xtendui/src/addons/overlay-close-outside.less';\\n\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * vars\\n      */\\n\\n    // ease\\n\\n    @ease-in: @ease-out-quint;\\n    @ease-out: @ease-in-out-quint;\\n\\n    /**\\n      * overlay\\n      */\\n\\n    .overlay {\\n      .card-item--menu {\\n        background: @accent;\\n      }\\n    }\\n\\n    // animation\\n\\n    .overlay {\\n      .overlay-design {\\n        opacity: 0;\\n        transform: translateY(125%);\\n      }\\n      .card-overlay {\\n        .card-block, .card-content {\\n          opacity: 0;\\n          transform: translateY(100%);\\n        }\\n      }\\n      &.in {\\n        animation-duration: @time-md; // needed for animation time, put max animation time\\n        .overlay-design {\\n          opacity: 1;\\n          transform: none;\\n          transition: transform @time-md @ease-in, opacity @time-sm @ease-in;\\n        }\\n        .card-overlay {\\n          .card-block, .card-content {\\n            opacity: 1;\\n            transform: none;\\n            transition: transform @time-md @ease-in, opacity @time-sm @ease-in;\\n          }\\n        }\\n      }\\n      &.out {\\n        animation-duration: @time-sm; // needed for animation time, put max animation time\\n        .overlay-design {\\n          opacity: 0;\\n          transform: translateY(125%);\\n          transition: transform @time-sm @ease-out, opacity @time-sm @ease-out;\\n        }\\n        .card-overlay {\\n          .card-block, .card-content {\\n            opacity: 0;\\n            transform: translateY(100%);\\n            transition: transform @time-sm @ease-out, opacity @time-sm @ease-out;\\n          }\\n          > .btn-close {\\n            .anim-y.out();\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n      * overlay position\\n      */\\n\\n    // animation\\n\\n    [class^='overlay-position-'], [class*=' overlay-position-'] {\\n      &.overlay-position-left {\\n        .overlay-design {\\n          opacity: 0;\\n          transform: translateX(-125%);\\n        }\\n        .card-overlay {\\n          .card-block, .card-content {\\n            opacity: 0;\\n            transform: translateX(-100%);\\n          }\\n        }\\n      }\\n      &.overlay-position-right {\\n        .overlay-design {\\n          opacity: 0;\\n          transform: translateX(125%);\\n        }\\n        .card-overlay {\\n          .card-block, .card-content {\\n            opacity: 0;\\n            transform: translateX(100%);\\n          }\\n        }\\n      }\\n      &.in {\\n        animation-duration: @time-md; // needed for animation time, put max animation time\\n        .overlay-design {\\n          opacity: 1;\\n          transform: none;\\n          transition: transform @time-md @ease-in, opacity @time-sm @ease-in;\\n        }\\n        .card-overlay {\\n          .card-block, .card-content {\\n            opacity: 1;\\n            transform: none;\\n            transition: transform @time-md @ease-in, opacity @time-sm @ease-in;\\n          }\\n        }\\n      }\\n      &.out {\\n        animation-duration: @time-sm; // needed for animation time, put max animation time\\n        &.overlay-position-left {\\n          .overlay-design {\\n            opacity: 0;\\n            transform: translateX(-125%);\\n            transition: transform @time-sm @ease-out, opacity @time-sm @ease-out;\\n          }\\n          .card-overlay {\\n            .card-block, .card-content {\\n              opacity: 0;\\n              transform: translateX(-100%);\\n              transition: transform @time-sm @ease-out, opacity @time-sm @ease-out;\\n            }\\n            > .btn-close {\\n              .anim-x-inverse.out();\\n            }\\n          }\\n        }\\n        &.overlay-position-right {\\n          .overlay-design {\\n            opacity: 0;\\n            transform: translateX(125%);\\n            transition: transform @time-sm @ease-out, opacity @time-sm @ease-out ;\\n          }\\n          .card-overlay {\\n            .card-block, .card-content {\\n              opacity: 0;\\n              transform: translateX(100%);\\n              transition: transform @time-sm @ease-out, opacity @time-sm @ease-out ;\\n            }\\n            > .btn-close {\\n              .anim-x.out();\\n            }\\n          }\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"group flex-col whitespace-normal max-w-full\\\" style=\\\"width: 20rem\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md rounded-t-md ${btnPrimaryGroup()}\\\">\\n    Lorem ipsum\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md active ${btnPrimaryGroup()}\\\" aria-selected=\\\"true\\\">\\n    dolor sit amet\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimaryGroup()}\\\">\\n    consectetur adipiscing elit\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md disabled ${btnPrimaryGroup()}\\\" aria-disabled=\\\"true\\\">\\n    Lorem ipsum\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimaryGroup()}\\\">\\n    dolor sit amet\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md rounded-b-md ${btnPrimaryGroup()}\\\">\\n    Lorem ipsum dolor sit amet consectetur adipiscing elit\\n  </button>\\n\\n</nav>\\n`\\n\";","export default \"export default () => {\\n  return `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <form class=\\\"form-default flex-full\\\" data-xt-toggle=\\\"{ elements: '.form-group > .btn', targets: '.group' }\\\">\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n        group\\n      </button>\\n      <div class=\\\"group group-default\\\">\\n        <div class=\\\"group-inner\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default btn-lg\\\">\\n            ipsum\\n          </button>\\n        </div>\\n        <div class=\\\"group-inner\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item\\\" />\\n        </div>\\n      </div>\\n    </button>\\n  </form>\\n\\n</div>\\n`\\n}\\n\";","export default \"// const iconArrowLeft = require('components/snippets/icons').iconX\\n// ${iconArrowLeft({ classes: 'icon-lg' })}\\n\\nexport const iconX = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><line x1=\\\"18\\\" y1=\\\"6\\\" x2=\\\"6\\\" y2=\\\"18\\\"></line><line x1=\\\"6\\\" y1=\\\"6\\\" x2=\\\"18\\\" y2=\\\"18\\\"></line></svg>`\\n}\\n\\nexport const iconSearch = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><circle cx=\\\"11\\\" cy=\\\"11\\\" r=\\\"8\\\"></circle><line x1=\\\"21\\\" y1=\\\"21\\\" x2=\\\"16.65\\\" y2=\\\"16.65\\\"></line></svg>`\\n}\\n\\nexport const iconArrowLeft = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><line x1=\\\"19\\\" y1=\\\"12\\\" x2=\\\"5\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 19 5 12 12 5\\\"></polyline></svg>`\\n}\\n\\nexport const iconArrowRight = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><line x1=\\\"5\\\" y1=\\\"12\\\" x2=\\\"19\\\" y2=\\\"12\\\"></line><polyline points=\\\"12 5 19 12 12 19\\\"></polyline></svg>`\\n}\\n\\nexport const iconArrowUp = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><line x1=\\\"12\\\" y1=\\\"19\\\" x2=\\\"12\\\" y2=\\\"5\\\"></line><polyline points=\\\"5 12 12 5 19 12\\\"></polyline></svg>`\\n}\\n\\nexport const iconArrowDown = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><line x1=\\\"12\\\" y1=\\\"5\\\" x2=\\\"12\\\" y2=\\\"19\\\"></line><polyline points=\\\"19 12 12 19 5 12\\\"></polyline></svg>`\\n}\\n\\nexport const iconChevronLeft = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><polyline points=\\\"15 18 9 12 15 6\\\"></polyline></svg>`\\n}\\n\\nexport const iconChevronRight = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><polyline points=\\\"9 18 15 12 9 6\\\"></polyline></svg>`\\n}\\n\\nexport const iconChevronUp = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><polyline points=\\\"18 15 12 9 6 15\\\"></polyline></svg>`\\n}\\n\\nexport const iconChevronDown = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><polyline points=\\\"6 9 12 15 18 9\\\"></polyline></svg>`\\n}\\n\\nexport const iconLocate = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><path d=\\\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\\\"></path><circle cx=\\\"12\\\" cy=\\\"10\\\" r=\\\"3\\\"></circle></svg>`\\n}\\n\\nexport const iconPackage = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><line x1=\\\"16.5\\\" y1=\\\"9.4\\\" x2=\\\"7.5\\\" y2=\\\"4.21\\\"></line><path d=\\\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\\\"></path><polyline points=\\\"3.27 6.96 12 12.01 20.73 6.96\\\"></polyline><line x1=\\\"12\\\" y1=\\\"22.08\\\" x2=\\\"12\\\" y2=\\\"12\\\"></line></svg>`\\n}\\n\\nexport const iconGithub = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><path d=\\\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\\\"></path></svg>`\\n}\\n\\nexport const iconLink = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><path d=\\\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\\\"></path><path d=\\\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\\\"></path></svg>`\\n}\\n\\nexport const iconCode = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><polyline points=\\\"16 18 22 12 16 6\\\"></polyline><polyline points=\\\"8 6 2 12 8 18\\\"></polyline></svg>`\\n}\\n\\nexport const iconMaximize = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><path d=\\\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\\\"></path></svg>`\\n}\\n\\nexport const iconExternal = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><path d=\\\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\\\"></path><polyline points=\\\"15 3 21 3 21 9\\\"></polyline><line x1=\\\"10\\\" y1=\\\"14\\\" x2=\\\"21\\\" y2=\\\"3\\\"></line></svg>`\\n}\\n\\nexport const iconCopy = ({ classes = null } = {}) => {\\n  classes = classes ? ' ' + classes : ''\\n  return `<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon${classes}\\\"><rect x=\\\"9\\\" y=\\\"9\\\" width=\\\"13\\\" height=\\\"13\\\" rx=\\\"2\\\" ry=\\\"2\\\"></rect><path d=\\\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\\\"></path></svg>`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-distance\\\"\\n  data-xt-scroll=\\\"{ elements: '.card', distance: 0 }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--scroll-block',\\n  mount: object => {\\n    // vars\\n\\n    const btn = object.querySelector('.demo--scroll-block--btn')\\n\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      elements: '.card, .btn',\\n    })\\n\\n    // eventBlock\\n\\n    const eventBlock = () => {\\n      for (const element of self.elements) {\\n        // block\\n        if (element.classList.contains('xt-block')) {\\n          // unblock\\n          element.classList.remove('xt-block')\\n          // fade in\\n          element.dispatchEvent(new CustomEvent('on.trigger.xt'))\\n        } else {\\n          // fade out\\n          element.dispatchEvent(new CustomEvent('off.trigger.xt'))\\n          // block\\n          element.classList.add('xt-block')\\n        }\\n      }\\n    }\\n\\n    btn.addEventListener('click', eventBlock)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/variant\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Interactive\\n\\nUse **tailwind classes** to modify variants for interactive animations.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/interactive\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **component classes** to assign size. You can add **additional size** for example `.card-xs` or `.card-xl`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |\\n| Component                  | `.card-sm`       | `card-sm`                | Size small            |\\n| Component                  | `.card-md`       | `card-md`                | Size medium            |\\n| Component                  | `.card-lg`       | `card-lg`                | Size large            |\\n\\n</div>\\n\\nOtherwise use **tailwind classes** to assign custom size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/size\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Content\\n\\nCard content **stack vertically**. Use **tailwind classes** to assign styles (e.g. [padding](https://tailwindcss.com/docs/padding), [background-color](https://tailwindcss.com/docs/background-color), [border-radius](https://tailwindcss.com/docs/border-radius)) \\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/content\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nUse **component utility** `.card-group` to stack card content **horizontally**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- | ----------------------------- |\\n| Utility                  | `.card-group`       | `card-group`                | `responsive`                | Card stack horizontal wrapper           |\\n\\n</div>\\n\\nUse **tailwind classes** to assign size (e.g. [width](https://tailwindcss.com/docs/width)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/group\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Separator\\n\\nUse **tailwind classes** to style borders for separation.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/separator\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Overflow\\n\\nUse **tailwind classes** to overflow divs. Use **component classes** to style overflow.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.overflow-main`                     | `overflow-main`                | Overflow scrollbar style            |\\n| Component                  | `.overflow-sub`                     | `overflow-sub`                | Overflow scrollbar style small version            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/overflow-y\\\">\\n  </demovanilla>\\n</demo>\\n\\n## List\\n\\nYou can use [list component](/components/core/list) to space card's internal content.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/list\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Close button\\n\\nUse **tailwind classes** to assign size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/close\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst iconX = require('components/snippets/icons').iconX\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"site_wrapper\\\">\\n\\n  <header class=\\\"site_header\\\">\\n    <div class=\\\"card card-primary card-squared\\\" style=\\\"opacity: 0.5; text-align: center;\\\">\\n      <div class=\\\"card-design\\\"></div>\\n      <div class=\\\"card-inner\\\">\\n        <div class=\\\"card-content\\\">\\n          <div class=\\\"card-item\\\">\\n            <div class=\\\"h4\\\">Header</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <main class=\\\"site_main\\\">\\n    <div class=\\\"product-page\\\">\\n\\n      <div class=\\\"container\\\">\\n        <div class=\\\"product-page_inner\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"product-page_left_col\\\">\\n              <div class=\\\"product-page_left_outer\\\">\\n                <div class=\\\"product-page_left\\\">\\n\\n                  <div class=\\\"product-page_images\\\">\\n                    <div class=\\\"list flex-col\\\">\\n                      <a href=\\\"#product-image-overlay-0\\\" class=\\\"product-page_image\\\">\\n                        <div class=\\\"media-container media-container-responsive\\\" data-xt-overlay=\\\"{ targets: '#overlay--product-page_images' }\\\">\\n                          <div class=\\\"media-inner\\\">\\n                            <img class=\\\"media\\\" id=\\\"product-image-0\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n                          </div>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-overlay-1\\\" class=\\\"product-page_image\\\">\\n                        <div class=\\\"media-container media-container-responsive\\\" data-xt-overlay=\\\"{ targets: '#overlay--product-page_images' }\\\">\\n                          <div class=\\\"media-inner\\\">\\n                            <img class=\\\"media\\\" id=\\\"product-image-1\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n                          </div>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-overlay-3\\\" class=\\\"product-page_image\\\">\\n                        <div class=\\\"media-container media-container-responsive\\\" data-xt-overlay=\\\"{ targets: '#overlay--product-page_images' }\\\">\\n                          <div class=\\\"media-inner\\\">\\n                            <img class=\\\"media\\\" id=\\\"product-image-2\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n                          </div>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-overlay-4\\\" class=\\\"product-page_image\\\">\\n                        <div class=\\\"media-container media-container-responsive\\\" data-xt-overlay=\\\"{ targets: '#overlay--product-page_images' }\\\">\\n                          <div class=\\\"media-inner\\\">\\n                            <img class=\\\"media\\\" id=\\\"product-image-3\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n                          </div>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-overlay-4\\\" class=\\\"product-page_image\\\">\\n                        <div class=\\\"media-container media-container-responsive\\\" data-xt-overlay=\\\"{ targets: '#overlay--product-page_images' }\\\">\\n                          <div class=\\\"media-inner\\\">\\n                            <img class=\\\"media\\\" id=\\\"product-image-4\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n                          </div>\\n                        </div>\\n                      </a>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"product-page_images_nav\\\">\\n                    <div class=\\\"list flex-col\\\">\\n                      <a href=\\\"#product-image-0\\\" class=\\\"product-page_images_nav_item\\\" title=\\\"Go to image 0\\\">\\n                        <div class=\\\"product-page_images_nav_item_inner\\\">\\n                          <span></span>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-1\\\" class=\\\"product-page_images_nav_item\\\" title=\\\"Go to image 1\\\">\\n                        <div class=\\\"product-page_images_nav_item_inner\\\">\\n                          <span></span>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-2\\\" class=\\\"product-page_images_nav_item\\\" title=\\\"Go to image 2\\\">\\n                        <div class=\\\"product-page_images_nav_item_inner\\\">\\n                          <span></span>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-3\\\" class=\\\"product-page_images_nav_item\\\" title=\\\"Go to image 3\\\">\\n                        <div class=\\\"product-page_images_nav_item_inner\\\">\\n                          <span></span>\\n                        </div>\\n                      </a>\\n                      <a href=\\\"#product-image-4\\\" class=\\\"product-page_images_nav_item\\\" title=\\\"Go to image 3\\\">\\n                        <div class=\\\"product-page_images_nav_item_inner\\\">\\n                          <span></span>\\n                        </div>\\n                      </a>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"overlay overlay-default overlay-screen overlay-size-full\\\" id=\\\"overlay--product-page_images\\\">\\n                    <div class=\\\"overlay-container max-w-5xl\\\">\\n                      <div class=\\\"overlay-inner\\\">\\n                        <div class=\\\"overlay-design\\\"></div>\\n                        <div class=\\\"card card-overlay\\\">\\n                          <div class=\\\"card-design\\\"></div>\\n                          <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                            ${iconX()}\\n                          </div>\\n                          <div class=\\\"card-inner\\\">\\n                            <div class=\\\"card-content\\\">\\n                              <div class=\\\"w-full\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <div class=\\\"media-container media-container-responsive\\\">\\n                                    <div class=\\\"media-inner\\\">\\n                                      <img class=\\\"media\\\" id=\\\"product-image-overlay-0\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n                                    </div>\\n                                  </div>\\n                                  <div class=\\\"media-container media-container-responsive\\\">\\n                                    <div class=\\\"media-inner\\\">\\n                                      <img class=\\\"media\\\" id=\\\"product-image-overlay-1\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n                                    </div>\\n                                  </div>\\n                                  <div class=\\\"media-container media-container-responsive\\\">\\n                                    <div class=\\\"media-inner\\\">\\n                                      <img class=\\\"media\\\" id=\\\"product-image-overlay-2\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n                                    </div>\\n                                  </div>\\n                                  <div class=\\\"media-container media-container-responsive\\\">\\n                                    <div class=\\\"media-inner\\\">\\n                                      <img class=\\\"media\\\" id=\\\"product-image-overlay-3\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n                                    </div>\\n                                  </div>\\n                                  <div class=\\\"media-container media-container-responsive\\\">\\n                                    <div class=\\\"media-inner\\\">\\n                                      <img class=\\\"media\\\" id=\\\"product-image-overlay-4\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"product-page_right_col\\\" id=\\\"product-page_continue-target\\\">\\n              <div class=\\\"product-page_right\\\">\\n\\n                <h1 class=\\\"product-page_title\\\">\\n                  Lorem ipsum dolor sit amet\\n                </h1>\\n\\n                <div class=\\\"product-page_price\\\">\\n                  €&nbsp;229,00\\n                </div>\\n\\n                <div class=\\\"product-page_actions\\\">\\n                  <a href=\\\"#\\\" class=\\\"btn btn-primary btn-big btn-wide btn-tall\\\">\\n                  Add to cart\\n                  </a>\\n                </div>\\n\\n                <div class=\\\"product-page_details\\\">\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                </div>\\n\\n                <div class=\\\"product-page_attributes\\\">\\n                  <dl class=\\\"dl-line\\\">\\n                    <dt>\\n                      Product Code:\\n                    </dt>\\n                    <dd>\\n                      012345\\n                    </dd>\\n                    <dt>\\n                      Internal Code:\\n                    </dt>\\n                    <dd>\\n                      543210\\n                    </dd>\\n                  </dl>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <a href=\\\"#product-page_continue-target\\\" class=\\\"product-page_continue\\\">\\n        <span class=\\\"icon-xt-chevron-down\\\"></span>\\n      </a>\\n\\n      <div class=\\\"product-page_limit-bottom\\\"></div>\\n\\n    </div>\\n  </main>\\n\\n  <footer class=\\\"site_footer\\\">\\n    <div class=\\\"card card-primary card-squared\\\" style=\\\"opacity: 0.5; padding: 30rem 0; text-align: center;\\\">\\n      <div class=\\\"card-design\\\"></div>\\n      <div class=\\\"card-inner\\\">\\n        <div class=\\\"card-content\\\">\\n          <div class=\\\"card-item\\\">\\n            <div class=\\\"h4\\\">Footer</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </footer>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 row-stretch\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"rounded-t-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n      <div class=\\\"card-md mt-auto rounded-b-md bg-gray-400\\\">\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"rounded-t-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit.</p>\\n      </div>\\n      <div class=\\\"card-md mt-auto rounded-b-md bg-gray-400\\\">\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Media\\\"\\ntitle: \\\"Media\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Sticky\\\"\\ntitle: \\\"API\\\"\\ndate: \\\"1980-05-05\\\"\\n---\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-sticky=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.Sticky(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Sticky(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\\n## Util\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Object                   | `let self = Xt.get('xt-sticky', {DOM element})`       | `object` `elements` `targets` | Get object self for this component class             |\\n\\n</div>\\n\\n## Trigger\\n\\nTrigger events on **DOM elements**.\\n\\n```js\\ndocument.querySelector('#my-element-or-target').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `sticky.trigger.xt`      | `window` | Run sticky checks for activation/deactivation            |\\n| Event                   | `on.trigger.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.trigger.xt`      | `elements` `targets` | Deactivation event            |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n```js\\nconst el = document.querySelector('#my-element-or-target')\\n\\nconst eventOn = e => {\\n  if (e.target === el) {\\n  // logic\\n  }\\n}\\n\\nel.addEventListener('on.xt', eventOn)\\n```\\n\\nListen to events delegation with **useCapture** this way:\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-sticky', object)\\n\\nconst eventChange = e => {\\n  const element = e.target\\n  // useCapture delegation\\n  if (self.elements.includes(element)) {\\n    // logic\\n  }\\n  if (self.targets.includes(element)) {\\n    // logic\\n  }\\n}\\n\\nobject.addEventListener('change.xt', eventChange, true)\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `change.xt`       | `elements` | Computation event             |\\n| Event                   | `show.xt`       | `elements` | Show event             |\\n| Event                   | `hide.xt`       | `elements` | Hide event             |\\n| Event                   | `medialoaded.xt`           | `elements` `targets` | Images loaded event            |\\n| Event                   | `init.xt`           | `object` | Init event             |\\n| Event                   | `restart.xt`           | `object` | Restart event             |\\n| Event                   | `reinit.xt`           | `object` | Reinit event             |\\n| Event                   | `destroy.xt`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-sticky', object)\\nconst elements = self.elements\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `elements:Array`       | Elements nodes             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n| Property                  | `initial:Boolean`       | If initial or reset activation            |\\n\\n</div>\\n\\n## Methods\\n\\nCall methods by getting component object.\\n\\n```js\\nlet self = Xt.get('xt-sticky', document.querySelector('#my-object'))\\nself.destroy()\\nself = null\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getElements(el:Node|null)`                          | Get all elements or all elements from element or target             |\\n| Method                  | `self.getTargets(el:Nod|null)`                          | Get all targets from or all targets from element or target             |\\n| Method                  | `self.getElementsGroups()`                          | Get elements (one per group)             |\\n| Method                  | `self.getTargetsGroups()`                          | Get targets (one per group)             |\\n| Method                  | `self.hasCurrent(el:Node)`                          | Returns `true` or `false` if element or target is activated             |\\n| Method                  | `self.reinit(saveCurrents:Boolean)`       | Reinit component and save currents as initial (default: `true`)             |\\n| Method                  | `self.restart()`                          | Restart component to initial             |\\n| Method                  | `self.destroy(weak:Boolean)`              | Destroy component            |\\n\\n</div>\\n\\nYou can get activated elements or targets with `hasCurrent`.\\n\\n```js\\nself.elements.filter(x => self.hasCurrent(x))\\nself.targets.filter(x => self.hasCurrent(x))\\n```\\n\";","export default \"import 'xtendui/src/addons/propagate-interaction'\\n\";","export default \".demo--toggle-animation-inverse {\\n  .card {\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-100 translate-x-0 ease-in;\\n    /* in */\\n    &.in {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n    /* done */\\n    &.out {\\n      @apply opacity-0 -translate-x-4 transition-none;\\n      &.inverse {\\n        @apply translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form class=\\\"text-lg\\\">\\n  <div class=\\\"row row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Input\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\">\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" multiple>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-4\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n            <span class=\\\"ml-4\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-lg\\\" checked>\\n            <span class=\\\"ml-4\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-lg\\\">\\n            <span class=\\\"ml-4\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n            <span class=\\\"ml-4\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-lg\\\" checked>\\n            <span class=\\\"ml-4\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-lg\\\">\\n            <span class=\\\"ml-4\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"Content Card\\\"\\ndate: \\\"2030-05-05\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/card-variant\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **tailwind classes** to assign width ([width](https://tailwindcss.com/docs/width), [max-width](https://tailwindcss.com/docs/max-width)).\\n\\nUse **component classes** to assign size. You can add **additional size** for example `.card-xs` or `.card-xl`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |\\n| Component                  | `.card-sm`       | `card-sm`                | Size small            |\\n| Component                  | `.card-md`       | `card-md`                | Size medium            |\\n| Component                  | `.card-lg`       | `card-lg`                | Size large            |\\n\\n</div>\\n\\nOtherwise use **tailwind classes** to assign custom size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/card-size\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Content\\n\\nCard content **stack vertically**. Use **tailwind classes** to assign styles (e.g. [padding](https://tailwindcss.com/docs/padding), [background-color](https://tailwindcss.com/docs/background-color), [border-radius](https://tailwindcss.com/docs/border-radius)) \\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/card-content\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nUse **component utility** `.card-group` to stack card content **horizontally**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- | ----------------------------- |\\n| Utility                  | `.card-group`       | `card-group`                | `responsive`                | Card stack horizontal wrapper           |\\n\\n</div>\\n\\nUse **tailwind classes** to assign size (e.g. [width](https://tailwindcss.com/docs/width)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/card-group\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Separator\\n\\nUse **tailwind classes** to style borders for separation.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/card-separator\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Overflow\\n\\nUse **tailwind classes** to overflow divs. Use **component classes** to style overflow.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.overflow-main`                     | `overflow-main`                | Overflow scrollbar style            |\\n| Component                  | `.overflow-sub`                     | `overflow-sub`                | Overflow scrollbar style small version            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/card-overflow-y\\\">\\n  </demovanilla>\\n</demo>\\n\\n## List\\n\\nYou can use [list component](/components/core/list) to space card's internal content.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/card-list\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \".demo--overlay-class-html {\\n  /* DO NOT APPLY to selector with descendants with position: fixed; or it bugs position: fixed; */\\n  .demo--overlay-class-html-left & {\\n    transform: translateX(4rem);\\n  }\\n  .demo--overlay-class-html-right & {\\n    transform: translateX(-4rem);\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst cardPrimaryOverlay = require('components/snippets/classes/card-primary-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      default\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      primary\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardPrimaryOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Button\\\"\\ntitle: \\\"furniture-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-02-27\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-featured-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-x loader-size-x loader-animated bg-white bg-opacity-75 demo--loader-js-filler\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-x loader-size-x loader-animated bg-white bg-opacity-75 demo--loader-js-filler\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"/**\\n * SEO component that queries for data with\\n *  Gatsby's useStaticQuery React hook\\n *\\n * See: https://www.gatsbyjs.org/docs/use-static-query/\\n */\\n\\nimport React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { useStaticQuery, graphql } from 'gatsby'\\nimport Helmet from 'react-helmet'\\n\\nfunction SEO({ description, lang, meta, keywords, title }) {\\n  const { site } = useStaticQuery(query)\\n\\n  let metaTitle = title === 'Introduction' ? site.siteMetadata.description : title || site.siteMetadata.description // @DOCINDEX\\n  metaTitle = `Xtend UI - ${metaTitle}`\\n  const metaDescription = description || site.siteMetadata.description\\n\\n  return (\\n    <Helmet\\n      htmlAttributes={{\\n        lang,\\n      }}\\n      title={metaTitle}\\n      meta={[\\n        {\\n          name: 'description',\\n          content: metaDescription,\\n        },\\n        {\\n          property: 'og:type',\\n          content: 'website',\\n        },\\n        {\\n          property: 'og:title',\\n          content: metaTitle,\\n        },\\n        {\\n          property: 'og:description',\\n          content: metaDescription,\\n        },\\n        {\\n          property: 'og:image',\\n          content: site.siteMetadata.image,\\n        },\\n        {\\n          name: 'twitter:card',\\n          content: 'summary_large_image',\\n        },\\n        {\\n          name: 'twitter:creator',\\n          content: site.siteMetadata.author,\\n        },\\n        {\\n          name: 'twitter:title',\\n          content: metaTitle,\\n        },\\n        {\\n          name: 'twitter:description',\\n          content: metaDescription,\\n        },\\n      ]\\n        .concat(\\n          keywords.length > 0\\n            ? {\\n                name: 'keywords',\\n                content: keywords.join(', '),\\n              }\\n            : []\\n        )\\n        .concat(meta)}\\n    />\\n  )\\n}\\n\\nSEO.propTypes = {\\n  description: PropTypes.string,\\n  lang: PropTypes.string,\\n  meta: PropTypes.arrayOf(PropTypes.object),\\n  keywords: PropTypes.arrayOf(PropTypes.string),\\n  title: PropTypes.string.isRequired,\\n}\\n\\nSEO.defaultProps = {\\n  lang: 'en',\\n  meta: [],\\n  keywords: [],\\n  description: '',\\n}\\n\\nexport default SEO\\n\\nconst query = graphql`\\n  query SEO {\\n    site {\\n      siteMetadata {\\n        title\\n        description\\n        image\\n        author\\n      }\\n    }\\n  }\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"xtend-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2015-10-10\\\"\\ndemos: [\\n  \\\"iframe/themes/xtend-theme-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Size\\n\\nUse **tailwind classes** to assign size (e.g. [width](https://tailwindcss.com/docs/width)). Remember to use `.max-w-full`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/size\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Space\\n\\nUse **component classes** to assign space (e.g. [margin](https://tailwindcss.com/docs/margin)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/space\\\">\\n  </demovanilla>\\n</demo>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/space-vertical\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Border\\n\\nUse **tailwind classes** to assign border.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/border\\\">\\n  </demovanilla>\\n</demo>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/border-vertical\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--group-expand',\\n  mount: object => {\\n    // on\\n\\n    object.querySelector('input').addEventListener('focus', () => {\\n      object.classList.add('expand')\\n      object.classList.add('expand-focus')\\n    })\\n\\n    object.addEventListener('mouseenter', () => {\\n      object.classList.add('expand-enter')\\n    })\\n\\n    // off\\n\\n    object.querySelector('input').addEventListener('blur', () => {\\n      object.classList.remove('expand-focus')\\n      if (!object.classList.contains('expand-enter')) {\\n        object.classList.remove('expand')\\n      }\\n    })\\n\\n    object.addEventListener('mouseleave', () => {\\n      object.classList.remove('expand-enter')\\n      if (!object.classList.contains('expand-focus')) {\\n        object.classList.remove('expand')\\n      }\\n    })\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-top\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-top\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"demo--multilevel\\\">\\n\\n  <nav role=\\\"navigation\\\" class=\\\"toggle\\\" data-multilevel-tab>\\n\\n    <div class=\\\"h5 flex items-center justify-between\\\">\\n      <div>\\n        Products\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn link hidden\\\" data-multilevel-reset>\\n        Back\\n      </button>\\n    </div>\\n\\n    <nav class=\\\"list flex-col multilevel-list\\\">\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-xt-group=\\\"cat-0\\\" data-multilevel-element>\\n        Category 0\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-xt-group=\\\"cat-1\\\" data-multilevel-element>\\n        Category 1\\n      </button>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 0\\n      </a>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 1\\n      </a>\\n    </nav>\\n\\n    <div class=\\\"h5 flex items-center justify-between\\\">\\n      <div>\\n        About\\n      </div>\\n    </div>\\n    <nav class=\\\"list flex-col multilevel-list\\\">\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 0\\n      </a>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 1\\n      </a>\\n    </nav>\\n\\n  </nav>\\n\\n  <nav role=\\\"navigation\\\" class=\\\"toggle\\\" data-multilevel-tab data-xt-group=\\\"cat-0\\\">\\n\\n    <div class=\\\"h5 flex items-center justify-between\\\">\\n      <div>\\n        Category 0\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-multilevel-reset>\\n        Back\\n      </button>\\n    </div>\\n\\n    <nav class=\\\"list flex-col multilevel-list\\\">\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-xt-group=\\\"cat-0a\\\" data-multilevel-element>\\n        Category 0a\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-xt-group=\\\"cat-0b\\\" data-multilevel-element>\\n        Category 0b\\n      </button>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 0\\n      </a>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 1\\n      </a>\\n    </nav>\\n\\n  </nav>\\n\\n  <nav role=\\\"navigation\\\" class=\\\"toggle\\\" data-multilevel-tab data-xt-group=\\\"cat-0a\\\">\\n\\n    <div class=\\\"h5 flex items-center justify-between\\\">\\n      <div>\\n        Category 0a\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-multilevel-reset>\\n        Back\\n      </button>\\n    </div>\\n\\n    <nav class=\\\"list flex-col multilevel-list\\\">\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 0\\n      </a>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 1\\n      </a>\\n    </nav>\\n\\n  </nav>\\n\\n  <nav role=\\\"navigation\\\" class=\\\"toggle\\\" data-multilevel-tab data-xt-group=\\\"cat-0b\\\">\\n\\n    <div class=\\\"h5 flex items-center justify-between\\\">\\n      <div>\\n        Category 0b\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-multilevel-reset>\\n        Back\\n      </button>\\n    </div>\\n\\n    <nav class=\\\"list flex-col multilevel-list\\\">\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 0\\n      </a>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 1\\n      </a>\\n    </nav>\\n\\n  </nav>\\n\\n  <nav role=\\\"navigation\\\" class=\\\"toggle\\\" data-multilevel-tab data-xt-group=\\\"cat-1\\\">\\n\\n    <div class=\\\"h5 flex items-center justify-between\\\">\\n      <div>\\n        Category 1\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn link\\\" data-multilevel-reset>\\n        Back\\n      </button>\\n    </div>\\n\\n    <nav class=\\\"list flex-col multilevel-list\\\">\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 0\\n      </a>\\n      <a href=\\\"#\\\" class=\\\"btn link\\\">\\n        Link 1\\n      </a>\\n    </nav>\\n\\n  </nav>\\n\\n</div>\\n`\\n\";","export default \".demo--list-custom {\\n  margin-bottom: theme('spacing.3');\\n  @apply mb-lc;\\n  > li {\\n    margin-bottom: theme('spacing.3');\\n    @apply mb-lc;\\n    padding-left: 2em;\\n    background-image: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-check-circle\\\"><path d=\\\"M22 11.08V12a10 10 0 1 1-5.93-9.14\\\"></path><polyline points=\\\"22 4 12 14.01 9 11.01\\\"></polyline></svg>');\\n    background-repeat: no-repeat;\\n    background-size: 1.2em auto;\\n    background-position: left .15em;\\n  }\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Media\\\"\\ntitle: \\\"fashion-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-10\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-listing-v1\\\"\\n]\\n---\\n\";","export default \"export default () => {\\n  return `card-sm text-white links-inverse bg-accent-500`\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group max-w-full\\\" style=\\\"width: 35rem\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-l-md ${btnDefaultGroup()}\\\">\\n      ${iconSearch({ classes: 'icon-lg' })}\\n    </button>\\n\\n    <input type=\\\"text\\\" class=\\\"form-item ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-r-md ${btnPrimaryGroup()}\\\">\\n      Search\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      before top\\n    </button>\\n\\n    <div class=\\\"drop md:drop-before md:drop-top\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      before bottom\\n    </button>\\n\\n    <div class=\\\"drop md:drop-before md:drop-bottom\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      before middle\\n    </button>\\n\\n    <div class=\\\"drop md:drop-before md:drop-middle\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      before contain-bottom\\n    </button>\\n\\n    <div class=\\\"drop md:drop-before md:drop-contain-bottom\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      before contain-top\\n    </button>\\n\\n    <div class=\\\"drop md:drop-before md:drop-contain-top\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\" id=\\\"demo--slider-events-targets\\\">\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">1</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">2</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">3</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">4</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">5</div>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n    prev\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n    next\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.jump-to-content',\\n  mount: object => {\\n    // event\\n\\n    const documentFocusin = e => {\\n      const active = object.contains(e.target)\\n      if (active) {\\n        object.classList.add('active')\\n        object.classList.remove('out')\\n        object.classList.remove('sr-only')\\n        requestAnimationFrame(() => {\\n          object.classList.add('in')\\n        })\\n        Xt.animTimeoutClear(object)\\n      } else {\\n        object.classList.remove('active')\\n        object.classList.remove('in')\\n        object.classList.add('out')\\n        Xt.animTimeout(object, () => {\\n          object.classList.remove('out')\\n          object.classList.add('sr-only')\\n        })\\n      }\\n    }\\n\\n    document.addEventListener('focusin', documentFocusin)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      document.removeEventListener('focusin', documentFocusin)\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"#iframe--stores-listing-v2 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * .listing-page\\n      */\\n\\n    // items\\n\\n    .listing-page_inner {\\n      .padding(bottom, big);\\n      > .row {\\n        .row(small);\\n        .row(medium, sm);\\n      }\\n    }\\n\\n    .listing-page_col {\\n      .col(12);\\n      .col(6, sm);\\n      .col(4, lg);\\n    }\\n\\n    .listing-page_item {\\n      position: relative;\\n      overflow: hidden;\\n      @media @max-sm {\\n        .listing-page_front {\\n          .listing-page_item_content {\\n            display: none;\\n          }\\n        }\\n      }\\n      @media @min-sm {\\n        .listing-page_front {\\n          display: block;\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          width: 100%;\\n          height: 100%;\\n        }\\n        .listing-page_back {\\n          pointer-events: none;\\n          opacity: 0;\\n        }\\n        &.active {\\n          .listing-page_back {\\n            pointer-events: all;\\n          }\\n        }\\n      }\\n      .listing-page_front {\\n        cursor: pointer;\\n        .card-squared();\\n      }\\n      .listing-page_back {\\n        .card-squared();\\n        min-height: 40rem;\\n        .btn-close {\\n          top: -0.7rem;\\n          right: -0.7rem;\\n        }\\n        @media @max-sm {\\n          .btn-close {\\n            display: none;\\n          }\\n          .listing-page_content {\\n            .padding(top, medium);\\n          }\\n        }\\n      }\\n    }\\n\\n    // content\\n\\n    .card-asset {\\n      .margin(bottom, big);\\n      .media-container {\\n        height: 20rem;\\n        @supports (mix-blend-mode: screen) {\\n          &:before {\\n            content: '';\\n            position: absolute;\\n            z-index: @index-active + 1;\\n            top: 0;\\n            left: 0;\\n            right: 0;\\n            bottom: 0;\\n            background: #000000;\\n            mix-blend-mode: saturation;\\n          }\\n          &:after {\\n            content: '';\\n            position: absolute;\\n            z-index: @index-active + 2;\\n            top: 0;\\n            left: 0;\\n            right: 0;\\n            bottom: 0;\\n            background: #7686FF;\\n            mix-blend-mode: screen;\\n            opacity: .25;\\n          }\\n        }\\n      }\\n      .media {\\n        .object-cover();\\n      }\\n    }\\n\\n    .listing-page_content {\\n      .padding(y, 0);\\n      .padding(x, 4rem);\\n      border-left: 1px solid @shade-200;\\n    }\\n\\n    .listing-page_title {\\n      .spacing-md();\\n      .font-sans-semibold();\\n      font-size: 3.0.7rem;\\n      .line-height-mini();\\n    }\\n\\n    .listing-page_address {\\n      .line-height-mini();\\n    }\\n\\n    .listing-page_subtitle {\\n      .spacing-sm();\\n      .font-sans-semibold();\\n      font-size: 14px;\\n      .line-height-mini();\\n      text-transform: uppercase;\\n    }\\n\\n    .listing-page_additional {\\n      .font-sm();\\n      .line-height-big();\\n    }\\n\\n    .listing-page_btns {\\n      display: none;\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Navigation\\\"\\ntitle: \\\"Navigation\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst badgeDefault = require('components/snippets/classes/badge-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"badge badge-md ${badgeDefault()}\\\">\\n  Lorem ipsum\\n</div>\\n`\\n\";","export default \"module.exports = {\\n  component: theme => ({\\n    'html.xt-scrollbar': {\\n      // setup\\n      body: {\\n        overflowY: 'hidden',\\n      },\\n      '.overlay': {\\n        overflowY: 'scroll',\\n      },\\n    },\\n    '.initial': {\\n      // instant animations on components init and reinit\\n      '&, *': {\\n        '@apply duration-none !important': '',\\n      },\\n    },\\n    '@media (prefers-reduced-motion: reduce), (update: slow)': {\\n      // instant animations accessibility\\n      '*': {\\n        '@apply duration-none !important': '',\\n      },\\n    },\\n    '[data-xt-pag].xt-ignore': {\\n      // setup\\n      display: 'none !important',\\n    },\\n    '[data-xt-nav]': {\\n      // setup\\n      cursor: 'pointer',\\n    },\\n    '.xt-container': {\\n      // setup\\n      position: 'relative',\\n      width: '100%',\\n    },\\n    '.xt-disable': {\\n      // setup\\n      '&:after': {\\n        display: 'none',\\n        content: '\\\"xt-disable\\\"',\\n      },\\n    },\\n    '.xt-disable-after-init': {\\n      // setup\\n      '&:after': {\\n        display: 'none',\\n        content: '\\\"xt-disable-after-init\\\"',\\n      },\\n    },\\n    '.xt-jump': {\\n      // setup\\n      '&:not(.active)': {\\n        cursor: 'pointer',\\n      },\\n      '&.xt-jumps-none, .xt-jumps-none &': {\\n        cursor: 'inherit',\\n      },\\n    },\\n    '.xt-pointer-events-none': {\\n      // setup\\n      pointerEvents: 'none',\\n    },\\n    '.xt-links-none': {\\n      // setup\\n      'a&, a': {\\n        pointerEvents: 'none',\\n      },\\n    },\\n    '.xt-grab': {\\n      // setup\\n      '@apply select-none': '',\\n      cursor: 'grab',\\n      'a, img': {\\n        // prevent browser drag\\n        '-webkit-user-drag': 'none',\\n        userDrag: 'none',\\n        // prevent browser selection\\n        '-webkit-user-select': 'none',\\n        '-moz-user-select': 'none',\\n        '-ms-user-select': 'none',\\n        userSelect: 'none',\\n      },\\n    },\\n    '.xt-calculating': {\\n      // setup\\n      '@apply duration-none !important': '',\\n      display: 'block !important',\\n      visibility: 'hidden !important',\\n      opacity: '0 !important',\\n    },\\n    '.xt-indicator': {\\n      pointerEvents: 'none',\\n      position: 'fixed',\\n      right: '0',\\n      marginTop: '-9px',\\n      width: '100px',\\n      height: '18px',\\n      zIndex: theme('zIndex.top') + 1,\\n      lineHeight: '0',\\n      textAlign: 'right',\\n      '&:before': {\\n        display: 'inline-block',\\n        position: 'relative',\\n        padding: '3px 6px',\\n        fontSize: '12px',\\n        lineHeight: '1',\\n        textTransform: 'uppercase',\\n      },\\n    },\\n    '.xt-indicator-trigger': {\\n      right: '100px',\\n      backgroundColor: 'purple',\\n      '&:before': {\\n        content: '\\\"trigger\\\"',\\n        color: 'white',\\n        backgroundColor: 'purple',\\n      },\\n    },\\n    '.xt-indicator-start': {\\n      backgroundColor: 'red',\\n      '&:before': {\\n        content: '\\\"start\\\"',\\n        color: 'white',\\n        backgroundColor: 'red',\\n      },\\n    },\\n    '.xt-indicator-end': {\\n      backgroundColor: 'blue',\\n      '&:before': {\\n        content: '\\\"end\\\"',\\n        color: 'white',\\n        backgroundColor: 'blue',\\n      },\\n    },\\n    '.xt-indicator-start-real': {\\n      backgroundColor: 'red',\\n      opacity: '.3',\\n      zIndex: theme('zIndex.top'),\\n      '&:before': {\\n        content: '\\\"start real\\\"',\\n        color: 'white',\\n        backgroundColor: 'red',\\n      },\\n    },\\n    '.xt-indicator-end-real': {\\n      backgroundColor: 'blue',\\n      opacity: '.3',\\n      zIndex: theme('zIndex.top'),\\n      '&:before': {\\n        content: '\\\"end real\\\"',\\n        color: 'white',\\n        backgroundColor: 'blue',\\n      },\\n    },\\n  }),\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"Listing\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import 'xtendui/src/polyfill.js'\\n\\n//\\n// constructor\\n//\\n\\nexport const Xt = {}\\n\\n//\\n// vars\\n//\\n\\nXt.mount = []\\nXt.unmount = []\\nXt.currents = {} // Xt currents based on namespace (so shared between Xt objects)\\nXt.optionsGlobal = {}\\nXt.resizeDelay = 500\\nXt.scrollDelay = false\\nXt.medialoadedDelay = 500\\nXt.stickyIndex = 800\\nXt.scrollRestoration = 'auto'\\nXt.focusables = 'a, button, details, input, iframe, select, textarea, .btn-close'\\nXt.supportScroll = typeof window === 'undefined' ? false : 'onscroll' in window && !/(gle|ing)bot/.test(navigator.userAgent)\\nXt.debug = typeof window !== 'undefined' && window.process && process.env.NODE_ENV === 'development'\\n\\nif (typeof window !== 'undefined') {\\n  //\\n  // debug\\n  //\\n\\n  if (window.self === window.top) {\\n    if (Xt.debug) {\\n      console.debug('%cXt.debug activated, to suppress set \\\"Xt.debug = false\\\" or set production mode', 'font-weight:bold;')\\n    }\\n  }\\n\\n  //\\n  // initialization\\n  //\\n\\n  /**\\n   * ready\\n   * @param {Function} fnc Function to execute on dom ready\\n   */\\n  Xt.ready = fnc => {\\n    if (document.readyState === 'complete') {\\n      requestAnimationFrame(() => {\\n        fnc()\\n      })\\n    } else {\\n      document.addEventListener('readystatechange', () => {\\n        if (document.readyState === 'complete') {\\n          requestAnimationFrame(() => {\\n            fnc()\\n          })\\n        }\\n      })\\n    }\\n  }\\n\\n  /**\\n   * init\\n   */\\n  Xt.ready(() => {\\n    Xt.setScrollbarWidth()\\n    Xt.windowHeightSet()\\n    Xt.mountCheck(document.documentElement)\\n    Xt.observer.disconnect()\\n    Xt.observer.observe(document.documentElement, {\\n      characterData: false,\\n      attributes: false,\\n      childList: true,\\n      subtree: true,\\n    })\\n  })\\n\\n  //\\n  // observer\\n  //\\n\\n  /**\\n   * observer\\n   */\\n  Xt.observer = new MutationObserver(mutationsList => {\\n    for (const mutation of mutationsList) {\\n      if (mutation.type === 'childList') {\\n        // added\\n        for (const added of mutation.addedNodes) {\\n          if (added.nodeType === 1) {\\n            Xt.mountCheck(added)\\n          }\\n        }\\n        // removed\\n        for (const removed of mutation.removedNodes) {\\n          if (removed.nodeType === 1) {\\n            Xt.unmountCheck(removed)\\n          }\\n        }\\n      }\\n    }\\n  })\\n\\n  /**\\n   * mountCheck\\n   * @param {Node|HTMLElement|EventTarget|Window} added\\n   */\\n  Xt.mountCheck = (added = document.documentElement) => {\\n    const addedIgnore = added.closest('.xt-ignore')\\n    if (addedIgnore) {\\n      Xt.ignoreOnce(addedIgnore) // @FIX ignore once for mount when moving\\n      return\\n    }\\n    for (const obj of Xt.mount) {\\n      // check\\n      const els = []\\n      if (added.matches(obj.matches)) {\\n        els.push(added)\\n      }\\n      for (const element of added.querySelectorAll(obj.matches)) {\\n        els.push(element)\\n      }\\n      // call\\n      if (els.length) {\\n        for (const [i, el] of els.entries()) {\\n          const elIgnore = el.closest('.xt-ignore')\\n          if (elIgnore) {\\n            Xt.ignoreOnce(elIgnore) // @FIX ignore once for mount when moving\\n            continue\\n          }\\n          // call\\n          requestAnimationFrame(() => {\\n            // @FIX react when componentDidMount\\n            const destroy = obj.mount(el, i, obj.matches) // object, index, matches\\n            if (destroy) {\\n              Xt.unmount.push({\\n                object: el,\\n                unmount: destroy,\\n                unmountRemove: () => {\\n                  Xt.unmount.filter(x => {\\n                    return x.object !== el\\n                  })\\n                },\\n              })\\n            }\\n          })\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * unmountCheck\\n   * @param {Node|HTMLElement|EventTarget|Window} removed\\n   */\\n  Xt.unmountCheck = (removed = document.documentElement) => {\\n    if (removed.closest('.xt-ignore')) {\\n      return\\n    }\\n    for (const obj of Xt.unmount) {\\n      // check\\n      if (removed === obj.object || removed.contains(obj.object)) {\\n        if (obj.object.closest('.xt-ignore')) {\\n          return\\n        }\\n        // call\\n        obj.unmount(obj)\\n        obj.unmountRemove()\\n      }\\n    }\\n  }\\n\\n  //\\n  // component\\n  //\\n\\n  /**\\n   * set component\\n   * @param {String} name Component name\\n   * @param {Node|HTMLElement|EventTarget|Window} element Component's element\\n   * @param {Object} self Component' self\\n   */\\n  Xt.set = (name, element, self) => {\\n    Xt.dataStorage.set(element, name, self)\\n  }\\n\\n  /**\\n   * get component\\n   * @param {String} name Component name\\n   * @param {Node|HTMLElement|EventTarget|Window} element Component's element\\n   * @return {Object}\\n   */\\n  Xt.get = (name, element) => {\\n    return Xt.dataStorage.get(element, name)\\n  }\\n\\n  /**\\n   * remove component\\n   * @param {String} name Component name\\n   * @param {Node|HTMLElement|EventTarget|Window} element Component's element\\n   * @return {Object}\\n   */\\n  Xt.remove = (name, element) => {\\n    return Xt.dataStorage.remove(element, name)\\n  }\\n\\n  /**\\n   * destroy component if defined and set\\n   * @param {Object} self Component self\\n   * @param {Function} fnc Component init\\n   */\\n  Xt.destroyAndInit = self => {\\n    // @FIX multiple initializations\\n    const old = Xt.get(self.componentName, self.object)\\n    if (old) {\\n      old.destroy()\\n    }\\n    // set self\\n    Xt.set(self.componentName, self.object, self)\\n    // init\\n    self.init()\\n  }\\n\\n  //\\n  // dataStorage\\n  // map storage for HTML elements\\n  //\\n\\n  Xt.dataStorage = {\\n    /**\\n     * properties\\n     */\\n    _storage: new Map(),\\n\\n    /**\\n     * set key/obj pair on element's map\\n     * @param {Node|HTMLElement|EventTarget|Window} el\\n     * @param {String} key\\n     * @param {*} obj\\n     * @return {*}\\n     */\\n    set: (el, key, obj) => {\\n      // new map if not already there\\n      if (!Xt.dataStorage._storage.has(el)) {\\n        Xt.dataStorage._storage.set(el, new Map())\\n      }\\n      // set\\n      const getEl = Xt.dataStorage._storage.get(el)\\n      getEl.set(key, obj)\\n      // return\\n      return getEl.get(key)\\n    },\\n\\n    /**\\n     * put key/obj pair on element's map, return old if exist already\\n     * @param {Node|HTMLElement|EventTarget|Window} el\\n     * @param {String} key\\n     * @param {*} obj\\n     * @return {*}\\n     */\\n    put: (el, key, obj) => {\\n      // new map if not already there\\n      if (!Xt.dataStorage._storage.has(el)) {\\n        Xt.dataStorage._storage.set(el, new Map())\\n      }\\n      // return if already set\\n      const getEl = Xt.dataStorage._storage.get(el)\\n      const getKey = getEl.get(key)\\n      if (getKey) {\\n        return getKey\\n      }\\n      // set\\n      getEl.set(key, obj)\\n      // return\\n      return getEl.get(key)\\n    },\\n\\n    /**\\n     * get obj from key on element's map\\n     * @param {Node|HTMLElement|EventTarget|Window} el\\n     * @param {String} key\\n     * @return {*}\\n     */\\n    get: (el, key) => {\\n      const getEl = Xt.dataStorage._storage.get(el)\\n      // null if empty\\n      if (!getEl) {\\n        return null\\n      }\\n      // return\\n      return getEl.get(key)\\n    },\\n\\n    /**\\n     * get all obj/key on element's map\\n     * @param {Node|HTMLElement|EventTarget|Window} el\\n     * @return {*}\\n     */\\n    getAll: el => {\\n      const getEl = Xt.dataStorage._storage.get(el)\\n      // null if empty\\n      if (!getEl) {\\n        return null\\n      }\\n      // return\\n      return getEl\\n    },\\n\\n    /**\\n     * has key on element's map\\n     * @param {Node|HTMLElement|EventTarget|Window} el\\n     * @param {String} key\\n     * @return {Boolean}\\n     */\\n    has: (el, key) => {\\n      // return\\n      return Xt.dataStorage._storage.get(el).has(key)\\n    },\\n\\n    /**\\n     * remove element's map key\\n     * @param {Node|HTMLElement|EventTarget|Window} el\\n     * @param {String} key\\n     * @return {Boolean}\\n     */\\n    remove: (el, key) => {\\n      const getEl = Xt.dataStorage._storage.get(el)\\n      // null if empty\\n      if (!getEl) {\\n        return null\\n      }\\n      // remove\\n      const ret = getEl.delete(key)\\n      // remove storage if empty\\n      if (getEl.size === false) {\\n        Xt.dataStorage._storage.delete(el)\\n      }\\n      // return\\n      return ret\\n    },\\n  }\\n\\n  //\\n  // scrollbar\\n  // util to remember scrollbar state\\n  //\\n\\n  Xt.scrollbar = {\\n    /**\\n     * properties\\n     */\\n    currents: [],\\n\\n    /**\\n     * get scrollbar currents\\n     * @return {Array} Currents\\n     */\\n    get: () => {\\n      return Xt.scrollbar.currents\\n    },\\n\\n    /**\\n     * add scrollbar currents\\n     * @param {Node|HTMLElement|EventTarget|Window} el Elements to be deactivated\\n     */\\n    add: el => {\\n      Xt.scrollbar.currents.push(el)\\n    },\\n\\n    /**\\n     * remove scrollbar currents\\n     * @param {Node|HTMLElement|EventTarget|Window} el Elements to be deactivated\\n     */\\n    remove: el => {\\n      Xt.scrollbar.currents = Xt.scrollbar.currents.filter(x => x !== el)\\n    },\\n  }\\n\\n  //\\n  // focus\\n  // util to remember focus on key or interactions events\\n  //\\n\\n  Xt.focus = {\\n    /**\\n     * properties\\n     */\\n    block: false,\\n    current: null,\\n\\n    /**\\n     * enable focus change events\\n     * @param {Boolean} keepAll\\n     */\\n    on: (keepAll = false) => {\\n      // event key\\n      const focusChangeKeyHandler = Xt.dataStorage.put(document, 'keyup/focus', Xt.focus.changeKey)\\n      document.addEventListener('keyup', focusChangeKeyHandler)\\n      // @FIX switch mode\\n      if (!keepAll) {\\n        // event mouse\\n        const focusChangeOtherHandler = Xt.dataStorage.get(document, 'mousedown touchstart pointerdown/focus')\\n        document.removeEventListener('mousedown', focusChangeOtherHandler, true)\\n        document.removeEventListener('touchstart', focusChangeOtherHandler, true)\\n        document.removeEventListener('pointerdown', focusChangeOtherHandler, true)\\n      }\\n    },\\n\\n    /**\\n     * disable focus change events\\n     * @param {Boolean} keepAll\\n     */\\n    off: (keepAll = false) => {\\n      // @FIX switch mode\\n      if (!keepAll) {\\n        // event\\n        const focusChangeKeyHandler = Xt.dataStorage.get(document, 'keyup/focus')\\n        document.removeEventListener('keyup', focusChangeKeyHandler)\\n      }\\n      // event mouse\\n      const focusChangeOtherHandler = Xt.dataStorage.put(document, 'mousedown touchstart pointerdown/focus', Xt.focus.changeOther)\\n      document.addEventListener('mousedown', focusChangeOtherHandler)\\n      document.addEventListener('touchstart', focusChangeOtherHandler, { passive: true })\\n      document.addEventListener('pointerdown', focusChangeOtherHandler, { passive: true })\\n    },\\n\\n    /**\\n     * focus change on key events\\n     * @param {Event} e Event\\n     */\\n    changeKey: e => {\\n      const code = e.keyCode ? e.keyCode : e.which\\n      if (code === 9) {\\n        if (!Xt.focus.block) {\\n          // remember Xt.focus\\n          Xt.focus.current = document.activeElement\\n        }\\n        if (!document.documentElement.classList.contains('xt-focus-visible')) {\\n          // html.xt-focus-visible\\n          document.documentElement.classList.add('xt-focus-visible')\\n          // @FIX switch mode\\n          Xt.focus.off()\\n        }\\n      }\\n    },\\n\\n    /**\\n     * focus change on other events\\n     * @param {Event} e Event\\n     */\\n    changeOther: e => {\\n      if (!Xt.focus.block) {\\n        // remember Xt.focus\\n        Xt.focus.current = e.target\\n      }\\n      if (document.documentElement.classList.contains('xt-focus-visible')) {\\n        // html.xt-focus-visible\\n        document.documentElement.classList.remove('xt-focus-visible')\\n        // @FIX switch mode\\n        Xt.focus.on()\\n      }\\n    },\\n  }\\n\\n  requestAnimationFrame(() => {\\n    Xt.focus.on()\\n  })\\n\\n  //\\n  // focusLimit\\n  // util to limit focus inside HTML elements\\n  //\\n\\n  Xt.focusLimit = {\\n    /**\\n     * properties\\n     */\\n    actives: [],\\n\\n    /**\\n     * activate focusLimit to an element\\n     * @param {Node|HTMLElement|EventTarget|Window} el Element\\n     */\\n    on: el => {\\n      // vars\\n      Xt.focusLimit.focusables = Array.from(el.querySelectorAll(Xt.focusables)).filter(x => x.matches(':not([disabled]), :not([tabindex=\\\"-1\\\"])'))\\n      if (Xt.focusLimit.focusables.length) {\\n        Xt.focusLimit.first = Xt.focusLimit.focusables[0]\\n        Xt.focusLimit.last = Xt.focusLimit.focusables[Xt.focusLimit.focusables.length - 1]\\n        // event\\n        const focusLimitHandler = Xt.dataStorage.put(document, 'keydown/focusLimit', Xt.focusLimit.limit)\\n        document.addEventListener('keydown', focusLimitHandler)\\n      }\\n      // @FIX Xt.focus when clicking and not used tab before\\n      Xt.focus.current = Xt.focus.current ? Xt.focus.current : document.activeElement\\n      // @FIX switch mode\\n      Xt.focus.off(true)\\n      // actives\\n      Xt.focus.block = true\\n      Xt.focusLimit.actives.push(el)\\n    },\\n\\n    /**\\n     * deactivate focusLimit to an element\\n     * @param {Node|HTMLElement|EventTarget|Window} el Element\\n     */\\n    off: el => {\\n      // event\\n      const focusLimitHandler = Xt.dataStorage.get(document, 'keydown/focusLimit')\\n      document.removeEventListener('keydown', focusLimitHandler)\\n      // actives\\n      Xt.focusLimit.actives = Xt.focusLimit.actives.filter(x => x !== el)\\n      if (Xt.focusLimit.actives.length) {\\n        const active = Xt.focusLimit.actives[Xt.focusLimit.actives.length - 1]\\n        Xt.focusLimit.actives = Xt.focusLimit.actives.filter(x => x !== active)\\n        Xt.focusLimit.on(active)\\n      } else {\\n        // @FIX switch mode\\n        Xt.focus.on()\\n        // actives\\n        Xt.focus.block = false\\n        Xt.focus.current.focus()\\n      }\\n    },\\n\\n    /**\\n     * limit even on focus when activated\\n     * @param {Event} e Event\\n     */\\n    limit: e => {\\n      const code = e.keyCode ? e.keyCode : e.which\\n      if (code === 9) {\\n        if (!Xt.focusLimit.focusables.includes(document.activeElement)) {\\n          if (e.shiftKey) {\\n            Xt.focusLimit.last.focus()\\n            e.preventDefault()\\n          } else {\\n            Xt.focusLimit.first.focus()\\n            e.preventDefault()\\n          }\\n        }\\n      }\\n    },\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * friction\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element\\n   * @param {Object} obj Object with x and y values\\n   * @param {Boolean} transform Use transforms instead of position\\n   */\\n  Xt.friction = (el, obj, transform = true) => {\\n    cancelAnimationFrame(Xt.dataStorage.get(el, 'xtFrictionFrame'))\\n    cancelAnimationFrame(Xt.dataStorage.get(el, 'xtFrictionInitFrame'))\\n    Xt.dataStorage.set(\\n      el,\\n      'xtFrictionInitFrame',\\n      requestAnimationFrame(() => {\\n        let xCurrent\\n        let yCurrent\\n        if (transform) {\\n          xCurrent = Xt.getTranslate(el)[0]\\n          yCurrent = Xt.getTranslate(el)[1]\\n        } else {\\n          const rect = el.getBoundingClientRect()\\n          xCurrent = rect.left\\n          yCurrent = rect.top\\n        }\\n        let xDist = obj.x - xCurrent\\n        let yDist = obj.y - yCurrent\\n        // momentum\\n        const fncFriction = obj.friction\\n        // instant position if Xt.dataStorage.get\\n        if (fncFriction && Xt.dataStorage.get(el, 'xtFrictionX')) {\\n          xCurrent += fncFriction(Math.abs(xDist)) * Math.sign(xDist)\\n          yCurrent += fncFriction(Math.abs(yDist)) * Math.sign(yDist)\\n          // set\\n          if (transform) {\\n            el.style.transform = 'translateX(' + xCurrent + 'px) translateY(' + yCurrent + 'px)'\\n          } else {\\n            el.style.left = xCurrent + 'px'\\n            el.style.top = yCurrent + 'px'\\n          }\\n        } else {\\n          xCurrent = obj.x\\n          yCurrent = obj.y\\n          // set\\n          if (transform) {\\n            el.style.transform = 'translateX(' + xCurrent + 'px) translateY(' + yCurrent + 'px)'\\n          } else {\\n            el.style.top = yCurrent + 'px'\\n            el.style.left = xCurrent + 'px'\\n          }\\n        }\\n        // next interaction friction position\\n        Xt.dataStorage.set(el, 'xtFrictionX', xCurrent)\\n        Xt.dataStorage.set(el, 'xtFrictionY', yCurrent)\\n        // loop\\n        if (fncFriction) {\\n          const frictionLimit = obj.frictionLimit ? obj.frictionLimit : 1.5\\n          xDist = obj.x - xCurrent\\n          yDist = obj.y - yCurrent\\n          cancelAnimationFrame(Xt.dataStorage.get(el, 'xtFrictionFrame'))\\n          Xt.dataStorage.set(\\n            el,\\n            'xtFrictionFrame',\\n            requestAnimationFrame(() => {\\n              if (Math.abs(xDist) >= frictionLimit || Math.abs(yDist) >= frictionLimit) {\\n                // continue friction\\n                Xt.friction(el, obj, transform)\\n              } else {\\n                // next interaction instant position\\n                Xt.dataStorage.remove(el, 'xtFrictionX')\\n                Xt.dataStorage.remove(el, 'xtFrictionY')\\n              }\\n            })\\n          )\\n        }\\n      })\\n    )\\n  }\\n\\n  /**\\n   * Return translate values https://gist.github.com/aderaaij/a6b666bf756b2db1596b366da921755d\\n   * @param {Node|HTMLElement|EventTarget|Window} element Element to check target\\n   * @return {Array} Values [x, y]\\n   */\\n  /*\\n  USAGE:\\n  Xt.getTranslate(el)[0]; // for translateX\\n  Xt.getTranslate(el)[1]; // for translateY\\n  */\\n\\n  Xt.getTranslate = element => {\\n    const transArr = []\\n    const style = getComputedStyle(element)\\n    const transform = style.transform\\n    let mat = transform.match(/^matrix3d\\\\((.+)\\\\)$/)\\n    if (mat) {\\n      transArr.push(parseFloat(mat[1].split(', ')[13]))\\n    } else {\\n      mat = transform.match(/^matrix\\\\((.+)\\\\)$/)\\n      mat ? transArr.push(parseFloat(mat[1].split(', ')[4])) : transArr.push(0)\\n      mat ? transArr.push(parseFloat(mat[1].split(', ')[5])) : transArr.push(0)\\n    }\\n    return transArr\\n  }\\n\\n  /**\\n   * Contains for multiple elements\\n   * @param {NodeList|Array} elements Elements to check if contains\\n   * @param {Node|HTMLElement|EventTarget|Window} target Element to check if contained\\n   * @return {Boolean}\\n   */\\n  Xt.contains = (elements, target) => {\\n    let result = false\\n    for (const el of elements) {\\n      if (el.contains(target)) {\\n        result = true\\n      }\\n    }\\n    return result\\n  }\\n\\n  /**\\n   * Get unique id\\n   * @return {String} Unique id\\n   */\\n  Xt.getuniqueId = () => {\\n    Xt.uid = Xt.uid !== undefined ? Xt.uid : 0\\n    return 'xt-' + Xt.uid++\\n  }\\n\\n  /**\\n   * Get decresting number from Xt.stickyIndex\\n   * @return {Number} Unique number\\n   */\\n  Xt.getStickyIndex = () => {\\n    return Xt.stickyIndex--\\n  }\\n\\n  /**\\n   * Merge objects\\n   * @param {Array} arr Array of objects to merge\\n   * @return {Object} Merged object\\n   */\\n  Xt.merge = arr => {\\n    const final = {}\\n    for (const obj of arr) {\\n      if (obj) {\\n        for (const [key, value] of Object.entries(obj)) {\\n          if (\\n            value !== null &&\\n            typeof value === 'object' &&\\n            !Array.isArray(value) && // not array\\n            !value.nodeName && // not HTML element\\n            value !== window // not HTML element\\n          ) {\\n            // not window\\n            final[key] = Xt.merge([final[key], value])\\n          } else {\\n            final[key] = value\\n          }\\n        }\\n      }\\n    }\\n    return final\\n  }\\n\\n  /**\\n   * Make an array when element is only one\\n   * @param {NodeList|Array|Node|HTMLElement|EventTarget|Window} el\\n   * @return {NodeList|Array}\\n   */\\n  Xt.arrSingle = el => {\\n    if (!el) {\\n      return []\\n    }\\n    if (el.length === undefined || el.tagName === 'FORM') {\\n      const arr = new Array(1)\\n      arr[0] = el\\n      return arr\\n    } else {\\n      return el\\n    }\\n  }\\n\\n  /**\\n   * Create HTML elements from html string\\n   * @param {String} str Html string (only 1 root html tag)\\n   * @return {Node} HTML elements\\n   */\\n  Xt.createElement = str => {\\n    const div = document.createElement('div')\\n    div.innerHTML = str.trim()\\n    return div.firstChild\\n  }\\n\\n  /**\\n   * Set scrollbar width of document\\n   * @param {Boolean} force Force recalc\\n   */\\n  Xt.setScrollbarWidth = (force = false) => {\\n    if (Xt.scrollbarWidth === undefined) {\\n      const scrollbarWidthHandler = Xt.dataStorage.put(window, 'resize/scrollbar', Xt.setScrollbarWidth.bind(true))\\n      addEventListener('resize', scrollbarWidthHandler)\\n    }\\n    if (force || Xt.scrollbarWidth === undefined) {\\n      // add outer\\n      const outer = document.createElement('div')\\n      outer.style.visibility = 'hidden'\\n      outer.style.width = '100%'\\n      outer.style.msOverflowStyle = 'scrollbar' // needed for WinJS apps\\n      outer.classList.add('xt-ignore', 'overflow-main')\\n      document.body.append(outer)\\n      // force scrollbars\\n      outer.style.overflow = 'scroll'\\n      // add inner\\n      const inner = document.createElement('div')\\n      inner.style.width = '100%'\\n      inner.classList.add('xt-ignore')\\n      outer.append(inner)\\n      // return\\n      const widthNoScroll = outer.offsetWidth\\n      const widthWithScroll = inner.offsetWidth\\n      Xt.scrollbarWidth = widthNoScroll - widthWithScroll\\n      // remove\\n      outer.remove()\\n    }\\n  }\\n\\n  /**\\n   * if full width return '' else return value in px\\n   * @param {Number|String} width\\n   * @return {String} Value in px\\n   */\\n  Xt.normalizeWidth = width => {\\n    width = parseFloat(width)\\n    if (!width || width + Xt.scrollbarWidth >= window.innerWidth) {\\n      width = ''\\n    } else {\\n      width += 'px'\\n    }\\n    return width\\n  }\\n\\n  /**\\n   * fix scrollbar spacing when changing overflow adding padding\\n   * @param {Array|Node|HTMLElement|EventTarget|Window} container\\n   */\\n  Xt.scrollbarSpaceOn = container => {\\n    const width = Xt.scrollbarWidth\\n    container.style.paddingRight = width + 'px'\\n    // backdrop\\n    const backdrops = container.querySelectorAll('.backdrop')\\n    for (const backdrop of backdrops) {\\n      backdrop.style.right = width + 'px'\\n    }\\n    // xt-fixed\\n    const elements = container.querySelectorAll('.xt-fixed')\\n    for (const element of elements) {\\n      const style = getComputedStyle(element)\\n      let prop\\n      if (Xt.normalizeWidth(element.clientWidth) === '') {\\n        // only if full width\\n        prop = 'paddingRight'\\n      } else if (parseFloat(style.right) === 0) {\\n        // only if right position\\n        prop = 'right'\\n      }\\n      if (prop) {\\n        const old = element.style[prop]\\n        let val = parseFloat(style[prop])\\n        val = old !== '' ? val - parseFloat(old) : val\\n        const str = 'calc(' + val + 'px + ' + width + 'px)'\\n        element.classList.add('transition-none')\\n        requestAnimationFrame(() => {\\n          element.style[prop] = str\\n          requestAnimationFrame(() => {\\n            element.classList.remove('transition-none')\\n          })\\n        })\\n      }\\n    }\\n  }\\n\\n  /**\\n   * fix scrollbar spacing when changing overflow adding padding\\n   * @param {Array|Node|HTMLElement|EventTarget|Window} container\\n   */\\n  Xt.scrollbarSpaceOff = container => {\\n    container.style.paddingRight = ''\\n    // backdrop\\n    const backdrops = container.querySelectorAll('.backdrop')\\n    for (const backdrop of backdrops) {\\n      backdrop.style.right = ''\\n    }\\n    // xt-fixed\\n    const elements = container.querySelectorAll('.xt-fixed')\\n    for (const element of elements) {\\n      element.classList.add('transition-none')\\n      requestAnimationFrame(() => {\\n        element.style.right = ''\\n        element.style.paddingRight = ''\\n        requestAnimationFrame(() => {\\n          element.classList.remove('transition-none')\\n        })\\n      })\\n    }\\n  }\\n\\n  /**\\n   * addScript\\n   * @param {String} url\\n   * @param {Function} callback\\n   */\\n  Xt.addScript = (url, callback = null) => {\\n    if (!document.querySelector('script[src=\\\"' + url + '\\\"]')) {\\n      const script = document.createElement('script')\\n      if (callback) {\\n        script.onload = callback\\n      }\\n      script.type = 'text/javascript'\\n      script.src = url\\n      document.body.append(script)\\n    }\\n  }\\n\\n  /**\\n   * ignoreOnce\\n   * @param {Node|HTMLElement|EventTarget|Window} el\\n   */\\n  Xt.ignoreOnce = el => {\\n    if (el.classList.contains('xt-ignore-once')) {\\n      requestAnimationFrame(() => {\\n        // @FIX react when componentDidMount\\n        requestAnimationFrame(() => {\\n          // @FIX react when componentDidMount\\n          el.classList.remove('xt-ignore', 'xt-ignore-once')\\n        })\\n      })\\n    }\\n  }\\n\\n  /**\\n   * get transition or animation time\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element animating\\n   * @param {Number} timing Force duration in milliseconds\\n   * @return {Number} Time in milliseconds\\n   */\\n  Xt.animTime = (el, timing = null) => {\\n    if (timing || timing === 0) {\\n      return timing\\n    } else {\\n      const style = getComputedStyle(el)\\n      const transition = parseFloat(style.transitionDuration) + parseFloat(style.transitionDelay)\\n      const animation = parseFloat(style.animationDuration) + parseFloat(style.animationDelay)\\n      if (transition || animation) {\\n        timing = Math.max(transition, animation)\\n      }\\n      return timing * 1000\\n    }\\n  }\\n\\n  /**\\n   * execute function after transition or animation\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element animating\\n   * @param {Function} func Function to execute after transition or animation\\n   * @param {String} suffix Timeout suffix\\n   * @param {Number} timing Optional force time\\n   */\\n  Xt.animTimeout = (el, func, suffix = '', timing = null) => {\\n    clearTimeout(Xt.dataStorage.get(el, 'xtAnimTimeout' + suffix))\\n    timing = timing || timing === 0 ? timing : Xt.animTime(el)\\n    Xt.dataStorage.set(el, 'xtAnimTimeout' + suffix, setTimeout(func, timing))\\n  }\\n\\n  /**\\n   * clear animTimeout\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element animating\\n   * @param {String} suffix Timeout suffix\\n   */\\n  Xt.animTimeoutClear = (el, suffix = '') => {\\n    clearTimeout(Xt.dataStorage.get(el, 'xtAnimTimeout' + suffix))\\n  }\\n\\n  /**\\n   * animation on classes\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element animating\\n   * @param {String} suffix Timeout suffix\\n   */\\n  Xt.animOn = (el, suffix = '') => {\\n    el.classList.add('active')\\n    el.classList.remove('out')\\n    // keep the same level of raf as others\\n    cancelAnimationFrame(Xt.dataStorage.get(el, suffix))\\n    Xt.dataStorage.put(\\n      el,\\n      suffix,\\n      requestAnimationFrame(() => {\\n        el.classList.add('in')\\n      })\\n    )\\n  }\\n\\n  /**\\n   * animation off classes\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element animating\\n   * @param {String} suffix Timeout suffix\\n   * @param {Number} timing Optional force time\\n   */\\n  Xt.animOff = (el, suffix = '', timing = null) => {\\n    el.classList.remove('active')\\n    el.classList.remove('in')\\n    el.classList.add('out')\\n    Xt.animTimeout(\\n      el,\\n      () => {\\n        el.classList.remove('out')\\n      },\\n      suffix,\\n      timing\\n    )\\n  }\\n\\n  /**\\n   * return window percent if percent string\\n   * @param {Number|String} num Number to check\\n   * @return {Number}\\n   */\\n  Xt.windowPercent = num => {\\n    if (typeof num === 'string' || num instanceof String) {\\n      if (num.indexOf('%') !== -1) {\\n        num = (Xt.windowHeight * parseFloat(num)) / 100\\n      }\\n    }\\n    return num\\n  }\\n\\n  /**\\n   * query array of elements or element\\n   * @param {Node|HTMLElement|NodeList|Array} element Element to search from\\n   * @param {String} query Query for querySelectorAll\\n   * @return {Array}\\n   */\\n  Xt.queryAll = (element, query) => {\\n    if (!query) {\\n      return []\\n    }\\n    if (!element.length) {\\n      // search element\\n      return Xt.arrSingle(element.querySelectorAll(query))\\n    } else {\\n      // search array\\n      const arr = []\\n      for (const el of element) {\\n        arr.push(...el.querySelectorAll(query))\\n      }\\n      return arr\\n    }\\n  }\\n\\n  /**\\n   * check element visibility\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element animating\\n   * @return {Boolean}\\n   */\\n  Xt.visible = el => {\\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length)\\n  }\\n\\n  /**\\n   * Fix resize event multiple calls and adds delay on resize and scroll events\\n   * @param {Event|Object} e Event\\n   * @param {Node|HTMLElement|EventTarget|Window} element Element to save timeout\\n   * @param {Function} func Function to execute\\n   * @param {String} prefix Timeout prefix\\n   * @param {Boolean} instant If instant\\n   */\\n  Xt.eventDelay = (e, element, func, prefix = '', instant = false) => {\\n    const container = document.documentElement\\n    if (e && e.type && (e.type === 'resize' || e.type === 'scroll')) {\\n      const delay = e.detail !== undefined && e.detail.delay !== undefined ? e.detail.delay : instant ? 0 : Xt[e.type + 'Delay']\\n      if (e.type === 'resize') {\\n        const w = window.innerWidth\\n        const h = window.innerHeight\\n        // multiple calls check\\n        if (\\n          (e.detail === undefined || e.detail.force === undefined) && // not when setting delay on event\\n          Xt.dataStorage.get(container, 'xtEventDelayWidth') === w && // when width changes\\n          (window.matchMedia('(hover: none)').matches || Xt.dataStorage.get(container, 'xtEventDelayHeight') === h) // when height changes not touch\\n        ) {\\n          // only width no height because it changes on scroll on mobile\\n          return\\n        }\\n        // save after a frame to execute all eventDelay\\n        cancelAnimationFrame(Xt.dataStorage.get(container, 'xtEventDelayFrame'))\\n        Xt.dataStorage.set(\\n          container,\\n          'xtEventDelayFrame',\\n          requestAnimationFrame(() => {\\n            Xt.dataStorage.set(container, 'xtEventDelayWidth', w)\\n            Xt.dataStorage.set(container, 'xtEventDelayHeight', h)\\n          })\\n        )\\n      }\\n      // delay\\n      if (!delay) {\\n        // func\\n        func(e)\\n      } else {\\n        clearTimeout(Xt.dataStorage.get(element, 'xt' + e.type + prefix + 'Timeout'))\\n        Xt.dataStorage.set(\\n          element,\\n          'xt' + e.type + prefix + 'Timeout',\\n          setTimeout(() => {\\n            // func\\n            func(e)\\n          }, delay)\\n        )\\n      }\\n    } else {\\n      // func\\n      func(e)\\n    }\\n  }\\n\\n  Xt.dataStorage.set(document.documentElement, 'xtEventDelayWidth', window.innerWidth)\\n  Xt.dataStorage.set(document.documentElement, 'xtEventDelayHeight', window.innerHeight)\\n\\n  /**\\n   * animate css properties\\n   * @param {Node|HTMLElement|EventTarget|Window} element Element to save timeout\\n   * @param {Array} properties Array of css properties camel case\\n   * @returns {Object}\\n   */\\n  /* USAGE:\\n  // setup\\n  Xt.animCss(object, ['backgroundColor', 'borderColor', 'boxShadow'])\\n  // event\\n  const animCss = Xt.animCss(object, ['backgroundColor', 'borderColor', 'boxShadow'])\\n  gsap.set(object, {\\n    backgroundColor: animCss.backgroundColor.current,\\n    borderColor: animCss.borderColor.current,\\n    boxShadow: animCss.boxShadow.current,\\n  })\\n  gsap.to(object, {\\n    backgroundColor: animCss.backgroundColor.final,\\n    borderColor: animCss.borderColor.final,\\n    boxShadow: animCss.boxShadow.final,\\n    duration: Xt.vars.timeTiny,\\n    ease: 'linear',\\n  })\\n  */\\n  Xt.animCss = (element, properties) => {\\n    let isInitial = false\\n    // save style\\n    let style = Xt.dataStorage.get(element, 'xtAnimCssStyle')\\n    style = style || Xt.dataStorage.set(element, 'xtAnimCssStyle', getComputedStyle(element))\\n    // save initial\\n    for (const property of properties) {\\n      const initialized = Xt.dataStorage.get(element, 'xtAnimCssInitial' + property)\\n      if (!initialized) {\\n        isInitial = true\\n        Xt.dataStorage.set(element, 'xtAnimCssInitial' + property, style[property])\\n      }\\n    }\\n    // populate return\\n    if (!isInitial) {\\n      const obj = {}\\n      for (const property of properties) {\\n        obj[property] = {}\\n        // set current to current style or initial\\n        obj[property].current = element.style[property] || Xt.dataStorage.get(element, 'xtAnimCssInitial' + property)\\n      }\\n      element.style = '' // reset style to get final css value\\n      for (const property of properties) {\\n        // set final to final css value\\n        obj[property].final = style[property]\\n      }\\n      return obj\\n    }\\n  }\\n\\n  /**\\n   * Xt.windowHeight\\n   * vindow height value only on width resize to fix mobile window height changes\\n   */\\n\\n  addEventListener('resize', e => {\\n    Xt.eventDelay(\\n      e,\\n      document.documentElement,\\n      () => {\\n        Xt.windowHeightSet()\\n      },\\n      'xtWindowHeight' + 'Resize',\\n      true\\n    )\\n  })\\n\\n  Xt.windowHeightSet = () => {\\n    Xt.windowHeight = window.innerHeight\\n    /* https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\\n     * height: 100vh;\\n     * height: calc(var(--vh, 1vh) * 100);\\n     */\\n    document.documentElement.style.setProperty('--vh', Xt.windowHeight * 0.01 + 'px')\\n  }\\n\\n  /**\\n   * scrollRestoration\\n   */\\n\\n  Xt.ready(() => {\\n    if ('scrollRestoration' in history) {\\n      history.scrollRestoration = Xt.scrollRestoration\\n    }\\n  })\\n\\n  /**\\n   * debug console warning on img without loading attribute\\n   */\\n\\n  requestAnimationFrame(() => {\\n    if (Xt.debug) {\\n      Xt.mount.push({\\n        matches: 'img:not([loading]):not([src^=\\\"data:\\\"])',\\n        mount: object => {\\n          console.warn('Xt.debug: detected an image without \\\"loading\\\" attribute', object)\\n        },\\n      })\\n    }\\n  })\\n\\n  //\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Form\\\"\\ntitle: \\\"textarea-autosize\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n## Usage\\n\\nUse this code to create a **textarea autosize**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/textarea-autosize\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `init.xt.textareaautosize`           | `object` | Init event             |\\n| Event                   | `destroy.xt.textareaautosize`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `form:Node`       | Form closest node             |\\n\\n</div>\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-textarea-autosize=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.TextareaAutosize(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.TextareaAutosize(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider-progress').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-progress\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"/**\\n * Tailwind CSS theme for `prism.js`\\n * Based on the syntax theme used in the Tailwind CSS docs, which is based on Atom's\\n * `atom-dark` theme: https://github.com/atom/atom-dark-syntax\\n * @author Taylor Bryant\\n */\\n\\n code[class*=\\\"language-\\\"],\\n pre[class*=\\\"language-\\\"] {\\n   font-family: Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n   -webkit-overflow-scrolling: touch;\\n   -webkit-font-smoothing: auto;\\n   -moz-osx-font-smoothing: auto;\\n   color: #fff;\\n   color: #edf2f7;\\n   direction: ltr;\\n   text-align: left;\\n   white-space: pre;\\n   word-spacing: normal;\\n   word-break: normal;\\n   line-height: 1.5;\\n   tab-size: 4;\\n   hyphens: none;\\n }\\n\\n pre[class*=\\\"language-\\\"] {\\n   overflow: auto;\\n   padding: 1rem;\\n   border-radius: 0.5rem;\\n }\\n\\n :not(pre) > code[class*=\\\"language-\\\"],\\n pre[class*=\\\"language-\\\"] {\\n   background-color: #2d3748;\\n   font-size: 0.875rem;\\n }\\n\\n code.language-js .token.regex,\\n pre.language-js .token.regex,\\n .token.selector,\\n .token.attr-name,\\n .token.property,\\n .token.regex,\\n .token.class-name,\\n .token.entity {\\n   color: #ffe484;\\n }\\n\\n code.language-diff,\\n pre.language-diff {\\n   color: #cbd5e0;\\n }\\n\\n code.language-diff .token.inserted,\\n pre.language-diff .token.inserted,\\n .token.url,\\n .token.attr-value,\\n .token.char,\\n .token.string,\\n .token.builtin,\\n .token.inserted,\\n .token.boolean,\\n .token.constant {\\n   color: #b5f4a5;\\n }\\n\\n :not(pre) > code[class*=\\\"language-\\\"] {\\n   padding: 0.1em;\\n   border-radius: 0.3em;\\n }\\n\\n .token.comment,\\n .token.prolog,\\n .token.doctype,\\n .token.cdata {\\n   color: #a0aec0;\\n }\\n\\n .namespace {\\n   opacity: 0.7;\\n }\\n\\n .token.symbol,\\n .token.deleted,\\n .token.tag,\\n .token.number,\\n code.language-js .token.boolean,\\n pre.language-js .token.boolean {\\n   color: #ff8383;\\n }\\n\\n .token.unit,\\n .token.function,\\n .token.punctuation,\\n .token.hexcode,\\n .token.operator,\\n code.language-js .token.operator,\\n pre.language-js .token.operator {\\n   color: #93ddfd;\\n }\\n\\n .token.atrule,\\n .token.atrule > .token.property,\\n .token.atrule > .token.property + .token.punctuation,\\n .token.atrule\\n   > .token.property\\n   + .token.punctuation\\n   + .token.number\\n   + .token.unit,\\n .token.atrule > .token.number,\\n .token.atrule > .token.unit,\\n code.language-js .token.punctuation,\\n pre.language-js .token.punctuation,\\n code.language-js .token.keyword,\\n pre.language-js .token.keyword,\\n code.language-bash .token.function,\\n pre.language-bash .token.function {\\n   color: #fff;\\n }\\n\\n .token.rule,\\n .token.important,\\n .token.variable {\\n   font-weight: inherit;\\n   color: #d9a9ff;\\n }\\n\\n .token.bold {\\n   font-weight: bold;\\n }\\n\\n .token.italic {\\n   font-style: italic;\\n }\\n\\n .token.entity {\\n   cursor: help;\\n }\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Breadcrumbs\\\"\\ntitle: \\\"Breadcrumbs\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **breadcrumbs**.\\n\\n[[notePrimary]]\\n| This addon uses [separator](/components/core/separator). Visit the component page to import and customize.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/breadcrumbs/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/breadcrumbs/content).\\n\";","export default \".jump-to-content {\\n  position: fixed !important;\\n  left: 0;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  z-index: theme('zIndex.top');\\n  /* initial */\\n  @apply transform duration-500;\\n  @apply opacity-0 -translate-y-4;\\n  transition-property: opacity, transform;\\n  /* in */\\n  &.in {\\n    @apply opacity-100 translate-y-0 ease-in;\\n  }\\n  /* out */\\n  &.out {\\n    @apply opacity-0 -translate-y-4 ease-out;\\n  }\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/future/scroll'\\nimport 'xtendui/src/addons/propagate-interaction'\\nimport gsap from 'gsap'\\n\\n/**\\n * .btn--line\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--furniture-featured-v1 body .btn--line', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const link = object.tagName === 'a' || object.tagName === 'button' ? object : object.closest('a, button')\\n    const imgScale = 0.03\\n    const lineOpacity = 0.4\\n    const lineX = 15\\n    const lineWidth = 15\\n    const lineWidthMax = 150\\n\\n    // enter\\n\\n    const eventEnter = () => {\\n      // img\\n      const img = link.querySelector('.media-container')\\n      gsap.to(img, { scale: 1 - imgScale, duration: Xt.vars.timeMedium, ease: 'expo.out' })\\n      const imgInner = link.querySelector('.media-inner')\\n      gsap.to(imgInner, { scale: 1 + imgScale, duration: Xt.vars.timeMedium, ease: 'expo.out' })\\n      // text\\n      const text = object.querySelector('.btn--line_text')\\n      gsap.to(text, { x: lineX, duration: Xt.vars.timeMedium, delay: Xt.vars.timeSmall, ease: 'expo.out' })\\n      // line\\n      const line = object.querySelector('.btn--line_line')\\n      gsap.set(line, { width: 0, x: -lineWidthMax, opacity: lineOpacity, overwrite: true })\\n      gsap.to(line, { width: lineWidthMax, x: -lineWidthMax + lineWidth, opacity: 1, duration: Xt.vars.timeSmall, ease: 'expo.in' })\\n      gsap.to(line, { width: lineWidth + lineX, x: 0, opacity: 1, duration: Xt.vars.timeMedium, delay: Xt.vars.timeSmall, ease: 'expo.out' })\\n    }\\n\\n    link.addEventListener('mouseenter', eventEnter)\\n\\n    // enter\\n\\n    const eventLeave = () => {\\n      // img\\n      const img = link.querySelector('.media-container')\\n      gsap.to(img, { scale: 1, duration: Xt.vars.timeMedium, ease: 'expo.inOut' })\\n      const imgInner = link.querySelector('.media-inner')\\n      gsap.to(imgInner, { scale: 1, duration: Xt.vars.timeMedium, ease: 'expo.inOut' })\\n      // text\\n      const text = object.querySelector('.btn--line_text')\\n      gsap.to(text, { x: 0, duration: Xt.vars.timeMedium, ease: 'expo.inOut' })\\n      // line\\n      const line = object.querySelector('.btn--line_line')\\n      gsap.to(line, { width: lineWidth, x: 0, opacity: lineOpacity, duration: Xt.vars.timeMedium, ease: 'expo.inOut', overwrite: true })\\n    }\\n\\n    link.addEventListener('mouseleave', eventLeave)\\n\\n    // unmount\\n\\n    const unmount = () => {}\\n    return unmount\\n  },\\n})\\n\\n/**\\n * featured\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--furniture-featured-v1 body .featured_item', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const imgY = 150\\n\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      distance: 0,\\n      trigger: '50%',\\n      start: '50%',\\n      end: '100%',\\n    })\\n\\n    // change\\n\\n    const eventChange = e => {\\n      const tr = e.target\\n      // img\\n      const img = tr.querySelector('.featured_img_col')\\n      gsap.set(img, { y: imgY * (self.detail.ratio - 0.5) })\\n      // imgInner\\n      const imgInner = tr.querySelector('.featured_img_col img')\\n      gsap.set(imgInner, { scale: 1.1 - 0.1 * self.detail.ratio })\\n    }\\n\\n    for (const element of self.elements) {\\n      element.addEventListener('change.xt', eventChange)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list flex-col list-2\\\">\\n\\n  <div>\\n    <div class=\\\"list list-2\\\">\\n\\n      <div>\\n        <div class=\\\"list flex-col list-2\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Lorem Ipsum\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Dolor sit\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Amet\\n          </button>\\n\\n        </div>\\n      </div>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div class=\\\"list list-2\\\">\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Lorem Ipsum\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n</nav>\\n`\\n\";","export default \".demo--toggle-custom-options {\\n  &:not(.active):not(.out) {\\n    display: none;\\n  }\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Smooth\\\"\\ntitle: \\\"furniture-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-02-27\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-featured-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Table\\\"\\ntitle: \\\"Table\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n@TODO\\n\";","export default \"import { Xt } from 'xtendui'\\nimport gsap from 'gsap'\\n\\n/**\\n * listing-page\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--stores-listing-v2 body .listing-page', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const items = object.querySelectorAll('.listing-page_item')\\n\\n    // click\\n\\n    const eventOn = tr => {\\n      if (!tr.classList.contains('active')) {\\n        // class\\n        tr.classList.add('active')\\n        // front\\n        const front = tr.querySelector('.listing-page_front')\\n        gsap.to(front, { opacity: 0, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n        // front\\n        const back = tr.querySelector('.listing-page_back')\\n        gsap.set(back, { y: 40, opacity: 0 })\\n        gsap.to(back, { y: 0, opacity: 1, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n      } else {\\n        eventOff(tr)\\n      }\\n    }\\n\\n    const eventOff = tr => {\\n      if (tr.classList.contains('active')) {\\n        // class\\n        tr.classList.remove('active')\\n        // front\\n        const front = tr.querySelector('.listing-page_front')\\n        gsap.set(front, { y: -40, opacity: 0 })\\n        gsap.to(front, { y: 0, opacity: 1, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n        // front\\n        const back = tr.querySelector('.listing-page_back')\\n        gsap.to(back, { y: 0, opacity: 0, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n      }\\n    }\\n\\n    const eventClick = e => {\\n      const tr = e.target.closest('.listing-page_item')\\n      // disable on mobile\\n      if (matchMedia('(max-width: 767px)').matches) {\\n        return\\n      }\\n      // deactivate\\n      for (const other of Array.from(items).filter(x => x !== tr)) {\\n        eventOff(other)\\n      }\\n      // activate\\n      eventOn(tr)\\n    }\\n\\n    for (const item of items) {\\n      item.addEventListener('click', eventClick)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {}\\n    return unmount\\n  },\\n})\\n\";","export default \"module.exports = {\\n  component: theme => ({\\n    '.ripple-container': {\\n      // setup\\n      overflow: 'hidden',\\n      pointerEvents: 'none',\\n      borderRadius: 'inherit',\\n      position: 'absolute',\\n      top: '0',\\n      left: '0',\\n      right: '0',\\n      bottom: '0',\\n      // styles\\n      opacity: '.075',\\n    },\\n    '.ripple': {\\n      // styles\\n      position: 'absolute',\\n      borderRadius: '50%',\\n      background: theme('colors.black'),\\n    },\\n  }),\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Disable\\n\\nYou can disable styles using `.card-disable`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.card-disable`       | `card-disable`                | `responsive`                | Reset card styles            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/disable\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Stretch\\n\\nYou can stretch cards vertically inside row, see [row stretch](/components/core/row/other#stretch).\\n\\n## Checks\\n\\nRefer to [form checks card](/components/core/form/other#checks-card).\\n\";","export default \"export default () => {\\n  return `text-black links-default bg-gray-200`\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group flex-col\\\">\\n\\n    <div class=\\\"group-inner\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-md rounded-tl-md ${btnDefaultGroup()}\\\">\\n        ${iconSearch({ classes: 'icon-lg' })}\\n      </button>\\n      <input type=\\\"text\\\" class=\\\"form-item rounded-tr-md ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-b-md ${btnPrimaryGroup()}\\\">\\n      Search\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst badgeDefault = require('components/snippets/classes/badge-default').default\\nconst badgePrimary = require('components/snippets/classes/badge-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-1\\\">\\n\\n  <div class=\\\"badge badge-md ${badgeDefault()}\\\">\\n    Default\\n  </div>\\n\\n  <div class=\\\"badge badge-md ${badgePrimary()}\\\">\\n    Primary\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst spinner = require('components/snippets/spinner').default\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <div class=\\\"loader loader-animated bg-white bg-opacity-75 demo--loader-js-spinner\\\">\\n      <div class=\\\"spinner text-accent-500\\\">\\n        ${spinner({})}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-animated bg-white bg-opacity-75 demo--loader-js-spinner\\\">\\n      <span class=\\\"spinner text-accent-500\\\">\\n          ${spinner({})}\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<h2>Lorem Ipsum</h2>\\n\\n<p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n\\n<div class=\\\"text-white links-inverse mt-6 py-4 px-6 bg-accent-500\\\">\\n\\n  <h2>Lorem Ipsum</h2>\\n\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n\\n</div>\\n`\\n\";","export default \"module.exports = {\\n  component: {\\n    '.mouse-follow': {\\n      pointerEvents: 'none',\\n      position: 'fixed',\\n      top: '0',\\n      left: '0',\\n      right: 'auto',\\n      bottom: 'auto',\\n    },\\n  },\\n}\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Sticky\\\"\\ntitle: \\\"Sticky\\\"\\ndescription: \\\"Sticky elements with complex interactions.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/core/sticky'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/sticky.css.js](https://github.com/minimit/xtendui/blob/master/src/core/sticky.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      sticky: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **sticky**.\\n\\n@TODO\\n\\nCheck subpage to [customize interaction](/components/core/sticky/interaction).\\n\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Xt } from 'xtendui'\n\nimport { makeDocument } from 'assets/scripts/theme'\nimport ResizeSensor from 'assets/scripts/ResizeSensor'\n\nimport 'assets/styles/theme.css'\n\nclass Layout extends React.Component {\n  componentDidMount() {\n    const { demo } = this.props\n    let cname = 'gatsby_iframe-inside'\n    if (demo.full) {\n      cname += ' gatsby_iframe-full'\n    }\n    if (demo.container) {\n      cname += ' gatsby_iframe-container'\n    }\n    document.documentElement.classList.add(...cname.split(' '))\n    document.documentElement.setAttribute('id', 'iframe--' + demo.name)\n    const iframeLoaded = () => {\n      if (window.self !== window.top) {\n        window.parent.initIframe(window.name, demo.htmlSource, demo.jsxSource, demo.cssSource, demo.jsSource)\n        window.parent.resizeIframe(window.frameElement.getAttribute('name'))\n        if (demo.full) {\n          new ResizeSensor(document.querySelector('#body-outer'), () => {\n            window.parent.resizeIframe(window.frameElement.getAttribute('name'))\n          })\n        }\n      }\n      makeDocument()\n    }\n    Xt.ready(iframeLoaded)\n  }\n\n  render() {\n    const { children } = this.props\n    return <>{children}</>\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  demo: PropTypes.shape({\n    name: PropTypes.string,\n    full: PropTypes.bool,\n    container: PropTypes.bool,\n    htmlSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    jsxSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    jsSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    cssSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  }).isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport SEO from 'components/seo'\nimport Layout from 'components/layout-demo'\n\nimport { cssSource, jsSource } from 'assets/scripts/source'\n\nclass DemoVanillaIframe extends React.Component {\n  render() {\n    const { demo } = this.props\n    const seo = {}\n    seo.title = 'Demo'\n    seo.description = 'Demo'\n    demo.path = `private/demos/${demo.dirs.join('/')}/${demo.name}`.replace('/iframe', '').replace('src/gatsby/code/', '')\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            allFile {\n              files: edges {\n                file: node {\n                  relativePath\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <Layout seo={seo} demo={demo}>\n            <SEO title={seo.title} description={seo.description} />\n            <div id=\"body-outer\">\n              {\n                data.allFile.files.filter(x => x.file.relativePath === `${demo.path}.css`).map(() => (demo.cssSource = cssSource(demo))) && <div /> // @FIX react render string\n              }\n              {\n                data.allFile.files.filter(x => x.file.relativePath === `${demo.path}.js`).map(() => (demo.jsSource = jsSource(demo))) && <div /> // @FIX react render string\n              }\n              <div id=\"gatsby_body-inner\" className=\"gatsby_demo_source--from\" dangerouslySetInnerHTML={{ __html: demo.htmlSource }} />\n            </div>\n          </Layout>\n        )}\n      />\n    )\n  }\n}\n\nexport default DemoVanillaIframe\n\nDemoVanillaIframe.propTypes = {\n  demo: PropTypes.shape({\n    name: PropTypes.string,\n    dirs: PropTypes.array.isRequired,\n    path: PropTypes.string,\n    htmlSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    jsxSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    jsSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    cssSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  }).isRequired,\n}\n","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupListing = require('components/snippets/themes/markup-listing').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${markupListing()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"#iframe--fashion-hero-v2 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /* slider */\\n\\n    .slides-inner {\\n      @apply duration-none transform-none !important;\\n    }\\n\\n    .slide {\\n      @apply w-full;\\n      position: relative;\\n      /* activation */\\n      display: none;\\n      &.active {\\n        display: block;\\n        z-index: theme('zIndex.active');\\n      }\\n      &.out {\\n        display: block;\\n      }\\n      &:not(.active) {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n      }\\n    }\\n\\n    .slider-pagination {\\n      display: none;\\n    }\\n\\n    /* hero */\\n\\n    .hero {\\n      @apply w-full;\\n      display: block;\\n      overflow: hidden;\\n    }\\n\\n    .hero_cover {\\n      pointer-events: none;\\n      position: absolute;\\n      z-index: theme('zIndex.active');\\n      top: 0;\\n      left: 0;\\n      right: 0;\\n      bottom: 0;\\n      background: theme('colors.accent.500');\\n    }\\n\\n    .hero_asset {\\n      .media-container {\\n        height: 100vh;\\n        height: calc(var(--vh, 1vh) * 100);\\n        background: theme('colors.accent.900');\\n      }\\n    }\\n\\n    .hero_content {\\n      @apply container;\\n      position: absolute;\\n      z-index: calc(theme('zIndex.active') + 1);\\n      top: 0;\\n      left: 0;\\n      bottom: 0;\\n      right: 0;\\n      display: flex;\\n      align-items: flex-end;\\n      justify-content: flex-start;\\n      .btn {\\n        @apply btn-lg px-0;\\n      }\\n    }\\n\\n    .hero_content_inner {\\n      @apply block w-full max-w-xl py-10 md:py-16 text-white links-inverse;\\n    }\\n\\n    /* variants */\\n\\n    .hero--big {\\n      .h1 {\\n        font-size: 3rem;\\n        @screen md {\\n          font-size: 5rem;\\n        }\\n      }\\n    }\\n\\n    .hero--center {\\n      .hero_content {\\n        justify-content: center;\\n        text-align: center;\\n      }\\n    }\\n\\n    .hero--middle {\\n      @screen md {\\n        .hero_content {\\n          align-items: center;\\n        }\\n      }\\n    }\\n\\n    .hero--left {\\n      @screen md {\\n        .hero_content {\\n          justify-content: flex-start;\\n          text-align: left;\\n        }\\n      }\\n    }\\n\\n    .hero--right {\\n      @screen md {\\n        .hero_content {\\n          justify-content: flex-end;\\n          text-align: right;\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center demo--toggle-progress\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n    <span class=\\\"loader loader-y\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n    <span class=\\\"loader loader-y\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n    <span class=\\\"loader loader-y\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 3\\n    <span class=\\\"loader loader-y\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n    <span class=\\\"loader loader-x loader-size-bottom\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n    <span class=\\\"loader loader-x loader-size-bottom\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n    <span class=\\\"loader loader-x loader-size-bottom\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 3\\n    <span class=\\\"loader loader-x loader-size-bottom\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"#iframe--brands-featured-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * vars\\n      */\\n\\n    // ease\\n\\n    @ease-in: @ease-out-quint;\\n    @ease-out: @ease-out-quint;\\n\\n    /**\\n      * slider\\n      */\\n    .slider {\\n      .padding(y, medium);\\n      .slides-inner {\\n        // dragger animations\\n        .transition-none() !important;\\n      }\\n      // .brand\\n      .brand {\\n        .list();\\n        flex-wrap: nowrap;\\n      }\\n      &.xt-overflow-auto {\\n        .slides-inner {\\n          justify-content: center;\\n        }\\n      }\\n    }\\n\\n    // .slider--img\\n\\n    .slider--img {\\n      .slides-inner {\\n        .row(medium); // same as .brand\\n      }\\n      .brand {\\n        .list(medium); // same as .slides-inner\\n      }\\n      .brand_content {\\n        .col-custom(300px);\\n        // animation\\n        transition: transform @time-sm @ease-out;\\n        &:hover, &:active, &.active {\\n          transform: scale(1.05);\\n          transition: transform @time-sm @ease-in;\\n        }\\n      }\\n    }\\n\\n    // .slider--text\\n\\n    .slider--text {\\n      .slides-inner {\\n        .row(giant); // same as .brand\\n      }\\n      .brand {\\n        .list(giant); // same as .slides-inner\\n      }\\n      .brand_content {\\n        .font-sans-semibold();\\n        font-size: 12px;\\n        color: @text !important;\\n        text-transform: uppercase;\\n        white-space: nowrap;\\n        @media @min-sm {\\n          font-size: 1rem;\\n        }\\n        // animation\\n        transition: color @time-sm @ease-out;\\n        &:hover, &:active, &.active {\\n          color: @accent !important;\\n          transition: color @time-sm @ease-in;\\n        }\\n      }\\n      // gradient on left and right\\n      &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: 2;\\n        top: 0;\\n        bottom: 0;\\n        left: 0;\\n        width: 4rem;\\n        background: linear-gradient(90deg, @white 0%, fade(@white, 0%) 100%);\\n      }\\n      &:after {\\n        content: '';\\n        position: absolute;\\n        z-index: 2;\\n        top: 0;\\n        bottom: 0;\\n        right: 0;\\n        width: 4rem;\\n        background: linear-gradient(90deg, fade(@white, 0%) 0%, @white 100%);\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/addons/scroll-to-anchor'\\nimport gsap from 'gsap'\\nimport 'gsap/ScrollToPlugin'\\n\\nXt.mount.push({\\n  matches: '#iframe--scroll-to-anchor body #gatsby_body-inner', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    object = document.documentElement\\n\\n    // init\\n\\n    let self = new Xt.ScrollToAnchor(object, {\\n      scrollElements: [document.scrollingElement, object.querySelector('.demo--scroll-to-anchor'), object.querySelector('#demo--overlay-scroll-to-anchor')],\\n      scrollSpace: (self, scrollingElement) => {\\n        let scrollSpace = 0\\n        if (scrollingElement === document.scrollingElement) {\\n          const spaces = document.querySelectorAll('.xt-sticky.xt-clone')\\n          for (const space of spaces) {\\n            if (Xt.visible(space)) {\\n              scrollSpace += space.clientHeight\\n            }\\n          }\\n        }\\n        return scrollSpace\\n      },\\n    })\\n\\n    // change\\n\\n    const eventChange = () => {\\n      // val\\n      const scrollingElement = self.scrollElementCurrent\\n      let pos = self.position - self.scrollSpace - self.scrollDistance\\n      const min = 0\\n      const max = scrollingElement.scrollHeight - scrollingElement.offsetHeight\\n      pos = pos < min ? min : pos\\n      pos = pos > max ? max : pos\\n      // scroll\\n      gsap.to(scrollingElement, { scrollTo: pos, duration: Xt.vars.timeLarge, ease: 'quart.inOut' })\\n    }\\n\\n    self.object.addEventListener('change.xt.scrolltoanchor', eventChange)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.object.removeEventListener('change.xt.scrolltoanchor', eventChange)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Gallery\\\"\\ntitle: \\\"fashion-gallery-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-08-14\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-gallery-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"md:card-group\\\">\\n        <div class=\\\"card-md md:w-7/12\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n        <div class=\\\"card-sm md:w-5/12 rounded-b-md md:rounded-b-none md:rounded-r-md bg-gray-400\\\">\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"md:card-group\\\">\\n        <div class=\\\"card-md md:w-7/12 bg-gray-400 md:rounded-tl-md\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n        <div class=\\\"md:w-5/12\\\">\\n          <div class=\\\"card-sm bg-gray-500 md:rounded-tr-md\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"rounded-b-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '15%' })}\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"Scroll\\\"\\ndescription: \\\"Content animation when you scroll the page, fade in elements, parallax.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/core/scroll'\\n```\\n\\n## Usage\\n\\nUse this code to create a **scroll**.\\n\\n@TODO\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"furniture-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-09\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-listing-v1\\\"\\n]\\n---\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md transform bg-gray-200 hover:bg-gray-300 hover:shadow-xl hover:-translate-y-2 active:bg-gray-400 active:shadow-md active:-translate-y-1`\\n}\\n\";","export default \"/* global google */\\nimport { Xt } from 'xtendui'\\nimport MarkerClusterer from '@googlemaps/markerclustererplus'\\n\\n/**\\n * GoogleLocator\\n */\\nclass GoogleLocator {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // js options\\n    self.options = Xt.merge([self.constructor.optionsDefault, self.optionsCustom])\\n    // vars\\n    self.locateCache = null\\n    self.loaderElement = self.object.querySelector(self.options.elements.loader)\\n    self.itemsTemplate = self.object.querySelector(self.options.elements.itemsTemplate)\\n    self.itemsContainer = self.object.querySelector(self.options.elements.itemsContainer)\\n    self.resultElement = self.object.querySelector(self.options.elements.results)\\n    self.foundElement = self.object.querySelector(self.options.elements.founds)\\n    // init\\n    const options = self.options\\n    self.mapElement = self.object.querySelector(self.options.elements.map)\\n    self.map = new google.maps.Map(self.mapElement, options.map)\\n    self.searchInput = self.object.querySelector(self.options.elements.searchInput)\\n    self.search = new google.maps.places.Autocomplete(self.searchInput)\\n    self.searchInput.addEventListener('keypress', self.searchSubmit.bind(self))\\n    // submit triggers places autocomplete\\n    self.searchBtn = self.object.querySelector(self.options.elements.searchBtn)\\n    self.searchBtn.addEventListener('click', self.searchClick.bind(self))\\n    // minimum zoom\\n    if (options.map.zoomMin) {\\n      google.maps.event.addListener(self.map, 'zoom_changed', () => {\\n        google.maps.event.addListener(self.map, 'bounds_changed', () => {\\n          if (self.map.getZoom() > options.map.zoomMin) {\\n            self.map.setZoom(options.map.zoomMin)\\n          }\\n        })\\n      })\\n    }\\n    // search place\\n    google.maps.event.addListener(self.search, 'place_changed', () => {\\n      let place = self.search.getPlace()\\n      if (place && place.name && place.name !== '') {\\n        if (place.geometry) {\\n          // place\\n          self.position = place.geometry.location\\n          self.viewport = place.geometry.viewport\\n          self.radius = null\\n          self.submit()\\n          return\\n        }\\n      }\\n      // locate prediction\\n      if (self.locateCache && self.locateCache.value === self.searchInput.value) {\\n        self.position = self.locateCache.position\\n        self.viewport = null\\n        self.radius = null\\n        self.submit()\\n        return\\n      }\\n      // cached prediction\\n      if (self.predictionCache && self.predictionCache.value === self.searchInput.value) {\\n        self.position = self.predictionCache.position\\n        self.viewport = self.predictionCache.viewport\\n        self.radius = null\\n        self.submit()\\n        return\\n      }\\n      // new prediction\\n      new google.maps.places.AutocompleteService().getPlacePredictions({ input: self.searchInput.value }, results => {\\n        if (results && results.length) {\\n          const placesPreview = document.createElement('div')\\n          placesPreview.classList.add('display--none')\\n          new google.maps.places.PlacesService(placesPreview).getDetails({ reference: results[0].reference }, results => {\\n            place = results\\n            self.searchInput.value = place.formatted_address\\n            self.position = place.geometry.location\\n            self.viewport = place.geometry.viewport\\n            self.radius = null\\n            self.predictionCache = { value: self.searchInput.value, position: self.position, viewport: self.viewport }\\n            self.submit()\\n            placesPreview.remove()\\n          })\\n        } else {\\n          self.locations = []\\n          self.populateItems()\\n          self.resultElement.classList.add('noplace')\\n          self.resultElement.classList.remove('empty')\\n          self.resultElement.classList.remove('found')\\n          self.resultElement.classList.remove('error')\\n        }\\n      })\\n    })\\n    // submitCurrent\\n    if (options.elements.repeat) {\\n      self.repeatElement = self.object.querySelector(options.elements.repeat)\\n      if (self.repeatElement) {\\n        self.repeatElement.addEventListener('click', self.submitCurrent.bind(self).bind(self, false))\\n      }\\n    }\\n    // initialSearch\\n    if (options.initialSearch) {\\n      google.maps.event.addListenerOnce(self.map, 'idle', () => {\\n        self.map.setCenter(options.map.center)\\n        self.map.setZoom(options.map.zoom)\\n        self.submitCurrent(true)\\n      })\\n    }\\n    // locate\\n    if (self.options.elements.locate) {\\n      self.locateElement = self.object.querySelector(options.elements.locate)\\n      if (self.locateElement) {\\n        if (location.protocol === 'https:') {\\n          if (navigator.geolocation) {\\n            if (options.initialLocate) {\\n              self.locate(true)\\n            }\\n            self.locateElement.addEventListener('click', self.locate.bind(self))\\n          } else {\\n            self.locateElement.style.display = 'none'\\n          }\\n        } else {\\n          self.locateElement.style.display = 'none'\\n        }\\n      }\\n    }\\n    // initialized class\\n    self.object.classList.add(self.componentName)\\n    // @FIX raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt.googlelocator'))\\n    })\\n  }\\n\\n  //\\n  // methods\\n  //\\n\\n  /**\\n   * searchSubmit\\n   * @param {Event} e\\n   */\\n  searchSubmit(e) {\\n    const self = this\\n    const options = self.options\\n    // prevent form submit on enter\\n    const key = e.which || e.keyCode\\n    if (key === 13) {\\n      e.preventDefault()\\n      // reset map and submit\\n      if (self.searchInput.value === '') {\\n        self.map.setCenter(options.map.center)\\n        self.map.setZoom(options.map.zoom)\\n        self.submitCurrent(true)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * searchClick\\n   * @param {Event} e\\n   */\\n  searchClick(e) {\\n    const self = this\\n    const options = self.options\\n    // prevent form submit\\n    e.preventDefault()\\n    // reset map and submit\\n    if (self.searchInput.value === '') {\\n      self.map.setCenter(options.map.center)\\n      self.map.setZoom(options.map.zoom)\\n      self.submitCurrent(true)\\n    } else {\\n      // submit triggers places autocomplete\\n      google.maps.event.trigger(self.search, 'place_changed')\\n    }\\n  }\\n\\n  /**\\n   * submit\\n   */\\n  submit() {\\n    const self = this\\n    const options = self.options\\n    // fix .getBounds not ready\\n    if (!self.map.getBounds()) {\\n      google.maps.event.addListenerOnce(self.map, 'bounds_changed', () => {\\n        self.submit()\\n      })\\n      return false\\n    }\\n    // filter\\n    self.filters = []\\n    if (options.elements.filter) {\\n      const filterElements = self.object.querySelectorAll(options.elements.filter)\\n      for (const filterElement of filterElements) {\\n        if (filterElement.checked) {\\n          self.filters.push(filterElement.value)\\n        }\\n      }\\n    }\\n    // markers\\n    self.locations = []\\n    let index = 0\\n    const markers = options.markers\\n    const bounds = new google.maps.LatLngBounds()\\n    if (options.infoWindow) {\\n      self.info = new google.maps.InfoWindow(options.infoWindow)\\n    }\\n    // debug\\n    if (Xt.debug === true) {\\n      console.debug('Xt.debug: xt-google-locator viewport and radius', self.viewport, self.radius)\\n    }\\n    for (const marker of markers) {\\n      if (!self.filters.length || self.filterMarker(marker)) {\\n        const latLng = new google.maps.LatLng(\\n          options.formatData.lat ? options.formatData.lat(self, marker) : marker.lat,\\n          options.formatData.lng ? options.formatData.lng(self, marker) : marker.lng\\n        )\\n        const distance = google.maps.geometry.spherical.computeDistanceBetween(self.position, latLng)\\n        if ((!self.viewport || self.viewport.contains(latLng)) && (!self.radius || distance <= self.radius)) {\\n          const loc = new google.maps.Marker({\\n            map: self.map,\\n            position: latLng,\\n            title: marker.name,\\n            icon: marker.icon || options.map.icon,\\n            animation: marker.animation || options.map.animation,\\n            distance: distance,\\n            marker: marker,\\n            index: index,\\n          })\\n          bounds.extend(latLng)\\n          self.locations.push(loc)\\n          loc.addListener('click', () => {\\n            self.populateInfo(loc, 'marker')\\n          })\\n          index++\\n        }\\n      }\\n    }\\n    // assign index before sort\\n    for (const [i, loc] of self.locations.entries()) {\\n      loc.index = i\\n    }\\n    // order locations\\n    options.formatData.sort(self)\\n    // populate items after order\\n    self.populateItems()\\n    // markers\\n    if (options.map.cluster) {\\n      if (self.cluster) {\\n        self.cluster.clearMarkers()\\n      }\\n      self.cluster = new MarkerClusterer(self.map, self.locations, options.map.cluster)\\n    }\\n    // populate\\n    if (self.locations.length) {\\n      if (self.resultElement) {\\n        self.resultElement.classList.remove('noplace')\\n        self.resultElement.classList.remove('empty')\\n        self.resultElement.classList.add('found')\\n        self.resultElement.classList.remove('error')\\n      }\\n      if (self.foundElement) {\\n        self.foundElement.innerHTML = self.locations.length\\n      }\\n      // map\\n      self.map.fitBounds(bounds)\\n      self.map.panToBounds(bounds)\\n    } else {\\n      if (self.resultElement) {\\n        self.resultElement.classList.remove('noplace')\\n        self.resultElement.classList.add('empty')\\n        self.resultElement.classList.remove('found')\\n        self.resultElement.classList.remove('error')\\n      }\\n    }\\n    // debug\\n    if (Xt.debug === true) {\\n      console.debug('Xt.debug: xt-google-locator locations', self.locations)\\n    }\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('change.xt.google-locator'))\\n  }\\n\\n  /**\\n   * populateItems\\n   */\\n  populateItems() {\\n    const self = this\\n    // remove old\\n    const removes = self.object.querySelectorAll('.xt-google-locator-clone')\\n    for (const remove of removes) {\\n      remove.remove()\\n    }\\n    // populateItem\\n    for (const loc of self.locations) {\\n      self.populateItem(loc)\\n    }\\n  }\\n\\n  /**\\n   * filterMarker\\n   * @param {Object} marker\\n   */\\n  filterMarker(marker) {\\n    const self = this\\n    const options = self.options\\n    // filter\\n    let passed = true\\n    for (const filter of self.filters) {\\n      const check = options.formatData.filter(self, marker, filter)\\n      if (!check && filter !== '') {\\n        // '' is filter all\\n        passed = false\\n      }\\n    }\\n    return passed\\n  }\\n\\n  /**\\n   * populateItem\\n   * @param {Object} loc\\n   */\\n  populateItem(loc) {\\n    const self = this\\n    const options = self.options\\n    // clone\\n    let cloned = document.createElement('div')\\n    cloned.innerHTML = self.itemsTemplate.innerHTML\\n    cloned = cloned.querySelector(':scope > *')\\n    cloned.classList.add('xt-google-locator-clone')\\n    cloned.setAttribute('data-xt-google-locator-index', loc.index.toString())\\n    // append clone\\n    self.itemsContainer.append(cloned)\\n    // populate clone\\n    const els = cloned.querySelectorAll('[data-xt-google-locator-data]')\\n    for (const el of els) {\\n      const fnc = options.formatData[el.getAttribute('data-xt-google-locator-data')]\\n      if (fnc) {\\n        fnc(self, loc, el)\\n      }\\n    }\\n    // info\\n    cloned.addEventListener('click', () => {\\n      self.populateInfo(loc, 'result')\\n    })\\n  }\\n\\n  /**\\n   * populateInfo\\n   * @param {Object} loc\\n   * @param {String} type\\n   */\\n  populateInfo(loc, type) {\\n    const self = this\\n    const options = self.options\\n    // stop animation\\n    if (self.animatingLoc) {\\n      self.animatingLoc.setAnimation(null)\\n      self.animatingLoc = null\\n    }\\n    // animation\\n    const anim = type === 'marker' ? options.events.animateMarkerClick : type === 'result' ? options.events.animateMarkerResultClick : null\\n    if (anim) {\\n      loc.setAnimation(anim)\\n      self.animatingLoc = loc\\n    }\\n    // activation\\n    const item = self.itemsContainer.querySelector('[data-xt-google-locator-index=\\\"' + loc.index + '\\\"]')\\n    const old = self.itemsContainer.querySelector('[data-xt-google-locator-index].active')\\n    if (old) {\\n      old.classList.remove('active')\\n    }\\n    if (type === 'marker') {\\n      if (item) {\\n        item.focus()\\n        item.classList.add('active')\\n      }\\n    }\\n    // infowindow\\n    if (options.infoWindow) {\\n      const info = type === 'marker' ? options.events.infoWindowMarkerClick : type === 'result' ? options.events.infoWindowMarkerResultClick : null\\n      if (info) {\\n        if (item) {\\n          const content = options.formatData.info(self, loc, item)\\n          if (content) {\\n            self.info.setContent(content)\\n            self.info.open(self.map, loc)\\n          }\\n        }\\n      } else {\\n        self.info.close(self.map)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * submitCurrent\\n   * @param {Boolean} empty\\n   */\\n  submitCurrent(empty = false) {\\n    const self = this\\n    const options = self.options\\n    // position\\n    self.searchInput.value = ''\\n    self.position = self.map.getCenter()\\n    self.viewport = null\\n    self.radius = null\\n    if (!empty || options.seachMapBounds) {\\n      self.radius = google.maps.geometry.spherical.computeDistanceBetween(self.position, self.map.getBounds().getNorthEast())\\n    }\\n    self.submit()\\n  }\\n\\n  /**\\n   * locate\\n   * @param {Boolean} initial\\n   */\\n  locate(initial = false) {\\n    const self = this\\n    // loader\\n    if (!initial) {\\n      self.loaderShow()\\n    }\\n    // locate\\n    window.navigator.geolocation.getCurrentPosition(self.locateSuccess.bind(self), self.locateError.bind(self))\\n  }\\n\\n  /**\\n   * locateSuccess\\n   * @param {Object} pos\\n   */\\n  locateSuccess(pos) {\\n    const self = this\\n    const options = self.options\\n    // loader\\n    self.loaderHide()\\n    // position\\n    self.searchInput.value = self.locateElement.getAttribute('data-xt-google-locator-locate-btn')\\n    self.position = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude)\\n    self.viewport = null\\n    self.radius = options.locateRadius\\n    self.locateCache = { value: self.searchInput.value, position: self.position }\\n    // debug\\n    if (Xt.debug === true) {\\n      console.debug('Xt.debug: xt-google-locator locate', pos, self.position)\\n    }\\n    // submit on zoom only one time\\n    self.map.setCenter(self.position)\\n    self.submit()\\n  }\\n\\n  /**\\n   * locateError\\n   * @param {String} error\\n   */\\n  locateError(error) {\\n    const self = this\\n    // loader\\n    self.loaderHide()\\n    // error\\n    console.error('Error: xt-google-locator locate error', error)\\n  }\\n\\n  /**\\n   * loaderShow\\n   */\\n  loaderShow() {\\n    const self = this\\n    Xt.animOn(self.loaderElement)\\n  }\\n\\n  /**\\n   * loaderHide\\n   */\\n  loaderHide() {\\n    const self = this\\n    Xt.animOff(self.loaderElement)\\n  }\\n\\n  //\\n  // destroy\\n  //\\n\\n  /**\\n   * destroy\\n   */\\n  destroy() {\\n    const self = this\\n    // remove old\\n    const removes = self.object.querySelectorAll('.xt-google-locator-clone')\\n    for (const remove of removes) {\\n      remove.remove()\\n    }\\n    // events\\n    self.searchBtn.removeEventListener('click', self.searchClick.bind(self))\\n    self.searchInput.removeEventListener('keypress', self.searchSubmit.bind(self))\\n    if (self.locateElement) {\\n      self.locateElement.removeEventListener('click', self.locate.bind(self))\\n    }\\n    if (self.repeatElement) {\\n      self.repeatElement.removeEventListener('click', self.submitCurrent.bind(self).bind(self, false))\\n    }\\n    // initialized class\\n    self.object.classList.remove(self.componentName)\\n    // set self\\n    Xt.remove(self.componentName, self.object)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('destroy.xt.googlelocator'))\\n  }\\n}\\n\\n//\\n// option\\n//\\n\\nGoogleLocator.componentName = 'xt-google-locator'\\nGoogleLocator.optionsDefault = {\\n  // setting\\n  initialLocate: false,\\n  initialSearch: false,\\n  seachMapBounds: false,\\n  locateRadius: 25000,\\n  // element\\n  elements: {\\n    loader: '[data-xt-google-locator-loader]',\\n    searchInput: '[data-xt-google-locator-search-input]',\\n    searchBtn: '[data-xt-google-locator-search-btn]',\\n    map: '[data-xt-google-locator-map]',\\n    itemsTemplate: 'script[type=\\\"text/x-template\\\"]',\\n    itemsContainer: '[data-xt-google-locator-items]',\\n    results: '[data-xt-google-locator-results]',\\n    founds: '[data-xt-google-locator-result-found]',\\n    locate: '[data-xt-google-locator-locate-btn]',\\n    repeat: '[data-xt-google-locator-repeat]',\\n    filter: '[data-xt-google-locator-option]',\\n  },\\n  // event\\n  events: {\\n    animateMarkerClick: false,\\n    animateMarkerResultClick: false,\\n    infoWindowMarkerClick: true,\\n    infoWindowMarkerResultClick: false,\\n  },\\n  // map\\n  map: {\\n    center: { lat: 40, lng: -74 },\\n    zoom: 2.5,\\n    zoomMin: 14,\\n    scrollwheel: false,\\n    zoomControl: true,\\n    mapTypeControl: false,\\n    scaleControl: true,\\n    streetViewControl: false,\\n    rotateControl: false,\\n    fullscreenControl: false,\\n    cluster: {\\n      minimumClusterSize: 5,\\n      imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m',\\n    },\\n  },\\n  // infoWindow\\n  infoWindow: {},\\n  // format\\n  formatData: {\\n    lat: function (self, marker) {\\n      return marker.lat\\n    },\\n    lng: function (self, marker) {\\n      return marker.lng\\n    },\\n    sort: function (self) {\\n      if (self.searchInput.value === '') {\\n        self.locations.sort((a, b) => {\\n          const aName = a.marker.name.toUpperCase()\\n          const bName = b.marker.name.toUpperCase()\\n          if (aName > bName) {\\n            return 1\\n          }\\n          if (aName < bName) {\\n            return -1\\n          }\\n          return 0\\n        })\\n      } else {\\n        self.locations.sort((a, b) => {\\n          return a.distance - b.distance\\n        })\\n      }\\n    },\\n    filter: function (self, marker, filter) {\\n      return marker[filter]\\n    },\\n    name: function (self, loc, el) {\\n      const str = loc.marker.name\\n      if (!str || str === '') {\\n        el.remove()\\n      } else {\\n        el.innerHTML = str\\n      }\\n    },\\n    address: function (self, loc, el) {\\n      const str = loc.marker.address\\n      if (!str || str === '') {\\n        el.remove()\\n      } else {\\n        el.innerHTML = str\\n      }\\n    },\\n    additional: function (self, loc, el) {\\n      const str = loc.marker.additional\\n      if (!str || str === '') {\\n        el.remove()\\n      } else {\\n        el.innerHTML = str\\n      }\\n    },\\n    img: function (self, loc, el) {\\n      const str = loc.marker.img\\n      if (!str || str === '') {\\n        el.remove()\\n      } else {\\n        el.setAttribute('src', str)\\n      }\\n    },\\n    direction: function (self, loc, el) {\\n      let str = 'https://www.google.com/maps/dir/?api=1&destination='\\n      str += loc.marker.name\\n      str += '+' + loc.marker.address\\n      el.setAttribute('href', encodeURI(str))\\n    },\\n    distance: function (self, loc, el) {\\n      let distance\\n      if (loc.distance > 1000) {\\n        distance = Math.round(loc.distance / 1000) + ' Km'\\n      } else {\\n        distance = Math.round(loc.distance) + ' m'\\n      }\\n      el.innerHTML = distance\\n      if (self.searchInput.value === '') {\\n        el.remove()\\n      }\\n    },\\n    info: function (self, loc, el) {\\n      return el.outerHTML\\n    },\\n  },\\n  // marker\\n  markers: [\\n    {\\n      lat: 40.724165,\\n      lng: -73.983883,\\n      name: 'School 2',\\n      address: 'Via Foo, 19 - 35141 City PD',\\n      additional: '<a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/><a href=\\\"mailto:info@info.com\\\">info@info.com</a>',\\n      type: ['school'],\\n      fav: false,\\n    },\\n    {\\n      lat: 40.721819,\\n      lng: -73.991358,\\n      name: 'Restaurant 2',\\n      address: 'Via Foo, 19 - 35141 City PD',\\n      additional: '<a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/><a href=\\\"mailto:info@info.com\\\">info@info.com</a>',\\n      type: ['restaurant'],\\n      fav: false,\\n    },\\n    {\\n      lat: 40.72308,\\n      lng: -73.98434,\\n      name: 'Restaurant 1',\\n      address: 'Via Foo, 19 - 35141 City PD',\\n      additional: '<a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/><a href=\\\"mailto:info@info.com\\\">info@info.com</a>',\\n      type: ['restaurant'],\\n      fav: true,\\n    },\\n    {\\n      lat: 40.724705,\\n      lng: -73.986611,\\n      name: 'School 1',\\n      address: 'Via Foo, 19 - 35141 City PD',\\n      additional: '<a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/><a href=\\\"mailto:info@info.com\\\">info@info.com</a>',\\n      type: ['school'],\\n      fav: true,\\n    },\\n    {\\n      lat: 40.732056,\\n      lng: -73.998683,\\n      name: 'School 3',\\n      address: 'Via Foo, 19 - 35141 City PD',\\n      additional: '<a href=\\\"tel:+39333010101\\\">+39 333 010101</a><br/><a href=\\\"mailto:info@info.com\\\">info@info.com</a>',\\n      type: ['school'],\\n      fav: false,\\n    },\\n  ],\\n}\\n\\n//\\n// export\\n//\\n\\nXt.GoogleLocator = GoogleLocator\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md active\\\" aria-selected=\\\"true\\\">\\n    btn\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md active ${btnDefault()}\\\" aria-selected=\\\"true\\\">\\n    default\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md active ${btnPrimary()}\\\" aria-selected=\\\"true\\\">\\n    primary\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md link active\\\" aria-selected=\\\"true\\\">\\n    link\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"collapse-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-24\\\"\\ndemos: [\\n  \\\"iframe/themes/collapse-theme-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center text-white links-inverse py-4 px-6 bg-accent-500\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md\\\">\\n    btn\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    default\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    primary\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn link\\\">\\n    link\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-delay\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlayScreen = require('components/snippets/classes/card-default-overlay-screen').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container w-80 ml-0 mr-auto\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      right\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container w-80 ml-auto mr-0\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left blocks\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container w-80 ml-0 mr-auto\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"w-full\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '100%' })}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n            <div class=\\\"card-sm bg-gray-500 mt-auto\\\">\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Form\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Disabled\\n\\nUse **component classes** to style disabled.\\n\\nFor aria purpose use `aria-disabled=\\\"true\\\"` when using the class `.disabled`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `[readonly], [disabled], .disabled`                     | `disabled`                | Disabled styles            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/disabled\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Fieldset Legend and Note\\n\\nUse **component classes** to create `fieldset` and `legend`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `fieldset, .fieldset`                     | `fieldset`                | Fieldset styles            |\\n| Component                  | `legend, .legend`                     | `legend`                | Legend styles            |\\n\\n</div>\\n\\nUse **tailwind classes** to create a note.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/fieldset-legend\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Label addon\\n\\nUse **tailwind classes** to create a label addon.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/label-addon\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Checks button\\n\\nUse [button](/components/core/button) with `label` to create checks with button.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/checks-button\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Checks card\\n\\nUse [card](/components/core/card) with `label` to create checks with card.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/checks-card\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Validation\\n\\nHtml validation and Constraint Validation API.\\n\\nIt **automatically runs** on **form submit** and **automatically scrolls** on the **first invalid** form item.\\n\\nUse **component classes** to style validation.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `form[novalidate]`                     | `NOT POSSIBLE`                | Do not validate form            |\\n| Component                  | `.form-valid`                     | `form-valid`                | Validation valid class            |\\n| Component                  | `.form-invalid`                     | `form-invalid`                | Validation invalid class            |\\n| Component                  | `.form-label-required`                     | `form-label-required`                | Label required with asterisk            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/validation\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nRefer to [group](/components/core/group).\\n\\n## Toolbar\\n\\nRefer to [toolbar](/components/addons/toolbar).\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"Card\\\"\\ndescription: \\\"Generic component to display content in a box.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/card.css.js](https://github.com/minimit/xtendui/blob/master/src/core/card.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      card: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **card**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can also **stack** card content.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/usage-stack\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/card/content).\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md transform hover:bg-gray-200 hover:shadow-xl hover:-translate-y-2 active:bg-gray-300 active:shadow-md active:-translate-y-1`\\n}\\n\";","export default \"const round = num =>\\n  num\\n    .toFixed(7)\\n    .replace(/(\\\\.[0-9]+?)0+$/, '$1')\\n    .replace(/\\\\.0$/, '')\\nconst rem = px => `${round(px / 16)}rem`\\n\\nmodule.exports = {\\n  variant: ['responsive'],\\n  utility: {\\n    '.slider-disable': {\\n      // setup\\n      '@apply xt-disable-after-init': '',\\n      '.slider-pagination, [data-xt-nav]': {\\n        display: 'none !important',\\n      },\\n      '.xt-wrap': {\\n        visibility: 'hidden !important',\\n        opacity: '0 !important',\\n      },\\n      // @FIX do calculation first\\n      '&.xt-disabled': {\\n        '.slide:not(.active)': {\\n          visibility: 'hidden !important',\\n          opacity: '0 !important',\\n          height: '0 !important',\\n        },\\n      },\\n    },\\n    '.slider-expand': {\\n      // setup\\n      '@apply xt-disable': '',\\n      '.slides': {\\n        overflow: 'visible',\\n        height: 'auto !important',\\n      },\\n      '.slides-inner': {\\n        '@apply duration-none transform-none animate-none !important': '',\\n        flexWrap: 'wrap !important',\\n      },\\n      '.slide:not(.active)': {\\n        opacity: '1 !important',\\n      },\\n      '.xt-wrap, .slider-pagination, [data-xt-nav], .loader, .filler, .spinner': {\\n        display: 'none !important',\\n      },\\n    },\\n  },\\n  component: theme => ({\\n    '.slider': {\\n      // setup\\n      position: 'relative',\\n      overflow: 'hidden',\\n      '&:not(.xt-slider)': {\\n        // @FIX page load height without .active slides\\n        '.slide': {\\n          '&:first-child': {\\n            display: 'block !important',\\n            position: 'relative !important',\\n          },\\n        },\\n      },\\n    },\\n    '.slides': {\\n      // setup\\n      position: 'relative',\\n      display: 'inline-block', // @FIX autoheight values\\n      verticalAlign: 'top', // @FIX inline-block margin below\\n      width: '100%',\\n      // styles\\n      '&.xt-autoHeight': {\\n        // animation autoHeight\\n        transitionProperty: 'height',\\n        transitionDuration: theme('transitionDuration.500'),\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      },\\n    },\\n    '.slide': {\\n      // setup\\n      position: 'relative',\\n      '> *': {\\n        display: 'block',\\n        position: 'relative',\\n      },\\n    },\\n    '.slides-inner': {\\n      // styles\\n      flexWrap: 'nowrap',\\n      alignItems: 'flex-start',\\n      // animation dragger\\n      transitionProperty: 'transform',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n    },\\n    '.slider-pagination, .slider-navigation': {\\n      // styles\\n      paddingTop: theme('spacing.4'),\\n      alignItems: 'center',\\n      justifyContent: 'center',\\n    },\\n    '[data-xt-pag].btn': {\\n      // styles\\n      minHeight: '1.3rem',\\n      borderRadius: '2rem',\\n      padding: `${rem(7)} ${rem(11)}`,\\n      fontSize: rem(10),\\n      '&.active': {\\n        padding: `${rem(7)} ${rem(20)}`,\\n      },\\n      // animation\\n      transitionProperty: 'all',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.out'),\\n      '&:hover, &:active, &.active': {\\n        transitionTimingFunction: theme('transitionTimingFunction.out'), // same easing to not jump when changing size\\n      },\\n    },\\n    '[data-xt-nav].btn': {\\n      minHeight: '1.3rem',\\n      borderRadius: '2rem',\\n      padding: `${rem(7)} ${rem(11)}`,\\n      fontSize: rem(10),\\n    },\\n    '.xt-overflow-auto': {\\n      '@apply xt-disable': '',\\n      '.slider-pagination, [data-xt-nav], .xt-wrap': {\\n        display: 'none !important',\\n      },\\n      // @FIX disable slider if not overflowing\\n      '.slides-inner': {\\n        '@apply duration-none transform-none !important': '',\\n      },\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop=\\\"{ on: 'mouseenter', off: 'mouseleave', closeOutside: false }\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      mouse\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-y loader-y-animated loader-size-right\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-y loader-y-animated loader-size-right\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Toggle\\\"\\ntitle: \\\"Interaction\\\"\\ndate: \\\"2010-10-10\\\"\\n---\\n\\n## Class\\n\\nYou can customize the **class names** used with the component.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `class:String`                          | `active active-toggle`        | Class name for activation            |\\n| Option                  | `classIn:String`                          | `in`        | Class name for in animation            |\\n| Option                  | `classOut:String`                          | `out`        | Class name for out animation            |\\n| Option                  | `classDone:String`                          | `done`        | Class name for in animation done            |\\n| Option                  | `classInitial:String`                          | `initial`        | Class name for initialization            |\\n| Option                  | `classInverse:String`                          | `inverse`        | Class name for inverse direction activation            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/class\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can start with toggled elements and targets just by adding **one of the class names for activation** to the **elements** or **targets**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/start\\\">\\n  </demovanilla>\\n</demo>\\n\\nAdditionally on component initialization the class `xt-toggle` gets added to the **object** (the DOM element you assigned the component).\\n\\n## Animations\\n\\nThe util class `.toggle` sets `display: none` when **not activated**. If you want `display: none` when **activated** `.toggle-inverse`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- | ----------------------------- |\\n| Utility                  | `.toggle`                     | `toggle`                | `responsive`                | Toggle `display: none` on `.active` and `.out`            |\\n| Utility                  | `.toggle-inverse`                     | `toggle-inverse`                | `responsive`                | Toggle `display: none` on `.done`         |\\n\\n</div>\\n\\nYou can use **css animations**, just add them with **class names**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/animation\\\">\\n  </demovanilla>\\n</demo>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/animation-inverse\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can use **javascript animations**, just use [toggle api](/components/core/toggle/api), and remember to set `durationOn: Milliseconds` and `durationOff: Milliseconds`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/animation-js\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Quantity\\n\\nYou can specify `min` and `max` concurrent activations. The `min` option is fulfilled on initialization, the `max` options deactivates the first activated when max is reached.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `min:Number`                          | `0`        | Minimum number of concurrent elements activated            |\\n| Option                  | `max:Number`                          | `1`        | Maximum number of concurrent elements activated            |\\n| Option                  | `autoDisable:Boolean`                          | `false`        | Disable automatically when cannot be activated             |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/quantity\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Event\\n\\nYou can specify **on** and **off** events for the toggle. Fore example `on: 'mouseenter'` `off: 'mouseleave'`. Default is `on: 'click'`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `on:String`                          | `'click'`        | Activation event to attach to elements            |\\n| Option                  | `off:String`                          | `false`        | Dectivation event to attach to elements            |\\n| Option                  | `eventLimit:Query`                          | `'.event-limit'`        | Limit events inside self.object            |\\n| Option                  | `preventEvent:Boolean`                          | `false`        | Prevent interaction until activated depending on `on` and `off` events (second click or mouseenter)            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/event\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Timing\\n\\nActivation/deactivation automatically waits for the <strong>duration</strong> of animations and transitions on <code>.active</code> and <code>.out</code>.\\n\\nYou can use a function for <code>delayOn</code> and <code>delayOff</code> for example <code>(current, total) => {return Math.min((total - current) * 150, 300)}</code>.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `instant:Boolean|Object`                 | `{ elements: true, targets: false, elementsInner: true, targetsInner: true }`     | Set instant activation and deactivation, can be one or more booleans `elements` `elementsInner` `targets` `targetsInner`          |\\n| Option                  | `delayOn:Milliseconds|Function`                          | `false`        | Activation delay            |\\n| Option                  | `delayOff:Milliseconds|Function`                          | `false`        | Deactivation delay            |\\n| Option                  | `delayInitial:Boolean`                          | `true`        | Initial activation delay            |\\n| Option                  | `durationOn:Milliseconds`                          | `false`        | Activation duration            |\\n| Option                  | `durationOff:Milliseconds`                          | `false`        | Deactivation duration            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/timing\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Auto\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `auto.time:Milliseconds`                          | `false`        | Automatic activation time            |\\n| Option                  | `auto.initial:Boolean`                          | `true`        | Automatic activation on initial            |\\n| Option                  | `auto.step:Number`                          | `1`        | Automatic activation steps            |\\n| Option                  | `auto.inverse:Boolean`                          | `false`        | Automatic activation inverse order            |\\n| Option                  | `auto.pause:Query`                          | `false`        | Elements that pause automatic on mouseenter            |\\n\\n</div>\\n\\n[[notePrimary]]\\n| Auto doesn't run if the toggle is `display: none`. Start it manually when visible using [toggle events](/components/core/toggle/api#trigger).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/auto\\\">\\n  </demovanilla>\\n</demo>\\n\\nUse the [api](/components/core/slider/api#listen) and listen to events to make auto progress indicators.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/progress\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Loop\\n\\nUse `loop: false` to disable looping on activation.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `loop:Boolean`                          | `true`        | Loop activation            |\\n\\n</div>\\n\\n## Jump\\n\\nUse `jump: true` to enable clicking on a **target** to jump to them.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `jump:Boolean`                          | `false`        | Clicking on targets triggers activation            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/jump\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Navigation\\n\\nYou can add navigation with the `navigation:Query` option, on the queried elements use the attribute `[data-xt-nav=\\\"value\\\"]` to set the amount to add (`+1`) or remove (`-1`) to the current activation index.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `navigation:Query`                          | `false`        | Query for navigation elements             |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/navigation\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Keyboard\\n\\nUse `keyboard: { selector: 'object' }` or `keyboard: { selector: Query }` to enable keyboard navigation on focus.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `keyboard.selector:Boolean`                          | `false`        | Elements that triggers the events            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/usability-keyboard\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Block\\n\\nYou can block the activations with the class `.xt-block` on elements.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.xt-block`                     | `NOT POSSIBLE`                | Block scroll on element            |\\n\\n</div>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Merge\\n\\nYou can make group a **single interactive object**.\\n\\n[[notePrimary]]\\n| This demos uses [propagate-interaction](/components/addons/propagate-interaction). Visit the component page to import and customize.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/merge\\\">\\n  </demovanilla>\\n</demo>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/group/merge-vertical\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { Link, graphql } from 'gatsby'\\nimport RehypeReact from 'rehype-react'\\nimport { markdownSlug } from 'components/snippets/markdown-slug'\\n\\nimport SEO from 'components/seo'\\nimport Layout from 'components/layout'\\nimport Demo from 'components/demo/demo'\\nimport DemoVanilla from 'components/demo/demo-vanilla'\\n\\nconst renderAst = new RehypeReact({\\n  createElement: React.createElement,\\n  components: { demo: Demo, demovanilla: DemoVanilla },\\n}).Compiler\\n\\nclass Template extends React.Component {\\n  render() {\\n    const { data } = this.props\\n    const seo = {}\\n    seo.title = data.post.frontmatter.title\\n    seo.title = seo.title\\n      .split(/[\\\\s-]+/)\\n      .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n      .join(' ')\\n    seo.title =\\n      data.post.frontmatter.parent && data.post.frontmatter.parent !== data.post.frontmatter.title ? data.post.frontmatter.parent + ' ' + seo.title : seo.title\\n    seo.title += ' - '\\n    seo.title += data.post.frontmatter.category && data.post.frontmatter.category !== data.post.frontmatter.title ? ' ' + data.post.frontmatter.category : ''\\n    seo.title += data.post.frontmatter.type && data.post.frontmatter.type !== data.post.frontmatter.title ? ' ' + data.post.frontmatter.type : ''\\n    seo.description = data.post.frontmatter.description ? data.post.frontmatter.description : data.parent.frontmatter.description\\n    return (\\n      <Layout seo={seo} page={data}>\\n        <SEO title={seo.title} description={seo.description} />\\n        {data.post.htmlAst !== '<div></div>' ? renderAst(data.post.htmlAst) : null}\\n\\n        {data.post.frontmatter.parent === data.post.frontmatter.title ? (\\n          data.postsAdiacent.posts.length > 1 ? (\\n            <div className=\\\"gatsby_listing\\\">\\n              <div className=\\\"row row-3\\\">\\n                <div className=\\\"gatsby_listing_group\\\">\\n                  {data.post.frontmatter.type === 'Components' ? (\\n                    <h2 className=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">{'Styling and interactions'}</h2>\\n                  ) : null}\\n                  <div className=\\\"gatsby_listing_items\\\">\\n                    <div className=\\\"row\\\">\\n                      {data.postsAdiacent.posts.map(({ post: adiacent }, i) =>\\n                        adiacent.frontmatter.parent !== adiacent.frontmatter.title ? (\\n                          adiacent.frontmatter.demos ? (\\n                            <div className=\\\"gatsby_listing_column\\\" key={i}>\\n                              <a role=\\\"button\\\" className=\\\"card gatsby_listing_item\\\" data-gatsby-listing-toggle>\\n                                <div className=\\\"h4\\\">\\n                                  {adiacent.frontmatter.title\\n                                    .split(/[\\\\s-]+/)\\n                                    .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n                                    .join(' ')}\\n                                </div>\\n                                <p>{adiacent.frontmatter.description}</p>\\n                              </a>\\n                              {adiacent.frontmatter.demos ? (\\n                                <Demo>\\n                                  {adiacent.frontmatter.demos.map((demo, i) => {\\n                                    const type = demo.split('/')[0]\\n                                    if (type === 'vanilla') {\\n                                      return <DemoVanilla src={demo} key={i}></DemoVanilla>\\n                                    } else if (type === 'iframe') {\\n                                      return <div className=\\\"gatsby_demo_item toggle\\\" data-iframe-fullscreen={demo} key={i}></div>\\n                                    }\\n                                  })}\\n                                </Demo>\\n                              ) : null}\\n                            </div>\\n                          ) : (\\n                            <div className=\\\"gatsby_listing_column\\\" key={i}>\\n                              <Link to={markdownSlug(adiacent)} className=\\\"card gatsby_listing_item\\\">\\n                                <div className=\\\"h4\\\">\\n                                  {adiacent.frontmatter.title\\n                                    .split(/[\\\\s-]+/)\\n                                    .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n                                    .join(' ')}\\n                                </div>\\n                                <p>\\n                                  {adiacent.frontmatter.description\\n                                    ? adiacent.frontmatter.description\\n                                    : adiacent.frontmatter.parent +\\n                                      \\\"'s \\\" +\\n                                      adiacent.frontmatter.title\\n                                        .split(/[\\\\s-]+/)\\n                                        .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n                                        .join(' ')}\\n                                </p>\\n                              </Link>\\n                            </div>\\n                          )\\n                        ) : null\\n                      )}\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          ) : null\\n        ) : null}\\n      </Layout>\\n    )\\n  }\\n}\\n\\nexport default Template\\n\\nexport const query = graphql`\\n  query($title: String!, $type: String, $category: String, $parent: String, $parents: String) {\\n    categories: allMarkdownRemark(filter: { frontmatter: { type: { eq: $type } } }, sort: { fields: [frontmatter___date, frontmatter___title], order: ASC }) {\\n      category: group(field: frontmatter___category) {\\n        title: fieldValue\\n        posts: edges {\\n          post: node {\\n            frontmatter {\\n              type\\n              category\\n              parent\\n              title\\n              description\\n              link\\n            }\\n          }\\n        }\\n      }\\n    }\\n    postsAll: allMarkdownRemark {\\n      posts: edges {\\n        post: node {\\n          frontmatter {\\n            type\\n            category\\n            parent\\n            title\\n            description\\n          }\\n        }\\n      }\\n    }\\n    postsAdiacent: allMarkdownRemark(\\n      filter: { frontmatter: { type: { eq: $type }, category: { eq: $category }, parent: { regex: $parents } } }\\n      sort: { fields: [frontmatter___date, frontmatter___title], order: [DESC, ASC] }\\n    ) {\\n      posts: edges {\\n        post: node {\\n          frontmatter {\\n            type\\n            category\\n            parent\\n            title\\n            description\\n            demos\\n          }\\n        }\\n      }\\n    }\\n    parent: markdownRemark(frontmatter: { title: { eq: $parent }, category: { eq: $category } }) {\\n      htmlAst\\n      frontmatter {\\n        type\\n        category\\n        parent\\n        description\\n        title\\n      }\\n    }\\n    post: markdownRemark(frontmatter: { type: { eq: $type }, parent: { eq: $parent }, category: { eq: $category }, title: { eq: $title } }) {\\n      htmlAst\\n      frontmatter {\\n        type\\n        category\\n        parent\\n        title\\n        description\\n      }\\n    }\\n  }\\n`\\n\\nTemplate.propTypes = {\\n  data: PropTypes.shape({\\n    categories: PropTypes.shape({\\n      category: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          title: PropTypes.string.isRequired,\\n          posts: PropTypes.arrayOf(\\n            PropTypes.shape({\\n              post: PropTypes.shape({\\n                frontmatter: PropTypes.shape({\\n                  type: PropTypes.string.isRequired,\\n                  category: PropTypes.string,\\n                  parent: PropTypes.string,\\n                  title: PropTypes.string.isRequired,\\n                  description: PropTypes.string,\\n                }).isRequired,\\n              }).isRequired,\\n            }).isRequired\\n          ),\\n        }).isRequired\\n      ),\\n    }),\\n    postsAll: PropTypes.shape({\\n      posts: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          post: PropTypes.shape({\\n            frontmatter: PropTypes.shape({\\n              type: PropTypes.string.isRequired,\\n              category: PropTypes.string,\\n              parent: PropTypes.string,\\n              title: PropTypes.string.isRequired,\\n              description: PropTypes.string,\\n            }).isRequired,\\n          }).isRequired,\\n        }).isRequired\\n      ),\\n    }).isRequired,\\n    postsAdiacent: PropTypes.shape({\\n      posts: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          post: PropTypes.shape({\\n            frontmatter: PropTypes.shape({\\n              type: PropTypes.string.isRequired,\\n              category: PropTypes.string,\\n              parent: PropTypes.string,\\n              title: PropTypes.string.isRequired,\\n              description: PropTypes.string,\\n              demos: PropTypes.array,\\n            }).isRequired,\\n          }).isRequired,\\n        }).isRequired\\n      ),\\n    }).isRequired,\\n    parent: PropTypes.shape({\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n        description: PropTypes.string,\\n      }).isRequired,\\n    }),\\n    post: PropTypes.shape({\\n      htmlAst: PropTypes.object.isRequired,\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n        description: PropTypes.string,\\n      }).isRequired,\\n    }).isRequired,\\n  }).isRequired,\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Form\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/variant-default\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/form/variant-primary\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **tailwind classes** to assign size (e.g. [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/size-sm\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/form/size-md\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/form/size-lg\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center demo--toggle-timing\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0a\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1a\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0b\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1b\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0c\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1c\\n  </div>\\n\\n</div>\\n\\n<br>\\n\\n<div class=\\\"list list-2 items-center demo--toggle-timing--event\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0 hover\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0 hover\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1 hover\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0 hover\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0a hover\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1a hover\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0b hover\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1b hover\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Group 0c hover\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"1\\\">\\n    Group 1c hover\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import Prism from 'prismjs'\\nimport ClipboardJS from 'clipboard'\\nimport { Xt } from 'xtendui'\\nimport kebabCase from 'lodash.kebabcase'\\n\\nrequire('prismjs/plugins/unescaped-markup/prism-unescaped-markup')\\nrequire('prismjs/components/prism-jsx.min')\\nrequire('prismjs/components/prism-less.min')\\nPrism.manual = true\\n\\nconst spinner = require('components/snippets/spinner').default\\nconst iconCode = require('components/snippets/icons').iconCode\\nconst iconMaximize = require('components/snippets/icons').iconMaximize\\nconst iconExternal = require('components/snippets/icons').iconExternal\\nconst iconCopy = require('components/snippets/icons').iconCopy\\n\\n/**\\n * demoHash\\n */\\n\\nlet scrollCache = 0\\n\\nconst scrollToItem = (initial = false) => {\\n  const origin = document.querySelector('[data-xt-origin=\\\"gatsby_open-full-content\\\"]')\\n  if (initial && origin) {\\n    scrollCache = document.scrollingElement.scrollTop + origin.offsetTop\\n    document.scrollingElement.scrollTo(0, scrollCache)\\n  } else {\\n    document.scrollingElement.scrollTo(0, scrollCache)\\n  }\\n}\\n\\nconst demoHash = (e, initial = false) => {\\n  // call offdone.xt\\n  if (document.querySelector('#gatsby_open-full-trigger')) {\\n    document.querySelector('#gatsby_open-full-trigger').dispatchEvent(new CustomEvent('off.trigger.xt'))\\n    // set hash cancel\\n    cancelAnimationFrame(Xt.dataStorage.get(document, 'gatsby_open-full-raf'))\\n    // check hash\\n    if (location.hash) {\\n      const item = document.querySelector('[id=\\\"' + kebabCase(location.hash) + '\\\"]')\\n      if (item) {\\n        const demo = item.closest('.gatsby_demo')\\n        if (demo) {\\n          // raf fix reopen options.scrollbar\\n          requestAnimationFrame(() => {\\n            makeFullscreen(demo, initial)\\n            // scrollToItem\\n            scrollToItem(initial)\\n            // makeGatsbyWithIframe\\n            makeGatsbyWithIframe(item)\\n            // trigger fullscreen or change tabs\\n            item.dispatchEvent(new CustomEvent('on.trigger.xt'))\\n          })\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nif (typeof window !== 'undefined') {\\n  addEventListener('hashchange', demoHash)\\n}\\n\\n/**\\n * formatCode\\n */\\n\\nconst formatCode = source => {\\n  let text = source.innerHTML\\n  // ##START and ##END\\n  const metas = text.match(/\\\\/\\\\*##START\\\\*\\\\/\\\\n([\\\\S\\\\s]*?)\\\\/\\\\*##END\\\\*\\\\/\\\\n/g)\\n  if (metas) {\\n    text = ''\\n    for (const meta of metas.entries()) {\\n      text += meta[1].replace(/\\\\/\\\\*##START\\\\*\\\\/\\\\n/g, '').replace(/\\\\/\\\\*##END\\\\*\\\\/\\\\n/g, '')\\n    }\\n  }\\n  // replace id\\n  const item = source.closest('.gatsby_demo_item')\\n  if (item) {\\n    let id = item.getAttribute('data-iframe')\\n    if (id) {\\n      const names = id.split('/')\\n      id = '#iframe--' + names[names.length - 1]\\n      text = text.replace(new RegExp(`[ ]{0,}${id}[ ]{0,}`, 'gi'), '')\\n    }\\n    // replace #gatsby_body-inner\\n    id = '#gatsby_body-inner'\\n    text = text.replace(new RegExp(`[ ]{0,}${id}[ ]{0,}`, 'gi'), '')\\n  }\\n  // search html tags\\n  const re = /<[^>]*>/g\\n  text = text.replace(re, match => {\\n    // replace quote entities\\n    match = match.replace(/&quot;/g, '\\\"')\\n    // replace entities\\n    match = match.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')\\n    // replace empty quotes\\n    match = match.replace(/=\\\"\\\"/g, '')\\n    return match\\n  })\\n  // remove tabs\\n  const arr = text.split('\\\\n')\\n  let search = arr[0]\\n  search = search.length ? search : arr[1]\\n  if (search) {\\n    const toRemove = search.search(/\\\\S/g)\\n    for (const i of arr.keys()) {\\n      arr[i] = arr[i].substring(toRemove)\\n    }\\n    text = arr.join('\\\\n')\\n  }\\n  // remove newline at start and end\\n  text = text.replace(/^\\\\s+|\\\\s+$/g, '')\\n  // return\\n  return text\\n}\\n\\n/**\\n * populateBlock\\n */\\n\\nconst populateBlock = () => {\\n  for (const el of document.querySelectorAll('script[type=\\\"text/plain\\\"][class*=\\\"language-\\\"]')) {\\n    const language = el.getAttribute('class')\\n    el.after(Xt.createElement('<pre class=\\\"' + language + '\\\"><code class=\\\"' + language + '\\\">' + el.innerHTML + '</code></pre>'))\\n    el.remove()\\n  }\\n  for (const el of document.querySelectorAll('pre:not(.noedit) code')) {\\n    // set text\\n    el.innerHTML = formatCode(el)\\n    Prism.highlightElement(el)\\n  }\\n  // overlay fullscreen\\n  const full = document.querySelector('#gatsby_open-full')\\n  if (full) {\\n    for (const el of document.querySelectorAll('[data-gatsby-listing-toggle]')) {\\n      el.addEventListener('click', e => {\\n        e.preventDefault()\\n        location.hash = el.nextSibling.querySelector('.gatsby_demo_item ').getAttribute('id')\\n        cancelAnimationFrame(Xt.dataStorage.get(document, 'gatsby_open-full-raf'))\\n      })\\n    }\\n    full.addEventListener('off.xt', e => {\\n      if (e.target === full) {\\n        const content = document.querySelector('#gatsby_open-full-content')\\n        // scrollToItem\\n        scrollToItem()\\n        // iframe\\n        const container = content.querySelector('.gatsby_demo')\\n        if (container && container.dataset.isFullscreenOnly) {\\n          // populate iframe\\n          for (const item of container.querySelectorAll('.gatsby_demo_item.active')) {\\n            if (item.getAttribute('data-iframe-fullscreen')) {\\n              item.classList.remove('loaded')\\n              item.dispatchEvent(new CustomEvent('offdone.xt'))\\n            }\\n          }\\n          // populate source\\n          const sourceTo = content.querySelector('.gatsby_demo_source_populate')\\n          if (sourceTo) {\\n            sourceTo.innerHTML = ''\\n          }\\n        }\\n        // btnOpenFull\\n        for (const btn of document.querySelectorAll('.btn-open-full.active')) {\\n          btn.classList.remove('active')\\n        }\\n        // toggles\\n        const listingToggles = document.querySelectorAll('[data-gatsby-listing-toggle]')\\n        for (const el of listingToggles) {\\n          el.classList.remove('active')\\n        }\\n        // move code block\\n        const appendOrigin = document.querySelector('[data-xt-origin=\\\"gatsby_open-full-content\\\"]')\\n        if (appendOrigin) {\\n          const moving = content.childNodes[0]\\n          moving.classList.add('xt-ignore', 'xt-ignore-once') // @FIX ignore once for mount when moving\\n          appendOrigin.before(moving)\\n          // @FIX demo fullscreen\\n          const current = appendOrigin.previousSibling.querySelector('.gatsby_demo_item.active')\\n          // triggering e.detail.container\\n          dispatchEvent(new CustomEvent('resize', { detail: { force: true, container: current } }))\\n          appendOrigin.remove()\\n        }\\n        // set hash\\n        cancelAnimationFrame(Xt.dataStorage.get(document, 'gatsby_open-full-raf'))\\n        Xt.dataStorage.set(\\n          document,\\n          'gatsby_open-full-raf',\\n          requestAnimationFrame(() => {\\n            // no location.hash or page scroll to top\\n            history.pushState({}, '', '#')\\n          })\\n        )\\n      }\\n    })\\n    // trigger fullscreen or change tabs\\n    full.addEventListener('on.xt', () => {\\n      // @FIX demo fullscreen\\n      const content = document.querySelector('#gatsby_open-full-content')\\n      const current = content.querySelector('.gatsby_demo_item.active')\\n      // triggering e.detail.container\\n      dispatchEvent(new CustomEvent('resize', { detail: { force: true, container: current } }))\\n    })\\n  }\\n}\\n\\n/**\\n * populateDemo\\n */\\n\\nconst populateDemo = (container, i) => {\\n  const items = container.querySelectorAll('.gatsby_demo_item')\\n  // multiple elements\\n  container.prepend(\\n    Xt.createElement(\\n      '<div class=\\\"gatsby_demo_tabs\\\"><div class=\\\"gatsby_demo_tabs_left list list-px\\\"></div><div class=\\\"gatsby_demo_tabs_right list list-px\\\"></div></div>'\\n    )\\n  )\\n  container.querySelector('.gatsby_demo_tabs_right').append(\\n    Xt.createElement(`\\n<button type=\\\"button\\\" class=\\\"btn btn-show-code\\\" aria-label=\\\"Toggle Code\\\">\\n  ${iconCode()}\\n</button>`)\\n  )\\n  container.querySelector('.gatsby_demo_tabs_right').append(\\n    Xt.createElement(`\\n<button type=\\\"button\\\" class=\\\"btn btn-open-full\\\" aria-label=\\\"Toggle Fullscreen\\\">\\n  ${iconMaximize()}\\n</button>`)\\n  )\\n  container.querySelector('.gatsby_demo_tabs_right').append(\\n    Xt.createElement(`\\n<a href=\\\"#\\\" target=\\\"_blank\\\" class=\\\"btn btn-open-iframe\\\" aria-label=\\\"Open Iframe\\\">\\n  ${iconExternal()}\\n</a>`)\\n  )\\n  // loop itemsi\\n  for (const [k, item] of items.entries()) {\\n    // populate tabs\\n    let name = k\\n    let file = item.getAttribute('data-file')\\n    const src = item.getAttribute('data-iframe') || item.getAttribute('data-iframe-fullscreen')\\n    if (src) {\\n      name = src.split('/').pop().split('-').join(' ')\\n      file = src.split('/').splice(2, 10).join('-')\\n    } else if (file) {\\n      name = file.split('/').pop().split('-').join(' ')\\n      file = file.split('/').splice(3, 10).join('-')\\n    }\\n    item.setAttribute('id', kebabCase(file))\\n    container.querySelector('.gatsby_demo_tabs_left').append(Xt.createElement('<button type=\\\"button\\\" class=\\\"btn\\\">' + name + '</button>'))\\n    // tabs\\n    item.prepend(\\n      Xt.createElement(\\n        `\\n<div class=\\\"gatsby_demo_code\\\">\\n  <div class=\\\"gatsby_demo_code_inner\\\">\\n    <div class=\\\"gatsby_demo_code_tabs\\\">\\n      <div class=\\\"gatsby_demo_code_tabs_left list list-px\\\"></div>\\n      <div class=\\\"gatsby_demo_code_tabs_right list list-px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-tiny btn-clipboard\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Copy to clipboard\\\">\\n          ${iconCopy()}\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"gatsby_demo_code_body\\\"></div>\\n  </div>\\n</div>`\\n      )\\n    )\\n    // https://github.com/zenorocha/clipboard.js/\\n    const clipboard = new ClipboardJS(container.querySelector('.btn-clipboard'), {\\n      target: trigger => {\\n        console.debug('code copied')\\n        return trigger.closest('.gatsby_demo').querySelector('.gatsby_demo_item.active .gatsby_demo_code .gatsby_demo_code_body_item.active pre code')\\n      },\\n    })\\n    clipboard.on('success', e => {\\n      e.clearSelection()\\n      // $(e.trigger).attr('data-original-title', 'Done').tooltip('show')\\n    })\\n    clipboard.on('error', () => {\\n      // $(e.trigger).attr('data-original-title', 'Error: copy manually').tooltip('show')\\n    })\\n    // inject iframe\\n    if (!item.getAttribute('data-iframe-fullscreen')) {\\n      if (item.getAttribute('data-iframe')) {\\n        initializeIframe(container, item)\\n      } else {\\n        populateInline(item)\\n      }\\n    }\\n    // populate source\\n    const sourceTo = item.querySelector('.gatsby_demo_source_populate')\\n    if (sourceTo) {\\n      if (getComputedStyle(sourceTo).display === 'inline-flex') {\\n        // populate source disable\\n        container.dataset.isFullscreenOnly = 'true'\\n      } else {\\n        requestAnimationFrame(() => {\\n          // @FIX multiple initializations\\n          sourceTo.innerHTML = item.querySelector('script[type=\\\"text/plain\\\"]').innerHTML\\n        })\\n      }\\n    }\\n  }\\n  // set hash\\n  for (const btnOpenFull of container.querySelectorAll('.btn-open-full')) {\\n    btnOpenFull.addEventListener('click', e => {\\n      e.preventDefault()\\n      scrollCache = document.scrollingElement.scrollTop\\n      location.hash = container.querySelector('.gatsby_demo_item.active').getAttribute('id')\\n      cancelAnimationFrame(Xt.dataStorage.get(document, 'gatsby_open-full-raf'))\\n    })\\n  }\\n  // get hash\\n  if (location.hash) {\\n    const item = document.querySelector('[id=\\\"' + kebabCase(location.hash) + '\\\"]')\\n    if (item) {\\n      const demo = item.closest('.gatsby_demo')\\n      demo.querySelector('.btn-open-full').classList.add('active')\\n      item.classList.add('active')\\n    }\\n  }\\n  // gatsby_demo_tabs_left\\n  const self = new Xt.Toggle(container, {\\n    elements: '.gatsby_demo_tabs_left .btn',\\n    targets: '.gatsby_demo_item',\\n    min: 1,\\n    instant: true,\\n  })\\n  for (const item of items) {\\n    // @FIX demo fullscreen\\n    item.addEventListener('on.xt', () => {\\n      if (!self.initial) {\\n        // triggering e.detail.container\\n        requestAnimationFrame(() => {\\n          dispatchEvent(new CustomEvent('resize', { detail: { force: true, container: item.querySelector('.gatsby_demo_source'), delay: 0 } }))\\n        })\\n      }\\n      // only if demo opened\\n      if (document.querySelector('#gatsby_open-full-trigger').classList.contains('active')) {\\n        // set hash\\n        location.hash = item.getAttribute('id')\\n        cancelAnimationFrame(Xt.dataStorage.get(document, 'gatsby_open-full-raf'))\\n      }\\n      // makeGatsbyWithIframe\\n      makeGatsbyWithIframe(item)\\n    })\\n  }\\n  // .btn-show-code\\n  const demoId = 'gatsby_demo_' + i\\n  container.setAttribute('id', demoId)\\n  new Xt.Toggle(container.querySelector('.btn-show-code'), {\\n    targets: '#' + demoId + ' .gatsby_demo_code',\\n    instant: true,\\n  })\\n  document.querySelector('#' + demoId + ' .gatsby_demo_code').addEventListener('on.xt', e => {\\n    e.target.closest('.gatsby_demo_item').classList.add('active-code')\\n  })\\n  document.querySelector('#' + demoId + ' .gatsby_demo_code').addEventListener('off.xt', e => {\\n    e.target.closest('.gatsby_demo_item').classList.remove('active-code')\\n  })\\n}\\n\\n/**\\n * makeGatsbyWithIframe\\n */\\nconst makeGatsbyWithIframe = item => {\\n  // btn-open-iframe\\n  const iframe = item.querySelector('iframe')\\n  const btn = item.closest('.gatsby_demo').querySelector('.btn-open-iframe')\\n  if (iframe) {\\n    btn.classList.add('gatsby_with-iframe')\\n    btn.setAttribute('href', iframe.getAttribute('data-src'))\\n  } else {\\n    btn.classList.remove('gatsby_with-iframe')\\n  }\\n}\\n\\n/**\\n * makeFullscreen\\n */\\n\\nconst makeFullscreen = (container, initial = false) => {\\n  const toggle = document.querySelector('#gatsby_open-full-trigger')\\n  const content = document.querySelector('#gatsby_open-full-content')\\n  // toggles\\n  const listingToggle = container.previousSibling\\n  if (listingToggle instanceof Element && listingToggle.getAttribute('data-gatsby-listing-toggle')) {\\n    listingToggle.classList.add('active')\\n  }\\n  // populate\\n  const items = container.querySelectorAll('.gatsby_demo_item.active')\\n  for (const item of items) {\\n    const sourceTo = item.querySelector('.gatsby_demo_source_populate')\\n    // populate source\\n    requestAnimationFrame(() => {\\n      // requestAnimationFrame fixes errors\\n      if (sourceTo && container.dataset.isFullscreenOnly) {\\n        sourceTo.innerHTML = item.querySelector('script[type=\\\"text/plain\\\"]').innerHTML\\n      }\\n    })\\n  }\\n  toggle.dispatchEvent(new CustomEvent('on.trigger.xt'))\\n  toggle.addEventListener('init.xt', () => {\\n    toggle.dispatchEvent(new CustomEvent('on.trigger.xt'))\\n  })\\n  // move code block\\n  container.before(\\n    Xt.createElement('<div class=\\\"gatsby_demo xt-ignore\\\" data-xt-origin=\\\"gatsby_open-full-content\\\" style=\\\"height: ' + container.offsetHeight + 'px\\\"></div>')\\n  )\\n  if (!container.dataset.isFullscreenOnly && !initial) {\\n    container.classList.add('xt-ignore', 'xt-ignore-once') // @FIX ignore once for mount when moving\\n  }\\n  content.append(container)\\n  // populate iframe\\n  for (const item of container.querySelectorAll('.gatsby_demo_item.active')) {\\n    if (item.getAttribute('data-iframe-fullscreen')) {\\n      item.setAttribute('data-iframe', item.getAttribute('data-iframe-fullscreen'))\\n      initializeIframe(container, item)\\n      item.dispatchEvent(new CustomEvent('ondone.xt'))\\n    }\\n  }\\n}\\n\\n/**\\n * Iframe\\n */\\n\\nconst initializeIframe = (container, item) => {\\n  if (!item.classList.contains('populated-iframe')) {\\n    item.classList.add('populated-iframe')\\n    const src = '/' + item.getAttribute('data-iframe')\\n    const id = item.getAttribute('id')\\n    item.append(Xt.createElement('<div class=\\\"gatsby_demo_item_wrapper\\\"><iframe data-src=\\\"' + src + '\\\" name=\\\"' + id + '\\\"></iframe></div>'))\\n    item.querySelector('.gatsby_demo_item_wrapper').append(\\n      Xt.createElement(`\\n          <div class=\\\"loader\\\">\\n            <div class=\\\"spinner spinner-animated text-accent-500\\\">\\n              ${spinner({})}\\n            </div>\\n          </div>`)\\n    )\\n    // load\\n    if (!item.dataset.iframeLoadEvents) {\\n      item.dataset.iframeLoadEvents = 'true'\\n      item.addEventListener('ondone.xt', () => {\\n        const iframe = item.querySelector('iframe')\\n        loadIframe(iframe)\\n      })\\n      item.addEventListener('offdone.xt', () => {\\n        const iframe = item.querySelector('iframe')\\n        item.classList.remove('loaded')\\n        unloadIframe(iframe)\\n      })\\n    }\\n  }\\n}\\n\\nconst loadIframe = iframe => {\\n  iframe.setAttribute('src', iframe.getAttribute('data-src'))\\n}\\n\\nconst unloadIframe = iframe => {\\n  iframe.removeAttribute('src')\\n}\\n\\nif (typeof window !== 'undefined') {\\n  window.initIframe = (name, htmlSource, jsxSource, cssSource, jsSource) => {\\n    const src = 'iframe[name=\\\"' + name + '\\\"]'\\n    const iframes = document.querySelectorAll(src)\\n    for (const iframe of iframes) {\\n      const item = iframe.closest('.gatsby_demo_item')\\n      populateIframe(item, iframe, htmlSource, jsxSource, cssSource, jsSource)\\n      item.classList.add('loaded')\\n    }\\n  }\\n  window.resizeIframe = name => {\\n    const src = 'iframe[name=\\\"' + name + '\\\"]'\\n    const iframes = document.querySelectorAll(src)\\n    for (const iframe of iframes) {\\n      const container = iframe.closest('.gatsby_demo')\\n      const wrappers = container.querySelectorAll('.gatsby_demo_item.active .gatsby_demo_item_wrapper')\\n      if (iframe) {\\n        const iframeFull = iframe.contentWindow.document.documentElement.classList.contains('gatsby_iframe-full')\\n        if (iframeFull) {\\n          iframe.classList.add('gatsby_iframe-full')\\n          const target = iframe.contentWindow.document.querySelector('#body-outer')\\n          const h = target.offsetHeight\\n          if (h !== parseFloat(iframe.dataset.iframeHeight)) {\\n            iframe.style.height = h + 'px'\\n            iframe.dataset.iframeHeight = h.toString()\\n          }\\n          for (const wrapper of wrappers) {\\n            wrapper.style.height = h + 'px'\\n          }\\n        } else {\\n          for (const wrapper of wrappers) {\\n            wrapper.style.height = ''\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nconst populateIframe = (item, iframe, htmlSource, jsxSource, cssSource, jsSource) => {\\n  if (!item.classList.contains('populated')) {\\n    item.classList.add('populated')\\n    // inject code\\n    if (htmlSource) {\\n      item.append(Xt.createElement('<div class=\\\"gatsby_demo_source xt-ignore\\\" data-lang=\\\"html\\\">' + htmlSource + '</div>'))\\n    }\\n    if (jsxSource) {\\n      item.append(Xt.createElement('<div class=\\\"gatsby_demo_source xt-ignore\\\" data-lang=\\\"jsx\\\">' + jsxSource + '</div>'))\\n    }\\n    if (cssSource) {\\n      item.append(Xt.createElement('<div class=\\\"gatsby_demo_source xt-ignore\\\" data-lang=\\\"css\\\">' + cssSource + '</div>'))\\n    }\\n    if (jsSource) {\\n      item.append(Xt.createElement('<div class=\\\"gatsby_demo_source xt-ignore\\\" data-lang=\\\"js\\\">' + jsSource + '</div>'))\\n    }\\n    // populate\\n    const els = item.querySelectorAll('[data-lang]')\\n    for (const [z, el] of els.entries()) {\\n      populateSources(item, el, z)\\n      el.remove()\\n    }\\n    new Xt.Toggle(item.querySelector('.gatsby_demo_code_inner'), {\\n      elements: '.gatsby_demo_code_tabs_left .btn',\\n      targets: '.gatsby_demo_code_body_item',\\n      min: 1,\\n      instant: true,\\n    })\\n  }\\n}\\n\\n/**\\n * inline\\n */\\n\\nconst populateInline = item => {\\n  if (!item.classList.contains('populated')) {\\n    item.classList.add('populated')\\n    const els = item.querySelectorAll('[data-lang]')\\n    for (const [z, el] of els.entries()) {\\n      populateSources(item, el, z)\\n      if (!item.classList.contains('gatsby_demo_preview')) {\\n        el.style.display = 'none'\\n      }\\n    }\\n    new Xt.Toggle(item.querySelector('.gatsby_demo_code_inner'), {\\n      elements: '.gatsby_demo_code_tabs_left .btn',\\n      targets: '.gatsby_demo_code_body_item',\\n      min: 1,\\n      instant: true,\\n    })\\n  }\\n}\\n\\n/**\\n * sources\\n */\\n\\nconst populateSources = (item, element, z) => {\\n  let lang = element.getAttribute('data-lang')\\n  // set text\\n  if (lang === 'language-markup') {\\n    lang = 'html'\\n  } else if (lang === 'language-css') {\\n    lang = 'css'\\n  } else if (lang === 'language-js') {\\n    lang = 'js'\\n  } else if (lang === 'language-jsx') {\\n    lang = 'jsx'\\n  }\\n  // populate tabs\\n  item\\n    .querySelector('.gatsby_demo_code_body')\\n    .append(Xt.createElement('<div class=\\\"gatsby_demo_code_body_item toggle\\\"><pre class=\\\"noedit\\\"><code></code></pre></div>'))\\n  item.querySelector('.gatsby_demo_code_tabs_left').append(Xt.createElement('<button type=\\\"button\\\" class=\\\"btn btn-tiny\\\">' + lang + '</button>'))\\n  // format code\\n  const itemInside = item.querySelectorAll('.gatsby_demo_code_body .gatsby_demo_code_body_item')[z]\\n  const codeInside = itemInside.querySelector('pre code')\\n  // set text\\n  if (lang === 'html') {\\n    lang = 'language-markup'\\n  } else if (lang === 'css') {\\n    lang = 'language-css'\\n  } else if (lang === 'js') {\\n    lang = 'language-js'\\n  } else if (lang === 'jsx') {\\n    lang = 'language-jsx'\\n  }\\n  codeInside.innerHTML = formatCode(element)\\n  codeInside.classList.add(lang)\\n  Prism.highlightElement(codeInside)\\n}\\n\\nexport { populateBlock, populateDemo, makeFullscreen, demoHash }\\n\";","export default \"#iframe--stores-listing-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * vars\\n      */\\n\\n    // ease\\n\\n    @ease-in: @ease-out-quint;\\n    @ease-out: @ease-out-quint;\\n\\n    /**\\n      * .listing-page\\n      */\\n\\n    .listing-page_inner {\\n      > .row {\\n        .row-default();\\n        .row-stretch();\\n      }\\n    }\\n\\n    .listing-page_col {\\n      .col(12);\\n      .col(6, sm);\\n      .col(4, lg);\\n    }\\n\\n    .listing-page_item {\\n      .full();\\n      .text-black links-default() !important;\\n      .btn-close {\\n        .btn-squared();\\n        .btn-primary();\\n      }\\n    }\\n\\n    .card-asset {\\n      text-align: center;\\n      .media-container {\\n        .padding(bottom, 50%);\\n      }\\n      .media {\\n        .object-cover();\\n      }\\n    }\\n\\n    .listing-page_subtitle {\\n      .spacing-md();\\n      .font-sans-semibold();\\n      font-size: 2rem;\\n      line-height: 1.2;\\n      letter-spacing: 0;\\n      text-transform: none;\\n    }\\n\\n    .listing-page_address {\\n      .full();\\n      font-size: 1rem;\\n      line-height: 1.8;\\n    }\\n\\n    .listing-page_additional {\\n      .full();\\n      font-size: 0.9rem;\\n      line-height: 1.8;\\n    }\\n\\n    .listing-page_btns {\\n      .list-block();\\n      .list(tiny);\\n      margin-top: auto;\\n      .padding(top, medium);\\n      .btn {\\n        .full();\\n        .align-center();\\n        .btn-squared();\\n      }\\n    }\\n\\n    // front and back\\n\\n    .listing-page_front {\\n      position: relative;\\n      z-index: 2;\\n      -webkit-backface-visibility: hidden;\\n      backface-visibility: hidden;\\n      // card\\n      height: 100%;\\n      .card-squared();\\n      .text-black links-default();\\n      .card-design {\\n        border-color: @shade-100;\\n        background: @shade-100;\\n      }\\n      .card-asset {\\n        display: flex;\\n        flex-direction: column;\\n        .flex-full();\\n        padding: 3.5rem;\\n      }\\n      .listing-page_btns {\\n        margin-top: auto;\\n      }\\n    }\\n\\n    .listing-page_back {\\n      position: absolute;\\n      z-index: 1;\\n      top: 0;\\n      left: 0;\\n      bottom: 0;\\n      right: 0;\\n      transform: rotateY(180deg);\\n      -webkit-backface-visibility: hidden;\\n      backface-visibility: hidden;\\n      // card\\n      .card-squared();\\n      .text-black links-default();\\n      .card-design {\\n        border-color: @shade-100;\\n        background: @shade-100;\\n      }\\n      .card-asset {\\n        .flex-full();\\n        padding: 3.5rem;\\n      }\\n    }\\n\\n    .listing-page_item {\\n      perspective: 1400px;\\n      .listing-page_item_inner {\\n        height: 100%;\\n        transform-style: preserve-3d;\\n        transition-duration: @time-big;\\n        transition-delay: initial;\\n        transition-timing-function: @ease-out;\\n      }\\n      &.active {\\n        .listing-page_item_inner {\\n          transform: rotateY(180deg);\\n          transition-duration: @time-big;\\n          transition-delay: initial;\\n          transition-timing-function: @ease-in;\\n        }\\n        .listing-page_back {\\n          z-index: 3;\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <label class=\\\"form-label whitespace-no-wrap ${labelDefault()}\\\">\\n            Lorem ipsum\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <label class=\\\"form-label whitespace-no-wrap ${labelDefault()}\\\">\\n            Dolor sit amet\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <label class=\\\"form-label whitespace-no-wrap ${labelDefault()}\\\">\\n            Lorem ipsum\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <label class=\\\"form-label whitespace-no-wrap ${labelDefault()}\\\">\\n            Dolor sit amet\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto md:self-center\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto md:self-baseline\\\">\\n          <label class=\\\"form-label whitespace-no-wrap ${labelDefault()}\\\">\\n            Checkbox\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n            <div class=\\\"w-full md:w-auto\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n                <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full md:w-auto\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n                <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n              </label>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto md:self-baseline\\\">\\n          <label class=\\\"form-label whitespace-no-wrap ${labelDefault()}\\\">\\n            Radio\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n            <div class=\\\"w-full md:w-auto\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-horizontal\\\" checked>\\n                <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full md:w-auto\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-horizontal\\\">\\n                <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n              </label>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto md:self-baseline\\\">\\n          <label class=\\\"form-label whitespace-no-wrap ${labelDefault()}\\\">\\n            Switch\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n            <div class=\\\"w-full md:w-auto\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n                <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full md:w-auto\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-horizontal\\\">\\n                <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full md:w-auto\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-horizontal\\\">\\n                <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n              </label>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"const gatsbySidebar = () => {\\n  requestAnimationFrame(() => {\\n    const sidebarArticle = document.querySelector('.gatsby_site_article_sidebar')\\n    let sidebarActive = document.querySelector('.gatsby_btn-site_article_sidebar--sub.active, .gatsby_btn-site_article_sidebar--sub.current')\\n    if (sidebarActive) {\\n      const add = 25\\n      sidebarActive = sidebarActive.closest('.gatsby_site_header_item_container')\\n      const sidebarActiveTop = sidebarActive.getBoundingClientRect().top + sidebarArticle.scrollTop\\n      const sidebarActiveBottom = sidebarActiveTop + sidebarActive.offsetHeight\\n      if (sidebarArticle.scrollTop > sidebarActiveTop) {\\n        sidebarArticle.scrollTop = sidebarActiveTop - add\\n      }\\n      if (sidebarArticle.scrollTop + sidebarArticle.offsetHeight < sidebarActiveBottom) {\\n        sidebarArticle.scrollTop = sidebarActiveBottom - sidebarArticle.offsetHeight + add\\n      }\\n    }\\n  })\\n}\\n\\nexport { gatsbySidebar }\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst cardPrimary = require('components/snippets/classes/card-primary').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n        ${iconX()}\\n      </div>\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Default</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardPrimary()}\\\">\\n      <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n        ${iconX()}\\n      </div>\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Primary</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"card ${cardDefault()}\\\">\\n  <div class=\\\"card-md\\\">\\n    <div class=\\\"h4\\\">Lorem ipsum</div>\\n    <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n  </div>\\n  <div class=\\\"card-sm pt-0\\\">\\n    <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n  </div>\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Typography\\\"\\ntitle: \\\"list-custom\\\"\\ndescription: \\\"Custom ordered and unordered lists.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **custom list**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/list-custom\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"Listing\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"sticky-0\\\" data-xt-sticky=\\\"{ sticky: 'fixed', limit: { top: '.sticky-0-start' }, hide: 'down' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"sticky-0-start\\\"></div>\\n\\n<div class=\\\"sticky-1\\\" data-xt-sticky=\\\"{ sticky: 'absolute', contain: { top: '.sticky-0:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-2\\\" data-xt-sticky=\\\"{ contain: { top: '.sticky-0:not(.xt-clone), .sticky-1:not(.xt-clone)', bottom: '.sticky-3:not(.xt-clone)' }, hide: 'up' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"export default () => {\\n  return `text-white text-opacity-75`\\n}\\n\";","export default \"export default () => {\\n  return `card-md text-black links-default rounded-md bg-gray-200`\\n}\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<dl>\\n  <dt class=\\\"font-bold\\\">\\n    Lorem ipsum dolor sit amet.\\n  </dt>\\n  <dd class=\\\"mt-1 mb-3 mb-lc text-sm\\\">\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n  </dd>\\n  <dt class=\\\"font-bold\\\">\\n    Lorem ipsum dolor sit amet.\\n  </dt>\\n  <dd class=\\\"mt-1 mb-3 mb-lc text-sm\\\">\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</p>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</p>\\n  </dd>\\n</dl>\\n\\n<dl class=\\\"flex flex-row flex-wrap\\\">\\n  <dt class=\\\"md:w-1/5 font-bold ellipsis\\\">\\n    Lorem ipsum dolor sit amet.\\n  </dt>\\n  <dd class=\\\"mt-1 mb-3 mb-lc text-sm md:mt-0 md:w-4/5 md:pl-3\\\">\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n  </dd>\\n  <dt class=\\\"md:w-1/5 font-bold\\\">\\n    Lorem ipsum dolor sit amet.\\n  </dt>\\n  <dd class=\\\"mt-1 mb-3 mb-lc text-sm md:mt-0 md:w-4/5 md:pl-3\\\">\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</p>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</p>\\n  </dd>\\n</dl>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"stores-listing-v2\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-07-09\\\"\\ndemos: [\\n  \\\"iframe/themes/stores-listing-v2\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst badgeDefault = require('components/snippets/classes/badge-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-1\\\">\\n\\n  <div class=\\\"badge badge-sm ${badgeDefault()}\\\">\\n    Small\\n  </div>\\n\\n  <div class=\\\"badge badge-md ${badgeDefault()}\\\">\\n    Medium\\n  </div>\\n\\n  <div class=\\\"badge badge-lg ${badgeDefault()}\\\">\\n    Large\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst note = require('components/snippets/classes/note').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <fieldset>\\n    <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n      <div class=\\\"w-full\\\">\\n        <legend>Legend #1</legend>\\n      </div>\\n\\n      <div class=\\\"w-full md:w-6/12\\\">\\n        <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n          Lorem Ipsum\\n        </label>\\n        <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        <div class=\\\"mt-3 ${note()}\\\">\\n          <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"w-full md:w-6/12\\\">\\n        <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n          Dolor sit amet\\n        </label>\\n        <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n      </div>\\n\\n      <div class=\\\"w-full\\\">\\n\\n        <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n          <div class=\\\"w-full md:w-auto\\\">\\n            <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n              Lorem ipsum\\n            </label>\\n            <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n          </div>\\n\\n          <div class=\\\"w-full md:w-auto\\\">\\n            <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n              Dolor sit amet\\n            </label>\\n            <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"mt-3 ${note()}\\\">\\n          <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n      <div class=\\\"w-full\\\">\\n        <legend>Legend #2</legend>\\n      </div>\\n\\n      <div class=\\\"w-full\\\">\\n\\n        <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n          Checkbox\\n        </label>\\n\\n        <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n          <div class=\\\"w-full\\\">\\n            <label class=\\\"form-label-check\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked>\\n              <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n            </label>\\n          </div>\\n\\n          <div class=\\\"w-full\\\">\\n            <label class=\\\"form-label-check\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n              <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n            </label>\\n            <div class=\\\"mt-3 ${note()}\\\">\\n              <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"w-full\\\">\\n        <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n          <div class=\\\"w-full md:w-2/12 md:self-baseline\\\">\\n            <label class=\\\"form-label ${labelDefault()}\\\">\\n              Checkbox\\n            </label>\\n          </div>\\n\\n          <div class=\\\"w-full md:w-10/12\\\">\\n            <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n              <div class=\\\"w-full\\\">\\n                <label class=\\\"form-label-check\\\">\\n                  <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked>\\n                  <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n                </label>\\n              </div>\\n\\n              <div class=\\\"w-full\\\">\\n                <label class=\\\"form-label-check\\\">\\n                  <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked>\\n                  <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n                </label>\\n                <div class=\\\"mt-3 ${note()}\\\">\\n                  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"w-full\\\">\\n        <legend>Legend #3</legend>\\n      </div>\\n\\n      <div class=\\\"w-full\\\">\\n\\n        <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n          Checkbox\\n        </label>\\n\\n        <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n          <div class=\\\"w-full md:w-auto\\\">\\n            <label class=\\\"form-label-check\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked>\\n              <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n            </label>\\n          </div>\\n\\n          <div class=\\\"w-full md:w-auto\\\">\\n            <label class=\\\"form-label-check\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n              <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n            </label>\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"mt-3 ${note()}\\\">\\n          <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"w-full\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n          submit\\n        </button>\\n      </div>\\n\\n    </div>\\n  </fieldset>\\n\\n</form>\\n`\\n\";","export default \"import 'xtendui/src/addons/propagate-interaction'\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"fashion-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-10\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-listing-v1\\\"\\n]\\n---\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"sticky-0\\\" data-xt-sticky>\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-1\\\" data-xt-sticky=\\\"{ contain: { top: '.sticky-0:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-2\\\" data-xt-sticky=\\\"{ contain: { top: '.sticky-0:not(.xt-clone), .sticky-1:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n    <p>Sticky bottom <span class=\\\"hide-sticky\\\">.hide-sticky</span> <span class=\\\"show-sticky\\\">.show-sticky</span></p>\\n  </div>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Input\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Disabled\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\" disabled>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\">\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" multiple>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-default\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-default\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-default\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-default\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { Link } from 'gatsby'\\nimport { markdownSlug } from 'components/snippets/markdown-slug'\\nconst iconPackage = require('components/snippets/icons').iconPackage\\nconst iconGithub = require('components/snippets/icons').iconGithub\\n\\nclass DocSidebar extends React.Component {\\n  render() {\\n    const { site, seo, page } = this.props\\n    return (\\n      <div className=\\\"gatsby_site_article_sidebar\\\">\\n        <div className=\\\"gatsby_site_article_sidebar_inner\\\">\\n          <header className=\\\"gatsby_site_header\\\">\\n            <div className=\\\"gatsby_site_header_inner\\\">\\n              <div>\\n                <div className=\\\"gatsby_site_header_content\\\">\\n                  <div className=\\\"gatsby_site_header_logo\\\">\\n                    <Link\\n                      to=\\\"/\\\"\\n                      title=\\\"Home\\\"\\n                      className={`gatsby_logo-icon\\n                                      ${seo.title.toLowerCase() === 'home' ? 'active' : ''}`}\\n                    >\\n                      <img src={'/logo-white.svg'} loading=\\\"eager\\\" alt={site.site.siteMetadata.title} />\\n                    </Link>\\n                  </div>\\n                  <div>\\n                    <div className=\\\"gatsby_site_header_top_social\\\">\\n                      <a\\n                        href={site.site.siteMetadata.npm}\\n                        target=\\\"_blank\\\"\\n                        rel=\\\"noreferrer\\\"\\n                        className=\\\"btn gatsby_btn-site_header_top_social\\\"\\n                        title=\\\"Npm\\\"\\n                        dangerouslySetInnerHTML={{ __html: iconPackage() }}\\n                      ></a>\\n                      <a\\n                        href={site.site.siteMetadata.github}\\n                        target=\\\"_blank\\\"\\n                        rel=\\\"noreferrer\\\"\\n                        className=\\\"btn gatsby_btn-site_header_top_social\\\"\\n                        title=\\\"Github\\\"\\n                        dangerouslySetInnerHTML={{ __html: iconGithub() }}\\n                      ></a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </header>\\n          <div className=\\\"gatsby_site_header_links_container\\\">\\n            <div className=\\\"gatsby_site_header_links\\\">\\n              <div>\\n                <Link\\n                  to=\\\"/\\\" // @DOCINDEX\\n                  className={`btn gatsby_btn-site_header_link ${\\n                    page && page.post\\n                      ? markdownSlug(page.post) === '/introduction' // @DOCINDEX\\n                        ? 'active'\\n                        : page.post.frontmatter.type === 'Introduction'\\n                        ? 'current'\\n                        : ''\\n                      : ''\\n                  }`}\\n                >\\n                  <span>Introduction</span>\\n                </Link>\\n              </div>\\n              <div>\\n                <Link\\n                  to=\\\"/components\\\"\\n                  className={`btn gatsby_btn-site_header_link ${\\n                    page && page.post\\n                      ? markdownSlug(page.post) === '/' + 'components'\\n                        ? 'active'\\n                        : page.post.frontmatter.type === 'Components'\\n                        ? 'current'\\n                        : ''\\n                      : ''\\n                  }`}\\n                >\\n                  <span>Components</span>\\n                </Link>\\n              </div>\\n              <div>\\n                <Link\\n                  to=\\\"/themes\\\"\\n                  className={`btn gatsby_btn-site_header_link ${\\n                    page && page.post ? (markdownSlug(page.post) === '/' + 'themes' ? 'active' : page.post.frontmatter.type === 'Themes' ? 'current' : '') : ''\\n                  }`}\\n                >\\n                  <span>Themes</span>\\n                </Link>\\n              </div>\\n            </div>\\n          </div>\\n          {page ? (\\n            <nav className=\\\"gatsby_site_header_listing\\\">\\n              {page.categories.category\\n                .sort((a, b) => {\\n                  if (a.title === 'Addons' || a.title === 'By Component') {\\n                    // a is less than b by some ordering criterion\\n                    return 1\\n                  }\\n                  if (a.title === 'Core' || a.title === 'By Type' || b.title === 'Addons' || b.title === 'By Component') {\\n                    // a is greater than b by the ordering criterion\\n                    return -1\\n                  }\\n                  // a must be equal to b\\n                  return 0\\n                })\\n                .map((category, i) => (\\n                  <div key={i}>\\n                    <div className=\\\"gatsby_site_header_cat\\\">\\n                      <div className=\\\"gatsby_cat--site_article_sidebar\\\">{category.title.split('-').pop()}</div>\\n                      <div className=\\\"gatsby_site_header_sub\\\">\\n                        <div className=\\\"gatsby_site_header_item\\\">\\n                          {category.posts.map(({ post }, z) =>\\n                            post.frontmatter.parent === post.frontmatter.title ? (\\n                              <div className=\\\"gatsby_site_header_item_container\\\" key={z}>\\n                                {post.frontmatter.link ? (\\n                                  <div>\\n                                    <a\\n                                      href={post.frontmatter.link}\\n                                      target=\\\"_blank\\\"\\n                                      rel=\\\"noreferrer\\\"\\n                                      className={`btn gatsby_btn-site_article_sidebar gatsby_btn-site_article_sidebar--sub ${\\n                                        markdownSlug(page.post) === markdownSlug(post)\\n                                          ? 'active'\\n                                          : page.post.frontmatter.parent === post.frontmatter.parent &&\\n                                            post.frontmatter.category === page.post.frontmatter.category\\n                                          ? 'current'\\n                                          : ''\\n                                      }`}\\n                                    >\\n                                      <span>{post.frontmatter.title}</span>\\n                                    </a>\\n                                    <div className=\\\"gatsby_site_header_adiacent_inner\\\">\\n                                      <div className=\\\"gatsby_site_header_item\\\"></div>\\n                                    </div>\\n                                  </div>\\n                                ) : (\\n                                  <div>\\n                                    <Link\\n                                      to={markdownSlug(post)}\\n                                      className={`btn gatsby_btn-site_article_sidebar gatsby_btn-site_article_sidebar--sub ${\\n                                        markdownSlug(page.post) === markdownSlug(post)\\n                                          ? 'active'\\n                                          : page.post.frontmatter.parent === post.frontmatter.parent &&\\n                                            post.frontmatter.category === page.post.frontmatter.category\\n                                          ? 'current'\\n                                          : ''\\n                                      }`}\\n                                    >\\n                                      <span>{post.frontmatter.title}</span>\\n                                    </Link>\\n                                    <div className=\\\"gatsby_site_header_adiacent_inner\\\">\\n                                      <div className=\\\"gatsby_site_header_item\\\"></div>\\n                                    </div>\\n                                  </div>\\n                                )}\\n                                {post.frontmatter.parent === page.post.frontmatter.parent && post.frontmatter.category === page.post.frontmatter.category ? (\\n                                  <div className=\\\"gatsby_site_header_adiacent active\\\">\\n                                    <div className=\\\"gatsby_site_header_item\\\">\\n                                      {page.postsAdiacent.posts.map(({ post: adiacent }, i) =>\\n                                        adiacent.frontmatter.title !== post.frontmatter.parent ? (\\n                                          !adiacent.frontmatter.demos ? (\\n                                            <div key={i}>\\n                                              <Link\\n                                                to={markdownSlug(adiacent)}\\n                                                className={`btn gatsby_btn-site_article_sidebar gatsby_btn-site_article_sidebar--adiacent ${\\n                                                  page.post.frontmatter.title === adiacent.frontmatter.title &&\\n                                                  post.frontmatter.category === page.post.frontmatter.category\\n                                                    ? 'active'\\n                                                    : ''\\n                                                }`}\\n                                              >\\n                                                <span>\\n                                                  {adiacent.frontmatter.title\\n                                                    .split(/[\\\\s-]+/)\\n                                                    .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n                                                    .join(' ')}\\n                                                </span>\\n                                              </Link>\\n                                              <div className=\\\"gatsby_site_header_adiacent_inner\\\">\\n                                                <div className=\\\"gatsby_site_header_item\\\"></div>\\n                                              </div>\\n                                            </div>\\n                                          ) : null\\n                                        ) : null\\n                                      )}\\n                                    </div>\\n                                  </div>\\n                                ) : null}\\n                              </div>\\n                            ) : null\\n                          )}\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                ))}\\n            </nav>\\n          ) : null}\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nDocSidebar.propTypes = {\\n  site: PropTypes.shape({\\n    site: PropTypes.shape({\\n      siteMetadata: PropTypes.shape({\\n        title: PropTypes.string.isRequired,\\n        download: PropTypes.string.isRequired,\\n        github: PropTypes.string.isRequired,\\n        npm: PropTypes.string.isRequired,\\n        twitter: PropTypes.string.isRequired,\\n      }).isRequired,\\n    }).isRequired,\\n  }).isRequired,\\n  seo: PropTypes.shape({\\n    title: PropTypes.string.isRequired,\\n    description: PropTypes.string.isRequired,\\n  }).isRequired,\\n  page: PropTypes.shape({\\n    categories: PropTypes.shape({\\n      category: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          title: PropTypes.string.isRequired,\\n          posts: PropTypes.arrayOf(\\n            PropTypes.shape({\\n              post: PropTypes.shape({\\n                frontmatter: PropTypes.shape({\\n                  type: PropTypes.string.isRequired,\\n                  category: PropTypes.string,\\n                  parent: PropTypes.string,\\n                  title: PropTypes.string.isRequired,\\n                  description: PropTypes.string,\\n                }).isRequired,\\n              }).isRequired,\\n            }).isRequired\\n          ),\\n        }).isRequired\\n      ),\\n    }),\\n    post: PropTypes.shape({\\n      htmlAst: PropTypes.object.isRequired,\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n        description: PropTypes.string,\\n      }).isRequired,\\n    }).isRequired,\\n    postsAdiacent: PropTypes.shape({\\n      posts: PropTypes.arrayOf(\\n        PropTypes.shape({\\n          post: PropTypes.shape({\\n            frontmatter: PropTypes.shape({\\n              type: PropTypes.string.isRequired,\\n              category: PropTypes.string,\\n              parent: PropTypes.string,\\n              title: PropTypes.string.isRequired,\\n              description: PropTypes.string,\\n              demos: PropTypes.array,\\n            }).isRequired,\\n          }).isRequired,\\n        }).isRequired\\n      ),\\n    }).isRequired,\\n  }),\\n}\\n\\nexport default DocSidebar\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Structure\\\"\\ntitle: \\\"Structure\\\"\\ndescription: \\\"Structure components and utilities.\\\"\\ndate: \\\"2018-01-01\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst cardDefaultOverlayScreen = require('components/snippets/classes/card-default-overlay-screen').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"demo--overlay-message-outside right-0\\\">\\n        <div class=\\\"w-10/12 lg:w-8/12\\\">\\n          <div class=\\\"card ${cardDefault()}\\\">\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"overlay-container w-80 ml-0 mr-auto\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-lg\\\">\\n              <div class=\\\"h3\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      right\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"demo--overlay-message-outside left-0\\\">\\n        <div class=\\\"w-10/12 lg:w-8/12\\\">\\n          <div class=\\\"card ${cardDefault()}\\\">\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"overlay-container w-80 ml-auto mr-0\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-lg\\\">\\n              <div class=\\\"h3\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"Content Full\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/variant-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Interactive\\n\\nUse **tailwind classes** to modify variants for interactive animations.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/interactive-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **component classes** to assign size. You can add **additional size** for example `.card-xs` or `.card-xl`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |\\n| Component                  | `.card-sm`       | `card-sm`                | Size small            |\\n| Component                  | `.card-md`       | `card-md`                | Size medium            |\\n| Component                  | `.card-lg`       | `card-lg`                | Size large            |\\n\\n</div>\\n\\nOtherwise use **tailwind classes** to assign custom size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/size-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Content\\n\\nCard content **stack vertically**. Use **tailwind classes** to assign styles (e.g. [padding](https://tailwindcss.com/docs/padding), [background-color](https://tailwindcss.com/docs/background-color), [border-radius](https://tailwindcss.com/docs/border-radius)) \\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/content-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nUse **component utility** `.card-group` to stack card content **horizontally**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- | ----------------------------- |\\n| Utility                  | `.card-group`       | `card-group`                | `responsive`                | Card stack horizontal wrapper           |\\n\\n</div>\\n\\nUse **tailwind classes** to assign size (e.g. [width](https://tailwindcss.com/docs/width)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/group-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Separator\\n\\nUse **tailwind classes** to style borders for separation.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/separator-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Overflow\\n\\nUse **tailwind classes** to overflow divs. Use **component classes** to style overflow.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.overflow-main`                     | `overflow-main`                | Overflow scrollbar style            |\\n| Component                  | `.overflow-sub`                     | `overflow-sub`                | Overflow scrollbar style small version            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/overflow-y-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## List\\n\\nYou can use [list component](/components/core/list) to space card's internal content.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/list-full\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Close button\\n\\nUse **tailwind classes** to assign size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/card/close-full\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Introduction\\\"\\ncategory: \\\"Getting Started\\\"\\nparent: \\\"Installation\\\"\\ntitle: \\\"Installation\\\"\\ndescription: \\\"Installation instructions, css and js setup.\\\"\\ndate: \\\"2050-10-10\\\"\\n---\\n\\nInstall **xtendui**.\\n\\n```sh\\nnpm install xtendui --save\\n```\\n\\n## Css\\n\\nSee Tailwind docs: [tailwind postcss](https://tailwindcss.com/docs/using-with-preprocessors), [tailwind purgecss](https://tailwindcss.com/docs/controlling-file-size), [tailwind theme](https://tailwindcss.com/docs/theme).\\n\\nInstall **tailwind**, **xtendui**, **postcss import**, **postcss nested** and **postcss purgecss**.\\n\\n```sh\\nnpm install tailwindcss xtendui --save\\nnpm install postcss postcss-import postcss-nested postcss-purgecss --save-dev\\n```\\n\\nThen in `postcss.config.js` set up compilation.\\n\\n```jsx\\nconst purgecss = require('@fullhuman/postcss-purgecss')({\\n  // Specify the paths to all of the template files in your project\\n  content: ['./src/**/*.html', './src/**/*.js'],\\n  defaultExtractor: content => {\\n    const broadMatches = content.match(/[^<>\\\"'`\\\\s]*[^<>\\\"'`\\\\s:]/g) || []\\n    const innerMatches = content.match(/[^<>\\\"'`\\\\s.()]*[^<>\\\"'`\\\\s.():]/g) || []\\n    return broadMatches.concat(innerMatches)\\n  },\\n})\\n\\nmodule.exports = {\\n  plugins: [require(`postcss-import`), require(`tailwindcss`), require('postcss-nested'), ...(process.env.NODE_ENV === 'production' ? [purgecss] : [])],\\n}\\n```\\n\\nCreate a `tailwind.config.js` and add **xtendui preset**.\\n\\n```jsx\\nmodule.exports = {\\n  presets: [require('tailwindcss/defaultConfig'), require('xtendui/src/tailwind-preset')],\\n  theme: {\\n    // add here your theme settings\\n    extend: {\\n      // add here your theme extend settings\\n    },\\n  },\\n}\\n```\\n\\nThen you can use css with tailwind.\\n\\n```css\\n@import \\\"tailwindcss/base\\\";\\n\\n@import \\\"tailwindcss/components\\\";\\n\\n@import \\\"./custom.css\\\"; /* custom css here */\\n\\n@import \\\"tailwindcss/utilities\\\";\\n```\\n\\n## Javascript\\n\\nYou can import the **components you need** as described in the docs.\\n\\n```jsx\\nimport { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport 'xtendui/src/core/slider'\\n```\\n\\n#### Animations\\n\\nThis library in the demos uses [gsap](https://github.com/greensock/GSAP) for javascript animations. Install it.\\n\\n```\\nnpm install gsap --save\\n```\\n\\nThen **setup gsap** this way. Also add the following **variables**.\\n\\n```jsx\\n/**\\n * gsap setup\\n */\\n\\nimport gsap from 'gsap'\\nimport { ScrollToPlugin } from 'gsap/ScrollToPlugin'\\n\\ngsap.defaults({\\n  overwrite: 'auto',\\n})\\n\\ngsap.config({\\n  force3D: false,\\n})\\n\\ngsap.globalTimeline.timeScale(1000) // milliseconds instead of seconds\\n\\ngsap.registerPlugin(ScrollToPlugin)\\n\\n/**\\n * Xt.vars\\n */\\n\\nXt.vars = {\\n  timeMicro: 50,\\n  timeMini: 100,\\n  timeTiny: 250,\\n  timeSmall: 500,\\n  timeMedium: 750,\\n  timeLarge: 1000,\\n  timeBig: 1500,\\n  timeGiant: 2000,\\n  timeHuge: 3000,\\n}\\n\\n// instant animations accessibility\\n\\nif (typeof window !== 'undefined' && window.matchMedia('(prefers-reduced-motion: reduce), (update: slow)').matches) {\\n  Xt.vars.timeMicro = 0\\n  Xt.vars.timeMini = 0\\n  Xt.vars.timeTiny = 0\\n  Xt.vars.timeSmall = 0\\n  Xt.vars.timeMedium = 0\\n  Xt.vars.timeLarge = 0\\n  Xt.vars.timeBig = 0\\n  Xt.vars.timeGiant = 0\\n  Xt.vars.timeHuge = 0\\n}\\n```\\n\\n## CDN\\n\\nIf you need to do a **fast installation** of css and js use [core-js CDN](https://cdnjs.com/libraries/core-js) and [xtendui CDN](https://unpkg.com/xtendui@1.x.x/), the css and js are inside the `dist/` folder.\\n\\nThe CDN `dist/` files are large because they include tailwindcss and all components / addons, **it's not representative of the sizes** you see when including Xtend UI as part of your build process.\\n\\nPlease note that many of the features that make Xtend UI great **are not available without incorporating Xtend UI into your build process**.\\n\";","export default \".demo--scroll-outside {\\n  .card {\\n    /* mode-outside */\\n    &.scroll-outside {\\n      /* initial */\\n      @apply transform transition-all duration-500;\\n      @apply opacity-0 -translate-x-4;\\n      &.inverse {\\n        @apply translate-x-4;\\n      }\\n      /* in */\\n      &.fade-in {\\n        @apply opacity-100 translate-x-0 ease-in;\\n      }\\n      /* out */\\n      &.fade-out {\\n        @apply opacity-0 translate-x-4 ease-out;\\n        &.inverse {\\n          @apply -translate-x-4;\\n        }\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst img = require('components/snippets/img').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div id=\\\"body--smooth\\\"\\n  data-xt-propagate-interaction=\\\"{ targets: '.btn' }\\\">\\n\\n  <div class=\\\"featured featured--inverse\\\">\\n\\n    <a href=\\\"#\\\" class=\\\"featured_item\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"featured_item_inner\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"featured_img_col\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '121%' })}\\n            </div>\\n            <div class=\\\"featured_content_col\\\">\\n              <div class=\\\"featured_content\\\">\\n                <div class=\\\"featured_title\\\">\\n                  Lorem ipsum\\n                </div>\\n                <div class=\\\"featured_desc\\\">\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                  <div class=\\\"btn btn--line\\\">\\n                    <span class=\\\"btn--line_line\\\"></span>\\n                    <span class=\\\"btn--line_text\\\">\\n                      Discover\\n                    </span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </a>\\n\\n    <a href=\\\"#\\\" class=\\\"featured_item featured_item--big featured_item--right featured_item--desc-right\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"featured_item_inner\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"featured_img_col\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '72.6%' })}\\n            </div>\\n            <div class=\\\"featured_content_col\\\">\\n              <div class=\\\"featured_content\\\">\\n                <div class=\\\"featured_title\\\">\\n                  Dolor sit amet\\n                </div>\\n                <div class=\\\"featured_desc\\\">\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                  <div class=\\\"btn btn--line\\\">\\n                    <span class=\\\"btn--line_line\\\"></span>\\n                    <span class=\\\"btn--line_text\\\">\\n                      Discover\\n                    </span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </a>\\n\\n    <a href=\\\"#\\\" class=\\\"featured_item\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"featured_item_inner\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"featured_img_col\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '121%' })}\\n            </div>\\n            <div class=\\\"featured_content_col\\\">\\n              <div class=\\\"featured_content\\\">\\n                <div class=\\\"featured_title\\\">\\n                  Consectetur adipiscing elit\\n                </div>\\n                <div class=\\\"featured_desc\\\">\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                  <div class=\\\"btn btn--line\\\">\\n                    <span class=\\\"btn--line_line\\\"></span>\\n                    <span class=\\\"btn--line_text\\\">\\n                      Discover\\n                    </span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </a>\\n\\n  </div>\\n\\n  <div class=\\\"featured\\\">\\n\\n    <a href=\\\"#\\\" class=\\\"featured_item featured_item--right featured_item--align-right\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"featured_item_inner\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"featured_img_col\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '121%' })}\\n            </div>\\n            <div class=\\\"featured_content_col\\\">\\n              <div class=\\\"featured_content\\\">\\n                <div class=\\\"featured_title\\\">\\n                  Lorem ipsum\\n                </div>\\n                <div class=\\\"featured_desc\\\">\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                  <div class=\\\"btn btn--line\\\">\\n                    <span class=\\\"btn--line_line\\\"></span>\\n                    <span class=\\\"btn--line_text\\\">\\n                      Discover\\n                    </span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </a>\\n\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst cardDefaultInteractive = require('components/snippets/classes/card-default-interactive').default\\nconst cardPrimaryInteractive = require('components/snippets/classes/card-primary-interactive').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <a role=\\\"button\\\" class=\\\"card ${cardDefaultInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Default</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </a>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <a role=\\\"button\\\" class=\\\"card ${cardPrimaryInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Primary</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </a>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Disable\\n\\nYou can disable styles and javascript using `.slider-disable`.\\n\\nIt also hides automatically **pagination** and **navigation** **wrap** and slides not `active`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.slider-disable`       | `slider-disable`                | `responsive`                | Disable the slider            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/disable\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Media loaded\\n\\nIf you want to animate on image loaded, with `mediaLoaded: true` use the class `.xt-medialoaded` or the js event `medialoaded.xt`.\\n\\nWhen you need to reinit the component when the media is loaded and the **width** of the image is calculated with `mediaLoadedReinit: true`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `mediaLoaded:Boolean`                          | `false`        | Add the class `.xt-medialoaded` on img loaded             |\\n| Option                  | `mediaLoadedReinit:Boolean`                          | `false`        | Reinit the component on img loaded after a delay set with `Xt.medialoadedDelay`             |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/media-loaded\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Overflow auto\\n\\nSlider with `overflowAuto:Boolean` automatically disable when not overflowing. It also hides automatically **pagination**, **navigation** and **wrap**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `overflowAuto:Boolean`                          | `true`        | When not overflowing disable slider           |\\n\\n</div>\\n\\nUse the class `.xt-overflow-auto` to assign horizontal alignment when not overflowing.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/overflow-auto\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can disable **overflow auto** behaviour with `overflowAuto: false`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/overflow-auto-false\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Expand\\n\\nTo disable and expand a slider use `.slider-expand` util.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.slider-expand`       | `slider-expand`                | `responsive`                | Disable the slider and expand the slides            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/expand\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Touch Overflow\\n\\nTo have browser overflow scroll on touch devices use this css (use touch device to see it in action).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/touch-overflow\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ groupMq: { all: 1, '(min-width: 768px)': 0.8 } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \".demo--slider-expand {\\n  /*@apply md:slider-expand;*/\\n  @apply slider-expand;\\n}\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Indicator\\n\\nAdd the class `.scroll-indicator` to show show visual info on a scroll component.\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/indicator\\\">\\n  </div>\\n</demo>\\n\";","export default \"module.exports = {\\n  variant: ['responsive'],\\n  utility: {\\n    '.drop-container-static': {\\n      // setup\\n      position: 'static',\\n      '> .drop': {\\n        width: '100%',\\n        '> .drop-inner': {\\n          width: '100%',\\n        },\\n        left: '0 !important',\\n        right: '0 !important',\\n      },\\n    },\\n    '.drop-container-disable': {\\n      // setup\\n      '@apply xt-disable': '',\\n      position: 'initial',\\n      '> a, > button': {\\n        display: 'none',\\n      },\\n      '> .drop': {\\n        display: 'inline-block !important',\\n        position: 'relative',\\n        top: 'auto',\\n        left: 'auto',\\n        right: 'auto',\\n        bottom: 'auto',\\n        '> .drop-inner': {\\n          zIndex: 'initial',\\n          '> .drop-design': {\\n            display: 'none',\\n          },\\n          '> .card': {\\n            '@apply card-disable !important': '',\\n          },\\n        },\\n      },\\n    },\\n    '.drop-before': {\\n      // setup\\n      left: 'auto',\\n      right: '100%',\\n    },\\n    '.drop-after': {\\n      // setup\\n      left: '100%',\\n      right: 'auto',\\n    },\\n    '.drop-left': {\\n      // setup\\n      left: '0',\\n      right: 'auto',\\n      '&:before': {\\n        display: 'none',\\n        content: '\\\"\\\"',\\n      },\\n    },\\n    '.drop-right': {\\n      // setup\\n      left: 'auto',\\n      right: '0',\\n      '&:before': {\\n        display: 'none',\\n        content: '\\\"\\\"',\\n      },\\n    },\\n    '.drop-bottom': {\\n      // setup\\n      top: '100%',\\n      bottom: 'auto',\\n      '&:after': {\\n        display: 'none',\\n        content: '\\\"\\\"',\\n      },\\n    },\\n    '.drop-top': {\\n      // setup\\n      top: 'auto',\\n      bottom: '100%',\\n      '&:after': {\\n        display: 'none',\\n        content: '\\\"\\\"',\\n      },\\n    },\\n    '.drop-center': {\\n      // setup\\n      '&:before': {\\n        display: 'none',\\n        content: '\\\"xt-drop-center\\\"',\\n      },\\n    },\\n    '.drop-middle': {\\n      // setup\\n      paddingTop: '0',\\n      paddingBottom: '0',\\n      '&:after': {\\n        display: 'none',\\n        content: '\\\"xt-drop-middle\\\"',\\n      },\\n    },\\n    '.drop-contain-bottom': {\\n      // setup\\n      '@apply drop-middle': '',\\n      top: 'auto',\\n      bottom: '0',\\n    },\\n    '.drop-contain-top': {\\n      // setup\\n      '@apply drop-middle': '',\\n      top: '0',\\n      bottom: 'auto',\\n    },\\n  },\\n  component: theme => ({\\n    '.drop-container': {\\n      // setup\\n      position: 'relative',\\n    },\\n    '.drop': {\\n      // setup\\n      '@apply toggle': '',\\n      position: 'absolute',\\n      zIndex: 'inherit',\\n      transitionDuration: 'inherit',\\n      '&.in': {\\n        zIndex: theme('zIndex.drop'),\\n      },\\n      '&.out': {\\n        zIndex: theme('zIndex.drop') - 1,\\n      },\\n      // styles\\n      '@apply drop-left drop-bottom': '',\\n      padding: theme('spacing.2'),\\n    },\\n    '.drop-inner': {\\n      // setup\\n      position: 'relative',\\n      zIndex: theme('zIndex.drop'),\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"card card-md ${cardDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\n\\nimport { Xt } from 'xtendui'\\n\\nimport { makeDocument } from 'assets/scripts/theme'\\nimport ResizeSensor from 'assets/scripts/ResizeSensor'\\n\\nimport 'assets/styles/theme.css'\\n\\nclass Layout extends React.Component {\\n  componentDidMount() {\\n    const { demo } = this.props\\n    let cname = 'gatsby_iframe-inside'\\n    if (demo.full) {\\n      cname += ' gatsby_iframe-full'\\n    }\\n    if (demo.container) {\\n      cname += ' gatsby_iframe-container'\\n    }\\n    document.documentElement.classList.add(...cname.split(' '))\\n    document.documentElement.setAttribute('id', 'iframe--' + demo.name)\\n    const iframeLoaded = () => {\\n      if (window.self !== window.top) {\\n        window.parent.initIframe(window.name, demo.htmlSource, demo.jsxSource, demo.cssSource, demo.jsSource)\\n        window.parent.resizeIframe(window.frameElement.getAttribute('name'))\\n        if (demo.full) {\\n          new ResizeSensor(document.querySelector('#body-outer'), () => {\\n            window.parent.resizeIframe(window.frameElement.getAttribute('name'))\\n          })\\n        }\\n      }\\n      makeDocument()\\n    }\\n    Xt.ready(iframeLoaded)\\n  }\\n\\n  render() {\\n    const { children } = this.props\\n    return <>{children}</>\\n  }\\n}\\n\\nLayout.propTypes = {\\n  children: PropTypes.node.isRequired,\\n  demo: PropTypes.shape({\\n    name: PropTypes.string,\\n    full: PropTypes.bool,\\n    container: PropTypes.bool,\\n    htmlSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n    jsxSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n    jsSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n    cssSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n  }).isRequired,\\n}\\n\\nexport default Layout\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst cardDefaultOverlayScreen = require('components/snippets/classes/card-default-overlay-screen').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      closed fixed\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()} justify-center\\\">\\n            <div class=\\\"btn btn-close p-5 fixed z-top\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      screen closed fixed\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()} justify-center\\\">\\n            <div class=\\\"btn btn-close p-5 fixed z-top\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"max-w-3xl\\\">\\n              <div class=\\\"card-md\\\">\\n                <div class=\\\"h4\\\">Lorem ipsum</div>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `border rounded-full text-accent-500 border-gray-400 bg-gray-200`\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Navigation\\\"\\ntitle: \\\"Navigation\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\" style=\\\"padding-bottom: 56.2%\\\">\\n  <div class=\\\"media-inner\\\">\\n    <iframe class=\\\"media\\\" type=\\\"text/html\\\" src=\\\"https://www.youtube.com/embed/hNQFjqDvPhA?autoplay=0&showinfo=0&enablejsapi=1&rel=0\\\" frameborder=\\\"0\\\"></iframe>\\n  </div>\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Button\\\"\\ntitle: \\\"Button\\\"\\ndescription: \\\"Simple and extensible button styles.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-x\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-x\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Button small\\n</div>\\n\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\">\\n    icon small\\n    ${iconSearch({ classes: 'icon-sm ml-1' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\">\\n    icon medium\\n    ${iconSearch({ classes: 'icon-md ml-1' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\">\\n    icon large\\n    ${iconSearch({ classes: 'icon-lg ml-1' })}\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Button medium\\n</div>\\n\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    icon small\\n    ${iconSearch({ classes: 'icon-sm ml-1.5' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    icon medium\\n    ${iconSearch({ classes: 'icon-md ml-1.5' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    icon large\\n    ${iconSearch({ classes: 'icon-lg ml-1.5' })}\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Button large\\n</div>\\n\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnPrimary()}\\\">\\n    icon small\\n    ${iconSearch({ classes: 'icon-sm ml-2' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnPrimary()}\\\">\\n    icon medium\\n    ${iconSearch({ classes: 'icon-md ml-2' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnPrimary()}\\\">\\n    icon large\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n</div>\\n\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"message-outside\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **message outside**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/overlay-message-outside\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"slide-overlay-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndemos: [\\n  \\\"iframe/themes/slide-overlay-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"drop-container\\\" data-xt-drop>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    drop\\n  </button>\\n\\n  <div class=\\\"drop\\\">\\n    <div class=\\\"drop-inner\\\">\\n      <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n        <nav class=\\\"list flex-col\\\">\\n          <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n          </a>\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n            Dolor sit\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n            Amet\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()} overflow-y-auto overflow-x-hidden overflow-sub max-h-96\\\">\\n      <div class=\\\"rounded-t-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"rounded-t-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md overflow-y-auto overflow-x-hidden overflow-sub max-h-64\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `text-white links-inverse bg-accent-500 hover:bg-accent-500 active:bg-accent-600`\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"opacity-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-01\\\"\\ndemos: [\\n  \\\"iframe/themes/opacity-listing-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"close-outside\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **close outside**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/overlay-close-outside\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"Overlay\\\"\\ndescription: \\\"Used when you need to display any content over the main page.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/core/overlay'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/overlay.css.js](https://github.com/minimit/xtendui/blob/master/src/core/overlay.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      overlay: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n[[notePrimary]]\\n| Overlays are moved to **body** to prevent **z-index** problems. Style and query overlay's content accordingly.\\n\\n## Usage\\n\\nPass **elements** and **targets** options if different from defaults. **Elements** listens to events, **targets and inners** activate on events.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `elements:Query`                          | `:scope > a, :scope > button`        | Elements query            |\\n| Option                  | `targets:Query`                          | `:scope > .overlay`        | Targets query            |\\n| Option                  | `elementsInner:Query`                          | `false`        | Inner elements query (scope inside elements)            |\\n| Option                  | `targetsInner:Query`                          | `false`        | Inner targets query (scope inside targets)     \\n\\n</div>\\n\\n#### Self\\n\\nUse this code to create a **overlay** in **self mode**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/usage-self\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/overlay/interaction) and [customize content](/components/core/overlay/content).\\n\\n#### Unique\\n\\nUse this code to create a **overlay** in **unique mode**.\\n\\nThe **unique** mode is useful when triggering **targets outside the scope** of the component.\\n\\n[[notePrimary]]\\n| To activate **unique mode** you **need** to specify targets with **#id**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/usage-unique\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/overlay/interaction) and [customize content](/components/core/overlay/content).\\n\\n#### Standalone\\n\\nUse this code to create a **overlay** in **standalone mode**.\\n\\nJust use the class `active-overlay` if you want to automatically open, or use the [api](/components/core/overlay/api)\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/overlay/usage-standalone\\\">\\n  </div>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/overlay/interaction) and [customize content](/components/core/overlay/content).\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      separator\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-screen max-w-2xl ${cardDefaultDrop()}\\\">\\n          <div class=\\\"md:card-group\\\">\\n            <div class=\\\"card-md md:w-7/12\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n            <div class=\\\"border-t md:w-5/12 md:border-t-0 md:border-l border-solid border-gray-500\\\">\\n              <div class=\\\"card-sm\\\">\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              </div>\\n              <div class=\\\"card-md border-t border-solid border-gray-500\\\">\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"nav\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse [group vertical](/components/core/group#usage-vertical) and [group size](/components/core/group/content#size) to create a nav. Remember to use `.whitespace-normal`.\\n\\nFor aria purpose use `<nav></nav>`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/group-nav\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"const round = num =>\\n  num\\n    .toFixed(7)\\n    .replace(/(\\\\.[0-9]+?)0+$/, '$1')\\n    .replace(/\\\\.0$/, '')\\nconst rem = px => `${round(px / 16)}rem`\\n\\nmodule.exports = {\\n  component: theme => ({\\n    '.table': {\\n      // setup\\n      borderCollapse: 'separate',\\n      borderSpacing: '0',\\n      width: '100%',\\n    },\\n    '.table-scroll': {\\n      // setup\\n      '@apply overflow-sub': '',\\n      overflowX: 'scroll',\\n      overflowY: 'hidden',\\n    },\\n    '.table, .table-scroll': {\\n      // setup\\n      width: '100%',\\n      // styles\\n      marginBottom: theme('spacing.4'),\\n      '@apply mb-lc': {},\\n    },\\n    th: {\\n      // styles\\n      verticalAlign: 'top',\\n      padding: `${theme('spacing.2')} ${theme('spacing.4')}`,\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      fontSize: rem(11),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.wider'),\\n      textTransform: 'uppercase',\\n      textAlign: 'left',\\n    },\\n    td: {\\n      // styles\\n      verticalAlign: 'top',\\n      padding: `${theme('spacing.2')} ${theme('spacing.4')}`,\\n      fontSize: rem(13),\\n      lineHeight: theme('lineHeight.snug'),\\n      textAlign: 'left',\\n    },\\n    'th, td': {\\n      // styles\\n      borderRightWidth: theme('borderWidth.default'),\\n      borderBottomWidth: theme('borderWidth.default'),\\n      borderColor: theme('borderColor.gray.200'),\\n      '&:last-child': {\\n        borderRight: '0',\\n      },\\n    },\\n    tbody: {\\n      // styles\\n      tr: {\\n        '&:last-child': {\\n          'th, td': {\\n            borderBottom: '0',\\n          },\\n        },\\n      },\\n    },\\n  }),\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"Slider\\\"\\ndescription: \\\"Customizable sliders with custom animation and interaction.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/core/slider'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/slider.css.js](https://github.com/minimit/xtendui/blob/master/src/core/slider.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      slider: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **slider**.\\n\\n[[notePrimary]]\\n| `[data-xt-pag].xt-ignore` is essential to the functioning of the slider, but you can hide it using the class `.hidden`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/slider/interaction) and [customize position](/components/core/slider/position).\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md bg-white shadow-lg`\\n}\\n\";","export default \" .site_wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh;\\n  min-height: calc(var(--vh, 1vh) * 100);\\n}\\n\\n.site_main {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 1 auto;\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-y loader-y-animated loader-size-left\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-y loader-y-animated loader-size-left\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md transform hover:text-white hover:bg-accent-500 hover:shadow-xl hover:-translate-y-2 active:text-white active:bg-accent-600 active:shadow-md active:-translate-y-1`\\n}\\n\";","export default \".demo--card-disable {\\n  /*@apply md:card-disable !important;*/\\n  @apply card-disable !important;\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Structure\\\"\\ntitle: \\\"mouse-follow\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/addons/mousefollow'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/addons/mouse-follow.css.js](https://github.com/minimit/xtendui/blob/master/src/addons/mouse-follow.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      'mouse-follow': {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse **component classes** to create a mouse follow.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.mouse-follow`                     | `mouse-follow`                | Styles for mouse follow            |\\n\\n</div>\\n\\n[[notePrimary]]\\n| This addon uses [loader](/components/core/loader). Visit the component page to import and customize.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/mouse-follow\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Options\\n \\nHere are the main **javascript options**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                    | `targets:Query`                          | `':scope > .mouse-follow'`        | Mouse follow targets            |\\n| Option                    | `transform:Boolean`                          | `true`        | Use transform instead of position            |\\n| Option                    | `friction:Function`                          | `<function>`        | Function for friction             |\\n| Option                    | `mouseCheck(self):Function`                          | `false`        | Function called on activate/deactivate, return false to not activate/deactivate             |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.xt.mousefollow`       | `object` | Activation event             |\\n| Event                   | `off.xt.mousefollow`      | `object` | Deactivation event            |\\n| Event                   | `change.xt.mousefollow`       | `object` | Change event             |\\n| Event                   | `init.xt.mousefollow`           | `object` | Init event             |\\n| Event                   | `destroy.xt.mousefollow`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n\\n</div>\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-mouse-follow=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.MouseFollow(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.MouseFollow(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\">\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4 slide-pagination-content\\\">1</div>\\n        <nav class=\\\"slider-pagination w-full list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n            xt-content\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4 slide-pagination-content\\\">2</div>\\n        <nav class=\\\"slider-pagination w-full list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n            xt-content\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4 slide-pagination-content\\\">3</div>\\n        <nav class=\\\"slider-pagination w-full list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n            xt-content\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4 slide-pagination-content\\\">4</div>\\n        <nav class=\\\"slider-pagination w-full list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n            xt-content\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4 slide-pagination-content\\\">5</div>\\n        <nav class=\\\"slider-pagination w-full list list-2\\\">\\n          <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n            xt-content\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n    xt-num of xt-tot\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"export default () => {\\n  return `text-white links-inverse rounded-md bg-accent-500 shadow-lg`\\n}\\n\";","export default \"import path from 'path'\\nconst cardDefaultInteractive = require('components/snippets/classes/card-default-interactive').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <label class=\\\"card ${cardDefaultInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n      </div>\\n    </label>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <label class=\\\"card ${cardDefaultInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n      </div>\\n    </label>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <label class=\\\"card ${cardDefaultInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-card\\\" checked>\\n      </div>\\n    </label>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <label class=\\\"card ${cardDefaultInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-card\\\">\\n      </div>\\n    </label>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <label class=\\\"card ${cardDefaultInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-card\\\" checked>\\n      </div>\\n    </label>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <label class=\\\"card ${cardDefaultInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-card\\\">\\n      </div>\\n    </label>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ targets: '.demo--toggle-jump', jump: true }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <div class=\\\"card demo--toggle-jump ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card demo--toggle-jump ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card demo--toggle-jump ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\nconst iconPackage = require('components/snippets/icons').iconPackage\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      list\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"list list-3 flex-no-wrap items-baseline\\\">\\n                <div>\\n                  ${iconPackage({ classes: 'icon-lg text-2xl' })}\\n                </div>\\n                <div>\\n                  <div class=\\\"h4\\\">Lorem ipsum</div>\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \" .demo--group-expand {\\n  width: 85%;\\n  transition-property: width;\\n  transition-duration: theme('transitionDuration.500');\\n  transition-timing-function: theme('transitionTimingFunction.out');\\n  &.expand {\\n    width: 100%;\\n    transition-timing-function: theme('transitionTimingFunction.in');\\n  }\\n}\\n\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      default\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"md:card-group\\\">\\n              <div class=\\\"card-md md:w-7/12\\\">\\n                <div class=\\\"h4\\\">Lorem ipsum</div>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              </div>\\n              <div class=\\\"border-t md:w-5/12 md:border-t-0 sm:border-l border-solid border-gray-500\\\">\\n                <div class=\\\"card-sm\\\">\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n                </div>\\n                <div class=\\\"card-md border-t border-solid border-gray-500\\\">\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"Card\\\"\\ndescription: \\\"Generic component to display content in a box.\\\"\\n---\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\">\\n  <div class=\\\"media-inner relative\\\">\\n    <img class=\\\"media\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n  </div>\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list list-2\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem Ipsum\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Dolor sit\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Amet\\n  </button>\\n\\n</nav>\\n`\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { StaticQuery, graphql } from 'gatsby'\\n\\nimport Header from 'components/includes/header'\\nimport Footer from 'components/includes/footer'\\nimport DocHead from 'components/includes/doc-head'\\nimport DocFoot from 'components/includes/doc-foot'\\nimport DocFullscreen from 'components/includes/doc-fullscreen'\\nimport { markdownSlug } from 'components/snippets/markdown-slug'\\n\\nimport { makeDocument } from 'assets/scripts/theme'\\nimport { populateBlock } from 'assets/scripts/demo'\\n\\nimport 'assets/styles/theme.css'\\n\\nif (typeof window !== 'undefined' && window.self === window.top) {\\n  if (module.hot) {\\n    module.hot.addStatusHandler(status => {\\n      if (status === 'apply') {\\n        window.location.reload()\\n      }\\n    })\\n  }\\n}\\n\\nclass Layout extends React.Component {\\n  componentDidMount() {\\n    populateBlock()\\n    makeDocument()\\n  }\\n\\n  render() {\\n    const { seo, page, children } = this.props\\n    return (\\n      <StaticQuery\\n        query={graphql`\\n          query {\\n            site {\\n              siteMetadata {\\n                title\\n                author\\n                version\\n                github\\n                npm\\n                twitter\\n                download\\n              }\\n            }\\n          }\\n        `}\\n        render={data => (\\n          <>\\n            <div className=\\\"gatsby_site_wrapper\\\">\\n              <div className=\\\"gatsby_site_main\\\">\\n                <div className=\\\"gatsby_site_main_inner\\\">\\n                  <Header site={data} seo={seo} page={page} />\\n                  <div className=\\\"gatsby_site_article prose max-w-none\\\">\\n                    <DocFullscreen />\\n                    {page && markdownSlug(page.post) === '/introduction' ? ( // @DOCINDEX\\n                      <main className=\\\"gatsby_site_article_inner\\\" id=\\\"gatsby_open-full-inner\\\">\\n                        <article className=\\\"gatsby_site_article_content\\\">\\n                          <div className=\\\"gatsby_site_article_content_inner\\\">{children}</div>\\n                        </article>\\n                        <footer className=\\\"gatsby_site_footer\\\">\\n                          <div className=\\\"gatsby_site_footer_inner\\\">\\n                            <Footer site={data} />\\n                          </div>\\n                        </footer>\\n                      </main>\\n                    ) : (\\n                      <main className=\\\"gatsby_site_article_inner\\\" id=\\\"gatsby_open-full-inner\\\">\\n                        {page ? <DocHead page={page} /> : null}\\n                        <article className=\\\"gatsby_site_article_content\\\">\\n                          <div className=\\\"gatsby_site_article_content_inner\\\">{children}</div>\\n                        </article>\\n                        <footer className=\\\"gatsby_site_footer\\\">\\n                          <div className=\\\"gatsby_site_footer_inner\\\">\\n                            {page && page.post.frontmatter.type !== page.post.frontmatter.title ? <DocFoot page={page} /> : null}\\n                            <Footer site={data} />\\n                          </div>\\n                        </footer>\\n                      </main>\\n                    )}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </>\\n        )}\\n      />\\n    )\\n  }\\n}\\n\\nLayout.propTypes = {\\n  children: PropTypes.node.isRequired,\\n  seo: PropTypes.shape({\\n    title: PropTypes.string.isRequired,\\n    description: PropTypes.string.isRequired,\\n  }).isRequired,\\n  page: PropTypes.shape({\\n    post: PropTypes.shape({\\n      htmlAst: PropTypes.object.isRequired,\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n        description: PropTypes.string,\\n      }).isRequired,\\n    }).isRequired,\\n  }),\\n}\\n\\nexport default Layout\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      inner\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()} overflow-y-auto overflow-x-hidden overflow-sub max-h-96\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"rounded-t-md\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      block\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"rounded-t-md\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n            </div>\\n            <div class=\\\"card-md overflow-y-auto overflow-x-hidden overflow-sub max-h-64\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const round = num =>\\n  num\\n    .toFixed(7)\\n    .replace(/(\\\\.[0-9]+?)0+$/, '$1')\\n    .replace(/\\\\.0$/, '')\\nconst rem = px => `${round(px / 16)}rem`\\n\\nmodule.exports = {\\n  component: theme => ({\\n    '.btn': {\\n      // setup\\n      cursor: 'pointer',\\n      display: 'inline-flex',\\n      position: 'relative',\\n      verticalAlign: 'middle',\\n      flexWrap: 'nowrap',\\n      alignItems: 'center',\\n      justifyContent: 'space-between',\\n      textAlign: 'left',\\n      // styles\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.wider'),\\n      textTransform: 'uppercase',\\n      // animation\\n      zIndex: theme('zIndex.base'),\\n      transitionProperty: 'all',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.out'),\\n      '&:hover, &:active, &.active': {\\n        zIndex: theme('zIndex.active'),\\n        transitionTimingFunction: theme('transitionTimingFunction.in'),\\n      },\\n    },\\n    '.btn-close': {\\n      // setup\\n      position: 'absolute',\\n      zIndex: theme('zIndex.top'),\\n      top: '0',\\n      right: '0',\\n      '& + *': {\\n        margin: '0 !important',\\n      },\\n    },\\n    '.btn-sm': {\\n      // styles\\n      padding: `${rem(7)} ${rem(11)}`,\\n      fontSize: rem(10),\\n    },\\n    '.btn-md': {\\n      // styles\\n      padding: `${rem(9)} ${rem(15)}`,\\n      fontSize: rem(12),\\n    },\\n    '.btn-lg': {\\n      // styles\\n      padding: `${rem(11)} ${rem(19)}`,\\n      fontSize: rem(14),\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group\\\">\\n\\n    <div class=\\\"group-inner\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-md rounded-l-md ${btnDefaultGroup()}\\\">\\n        ${iconSearch({ classes: 'icon-lg' })}\\n      </button>\\n      <input type=\\\"text\\\" class=\\\"form-item rounded-r-md ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-md ml-2 ${btnPrimaryGroup()}\\\">\\n      Search\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <label class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ml-2 ${checkDefault()}\\\" checked disabled>\\n  </label>\\n\\n  <label class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ml-2 ${checkDefault()}\\\">\\n  </label>\\n\\n  <label class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <input type=\\\"radio\\\" class=\\\"form-check form-radio ml-2 ${radioDefault()}\\\" name=\\\"radio-button\\\" checked>\\n  </label>\\n\\n  <label class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <input type=\\\"radio\\\" class=\\\"form-check form-radio ml-2 ${radioDefault()}\\\" name=\\\"radio-button\\\">\\n  </label>\\n\\n  <label class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <input type=\\\"radio\\\" class=\\\"form-check form-switch ml-2 ${switchDefault()}\\\" name=\\\"switch-button\\\" checked>\\n  </label>\\n\\n  <label class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <input type=\\\"radio\\\" class=\\\"form-check form-switch ml-2 ${switchDefault()}\\\" name=\\\"switch-button\\\">\\n  </label>\\n\\n</div>\\n`\\n\";","export default \".demo--slider-progress {\\n  > .loader {\\n    /* touch */\\n    @media (hover: none) {\\n      transform: none !important;\\n      position: absolute;\\n      overflow: visible;\\n      top: auto;\\n      right: auto;\\n      left: 0;\\n      bottom: 12px;\\n      margin: 0;\\n    }\\n    /* mouse */\\n    @media (hover: hover) {\\n      @apply loader-mouse mouse-follow;\\n    }\\n  }\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupListing = require('components/snippets/themes/markup-listing').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${markupListing()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst iconSearch = require('components/snippets/icons').iconSearch\\nconst iconX = require('components/snippets/icons').iconX\\nconst iconArrowLeft = require('components/snippets/icons').iconArrowLeft\\nconst iconArrowRight = require('components/snippets/icons').iconArrowRight\\nconst iconArrowUp = require('components/snippets/icons').iconArrowUp\\nconst iconArrowDown = require('components/snippets/icons').iconArrowDown\\nconst iconChevronLeft = require('components/snippets/icons').iconChevronLeft\\nconst iconChevronRight = require('components/snippets/icons').iconChevronRight\\nconst iconChevronUp = require('components/snippets/icons').iconChevronUp\\nconst iconChevronDown = require('components/snippets/icons').iconChevronDown\\nconst iconLocate = require('components/snippets/icons').iconLocate\\nconst iconGithub = require('components/snippets/icons').iconGithub\\nconst iconPackage = require('components/snippets/icons').iconPackage\\nconst iconLink = require('components/snippets/icons').iconLink\\nconst iconCode = require('components/snippets/icons').iconCode\\nconst iconMaximize = require('components/snippets/icons').iconMaximize\\nconst iconExternal = require('components/snippets/icons').iconExternal\\nconst iconCopy = require('components/snippets/icons').iconCopy\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${iconSearch({ classes: 'icon-md ml-2' })}\\n\\n${iconX({ classes: 'icon-md ml-2' })}\\n\\n${iconArrowLeft({ classes: 'icon-md ml-2' })}\\n\\n${iconArrowRight({ classes: 'icon-md ml-2' })}\\n\\n${iconArrowUp({ classes: 'icon-md ml-2' })}\\n\\n${iconArrowDown({ classes: 'icon-md ml-2' })}\\n\\n${iconChevronLeft({ classes: 'icon-md ml-2' })}\\n\\n${iconChevronRight({ classes: 'icon-md ml-2' })}\\n\\n${iconChevronUp({ classes: 'icon-md ml-2' })}\\n\\n${iconChevronDown({ classes: 'icon-md ml-2' })}\\n\\n${iconLocate({ classes: 'icon-md ml-2' })}\\n\\n${iconPackage({ classes: 'icon-md ml-2' })}\\n\\n${iconGithub({ classes: 'icon-md ml-2' })}\\n\\n${iconLink({ classes: 'icon-md ml-2' })}\\n\\n${iconCode({ classes: 'icon-md ml-2' })}\\n\\n${iconMaximize({ classes: 'icon-md ml-2' })}\\n\\n${iconExternal({ classes: 'icon-md ml-2' })}\\n\\n${iconCopy({ classes: 'icon-md ml-2' })}\\n`\\n\";","export default \"import React from 'react'\\n\\nclass DocIndex extends React.Component {\\n  render() {\\n    return <div>@TODO</div>\\n  }\\n}\\n\\nexport default DocIndex\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<br><br><br><br><br><br><br>\\n\\n<div data-xt-sticky>\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div data-xt-sticky=\\\"{ position: 'bottom' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Row\\\"\\ntitle: \\\"Row\\\"\\ndescription: \\\"Flex row to space any element with paddings, also spaces vertically.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/row.css.js](https://github.com/minimit/xtendui/blob/master/src/core/row.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      row: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **row**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/row/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\n[[notePrimary]]\\n| You should always use **tailwind width classes** inside `.row`. Otherwise you can space contents with [list](/components/core/list).\\n\\nCheck subpage to [customize content](/components/core/row/content).\\n\";","export default \"#iframe--fashion-listing-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * .listing-page\\n      */\\n\\n    .listing-page_inner {\\n      > .row {\\n        .row(large);\\n      }\\n    }\\n\\n    .listing-page_col {\\n      .col(12);\\n      .col(6, sm);\\n      .col(3, lg);\\n    }\\n\\n    .listing-page_col--big {\\n      .col(12, sm);\\n      .col(12, lg);\\n    }\\n\\n    .listing-page_item {\\n      .full();\\n      // card\\n      .card-white();\\n      .card-squared();\\n      .card-none-x();\\n      text-align: center;\\n      .card-title {\\n        .font-sans-semibold();\\n        font-size: 2rem;\\n      }\\n      .card-asset {\\n        .media-container {\\n          .padding(bottom, 150%);\\n        }\\n        .media {\\n          .object-cover();\\n        }\\n      }\\n    }\\n\\n    .listing-page_col--big {\\n      .card-asset {\\n        .media-container {\\n          @media @min-sm {\\n            .padding(bottom, 37.5%);\\n          }\\n          @media @min-lg {\\n            .padding(bottom, 25%);\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n      * .media_mask\\n      */\\n\\n    .media_mask {\\n      position: absolute;\\n      z-index: @index-active + 1;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 0;\\n      background: @white;\\n    }\\n\\n    /**\\n      * scroll\\n      */\\n\\n    // vars\\n\\n    @anim-scale-size: 1.1;\\n\\n    // the same css and js\\n    .scroll-item, .listing-page_item {\\n      opacity: 0;\\n      &.fade {\\n        opacity: 1;\\n        animation-name: anim-fashion-listing-v1-in;\\n        animation-duration: @time-md;\\n        animation-timing-function: @ease-out-quint;\\n        transform-origin: center top;\\n        &.inverse {\\n          opacity: 1;\\n          animation-name: anim-fashion-listing-v1-inverse-in;\\n          animation-duration: @time-md;\\n          animation-timing-function: @ease-out-quint;\\n          transform-origin: center bottom;\\n        }\\n      }\\n      &.fade-out {\\n        opacity: 0;\\n        animation-name: anim-fashion-listing-v1-inverse-out;\\n        animation-duration: @time-md;\\n        animation-timing-function: @ease-out-quint;\\n        transform-origin: center bottom;\\n        &.inverse {\\n          opacity: 0;\\n          animation-name: anim-fashion-listing-v1-out;\\n          animation-duration: @time-md;\\n          animation-timing-function: @ease-out-quint;\\n          transform-origin: center top;\\n        }\\n      }\\n    }\\n\\n    // anim-fashion-listing-v1\\n\\n    @keyframes anim-fashion-listing-v1-in {\\n      0% {\\n        opacity: 0;\\n        transform: translateY(5rem) scaleY(@anim-scale-size);\\n      }\\n      100% {\\n        opacity: 1;\\n        transform: translateY(0) scaleY(1);\\n      }\\n    }\\n\\n    @keyframes anim-fashion-listing-v1-out {\\n      0% {\\n        opacity: 1;\\n        transform: translateY(0) scaleY(1);\\n      }\\n      100% {\\n        opacity: 0;\\n        transform: translateY(5rem) scaleY(@anim-scale-size);\\n      }\\n    }\\n\\n    // anim-fashion-listing-v1-inverse\\n\\n    @keyframes anim-fashion-listing-v1-inverse-in {\\n      0% {\\n        opacity: 0;\\n        transform: translateY(-5rem) scaleY(@anim-scale-size);\\n      }\\n      100% {\\n        opacity: 1;\\n        transform: translateY(0) scaleY(1);\\n      }\\n    }\\n\\n    @keyframes anim-fashion-listing-v1-inverse-out {\\n      0% {\\n        opacity: 1;\\n        transform: translateY(0) scaleY(1);\\n      }\\n      100% {\\n        opacity: 0;\\n        transform: translateY(-5rem) scaleY(@anim-scale-size)\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"module.exports = {\\n  component: {\\n    '[data-xt-group-number]': {\\n      'input[type=\\\"number\\\"]': {\\n        '-moz-appearance': 'textfield',\\n        '&::-webkit-inner-spin-button, &::-webkit-outer-spin-button': {\\n          '-webkit-appearance': 'none',\\n          appearance: 'none',\\n        },\\n      },\\n    },\\n  },\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"furniture-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-09\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-listing-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst markupButton = require('components/snippets/themes/markup-button').default\\nconst markupCard = require('components/snippets/themes/markup-card').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"demo--ripple-default\\\">\\n\\n  <div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n    Button\\n  </div>\\n${indentString(markupButton(), 2)}\\n  <div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n    Card\\n  </div>\\n${indentString(markupCard(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider-other').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-other\\\" data-xt-slider=\\\"{ loop: false, jumpOverflow: true, autoHeight: '.slides' }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group demo--group-expand\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-l-md ${btnDefaultGroup()}\\\">\\n      ${iconSearch({ classes: 'icon-lg' })}\\n    </button>\\n\\n    <input type=\\\"text\\\" class=\\\"form-item ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-r-md ${btnPrimaryGroup()}\\\">\\n      Search\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--toggle-animation-js',\\n  mount: object => {\\n    // vars\\n\\n    const targetTimeOn = Xt.vars.timeSmall\\n    const targetEaseOn = 'quad.out'\\n    const targetTimeOff = Xt.vars.timeSmall\\n    const targetEaseOff = 'quad.inOut'\\n\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      durationOn: Xt.vars.timeSmall,\\n      durationOff: Xt.vars.timeSmall,\\n    })\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      gsap.set(tr, { opacity: 0 })\\n      if (!tr.classList.contains('inverse')) {\\n        gsap.set(tr, { x: -15 })\\n      } else {\\n        gsap.set(tr, { x: 15 })\\n      }\\n      gsap.to(tr, { x: 0, opacity: 1, duration: targetTimeOn, ease: targetEaseOn })\\n    }\\n\\n    for (const target of self.targets) {\\n      target.addEventListener('on.xt', eventOn)\\n    }\\n\\n    // off\\n\\n    const eventOff = e => {\\n      const tr = e.target\\n      if (!tr.classList.contains('inverse')) {\\n        gsap.to(tr, { x: 15, opacity: 0, duration: targetTimeOff, ease: targetEaseOff })\\n      } else {\\n        gsap.to(tr, { x: -15, opacity: 0, duration: targetTimeOff, ease: targetEaseOff })\\n      }\\n    }\\n\\n    for (const target of self.targets) {\\n      target.addEventListener('off.xt', eventOff)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\n\\nclass DocHead extends React.Component {\\n  render() {\\n    const { page } = this.props\\n    return (\\n      <header className=\\\"gatsby_site_article_hero\\\">\\n        <div className=\\\"gatsby_site_article_hero_inner\\\">\\n          <div className=\\\"gatsby_site_article_hero_content\\\">\\n            <div className=\\\"gatsby_site_article_hero_content_inner\\\">\\n              <h1>\\n                <span>\\n                  {page.post.frontmatter.title\\n                    .split(/[\\\\s-]+/)\\n                    .map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\\n                    .join(' ')}{' '}\\n                  {page.post.frontmatter.parent && page.post.frontmatter.parent !== page.post.frontmatter.title ? (\\n                    <span>{page.post.frontmatter.parent}</span>\\n                  ) : null}\\n                </span>\\n                {page.post.frontmatter.category ? <div className=\\\"badge badge-sm\\\">{page.post.frontmatter.category}</div> : null}\\n              </h1>\\n              {page.post.frontmatter.description ? <h2 className=\\\"p\\\">{page.post.frontmatter.description}</h2> : null}\\n            </div>\\n          </div>\\n        </div>\\n      </header>\\n    )\\n  }\\n}\\n\\nDocHead.propTypes = {\\n  page: PropTypes.shape({\\n    post: PropTypes.shape({\\n      htmlAst: PropTypes.object.isRequired,\\n      frontmatter: PropTypes.shape({\\n        type: PropTypes.string.isRequired,\\n        category: PropTypes.string,\\n        parent: PropTypes.string,\\n        title: PropTypes.string.isRequired,\\n        description: PropTypes.string,\\n      }).isRequired,\\n    }).isRequired,\\n  }),\\n}\\n\\nexport default DocHead\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"stores-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-22\\\"\\ndemos: [\\n  \\\"iframe/themes/stores-v1\\\"\\n]\\n---\\n\";","export default \".demo--sticky-disable {\\n  /*@apply md:sticky-disable;*/\\n  @apply sticky-disable;\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Featured\\\"\\ntitle: \\\"Featured\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupSliderHero = require('components/snippets/themes/markup-slider-hero').default\\nconst indentString = require('indent-string')\\nconst iconArrowLeft = require('components/snippets/icons').iconArrowLeft\\nconst iconArrowRight = require('components/snippets/icons').iconArrowRight\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\">\\n${indentString(markupSliderHero(), 2)}\\n  <div class=\\\"slider-navigation-sides left-0\\\" data-xt-nav=\\\"-1\\\" aria-label=\\\"Previous slide\\\" data-xt-mouse-follow=\\\"{ targets: '.slider-navigation-sides-btn' }\\\">\\n    <div class=\\\"slider-navigation-sides-btn mouse-follow text-white text-2xl\\\">\\n      ${iconArrowLeft({ classes: 'icon-md' })}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"slider-navigation-sides right-0\\\" data-xt-nav=\\\"1\\\" aria-label=\\\"Next slide\\\" data-xt-mouse-follow=\\\"{ targets: '.slider-navigation-sides-btn' }\\\">\\n    <div class=\\\"slider-navigation-sides-btn mouse-follow text-white text-2xl\\\">\\n      ${iconArrowRight({ classes: 'icon-md' })}\\n    </div>\\n  </div>\\n\\n  <nav class=\\\"slider-pagination w-full list list-2 hidden\\\">\\n    <button type=\\\"button\\\" class=\\\"btn xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n    </button>\\n  </nav>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div data-xt-overlay>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    overlay\\n  </button>\\n\\n  <div class=\\\"overlay demo--overlay-animation\\\">\\n    <div class=\\\"overlay-container max-w-3xl\\\">\\n      <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n          ${iconX()}\\n        </div>\\n            <div class=\\\"rounded-t-md\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"#iframe--furniture-listing-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * .listing-page\\n      */\\n\\n    .listing-page_inner {\\n      > .row {\\n        .row(small);\\n        .row(medium, sm);\\n      }\\n    }\\n\\n    .listing-page_col {\\n      .col(12);\\n      .col(6, sm);\\n      .col(4, lg);\\n    }\\n\\n    .listing-page_col--big {\\n      .col(12, sm);\\n      .col(12, lg);\\n    }\\n\\n    .listing-page_item {\\n      .full();\\n      .text-black links-default() !important;\\n      // card\\n      .card-white();\\n      .card-squared();\\n      .card-none-x();\\n      .card-title {\\n        .font-sans-semibold();\\n        .line-height-sm();\\n        font-size: 1.2rem;\\n      }\\n      .card-asset {\\n        .media-container {\\n          .padding(bottom, 75%);\\n          background: @shade-100;\\n        }\\n        .media {\\n          .object-cover();\\n        }\\n      }\\n    }\\n\\n    .listing-page_col--big {\\n      .card-asset {\\n        .media-container {\\n          @media @min-sm {\\n            .padding(bottom, 37.5%);\\n          }\\n          @media @min-lg {\\n            .padding(bottom, 25%);\\n          }\\n        }\\n      }\\n    }\\n\\n    .listing-page_content {\\n      .padding(y, medium);\\n    }\\n\\n    .listing-page_price {\\n      .font-sans-semibold();\\n      .line-height-sm();\\n      font-size: 0.9rem;\\n      letter-spacing: 0.1em;\\n      text-transform: none;\\n    }\\n\\n    /**\\n      * scroll\\n      */\\n\\n    // vars\\n\\n    @anim-scale-size: 1.05;\\n\\n    // the same css and js\\n    .scroll-item, .listing-page_item {\\n      opacity: 0;\\n      &.fade {\\n        opacity: 1;\\n        animation-name: anim-furniture-listing-v1-in;\\n        animation-duration: @time-md;\\n        animation-timing-function: @ease-out-quint;\\n        &.inverse {\\n          opacity: 1;\\n          animation-name: anim-furniture-listing-v1-inverse-in;\\n          animation-duration: @time-md;\\n          animation-timing-function: @ease-out-quint;\\n        }\\n      }\\n      &.fade-out {\\n        opacity: 0;\\n        animation-name: anim-furniture-listing-v1-inverse-out;\\n        animation-duration: @time-md;\\n        animation-timing-function: @ease-out-quint;\\n        &.inverse {\\n          opacity: 0;\\n          animation-name: anim-furniture-listing-v1-out;\\n          animation-duration: @time-md;\\n          animation-timing-function: @ease-out-quint;\\n        }\\n      }\\n    }\\n\\n    // anim-furniture-listing-v1\\n\\n    @keyframes anim-furniture-listing-v1-in {\\n      0% {\\n        opacity: 0;\\n        transform: translateY(3rem);\\n      }\\n      100% {\\n        opacity: 1;\\n        transform: translateY(0);\\n      }\\n    }\\n\\n    @keyframes anim-furniture-listing-v1-out {\\n      0% {\\n        opacity: 1;\\n        transform: translateY(0);\\n      }\\n      100% {\\n        opacity: 0;\\n        transform: translateY(3rem);\\n      }\\n    }\\n\\n    // anim-furniture-listing-v1-inverse\\n\\n    @keyframes anim-furniture-listing-v1-inverse-in {\\n      0% {\\n        opacity: 0;\\n        transform: translateY(-3rem);\\n      }\\n      100% {\\n        opacity: 1;\\n        transform: translateY(0);\\n      }\\n    }\\n\\n    @keyframes anim-furniture-listing-v1-inverse-out {\\n      0% {\\n        opacity: 1;\\n        transform: translateY(0);\\n      }\\n      100% {\\n        opacity: 0;\\n        transform: translateY(-3rem);\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/slider'\\nimport gsap from 'gsap'\\n\\n/**\\n * slider\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--brands-featured-v1 body .slider', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const timeScaleTimeOn = Xt.vars.timeMedium\\n    const timeScaleEaseOn = 'quint.in'\\n    const timeScaleTimeOff = Xt.vars.timeBig\\n    const timeScaleEaseOff = 'quint.out'\\n\\n    // slider\\n\\n    let self = new Xt.Slider(object, {\\n      align: 'left',\\n      groupMq: false,\\n      autoHeight: false,\\n      jump: false,\\n      drag: {\\n        manual: true,\\n        wrap: true,\\n      },\\n    })\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        // time depending on target and dragger width\\n        const slideWidth = tr.offsetWidth\\n        const draggerWidth = self.dragger.offsetWidth\\n        let time = slideWidth * 15 // constant speed\\n        if (object.classList.contains('slider--factor')) {\\n          time = (draggerWidth / slideWidth) * 50000 // faster or slower depending on horizontal space\\n        }\\n        // animate\\n        if (self.initial) {\\n          // reset dragging position\\n          gsap.set(self.dragger, { x: self.detail.dragPos })\\n          self.goToNext()\\n        }\\n        if (self.wrap) {\\n          // end dragging position instant\\n          gsap.set(self.dragger, { x: self.detail.dragPos })\\n        } else {\\n          // end dragging position\\n          gsap.to(self.dragger, { x: self.detail.dragPos, duration: time, ease: 'linear' }).eventCallback('onComplete', () => {\\n            // wrap before changing slide if needed, needed with drag.wrap = true\\n            self.eventWrap()\\n            requestAnimationFrame(() => {\\n              // go to next slide\\n              self.goToNext()\\n            })\\n          })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('on.xt', eventOn, true)\\n\\n    // eventPause\\n\\n    const eventPause = () => {\\n      // pause tween\\n      const tweens = gsap.getTweensOf(self.dragger)\\n      for (const tween of tweens) {\\n        gsap.to(tween, { timeScale: 0, duration: timeScaleTimeOff, ease: timeScaleEaseOff })\\n      }\\n    }\\n\\n    self.object.addEventListener('mouseenter', eventPause, true)\\n    addEventListener('blur', eventPause)\\n\\n    // eventResume\\n\\n    const eventResume = () => {\\n      // resume tween\\n      const tweens = gsap.getTweensOf(self.dragger)\\n      for (const tween of tweens) {\\n        gsap.to(tween, { timeScale: 1, duration: timeScaleTimeOn, ease: timeScaleEaseOn })\\n      }\\n    }\\n\\n    self.object.addEventListener('mouseleave', eventResume, true)\\n    addEventListener('focus', eventResume)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      removeEventListener('blur', eventPause)\\n      removeEventListener('focus', eventResume)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Hero\\\"\\ntitle: \\\"fashion-hero-v2\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-05-27\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-hero-v2\\\"\\n]\\n---\\n\";","export default \"/**\\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\\n * directory of this distribution and at\\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\\n */\\n;\\n(function (root, factory) {\\n    if (typeof define === \\\"function\\\" && define.amd) {\\n        define(factory);\\n    } else if (typeof exports === \\\"object\\\") {\\n        module.exports = factory();\\n    } else {\\n        root.ResizeSensor = factory();\\n    }\\n}(this, function () {\\n\\n    //Make sure it does not throw in a SSR (Server Side Rendering) situation\\n    if (typeof window === \\\"undefined\\\") {\\n        return null;\\n    }\\n    // Only used for the dirty checking, so the event callback count is limted to max 1 call per fps per sensor.\\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\\n    // would generate too many unnecessary events.\\n    var requestAnimationFrame = window.requestAnimationFrame ||\\n        window.mozRequestAnimationFrame ||\\n        window.webkitRequestAnimationFrame ||\\n        function (fn) {\\n            return window.setTimeout(fn, 20);\\n        };\\n\\n    /**\\n     * Iterate over each of the provided element(s).\\n     *\\n     * @param {HTMLElement|HTMLElement[]} elements\\n     * @param {Function}                  callback\\n     */\\n    function forEachElement(elements, callback){\\n        var elementsType = Object.prototype.toString.call(elements);\\n        var isCollectionTyped = ('[object Array]' === elementsType\\n            || ('[object NodeList]' === elementsType)\\n            || ('[object HTMLCollection]' === elementsType)\\n            || ('[object Object]' === elementsType)\\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\\n        );\\n        var i = 0, j = elements.length;\\n        if (isCollectionTyped) {\\n            for (; i < j; i++) {\\n                callback(elements[i]);\\n            }\\n        } else {\\n            callback(elements);\\n        }\\n    }\\n\\n    /**\\n     * Class for dimension change detection.\\n     *\\n     * @param {Element|Element[]|Elements|jQuery} element\\n     * @param {Function} callback\\n     *\\n     * @constructor\\n     */\\n    var ResizeSensor = function(element, callback) {\\n        /**\\n         *\\n         * @constructor\\n         */\\n        function EventQueue() {\\n            var q = [];\\n            this.add = function(ev) {\\n                q.push(ev);\\n            };\\n\\n            var i, j;\\n            this.call = function() {\\n                for (i = 0, j = q.length; i < j; i++) {\\n                    q[i].call();\\n                }\\n            };\\n\\n            this.remove = function(ev) {\\n                var newQueue = [];\\n                for(i = 0, j = q.length; i < j; i++) {\\n                    if(q[i] !== ev) newQueue.push(q[i]);\\n                }\\n                q = newQueue;\\n            }\\n\\n            this.length = function() {\\n                return q.length;\\n            }\\n        }\\n\\n        /**\\n         * @param {HTMLElement} element\\n         * @param {String}      prop\\n         * @returns {String|Number}\\n         */\\n        function getComputedStyle(element, prop) {\\n            if (element.currentStyle) {\\n                return element.currentStyle[prop];\\n            } else if (window.getComputedStyle) {\\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\\n            } else {\\n                return element.style[prop];\\n            }\\n        }\\n\\n        /**\\n         *\\n         * @param {HTMLElement} element\\n         * @param {Function}    resized\\n         */\\n        function attachResizeEvent(element, resized) {\\n            if (!element.resizedAttached) {\\n                element.resizedAttached = new EventQueue();\\n                element.resizedAttached.add(resized);\\n            } else if (element.resizedAttached) {\\n                element.resizedAttached.add(resized);\\n                return;\\n            }\\n\\n            element.resizeSensor = document.createElement('div');\\n            element.resizeSensor.className = 'resize-sensor';\\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\\n\\n            element.resizeSensor.style.cssText = style;\\n            element.resizeSensor.innerHTML =\\n                '<div class=\\\"resize-sensor-expand\\\" style=\\\"' + style + '\\\">' +\\n                    '<div style=\\\"' + styleChild + '\\\"></div>' +\\n                '</div>' +\\n                '<div class=\\\"resize-sensor-shrink\\\" style=\\\"' + style + '\\\">' +\\n                    '<div style=\\\"' + styleChild + ' width: 200%; height: 200%\\\"></div>' +\\n                '</div>';\\n            element.appendChild(element.resizeSensor);\\n\\n            if (getComputedStyle(element, 'position') == 'static') {\\n                element.style.position = 'relative';\\n            }\\n\\n            var expand = element.resizeSensor.childNodes[0];\\n            var expandChild = expand.childNodes[0];\\n            var shrink = element.resizeSensor.childNodes[1];\\n            var dirty, rafId, newWidth, newHeight;\\n            var lastWidth = element.offsetWidth;\\n            var lastHeight = element.offsetHeight;\\n\\n            var reset = function() {\\n                expandChild.style.width = '100000px';\\n                expandChild.style.height = '100000px';\\n\\n                expand.scrollLeft = 100000;\\n                expand.scrollTop = 100000;\\n\\n                shrink.scrollLeft = 100000;\\n                shrink.scrollTop = 100000;\\n            };\\n\\n            reset();\\n\\n            var onResized = function() {\\n                rafId = 0;\\n\\n                if (!dirty) return;\\n\\n                lastWidth = newWidth;\\n                lastHeight = newHeight;\\n\\n                if (element.resizedAttached) {\\n                    element.resizedAttached.call();\\n                }\\n            };\\n\\n            var onScroll = function() {\\n                newWidth = element.offsetWidth;\\n                newHeight = element.offsetHeight;\\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\\n\\n                if (dirty && !rafId) {\\n                    rafId = requestAnimationFrame(onResized);\\n                }\\n\\n                reset();\\n            };\\n\\n            var addEvent = function(el, name, cb) {\\n                if (el.attachEvent) {\\n                    el.attachEvent('on' + name, cb);\\n                } else {\\n                    el.addEventListener(name, cb);\\n                }\\n            };\\n\\n            addEvent(expand, 'scroll', onScroll);\\n            addEvent(shrink, 'scroll', onScroll);\\n        }\\n\\n        forEachElement(element, function(elem){\\n            attachResizeEvent(elem, callback);\\n        });\\n\\n        this.detach = function(ev) {\\n            ResizeSensor.detach(element, ev);\\n        };\\n    };\\n\\n    ResizeSensor.detach = function(element, ev) {\\n        forEachElement(element, function(elem){\\n            if(elem.resizedAttached && typeof ev == \\\"function\\\"){\\n                elem.resizedAttached.remove(ev);\\n                if(elem.resizedAttached.length()) return;\\n            }\\n            if (elem.resizeSensor) {\\n                if (elem.contains(elem.resizeSensor)) {\\n                    elem.removeChild(elem.resizeSensor);\\n                }\\n                delete elem.resizeSensor;\\n                delete elem.resizedAttached;\\n            }\\n        });\\n    };\\n\\n    return ResizeSensor;\\n\\n}));\\n\";","export default \"module.exports = {\\n  variant: ['responsive'],\\n  utility: theme => ({\\n    '.container-reset': {\\n      // setup\\n      padding: 0,\\n      width: 'auto',\\n      maxWidth: 'none',\\n    },\\n    '.duration-none': {\\n      // setup\\n      transitionDuration: 'initial',\\n      transitionDelay: 'initial',\\n      animationDuration: 'initial',\\n      animationDelay: 'initial',\\n      animationIterationCount: '1',\\n    },\\n    '.mt-fc': {\\n      // setup\\n      '&:first-child': {\\n        marginTop: theme('spacing.0'),\\n      },\\n    },\\n    '.mb-lc': {\\n      // setup\\n      '&:last-child': {\\n        marginBottom: theme('spacing.0'),\\n      },\\n    },\\n  }),\\n  component: theme => ({\\n    html: {\\n      // setup\\n      touchAction: 'manipulation', // disable double-tap\\n      '-webkit-tap-highlight-color': 'rgba(0, 0, 0, 0)', // disable tap highlight\\n      height: '100%',\\n    },\\n    body: {\\n      // setup\\n      '@apply overflow-main': '',\\n      height: '100%',\\n    },\\n    '::selection': {\\n      // styles\\n      backgroundColor: '#79ffe1',\\n      color: theme('colors.black'),\\n    },\\n    '.overflow-main': {\\n      // styles\\n      '-webkit-overflow-scrolling': 'touch',\\n      '&::-webkit-scrollbar': {\\n        height: '10px',\\n        width: '10px',\\n        background: theme('colors.white'),\\n        '@media (hover: none)': {\\n          display: 'none',\\n        },\\n      },\\n      '&::-webkit-scrollbar-thumb': {\\n        background: theme('colors.gray.600'),\\n      },\\n      scrollbarWidth: 'auto',\\n      scrollbarColor: `${theme('colors.gray.600')} ${theme('colors.white')}`,\\n    },\\n    '.overflow-sub': {\\n      // styles\\n      '-webkit-overflow-scrolling': 'touch',\\n      '&::-webkit-scrollbar': {\\n        height: '5px',\\n        width: '5px',\\n        background: 'transparent',\\n      },\\n      '&::-webkit-scrollbar-thumb': {\\n        background: theme('colors.gray.600'),\\n      },\\n      scrollbarWidth: 'thin',\\n      scrollbarColor: `${theme('colors.gray.600')} transparent`,\\n    },\\n    '[readonly], [disabled], .disabled': {\\n      // setup\\n      cursor: 'not-allowed',\\n      pointerEvents: 'none',\\n      // styles\\n      '&:not(.active)': {\\n        // when not .active\\n        opacity: '.75',\\n      },\\n    },\\n    '.backdrop': {\\n      // setup\\n      position: 'fixed',\\n      zIndex: theme('zIndex.backdrop'),\\n      top: '0',\\n      right: '0',\\n      width: '100%',\\n      height: '100%',\\n      // styles\\n      backgroundColor: theme('colors.gray.900'),\\n      opacity: '.3',\\n    },\\n    '.design-setup': {\\n      // setup\\n      content: '\\\"\\\"',\\n      position: 'absolute',\\n      zIndex: '-1',\\n      top: '0',\\n      left: '0',\\n      bottom: '0',\\n      right: '0',\\n      borderRadius: 'inherit',\\n      transitionProperty: 'inherit',\\n      transitionDuration: 'inherit',\\n      transitionTimingFunction: 'inherit',\\n    },\\n    'html:not(.xt-focus-disable)': {\\n      ':focus': {\\n        outline: 'none !important',\\n      },\\n      '&.xt-focus-visible': {\\n        ':focus': {\\n          outline: `5px auto ${theme('colors.accent.700')} !important`,\\n        },\\n        'input:not([type=\\\"checkbox\\\"]):not([type=\\\"radio\\\"]), select, textarea': {\\n          '&:focus': {\\n            outline: 'none !important',\\n          },\\n        },\\n      },\\n    },\\n    ...require('./structurejs.css.js').component(theme),\\n  }),\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Theme\\\"\\ntitle: \\\"xtend-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2015-10-10\\\"\\ndemos: [\\n  \\\"iframe/themes/xtend-theme-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Badge\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/badge/variant\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Interactive\\n\\nUse **tailwind classes** to modify variants for interactive animations.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/badge/interactive\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **component classes** to assign size. You can add **additional size** for example `.badge-xs` or `.badge-xl`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |\\n| Component                  | `.badge-sm`       | `badge-sm`                | Size small            |\\n| Component                  | `.badge-md`       | `badge-md`                | Size medium            |\\n| Component                  | `.badge-lg`       | `badge-lg`                | Size large            |\\n\\n</div>\\n\\nOtherwise use **tailwind classes** to assign custom size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/badge/size\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Structure\\\"\\ntitle: \\\"Javascript\\\"\\ndate: \\\"2050-05-05\\\"\\n---\\n\\n## Event Delay\\n\\nFor the `resize` and `scroll` events we use a special wrapper `Xt.eventDelay` that set the delay on which the resize gets triggered with `Xt.resizeDelay` and `Xt.scrollDelay`.\\n\\n```js\\naddEventListener('resize', e => {\\n  Xt.eventDelay(e, document.documentElement, () => {\\n    // logic\\n  })\\n})\\n\\naddEventListener('scroll', e => {\\n  Xt.eventDelay(e, document.documentElement, () => {\\n    // logic\\n  })\\n})\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Function                  | `Xt.eventDelay:Function`              | `e:Event, element:Node, function:Function, prefix:String = '', instant:Boolean = false`       | event delay wrapper                  |\\n| Variable                  | `Xt.resizeDelay:Number|Boolean`              | `500`        | Delay for the `resize` event with `Xt.eventDelay`            |\\n| Variable                  | `Xt.scrollDelay:Number|Boolean`              | `500`        | Delay for the `scroll` event with `Xt.eventDelay`                 |\\n\\n</div>\\n\\nYou can also manually specify a **custom delay**, for instant use `delay: 0`.\\n\\n```js\\ndispatchEvent(new CustomEvent('resize', { detail: { delay: 0 } }))\\n```\\n\\n#### Resize Force\\n\\nWith `resize`, `Xt.eventDelay` also calls the function **only if the height of the window changes**, to not trigger the resize event on mobile when the address bar hides, and to fix multiple calls on sume browsers when scrolling.\\n\\nTo **force** `resize` event also on **window width change** use `e.detail.force`:\\n\\n```js\\ndispatchEvent(new CustomEvent('resize', { detail: { force: true } }))\\n```\\n\\n#### Resize Container\\n\\nYou can trigger some components events only inside some **container node**, not possible normally for resize events, just use `e.detail.container`:\\n\\n```js\\nconst checkResize = document.querySelector('.my-element')\\nconst eventResize = function (e) {\\n  // triggering e.detail.container\\n  if (!e || !e.detail || !e.detail.container || e.detail.container.contains(checkResize)) {\\n    // logic\\n  }\\n}\\ndocument.querySelector.addEventListener(eventResize)\\n\\n// triggering e.detail.container\\ndispatchEvent(new CustomEvent('resize', { detail: { force: true, container: document.querySelector('.my-container') } }))\\n```\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Card\\\"\\ntitle: \\\"xtend-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2015-10-10\\\"\\ndemos: [\\n  \\\"iframe/themes/xtend-theme-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ align: 'left', drag: { wrap: true } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <button type=\\\"button\\\" class=\\\"group\\\"\\n    data-xt-propagate-interaction=\\\"{ targets: '.btn' }\\\">\\n\\n    <div class=\\\"btn btn-md rounded-l-md ${btnPrimaryGroup()}\\\">\\n      Search\\n    </div>\\n\\n    <div class=\\\"btn btn-md rounded-r-md ${btnDefaultGroup()}\\\">\\n      ${iconSearch({ classes: 'icon-lg' })}\\n    </div>\\n\\n  </button>\\n\\n</form>\\n`\\n\";","export default \"export default () => {\\n  return `text-accent-600`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\n\\n/**\\n * listing-page\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--stores-listing-v1 body .listing-page_item', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const actionBtn = object.querySelector('.listing-page_action')\\n    const closeBtn = object.querySelector('.btn-close')\\n\\n    // eventClick\\n\\n    const eventClick = e => {\\n      e.stopPropagation()\\n      object.classList.add('active')\\n    }\\n\\n    actionBtn.addEventListener('click', eventClick)\\n\\n    // eventClose\\n\\n    const eventClose = e => {\\n      e.stopPropagation()\\n      object.classList.remove('active')\\n    }\\n\\n    closeBtn.addEventListener('click', eventClose)\\n  },\\n})\\n\";","export default \"export default () => {\\n  return `text-white links-inverse rounded-md bg-accent-500 hover:bg-accent-600 active:bg-accent-700`\\n}\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center md:text-white md:links-inverse py-4 px-6 bg-accent-500\\\">\\n\\n  <a href=\\\"#\\\">\\n    link\\n  </a>\\n\\n  <a href=\\\"#\\\" class=\\\"text-white text-opacity-75 underline\\\">\\n    link custom\\n  </a>\\n\\n  <button type=\\\"button\\\" class=\\\"btn link\\\">\\n    link btn\\n  </button>\\n\\n  <div class=\\\"link\\\">\\n    link class\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"fashion-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-10\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-listing-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-sm\\\">\\n        <div class=\\\"h5\\\">Small</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Medium</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-lg\\\">\\n        <div class=\\\"h3\\\">Large</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"p-8 text-sm\\\">\\n        <div class=\\\"h5\\\">Custom</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst img = require('components/snippets/img').default\\nconst imgAlt = require('components/snippets/img').alt\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\">\\n\\n  <nav class=\\\"slider-pagination w-full list list-2\\\">\\n\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-circle\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n        <span class=\\\"icon-arrow-left\\\"></span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"slider-pagination w-full list list-2_inner\\\">\\n      <div class=\\\"slider-pagination w-full list list-2_scroll\\\">\\n        <button type=\\\"button\\\" class=\\\"btn xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n            xt-content\\n        </button>\\n      </div>\\n    </div>\\n\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-circle\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n        <span class=\\\"icon-arrow-right\\\"></span>\\n      </button>\\n    </div>\\n\\n  </nav>\\n\\n  <div class=\\\"slides\\\">\\n    <nav class=\\\"slides-inner row row-2\\\">\\n\\n      <div class=\\\"slide\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"featured-item\\\">\\n\\n            <div class=\\\"slide-pagination-content\\\">\\n              Lorem ipsum\\n            </div>\\n\\n            <div class=\\\"featured-item_assets\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"featured-item_assets_col--big featured-item_assets_col--big\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${img({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n                <div class=\\\"featured-item_assets_col--sm featured-item_assets_col--sm\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${img({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"slide_card\\\">\\n              <div class=\\\"card card-primary\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item\\\">\\n                      <h3 class=\\\"h4\\\">\\n                        Lorem ipsum\\n                      </h3>\\n                      <p>\\n                        <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Morbi lacinia rutrum ornare.\\n                      </p>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-default btn-big\\\">\\n                        Discover\\n                      </a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"slide\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"featured-item\\\">\\n\\n            <div class=\\\"slide-pagination-content\\\">\\n              Dolor sit amet\\n            </div>\\n\\n            <div class=\\\"featured-item_assets\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"featured-item_assets_col--sm\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${imgAlt({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n                <div class=\\\"featured-item_assets_col--big\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${imgAlt({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"slide_card\\\">\\n              <div class=\\\"card card-primary\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item\\\">\\n                      <h3 class=\\\"h4\\\">\\n                        Dolor sit amet\\n                      </h3>\\n                      <p>\\n                        <strong>Lorem ipsum</strong> dolor sit amet.\\n                      </p>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-default btn-big\\\">\\n                        Discover\\n                      </a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"slide\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"featured-item\\\">\\n\\n            <div class=\\\"slide-pagination-content\\\">\\n              Consectetur adipiscing elit\\n            </div>\\n\\n            <div class=\\\"featured-item_assets\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"featured-item_assets_col--big\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${img({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n                <div class=\\\"featured-item_assets_col--sm\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${img({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"slide_card\\\">\\n              <div class=\\\"card card-primary\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item\\\">\\n                      <h3 class=\\\"h4\\\">\\n                        Consectetur adipiscing elit\\n                      </h3>\\n                      <p>\\n                        <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Morbi lacinia rutrum ornare.\\n                      </p>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-default btn-big\\\">\\n                        Discover\\n                      </a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"slide\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"featured-item\\\">\\n\\n            <div class=\\\"slide-pagination-content\\\">\\n              Nam iaculis magna eu consectetur condimentum\\n            </div>\\n\\n            <div class=\\\"featured-item_assets\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"featured-item_assets_col--sm\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${imgAlt({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n                <div class=\\\"featured-item_assets_col--big\\\">\\n                  <div class=\\\"featured-item_asset\\\">\\n                    ${imgAlt({ classes: 'object-cover object-center', loading: 'eager' })}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"slide_card\\\">\\n              <div class=\\\"card card-primary\\\">\\n                <div class=\\\"card-design\\\"></div>\\n                <div class=\\\"card-inner\\\">\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"card-item\\\">\\n                      <h3 class=\\\"h4\\\">\\n                        Nam iaculis magna eu consectetur condimentum\\n                      </h3>\\n                      <p>\\n                        <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Morbi lacinia rutrum ornare.\\n                      </p>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-default btn-big\\\">\\n                        Discover\\n                      </a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n    </nav>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md\\\">\\n    btn\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    default\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    primary\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md link\\\">\\n    link\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"module.exports = {\\n  component: {\\n    '.icon': {\\n      // setup\\n      display: 'inline-block',\\n      stroke: 'currentColor',\\n      // styles\\n      '@apply icon-md': '',\\n    },\\n    '.icon-sm': {\\n      // styles\\n      width: '1em',\\n      height: '1em',\\n    },\\n    '.icon-md': {\\n      // styles\\n      width: '1.25em',\\n      height: '1.25em',\\n      // Size bigger than `1em` has negative margin\\n      margin: 'calc((1em - 1.25em) / 2)',\\n    },\\n    '.icon-lg': {\\n      // styles\\n      width: '1.5em',\\n      height: '1.5em',\\n      // Size bigger than `1em` has negative margin\\n      margin: 'calc((1em - 1.5em) / 2)',\\n    },\\n  },\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"Overlay\\\"\\ndescription: \\\"Used when you need to display any content over the main page.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst cardDefaultFullInteractive = require('components/snippets/classes/card-default-full-interactive').default\\nconst cardPrimaryFullInteractive = require('components/snippets/classes/card-primary-full-interactive').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <a role=\\\"button\\\" class=\\\"card ${cardDefaultFullInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Default</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </a>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <a role=\\\"button\\\" class=\\\"card ${cardPrimaryFullInteractive()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Primary</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </a>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Toggle\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Disable\\n\\nYou can disable javascript using `.xt-disable` and `.xt-disable-after-init`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.xt-disable`                     | `xt-disable`                | Assign to `object` to disable component            |\\n| Component                  | `.xt-disable-after-init`                     | `xt-disable-after-init`                | Assign to `object` to disable component after init            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/disable\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Media loaded\\n\\nIf you want to animate on image loaded, with `mediaLoaded: true` use the class `.xt-medialoaded` or the js event `medialoaded.xt`.\\n\\nWhen you need to reinit the component when the media is loaded and the **width** of the image is calculated with `mediaLoadedReinit: true`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `mediaLoaded:Boolean`                          | `false`        | Add the class `.xt-medialoaded` on img loaded             |\\n| Option                  | `mediaLoadedReinit:Boolean`                          | `false`        | Reinit the component on img loaded after a delay set with `Xt.medialoadedDelay`             |\\n\\n</div>\\n\\n## Prevent event\\n\\nYou can have **element's link** and **other events** that trigger after toggle with `preventEvent: true`.\\n\\nIf the toggle is on `\\\"on\\\": \\\"mouseenter\\\"` or `\\\"on\\\": \\\"mousehover\\\"` the link gets activated on the second touch event on touch devices.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `preventEvent:Boolean`                          | `false`        | Prevent interaction until activated depending on `on` and `off` events (second click or mouseenter)            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/prevent-event\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nIf you need to toggle **multiple targets** with the **same element** assign `data-xt-group` to **elements** and the associated targets **targets**. Group's additional elements aren't counted for min and max.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/group\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Other\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `backdrop:Boolean`                              | `false`                     | Generate backdrop on targets or on object if no targets           |\\n| Option                  | `appendTo:Query`                          | `false`        | Append targets to Node on activation            |\\n| Option                  | `classHtml:String`                          | `false`        | Class to add to html element on activation            |\\n| Option                  | `closeAuto:Boolean`                          | `false`        | Close automatically on `closeauto.trigger.xt` event            |\\n| Option                  | `closeInside:Query`                          | `false`        | Query Node inside to close on click            |\\n| Option                  | `closeOutside:Query`                          | `false`        | Query Node outside to close on click            |\\n| Option                  | `closeOnDisable:Boolean`                          | `false`        | Automatically close on disable            |\\n| Option                  | `scrollbar:Boolean`                          | `false`        | Hide body scrollbars on activation            |\\n| Option                  | `onBlock:Milliseconds`                          | `true`        | Block concurrent activation events for some time            |\\n| Option                  | `offBlock:Milliseconds`                          | `true`        | Block concurrent deactivation events for some time            |\\n| Option                  | `zIndex:Boolean|Object`                 | `false`     | Set zIndex on activation, can be one or more objects `elements` `elementsInner` `targets` `targetsInner`, the object have `start` and `factor` for the starting zIndex and the factor number to add          |\\n| Option                  | `focusLimit:Boolean`                          | `false`        | Limit focus on activation            |\\n| Option                  | `aria:Object|false`                          | `Object`        | Inject aria attributes            |\\n| Option                  | `aria.tabindex:Boolean`                          | `true`        | Inject aria tabindex attributes            |\\n| Option                  | `aria.controls:Boolean`                          | `true`        | Inject aria controls attributes            |\\n| Option                  | `aria.labelledby:Boolean`                          | `true`        | Inject aria labelledby attributes            |\\n\\n</div>\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { StaticQuery, graphql } from 'gatsby'\\n\\nimport { cssSource, jsSource } from 'assets/scripts/source'\\n\\nclass DemoVanilla extends React.Component {\\n  render() {\\n    const { src, children, name } = this.props\\n    const demo = require('../../code/' + src + '.js').demo\\n    demo.path = `private/demos/${demo.dirs.join('/')}/${demo.name}`.replace('/vanilla', '').replace('src/gatsby/code/', '')\\n    return (\\n      <StaticQuery\\n        query={graphql`\\n          query {\\n            allFile {\\n              files: edges {\\n                file: node {\\n                  relativePath\\n                }\\n              }\\n            }\\n          }\\n        `}\\n        render={data => (\\n          <div\\n            className={'gatsby_demo_item toggle gatsby_demo_preview'}\\n            data-name={name || demo.name.split('-').join(' ')}\\n            data-file={demo.path.split('-').join(' ')}\\n            data-inline={src}\\n          >\\n            {children}\\n            <script type=\\\"text/plain\\\" data-lang=\\\"html\\\" dangerouslySetInnerHTML={{ __html: demo.htmlSource }} />\\n            <div className=\\\"gatsby_demo_source gatsby_demo_source--from gatsby_demo_source_populate\\\" />\\n            {data.allFile.files\\n              .filter(x => x.file.relativePath === `${demo.path}.css`)\\n              .map((file, i) => (\\n                <div className=\\\"gatsby_demo_source xt-ignore\\\" data-lang=\\\"css\\\" dangerouslySetInnerHTML={{ __html: cssSource(demo) }} key={i} />\\n              ))}\\n            {data.allFile.files\\n              .filter(x => x.file.relativePath === `${demo.path}.js`)\\n              .map((file, i) => (\\n                <div className=\\\"gatsby_demo_source xt-ignore\\\" data-lang=\\\"js\\\" dangerouslySetInnerHTML={{ __html: jsSource(demo) }} key={i} />\\n              ))}\\n          </div>\\n        )}\\n      />\\n    )\\n  }\\n}\\n\\nexport default DemoVanilla\\n\\nDemoVanilla.propTypes = {\\n  children: PropTypes.node.isRequired,\\n  src: PropTypes.string.isRequired,\\n  name: PropTypes.string,\\n  mode: PropTypes.string,\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Icons\\\"\\ntitle: \\\"Icons\\\"\\ndescription: \\\"Simple and extensible button styles.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/icons.css.js](https://github.com/minimit/xtendui/blob/master/src/core/icons.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      icons: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create **icons with svg**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/icons/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nUse this code to create **icons with img**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/icons/usage-img\\\">\\n  </demovanilla>\\n</demo>\\n\\n[[noteDefault]]\\n| Xtend UI icons used in this docs are from [Feather Icons](https://feathericons.com).\\n\\n[[notePrimary]]\\n| Icons with img don't support [icons variant](/components/core/icons/content#variant)\\n\\nCheck subpage to [customize content](/components/core/icons/content).\\n\";","export default \"export default () => {\\n  return `text-black links-default bg-white shadow-lg`\\n}\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-8/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-auto flex-1\\\">\\n    <div class=\\\"w-full py-3 px-4 text-sm bg-gray-500\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<br><br><br><br><br><br><br>\\n\\n<div class=\\\"sticky-0\\\" data-xt-sticky=\\\"{ limit: { top: 0, bottom: '.sticky-1.xt-clone' } }\\\"> <!-- if limit to sticky use .xt-clone -->\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-1\\\" data-xt-sticky=\\\"{ position: 'bottom', limit: { bottom: 50 } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"export default () => {\\n  return `px-6 w-full text-black links-default hover:text-opacity-75 active:text-opacity-75`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<br><br><br><br><br><br><br>\\n\\n<div class=\\\"demo--sticky-block\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()} demo--sticky-block--btn\\\">\\n      Click to block/unblock\\n    </button>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"/**\\n * tables\\n */\\n\\n// .table\\n\\n.table {\\n  border-collapse: collapse;\\n  width: 100%;\\n  th {\\n    text-align: left;\\n  }\\n  td {\\n    text-align: left;\\n  }\\n}\\n\\n// .table-middle\\n\\n.table-middle {\\n  th, td {\\n    vertical-align: middle;\\n  }\\n}\\n\\n// .table-center\\n\\n.table-center {\\n  th, td {\\n    text-align: center;\\n  }\\n}\\n\\n// .table-right\\n\\n.table-right {\\n  th:not(:nth-child(1)), td:not(:nth-child(1)) {\\n    text-align: right;\\n  }\\n}\\n\\n// .table-scroll\\n\\n.table-scroll {\\n  .full();\\n  overflow-x: auto;\\n  .overflow-style(@mode: inner);\\n}\\n\\n/**\\n * @generate-table-scroll\\n */\\n\\n// generate\\n\\n& when not (@generate-table-scroll = false) {\\n\\n  // generate-table-scroll-responsive\\n\\n  .generate-card-horizontal-responsive();\\n  .generate-card-horizontal-responsive(@i: length(@generate-table-scroll)) when (@i > 0) {\\n    .generate-card-horizontal-responsive(@i - 1);\\n    @breakpoint: extract(@generate-table-scroll, @i);\\n    & when not (@breakpoint = none) {\\n      @query-max: 'max-@{breakpoint}';\\n      @media @@query-max {\\n        .table-scroll-@{breakpoint} {\\n          .table-scroll() !important;\\n        }\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Drop\\n */\\nclass Drop extends Xt.Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    super(object, optionsCustom)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init aria\\n   */\\n  initAriaRole() {\\n    const self = this\\n    const options = self.options\\n    // aria\\n    if (options.aria) {\\n      // role\\n      for (const el of self.elements) {\\n        const ariaEls = Xt.queryAll(el, options.ariaControls)\\n        const ariaEl = ariaEls.length ? ariaEls[0] : el\\n        ariaEl.setAttribute('aria-haspopup', 'listbox')\\n      }\\n      for (const tr of self.targets) {\\n        tr.setAttribute('role', 'listbox')\\n      }\\n    }\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nDrop.componentName = 'xt-drop'\\nDrop.optionsDefault = {\\n  // element\\n  elements: false,\\n  elementsInner: ':scope > a, :scope > button',\\n  targets: ':scope > .drop',\\n  targetsInner: ':scope > .drop-inner',\\n  // class\\n  class: 'active active-drop',\\n  // quantity\\n  min: 0,\\n  max: 1,\\n  // event\\n  on: 'click',\\n  eventLimit: '.event-limit, .drop > .drop-inner',\\n  // timing\\n  instant: {\\n    elements: false,\\n    targets: false,\\n    elementsInner: true,\\n    targetsInner: false,\\n  },\\n  // other\\n  closeAuto: true,\\n  closeOutside: 'body',\\n  closeInside: '.drop-dismiss, .backdrop, .btn-close',\\n  zIndex: {\\n    targets: {\\n      start: 500,\\n      factor: 1,\\n    },\\n  },\\n  ariaControls: ':scope > a, :scope > button',\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Drop = Drop\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Drop.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Drop.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Drop(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--toggle-progress',\\n  mount: object => {\\n    // vars\\n\\n    const fillerTime = Xt.vars.timeTiny\\n    const fillerEase = 'linear'\\n\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      auto: {\\n        time: 4000,\\n        pause: ':scope > button, .toggle',\\n      },\\n    })\\n\\n    // start auto\\n\\n    const eventAutostart = () => {\\n      // elements\\n      const elements = self.elements.filter(x => self.hasCurrent(x))\\n      for (const element of elements) {\\n        const fillers = element.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.set(filler, { height: 0, top: '100%' })\\n          gsap.to(filler, { height: '100%', top: 0, duration: self.options.auto.time, ease: fillerEase })\\n        }\\n      }\\n      // targets\\n      const targets = self.targets.filter(x => self.hasCurrent(x))\\n      for (const target of targets) {\\n        const fillers = target.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.set(filler, { width: 0, left: 0 })\\n          gsap.to(filler, { width: '100%', left: 0, duration: self.options.auto.time, ease: fillerEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('autostart.xt', eventAutostart)\\n\\n    // stop auto\\n\\n    const eventAutostop = () => {\\n      // elements\\n      const elements = self.elements.filter(x => self.hasCurrent(x))\\n      for (const element of elements) {\\n        const fillers = element.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { height: 0, top: 0, duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n      // targets\\n      const targets = self.targets.filter(x => self.hasCurrent(x))\\n      for (const target of targets) {\\n        const fillers = target.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { width: 0, left: '100%', duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('autostop.xt', eventAutostop)\\n\\n    // pause auto\\n\\n    const eventAutopause = () => {\\n      // elements\\n      const elements = self.elements.filter(x => self.hasCurrent(x))\\n      for (const element of elements) {\\n        const fillers = element.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { height: 0, top: '100%', duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n      // targets\\n      const targets = self.targets.filter(x => self.hasCurrent(x))\\n      for (const target of targets) {\\n        const fillers = target.querySelectorAll('.filler span:nth-child(1)')\\n        for (const filler of fillers) {\\n          gsap.to(filler, { width: 0, left: 0, duration: fillerTime, ease: fillerEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('autopause.xt', eventAutopause)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n    <div class=\\\"card toggle ${cardToggle()}\\\">\\n      Nested targets are not toggled\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n    <div class=\\\"card toggle ${cardToggle()}\\\">\\n      Nested targets are not toggled\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n    <div class=\\\"card toggle ${cardToggle()}\\\">\\n      Nested targets are not toggled\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(this, function () {\n\n    //Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limted to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call();\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            }\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (getComputedStyle(element, 'position') == 'static') {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId, newWidth, newHeight;\n            var lastWidth = element.offsetWidth;\n            var lastHeight = element.offsetHeight;\n\n            var reset = function() {\n                expandChild.style.width = '100000px';\n                expandChild.style.height = '100000px';\n\n                expand.scrollLeft = 100000;\n                expand.scrollTop = 100000;\n\n                shrink.scrollLeft = 100000;\n                shrink.scrollTop = 100000;\n            };\n\n            reset();\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = newWidth;\n                lastHeight = newHeight;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var onScroll = function() {\n                newWidth = element.offsetWidth;\n                newHeight = element.offsetHeight;\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if(elem.resizedAttached && typeof ev == \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    return ResizeSensor;\n\n}));\n","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"xtend-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2015-10-10\\\"\\ndemos: [\\n  \\\"iframe/themes/xtend-theme-v1\\\"\\n]\\n---\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"jump-to-content toggle sr-only xt-fixed-check\\\">\\n  <a href=\\\"#jump-to-content\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    Jump to content\\n  </a>\\n</div>\\n\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\" id=\\\"jump-to-content\\\">\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nec mauris est. Etiam egestas efficitur semper. Donec imperdiet eget justo at pellentesque. Proin a ultricies orci. Vivamus ut scelerisque lorem. Suspendisse lobortis consequat magna ut ultricies. Duis consequat vitae justo nec commodo. Vestibulum id eros eu sapien aliquam feugiat. Aenean id accumsan orci, nec elementum ex. Fusce a dolor in lacus facilisis vulputate vitae vitae nunc. Phasellus odio quam, semper in finibus at, consequat quis lacus. Sed varius sem commodo tellus pretium, posuere pharetra mauris elementum. Nunc et aliquam velit, quis suscipit justo. Ut ac pretium massa. Aenean ullamcorper mollis urna eu pharetra.</p>\\n    <p>Proin eget lectus pharetra, pretium nunc sed, pulvinar nibh. Quisque ac tellus ac mi posuere tristique. Ut dictum elit sed facilisis rutrum. In sagittis ac ante at blandit. Sed at felis fermentum, semper lorem sed, sagittis lacus. Cras justo massa, molestie sit amet lacinia a, luctus ac velit. Cras tristique, urna in hendrerit laoreet, nisi sem interdum urna, rutrum elementum nisl turpis id est.</p>\\n    <p>Morbi eget odio nibh. Pellentesque consectetur vitae libero ac blandit. Ut et lectus id diam pretium mattis ac at massa. Sed sagittis fermentum dictum. Nulla interdum justo vitae orci pharetra congue. Nullam enim dui, tempor ac dapibus in, maximus eget orci. Pellentesque mollis felis vel sapien sagittis luctus. Etiam vitae condimentum ligula. Cras blandit vehicula arcu fermentum blandit. Ut eu urna finibus felis bibendum tincidunt at vitae ante.</p>\\n    <p>Vestibulum tempus nunc sed varius pellentesque. Fusce feugiat non ex eu consequat. Donec neque ligula, vehicula et felis at, imperdiet malesuada odio. Quisque metus felis, consequat et mollis sit amet, malesuada ac quam. Phasellus eu cursus purus. Nullam eleifend auctor ipsum eu semper. Morbi volutpat tortor lectus, vitae ullamcorper nibh congue ut. In hac habitasse platea dictumst. Mauris a est at enim hendrerit porttitor sit amet vitae felis. Morbi sollicitudin urna at dignissim gravida. Aliquam in quam sapien.</p>\\n    <p>Maecenas pharetra ante id tortor scelerisque, id vehicula nibh finibus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et ante et mauris condimentum tempus. Donec efficitur sodales lobortis. In eu mi nec arcu lacinia aliquet vel et dolor. Integer feugiat mauris non erat hendrerit, eu sollicitudin tellus vestibulum. Duis convallis malesuada nunc vel imperdiet. Donec in ligula et nisl vestibulum lobortis vitae in nunc. Morbi non lorem nibh. Mauris blandit viverra interdum. In bibendum orci vel molestie vulputate.</p>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nec mauris est. Etiam egestas efficitur semper. Donec imperdiet eget justo at pellentesque. Proin a ultricies orci. Vivamus ut scelerisque lorem. Suspendisse lobortis consequat magna ut ultricies. Duis consequat vitae justo nec commodo. Vestibulum id eros eu sapien aliquam feugiat. Aenean id accumsan orci, nec elementum ex. Fusce a dolor in lacus facilisis vulputate vitae vitae nunc. Phasellus odio quam, semper in finibus at, consequat quis lacus. Sed varius sem commodo tellus pretium, posuere pharetra mauris elementum. Nunc et aliquam velit, quis suscipit justo. Ut ac pretium massa. Aenean ullamcorper mollis urna eu pharetra.</p>\\n    <p>Proin eget lectus pharetra, pretium nunc sed, pulvinar nibh. Quisque ac tellus ac mi posuere tristique. Ut dictum elit sed facilisis rutrum. In sagittis ac ante at blandit. Sed at felis fermentum, semper lorem sed, sagittis lacus. Cras justo massa, molestie sit amet lacinia a, luctus ac velit. Cras tristique, urna in hendrerit laoreet, nisi sem interdum urna, rutrum elementum nisl turpis id est.</p>\\n    <p>Morbi eget odio nibh. Pellentesque consectetur vitae libero ac blandit. Ut et lectus id diam pretium mattis ac at massa. Sed sagittis fermentum dictum. Nulla interdum justo vitae orci pharetra congue. Nullam enim dui, tempor ac dapibus in, maximus eget orci. Pellentesque mollis felis vel sapien sagittis luctus. Etiam vitae condimentum ligula. Cras blandit vehicula arcu fermentum blandit. Ut eu urna finibus felis bibendum tincidunt at vitae ante.</p>\\n    <p>Vestibulum tempus nunc sed varius pellentesque. Fusce feugiat non ex eu consequat. Donec neque ligula, vehicula et felis at, imperdiet malesuada odio. Quisque metus felis, consequat et mollis sit amet, malesuada ac quam. Phasellus eu cursus purus. Nullam eleifend auctor ipsum eu semper. Morbi volutpat tortor lectus, vitae ullamcorper nibh congue ut. In hac habitasse platea dictumst. Mauris a est at enim hendrerit porttitor sit amet vitae felis. Morbi sollicitudin urna at dignissim gravida. Aliquam in quam sapien.</p>\\n    <p>Maecenas pharetra ante id tortor scelerisque, id vehicula nibh finibus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et ante et mauris condimentum tempus. Donec efficitur sodales lobortis. In eu mi nec arcu lacinia aliquet vel et dolor. Integer feugiat mauris non erat hendrerit, eu sollicitudin tellus vestibulum. Duis convallis malesuada nunc vel imperdiet. Donec in ligula et nisl vestibulum lobortis vitae in nunc. Morbi non lorem nibh. Mauris blandit viverra interdum. In bibendum orci vel molestie vulputate.</p>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<p class=\\\"text-xs\\\">\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<p class=\\\"text-sm\\\">\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<p class=\\\"text-base\\\">\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<p class=\\\"text-lg\\\">\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<p class=\\\"text-xl\\\">\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</p>\\n\\n<h6 class=\\\"md:p\\\">\\n  <strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.\\n</h6>\\n`\\n\";","const cssSource = (demo, nameOverride, type = '.css') => {\n  return require(`!!raw-loader!xtendui/src/${demo.path}${type}`).default\n}\n\nconst jsSource = (demo, nameOverride, type = '.js') => {\n  return require(`!!raw-loader!xtendui/src/${demo.path}${type}`).default\n}\n\nconst jsxSource = (demo, nameOverride, type = '.jsx') => {\n  return require(`!!raw-loader!xtendui/src/${demo.type}${type}`).default\n}\n\nexport { cssSource, jsSource, jsxSource }\n","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\nLorem ipsum <span class=\\\"separator separator-dash mx-2\\\"></span> dolor sit amet <span class=\\\"separator separator-slash mx-2\\\"></span> Lorem ipsum <span class=\\\"separator separator-pipe mx-2\\\"></span> dolor sit amet <span class=\\\"separator separator-point mx-2\\\"></span> Lorem ipsum <span class=\\\"separator separator-arrow mx-2\\\"></span> dolor sit amet.\\n`\\n\";","export default \".demo--drop-animation {\\n  @apply duration-500; /* needed for animation time, put max animation time */\\n  > .drop {\\n    @apply duration-500; /* needed for animation time, put max animation time */\\n    /* initial */\\n    > .drop-inner {\\n      @apply transform transition-all duration-500;\\n      @apply opacity-0 -translate-x-4;\\n      .inverse& {\\n        @apply translate-x-4;\\n      }\\n    }\\n    /* in */\\n    &.in {\\n      > .drop-inner {\\n        @apply opacity-100 translate-x-0 ease-in;\\n      }\\n    }\\n    /* out */\\n    &.out {\\n      > .drop-inner {\\n        @apply opacity-0 translate-x-4 ease-out;\\n        .inverse& {\\n          @apply -translate-x-4;\\n        }\\n      }\\n    }\\n  }\\n}\\n\";","export default \"const img = require('components/snippets/img').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nexport default () => {\\n  return `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n      overlay full\\n    </button>\\n    <div class=\\\"overlay overlay-default overlay-screen overlay-size-full\\\">\\n      <div class=\\\"overlay-container max-w-5xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n          <div class=\\\"overlay-design\\\"></div>\\n\\n            <div class=\\\"card card-overlay\\\">\\n              <div class=\\\"card-design\\\"></div>\\n              <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n                ${iconX()}\\n              </div>\\n              <div class=\\\"card-inner\\\">\\n                <div class=\\\"card-content\\\">\\n                  <div class=\\\"w-full\\\">\\n                    ${img({ classes: 'object-cover object-center', ratio: '100%' })}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div data-xt-overlay>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n      overlay menu left\\n    </button>\\n    <div class=\\\"overlay overlay-default overlay-position-left overlay-close-outside\\\">\\n      <div class=\\\"overlay-container max-w-5xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n          <div class=\\\"overlay-design\\\"></div>\\n\\n          <div class=\\\"card card-overlay\\\"\\n            style=\\\"align-items: stretch;\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"card-item card-item--menu\\\">\\n                  <div class=\\\"list\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-tall btn-squared\\\">\\n                      Menu\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-tall btn-squared\\\">\\n                      Info\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-tall btn-squared\\\">\\n                      Account\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"w-full\\\">\\n                  ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n                </div>\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">Lorem ipsum</div>\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                </div>\\n                <div class=\\\"card-item card-block-side\\\"\\n                  style=\\\"margin-top: auto\\\">\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit.</p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div data-xt-overlay>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n      overlay contact\\n    </button>\\n    <div class=\\\"overlay overlay-default overlay-close-outside\\\">\\n      <div class=\\\"overlay-container max-w-5xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n          <div class=\\\"overlay-design\\\"></div>\\n\\n          <div class=\\\"card card-overlay\\\"\\n            style=\\\"align-items: stretch;\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n\\n                <div class=\\\"card-item-nested card-item card-group-sm card-item--order\\\">\\n\\n                  <div class=\\\"card-item\\\">\\n\\n                    <div class=\\\"h4\\\">\\n                      Contact us\\n                    </div>\\n\\n                    <form>\\n\\n                      <div class=\\\"row row-form\\\">\\n                        <div class=\\\"col-form-double\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-label\\\">\\n                              Name\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-item\\\" placeholder=\\\"Name\\\" required>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-form-double\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-label\\\">\\n                              Surname\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-item\\\" placeholder=\\\"Surname\\\" required>\\n                          </div>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"row row-form\\\">\\n                        <div class=\\\"col-form-double\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-label\\\">\\n                              Email\\n                            </label>\\n                            <input type=\\\"email\\\" class=\\\"form-item\\\" placeholder=\\\"Email\\\" required>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-form-double\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-label\\\">\\n                              Telephone\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-item\\\" placeholder=\\\"Telephone\\\" required>\\n                          </div>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-label\\\">\\n                          Select an option\\n                        </label>\\n                        <select class=\\\"form-item\\\" required>\\n                          <option selected value=\\\"\\\">Select an option</option>\\n                          <option>Option 1</option>\\n                          <option>Option 2</option>\\n                          <option>Option 3</option>\\n                        </select>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-label\\\">\\n                          Textarea\\n                        </label>\\n                        <textarea class=\\\"form-item h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\" required></textarea>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"checkbox\\\" id=\\\"check-contact\\\" name=\\\"check-contact\\\" required>\\n                        <label class=\\\"form-label\\\" for=\\\"check-contact\\\">\\n                        <span>\\n                          I <strong>read and accept</strong> the <a href=\\\"#\\\" target=\\\"_blank\\\">sales conditions</a> and the <a href=\\\"#\\\" target=\\\"_blank\\\">privacy policy</a>.\\n                        </label>\\n                      </div>\\n\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-wide\\\">\\n                        Send\\n                      </button>\\n\\n                    </form>\\n\\n                  </div>\\n\\n                  <div class=\\\"card-item card-block-side sm:w-5/12\\\"\\n                    style=\\\"display: flex; flex-direction: column\\\">\\n                    <div class=\\\"card-item\\\">\\n                      <p class=\\\"h5\\\">\\n                        Didn't find what you was looking for?\\n                      </p>\\n                      <p>\\n                         Contact our customer service at <a href=\\\"tel:+39333010101\\\">+39 333 010101</a> or email us at <a href=\\\"mailto:info@info.com\\\">info@info.com</a>.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"w-full\\\"\\n                      style=\\\"margin-top: auto\\\">\\n                      ${img({ classes: 'object-cover object-center', ratio: '100%', loading: 'eager' })}\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div data-xt-overlay>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n      overlay newsletter\\n    </button>\\n    <div class=\\\"overlay overlay-default overlay-size-sm overlay-close-outside\\\">\\n      <div class=\\\"overlay-container max-w-5xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n          <div class=\\\"overlay-design\\\"></div>\\n\\n          <div class=\\\"card card-overlay\\\"\\n            style=\\\"align-items: stretch;\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n\\n                <div class=\\\"card-item-nested card-item card-group-sm\\\">\\n\\n                  <div class=\\\"card-item sm:w-5/12\\\">\\n                    <div class=\\\"full-y\\\">\\n                      ${img({ classes: 'object-cover object-center', ratio: '37.5%', loading: 'eager' })}\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"card-item\\\">\\n\\n                    <div class=\\\"h4\\\">\\n                      Subscribe to our newsletter\\n                    </div>\\n\\n                    <form>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-label\\\">\\n                          Email\\n                        </label>\\n                        <input type=\\\"email\\\" class=\\\"form-item\\\" placeholder=\\\"Email\\\" required>\\n                      </div>\\n\\n                      <div class=\\\"form-group-inline\\\">\\n\\n                        <label class=\\\"form-label\\\">\\n                          Select an option\\n                        </label>\\n\\n                        <div class=\\\"form-group\\\">\\n                          <input type=\\\"radio\\\" id=\\\"radio-newsletter-0\\\" name=\\\"radio-newsletter\\\" required>\\n                          <label class=\\\"form-label\\\" for=\\\"radio-newsletter-0\\\">\\n                            Option 1\\n                          </label>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                          <input type=\\\"radio\\\" id=\\\"radio-newsletter-1\\\" name=\\\"radio-newsletter\\\" required>\\n                          <label class=\\\"form-label\\\" for=\\\"radio-valinewsletterdation-1\\\">\\n                            Option 2\\n                          </label>\\n                        </div>\\n\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"checkbox\\\" id=\\\"check-newsletter\\\" name=\\\"check-newsletter\\\" required>\\n                        <label class=\\\"form-label\\\" for=\\\"check-newsletter\\\">\\n                        <span>\\n                          I <strong>read and accept</strong> the <a href=\\\"#\\\" target=\\\"_blank\\\">sales conditions</a> and the <a href=\\\"#\\\" target=\\\"_blank\\\">privacy policy</a>.\\n                        </label>\\n                      </div>\\n\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-wide\\\">\\n                        Subscribe\\n                      </button>\\n\\n                    </form>\\n\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"card-item card-block-side card-sm\\\">\\n                  <p>Receive <strong>free discount</strong> periodically on all our products.</p>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Button\\\"\\ntitle: \\\"xtend-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2015-10-10\\\"\\ndemos: [\\n  \\\"iframe/themes/xtend-theme-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Link\\\"\\ntitle: \\\"Link\\\"\\ndescription: \\\"Default link styles for html links, buttons and divs.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/link.css.js](https://github.com/minimit/xtendui/blob/master/src/core/link.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      link: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **link**.\\n\\nYou can use `.link` to style any element as a link.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                     | Mixin                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.link`                 | `link`              | Stile a tag with link            |\\n\\n</div>\\n\\n[[noteDefault]]\\n| Links `a` are automatically styled when they **don't have `[class]`**. To have custom styles use **tailwind classes**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/link/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Variant\\n\\nUse **component utility** `.links-default` and `.links-inverse` on **parent elements** to style **child links**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.links-default`       | `links-default`                | `responsive`                | Default links colors            |\\n| Utility                  | `.links-inverse`       | `links-inverse`                | `responsive`                | Inverse links colors            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/link/variant-inverse\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-1 items-center\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-first-element\\\">\\n    1st element\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-first-target\\\">\\n    1st target\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-autostart\\\">\\n    Autostart\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-autostop\\\">\\n    Autostop\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-add\\\">\\n    Add\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-remove\\\">\\n    Remove\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-block\\\">\\n    Block/Unblock\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-reinit\\\">\\n    Reinit\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-restart\\\">\\n    Restart\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-destroy\\\">\\n    Destroy\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-unmount\\\">\\n    Unmount\\n  </button>\\n</div>\\n\\n<br/>\\n\\n<div id=\\\"demo--toggle-events\\\">\\n\\n  <div class=\\\"list list-2 items-center\\\" id=\\\"demo--toggle-events-elements\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"0\\\">\\n      Toggle Group 0\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"0\\\">\\n      Toggle Group 0\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n      Toggle 1\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n      Toggle 2\\n    </button>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"list list-2 items-center\\\" id=\\\"demo--toggle-events-targets\\\">\\n    <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n      Target Group 0\\n    </div>\\n    <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n      Target Group 0\\n    </div>\\n    <div class=\\\"card toggle ${cardToggle()}\\\">\\n      Target 1\\n    </div>\\n    <div class=\\\"card toggle ${cardToggle()}\\\">\\n      Target 2\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"card ${cardDefault()} mt-6\\\">\\n  <div class=\\\"card-sm overflow-y-auto overflow-x-hidden overflow-sub max-h-56\\\" id=\\\"demo--toggle-events-log\\\">\\n  </div>\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<p>Example <mark>highlight text</mark>.</p>\\n\\n<p>Example <del>deleted text</del>.</p>\\n\\n<p>Example <u>underline text</u>.</p>\\n\\n<p>Example <small>small text</small>.</p>\\n\\n<p>Example <strong>bold text</strong>.</p>\\n\\n<p>Example <em>italic text</em>.</p>\\n\\n<p>Example <code>code text</code>.</p>\\n\\n<p>Example <abbr title=\\\"Lorem Ipsum\\\">abbreviation text</abbr>.</p>\\n\\n<blockquote class=\\\"text-center\\\">\\n  <p class=\\\"h4\\\">\\\"This line rendered as blockquote title.\\\"</p>\\n  <p>This line rendered as blockquote text.</p>\\n  <footer class=\\\"text-sm text-gray-700\\\">—This line rendered as, <cite>blockquote footer</cite></footer>\\n</blockquote>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-toggle>\\n    Toggle\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-toggle>\\n    Toggle\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `border rounded-md text-accent-500 border-gray-400 bg-gray-200`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupDrop = require('components/snippets/themes/markup-drop').default\\nconst markupOverlay = require('components/snippets/themes/markup-overlay').default\\nconst markupGroup = require('components/snippets/themes/markup-group').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Drop\\n</div>\\n${markupDrop()}\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Overlay\\n</div>\\n${markupOverlay()}\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Group\\n</div>\\n${markupGroup()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst badgeDefaultInteractive = require('components/snippets/classes/badge-default-interactive').default\\nconst badgePrimaryInteractive = require('components/snippets/classes/badge-primary-interactive').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-1\\\">\\n\\n  <a role=\\\"button\\\" class=\\\"badge badge-md ${badgeDefaultInteractive()}\\\">\\n    Default\\n  </a>\\n\\n  <a role=\\\"button\\\" class=\\\"badge badge-md ${badgePrimaryInteractive()}\\\">\\n    Primary\\n  </a>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Media\\\"\\ntitle: \\\"Media\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/media.css.js](https://github.com/minimit/xtendui/blob/master/src/core/media.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      media: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **media**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/media/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/media/content).\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\">\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">1</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">2</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">3</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">4</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">5</div>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-inside\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"demo--overlay-animation-js\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    overlay\\n  </button>\\n\\n  <div class=\\\"overlay\\\">\\n    <div class=\\\"overlay-container max-w-3xl\\\">\\n      <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"rounded-t-md\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\" data-xt-drop=\\\"{ targets: '#drop--unique' }\\\">\\n  drop\\n</button>\\n\\n<div class=\\\"drop-container mt-2\\\">\\n\\n  Drop is relative to .drop-container\\n\\n  <div class=\\\"drop\\\" id=\\\"drop--unique\\\">\\n    <div class=\\\"drop-inner\\\">\\n      <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n        <nav class=\\\"list flex-col\\\">\\n          <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n          </a>\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n            Dolor sit\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n            Amet\\n          </button>\\n        </nav>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list flex-col list-2 items-center\\\">\\n\\n  <div>\\n    <div class=\\\"list list-2 items-center\\\">\\n\\n      <div>\\n        <div class=\\\"list flex-col list-2 items-center\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefault()}\\\">\\n            Lorem Ipsum\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Dolor sit\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnDefault()}\\\">\\n            Amet\\n          </button>\\n\\n        </div>\\n      </div>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div class=\\\"list list-2 items-center\\\">\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefault()}\\\">\\n        Lorem Ipsum\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n</nav>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '[data-xt-group-number]',\\n  mount: object => {\\n    // methods\\n\\n    const inputNumberChange = (step, e) => {\\n      // trigger external events and skip internal events\\n      if (!e || !e.detail || !e.detail.skip) {\\n        const input = object.querySelector('input')\\n        let val = parseFloat(input.value)\\n        val = val + step\\n        inputNumberValidate.bind(object)(val)\\n      }\\n    }\\n\\n    const inputNumberValidate = val => {\\n      const input = object.querySelector('input')\\n      const steps = object.querySelectorAll('[data-xt-group-number-step]')\\n      val = isNaN(val) ? 0 : val\\n      // check min and max\\n      const minAttributeAsFloat = parseFloat(input.getAttribute('min'))\\n      const inputMin = isNaN(minAttributeAsFloat) ? 1 : minAttributeAsFloat\\n      const maxAttributeAsFloat = parseFloat(input.getAttribute('max'))\\n      const inputMax = isNaN(maxAttributeAsFloat) ? Infinity : maxAttributeAsFloat\\n      // disabled\\n      for (const step of steps) {\\n        const qty = parseFloat(step.getAttribute('data-xt-group-number-step'))\\n        step.removeAttribute('disabled')\\n        if (val <= inputMin && qty < 0) {\\n          val = inputMin\\n          step.setAttribute('disabled', 'disabled')\\n        }\\n        if (val >= inputMax && qty > 0) {\\n          val = inputMax\\n          step.setAttribute('disabled', 'disabled')\\n        }\\n      }\\n      // set value\\n      input.value = val\\n      // trigger external events and skip internal events\\n      input.dispatchEvent(new CustomEvent('change', { detail: { skip: true } }))\\n    }\\n\\n    // init\\n\\n    inputNumberChange.bind(object, 0)()\\n\\n    // vars\\n\\n    const inputEl = object.querySelector('input')\\n\\n    // steps\\n\\n    const steps = object.querySelectorAll('[data-xt-group-number-step]')\\n\\n    for (const step of steps) {\\n      const qty = parseFloat(step.getAttribute('data-xt-group-number-step'))\\n      let addHandler = Xt.dataStorage.get(step, 'addHandler')\\n      addHandler = addHandler || Xt.dataStorage.set(step, 'addHandler', inputNumberChange.bind(object, qty))\\n      step.removeEventListener('click', addHandler)\\n      step.addEventListener('click', addHandler)\\n    }\\n\\n    // change\\n\\n    let inputHandler = Xt.dataStorage.get(inputEl, 'inputHandler')\\n    inputHandler = inputHandler || Xt.dataStorage.set(inputEl, 'inputHandler', inputNumberChange.bind(object, 0))\\n    inputEl.removeEventListener('change', inputHandler)\\n    inputEl.addEventListener('change', inputHandler)\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Media\\\"\\ntitle: \\\"furniture-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-09\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-listing-v1\\\"\\n]\\n---\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-outside\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import { Xt } from 'xtendui'\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\n\\nXt.mount.push({\\n  matches: '#demo--slider-events',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Slider(object, {\\n      auto: {\\n        time: 2000,\\n        initial: false,\\n      },\\n      align: 'center',\\n      groupMq: { all: 1, '(min-width: 768px)': 0.8 },\\n      drag: { wrap: true },\\n    })\\n\\n    // log\\n\\n    const log = document.querySelector('#demo--slider-events-log')\\n\\n    const logAdd = text => {\\n      log.innerHTML += text + '<br/>'\\n      // scroll\\n      log.scrollTo(0, log.scrollHeight)\\n      // hr\\n      clearTimeout(window.logTimeout)\\n      window.logTimeout = setTimeout(() => {\\n        log.innerHTML += '<hr/>'\\n      }, 1000)\\n    }\\n\\n    // first element\\n\\n    const firstEl = document.querySelector('#demo--slider-events-first-element')\\n\\n    const firstElFnc = () => {\\n      logAdd('<strong>1st element</strong>')\\n      const elements = self.elements.filter(x => !x.classList.contains('xt-wrap'))\\n      elements[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstEl.addEventListener('click', firstElFnc)\\n\\n    // first target\\n\\n    const firstTr = document.querySelector('#demo--slider-events-first-target')\\n\\n    const firstTrFnc = () => {\\n      logAdd('<strong>1st target</strong>')\\n      const targets = self.targets.filter(x => !x.classList.contains('xt-wrap'))\\n      targets[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstTr.addEventListener('click', firstTrFnc)\\n\\n    // autostart\\n\\n    const autostartEl = document.querySelector('#demo--toggle-events-autostart')\\n\\n    const autstartFnc = () => {\\n      logAdd('<strong>autostart</strong>')\\n      self.object.dispatchEvent(new CustomEvent('autostart.trigger.xt'))\\n    }\\n\\n    autostartEl.addEventListener('click', autstartFnc)\\n\\n    // autostop\\n\\n    const autostopEl = document.querySelector('#demo--toggle-events-autostop')\\n\\n    const autostopFnc = () => {\\n      logAdd('<strong>autostop</strong>')\\n      self.object.dispatchEvent(new CustomEvent('autostop.trigger.xt'))\\n    }\\n\\n    autostopEl.addEventListener('click', autostopFnc)\\n\\n    // add\\n\\n    const addBtn = document.querySelector('#demo--slider-events-add')\\n\\n    const addFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>add</strong>')\\n        // targets\\n        const targets = self.targets.filter(x => !x.classList.contains('xt-wrap'))\\n        const indexTr = targets.length + 1\\n        const strTr = `\\n        <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n          <div class=\\\"card ${cardSlide()}\\\">\\n            <div class=\\\"h4\\\">${indexTr}</div>\\n          </div>\\n        </div>\\n        `\\n        document.querySelector('#demo--slider-events-targets').append(Xt.createElement(strTr))\\n        // reinit\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    addBtn.addEventListener('click', addFnc)\\n\\n    // remove\\n\\n    const removeBtn = document.querySelector('#demo--slider-events-remove')\\n\\n    const removeFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>remove</strong>')\\n        // elements\\n        const elements = self.elements.filter(x => !x.classList.contains('xt-wrap'))\\n        elements[elements.length - 1].remove()\\n        // targets\\n        const targets = self.targets.filter(x => !x.classList.contains('xt-wrap'))\\n        targets[targets.length - 1].remove()\\n        // reinit\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    removeBtn.addEventListener('click', removeFnc)\\n\\n    // block\\n\\n    const blockBtn = document.querySelector('#demo--slider-events-block')\\n\\n    const blockFnc = () => {\\n      logAdd('<strong>block/unblock</strong>')\\n      for (const element of self.elements) {\\n        if (element.classList.contains('xt-block')) {\\n          element.classList.remove('xt-block')\\n        } else {\\n          element.classList.add('xt-block')\\n        }\\n      }\\n    }\\n\\n    blockBtn.addEventListener('click', blockFnc)\\n\\n    // reinit\\n\\n    const reinitBtn = document.querySelector('#demo--slider-events-reinit')\\n\\n    const reinitFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    reinitBtn.addEventListener('click', reinitFnc)\\n\\n    // restart\\n\\n    const restartBtn = document.querySelector('#demo--slider-events-restart')\\n\\n    const restartFnc = () => {\\n      logAdd('<strong>restart</strong>')\\n      self.restart()\\n    }\\n\\n    restartBtn.addEventListener('click', restartFnc)\\n\\n    // destroy\\n\\n    const destroyBtn = document.querySelector('#demo--slider-events-destroy')\\n\\n    const destroyFnc = () => {\\n      logAdd('<strong>destroy</strong>')\\n      self.destroy()\\n    }\\n\\n    destroyBtn.addEventListener('click', destroyFnc)\\n\\n    // unmount\\n\\n    const unmountBtn = document.querySelector('#demo--slider-events-unmount')\\n\\n    const unmountFnc = () => {\\n      logAdd('<strong>unmount</strong>')\\n      unmount()\\n    }\\n\\n    unmountBtn.addEventListener('click', unmountFnc)\\n\\n    // events\\n\\n    const events = e => {\\n      let str = 'event <strong>' + e.type + '</strong>' + ' direction <strong>' + self.direction + '</strong>'\\n      if (e.target.getAttribute('title')) {\\n        str += ' from <strong>' + e.target.getAttribute('title') + '</strong>'\\n      } else if (e.target.querySelector(':scope > .btn')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > .btn').textContent + '</strong>'\\n      } else if (e.target.querySelector('.card > *')) {\\n        str += ' from <strong>' + e.target.querySelector('.card > *').textContent + '</strong>'\\n      } else if (e.target.querySelector(':scope > *')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > *').textContent + '</strong>'\\n      } else if (!e.target.querySelector('*')) {\\n        str += ' from <strong>' + e.target.innerHTML + '</strong>'\\n      }\\n      logAdd(str)\\n    }\\n\\n    object.addEventListener('init.xt', events)\\n    object.addEventListener('destroy.xt', events)\\n    document.addEventListener('on.xt', events, true)\\n    document.addEventListener('off.xt', events, true)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      firstEl.removeEventListener('click', firstElFnc)\\n      firstTr.removeEventListener('click', firstTrFnc)\\n      addBtn.removeEventListener('click', addFnc)\\n      removeBtn.removeEventListener('click', removeFnc)\\n      reinitBtn.removeEventListener('click', reinitFnc)\\n      restartBtn.removeEventListener('click', restartFnc)\\n      destroyBtn.removeEventListener('click', destroyFnc)\\n      unmountBtn.removeEventListener('click', unmountFnc)\\n      object.removeEventListener('init.xt', events)\\n      object.removeEventListener('destroy.xt', events)\\n      document.removeEventListener('on.xt', events, true)\\n      document.removeEventListener('off.xt', events, true)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      asset\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"rounded-md\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      asset and text\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"rounded-t-md\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      text\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md rounded-t-md bg-gray-500\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n            <div class=\\\"card-sm pt-0\\\">\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { StaticQuery, graphql } from 'gatsby'\\n\\nimport SEO from 'components/seo'\\nimport Layout from 'components/layout-demo'\\n\\nimport { cssSource, jsSource } from 'assets/scripts/source'\\n\\nclass DemoVanillaIframe extends React.Component {\\n  render() {\\n    const { demo } = this.props\\n    const seo = {}\\n    seo.title = 'Demo'\\n    seo.description = 'Demo'\\n    demo.path = `private/demos/${demo.dirs.join('/')}/${demo.name}`.replace('/iframe', '').replace('src/gatsby/code/', '')\\n    return (\\n      <StaticQuery\\n        query={graphql`\\n          query {\\n            allFile {\\n              files: edges {\\n                file: node {\\n                  relativePath\\n                }\\n              }\\n            }\\n          }\\n        `}\\n        render={data => (\\n          <Layout seo={seo} demo={demo}>\\n            <SEO title={seo.title} description={seo.description} />\\n            <div id=\\\"body-outer\\\">\\n              {\\n                data.allFile.files.filter(x => x.file.relativePath === `${demo.path}.css`).map(() => (demo.cssSource = cssSource(demo))) && <div /> // @FIX react render string\\n              }\\n              {\\n                data.allFile.files.filter(x => x.file.relativePath === `${demo.path}.js`).map(() => (demo.jsSource = jsSource(demo))) && <div /> // @FIX react render string\\n              }\\n              <div id=\\\"gatsby_body-inner\\\" className=\\\"gatsby_demo_source--from\\\" dangerouslySetInnerHTML={{ __html: demo.htmlSource }} />\\n            </div>\\n          </Layout>\\n        )}\\n      />\\n    )\\n  }\\n}\\n\\nexport default DemoVanillaIframe\\n\\nDemoVanillaIframe.propTypes = {\\n  demo: PropTypes.shape({\\n    name: PropTypes.string,\\n    dirs: PropTypes.array.isRequired,\\n    path: PropTypes.string,\\n    htmlSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n    jsxSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n    jsSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n    cssSource: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\\n  }).isRequired,\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Toggle\\\"\\ntitle: \\\"Toggle\\\"\\ndescription: \\\"Toggle is the main js component that toggle classes, it's inherited by many other js components.\\\"\\n---\\n\";","export default \"export default () => {\\n  return `card-sm text-black links-default bg-gray-200`\\n}\\n\";","export default \"const iconX = require('components/snippets/icons').iconX\\n\\nexport default () => {\\n  return `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n      drop\\n    </button>\\n    <div class=\\\"drop drop-default\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"drop-design\\\"></div>\\n        <div class=\\\"drop-content\\\">\\n\\n          <nav class=\\\"list flex-col list-drop\\\">\\n            <button type=\\\"button\\\">\\n              Lorem ipsum dolor\\n            </button>\\n            <button type=\\\"button\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\">\\n              Amet\\n            </button>\\n          </nav>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n      drop card\\n    </button>\\n    <div class=\\\"drop drop-default\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"drop-design\\\"></div>\\n        <div class=\\\"drop-content\\\">\\n\\n          <div class=\\\"card card-drop\\\">\\n            <div class=\\\"card-design\\\"></div>\\n            <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-content\\\">\\n                <div class=\\\"card-item\\\">\\n                  <div class=\\\"h4\\\">Primary</div>\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                  <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">\\n                    Button\\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n}\\n\";","export default \"export default () => {\\n  return `card-md text-center text-black links-default rounded-md bg-gray-200`\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div data-xt-sticky=\\\"{ sticky: 'fixed' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"list list-2\\\">\\n      <a href=\\\"#anchor-0\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        anchor 0\\n      </a>\\n      <a href=\\\"#anchor-1\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        anchor 1\\n      </a>\\n      <a href=\\\"#anchor-2\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        anchor 2\\n      </a>\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-overlay=\\\"{ targets: '#demo--overlay-scroll-to-anchor' }\\\">\\n        anchors within overlay\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"overlay overlay-screen\\\" id=\\\"demo--overlay-scroll-to-anchor\\\">\\n  <div class=\\\"overlay-container p-0\\\">\\n    <div class=\\\"overlay-inner\\\">\\n\\n      <div class=\\\"card items-center justify-center\\\">\\n        <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n          ${iconX()}\\n        </div>\\n        <div class=\\\"max-w-3xl\\\">\\n\\n          <div class=\\\"card ${cardStickyDefault()}\\\" id=\\\"anchor-overlay-0\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n            <div class=\\\"list list-2\\\">\\n              <a href=\\\"#anchor-overlay-0\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 0\\n              </a>\\n              <a href=\\\"#anchor-overlay-1\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 1\\n              </a>\\n              <a href=\\\"#anchor-overlay-2\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 2\\n              </a>\\n            </div>\\n          </div>\\n\\n          <br/><br/><br/><br/><br/><br/><br/>\\n          <br/><br/><br/><br/><br/><br/><br/>\\n          <br/><br/><br/><br/><br/><br/><br/>\\n\\n          <div class=\\\"card ${cardStickyDefault()}\\\" id=\\\"anchor-overlay-1\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n            <div class=\\\"list list-2\\\">\\n              <a href=\\\"#anchor-overlay-0\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 0\\n              </a>\\n              <a href=\\\"#anchor-overlay-1\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 1\\n              </a>\\n              <a href=\\\"#anchor-overlay-2\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 2\\n              </a>\\n            </div>\\n          </div>\\n\\n          <br/><br/><br/><br/><br/><br/><br/>\\n          <br/><br/><br/><br/><br/><br/><br/>\\n          <br/><br/><br/><br/><br/><br/><br/>\\n\\n          <div class=\\\"card ${cardStickyDefault()}\\\" id=\\\"anchor-overlay-2\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n            <div class=\\\"list list-2\\\">\\n              <a href=\\\"#anchor-overlay-0\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 0\\n              </a>\\n              <a href=\\\"#anchor-overlay-1\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 1\\n              </a>\\n              <a href=\\\"#anchor-overlay-2\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n                anchor overlay 2\\n              </a>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"card ${cardStickyDefault()}\\\" id=\\\"anchor-0\\\">\\n    <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n    <div class=\\\"list list-2\\\">\\n      <a href=\\\"#anchor-0\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 0\\n      </a>\\n      <a href=\\\"#anchor-1\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 1\\n      </a>\\n      <a href=\\\"#anchor-2\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 2\\n      </a>\\n    </div>\\n  </div>\\n\\n  <br/><br/><br/><br/><br/><br/><br/>\\n  <br/><br/><br/><br/><br/><br/><br/>\\n  <br/><br/><br/><br/><br/><br/><br/>\\n\\n  <div class=\\\"card ${cardStickyDefault()}\\\" id=\\\"anchor-1\\\">\\n    <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n    <div class=\\\"list list-2\\\">\\n      <a href=\\\"#anchor-0\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 0\\n      </a>\\n      <a href=\\\"#anchor-1\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 1\\n      </a>\\n      <a href=\\\"#anchor-2\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 2\\n      </a>\\n    </div>\\n  </div>\\n\\n  <br/><br/><br/><br/><br/><br/><br/>\\n  <br/><br/><br/><br/><br/><br/><br/>\\n  <br/><br/><br/><br/><br/><br/><br/>\\n\\n  <div class=\\\"card ${cardStickyDefault()}\\\" id=\\\"anchor-2\\\">\\n    <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n    <div class=\\\"list list-2\\\">\\n      <a href=\\\"#anchor-0\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 0\\n      </a>\\n      <a href=\\\"#anchor-1\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 1\\n      </a>\\n      <a href=\\\"#anchor-2\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        anchor 2\\n      </a>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"Drop\\\"\\ndescription: \\\"Highly customizable dropdowns that can contain anything you want.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Lorem ipsum\\n        <div class=\\\"ml-4\\\">\\n          <div class=\\\"list list-2 items-center\\\">\\n            <a href=\\\"#\\\" class=\\\"btn\\\">\\n              btn\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"btn link\\\">\\n              link\\n            </a>\\n          </div>\\n        </div>\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Dolor sit amet\\n        <div class=\\\"ml-auto\\\">\\n          <div class=\\\"list list-2 items-center\\\">\\n            <a href=\\\"#\\\" class=\\\"btn\\\">\\n              btn\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"btn link\\\">\\n              link\\n            </a>\\n          </div>\\n        </div>\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-2/12 md:self-center\\\">\\n          <label class=\\\"form-label flex-col ${labelDefault()}\\\">\\n            Lorem ipsum\\n            <div class=\\\"mt-2\\\">\\n              <div class=\\\"list list-2 items-center\\\">\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  btn\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"btn link\\\">\\n                  link\\n                </a>\\n              </div>\\n            </div>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-2/12 md:self-center\\\">\\n          <label class=\\\"form-label flex-col ${labelDefault()}\\\">\\n            Dolor sit amet\\n            <div class=\\\"mt-auto\\\">\\n              <div class=\\\"list list-2 items-center\\\">\\n                <a href=\\\"#\\\" class=\\\"btn\\\">\\n                  btn\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"btn link\\\">\\n                  link\\n                </a>\\n              </div>\\n            </div>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"Slider\\\"\\ndescription: \\\"Customizable sliders with custom animation and interaction.\\\"\\n---\\n\";","export default \"import { Xt } from 'xtendui'\\n\\n/**\\n * ScrollToAnchor\\n */\\nclass ScrollToAnchor {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    self.componentNamespace = self.componentName.replace(/^[^a-z]+|[ ,#_:.-]+/gi, '')\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // options\\n    self.options = Xt.merge([self.constructor.optionsDefault, self.optionsCustom])\\n    // class\\n    self.classes = self.options.class ? [...self.options.class.split(' ')] : []\\n    // click\\n    self.object.addEventListener('click', self.eventChange.bind(self).bind(self, false, null))\\n    // hash\\n    addEventListener('hashchange', self.eventChange.bind(self).bind(self, true, null))\\n    // scroll\\n    for (const scrollElement of self.options.scrollElements) {\\n      if (scrollElement) {\\n        if (scrollElement === document.scrollingElement) {\\n          addEventListener('scroll', self.eventScrollHandler.bind(self).bind(self, scrollElement))\\n        } else {\\n          scrollElement.addEventListener('scroll', self.eventScrollHandler.bind(self).bind(self, scrollElement))\\n        }\\n        scrollElement.addEventListener('scroll.trigger.xt.scrolltoanchor', self.eventScrollHandler.bind(self).bind(self, scrollElement))\\n        // initial\\n        requestAnimationFrame(() => {\\n          self.scrollElementCurrent = scrollElement\\n          self.eventScrollHandler(scrollElement)\\n          self.eventStart()\\n        })\\n      }\\n    }\\n    // initialized class\\n    self.object.classList.add(self.componentName)\\n    // @FIX raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt.scrolltoanchor'))\\n    })\\n  }\\n\\n  //\\n  // methods\\n  //\\n\\n  /**\\n   * start trigger current location hash\\n   */\\n  eventStart() {\\n    const self = this\\n    const options = self.options\\n    // hash trigger\\n    const hash = location.hash\\n    if (hash) {\\n      const el = self.object.querySelector(options.elements.replace('#', hash))\\n      if (el) {\\n        self.eventChange(false, el)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * change\\n   * @param {Boolean} hashchange\\n   * @param {Node|HTMLElement|EventTarget|Window} el Change element\\n   * @param {Event} e\\n   */\\n  eventChange(hashchange = false, el = null, e = null) {\\n    const self = this\\n    const options = self.options\\n    // reset self.target\\n    self.target = null\\n    // hashchange\\n    if (hashchange) {\\n      const hash = location.hash\\n      el = self.object.querySelector(options.elements.replace('#', hash))\\n    }\\n    // useCapture delegation\\n    el = el ? el : e.target\\n    // not null and HTML element and not window\\n    if (el && el.nodeName && el !== window) {\\n      el = el.closest(options.elements)\\n      if (el && el.matches(options.elements)) {\\n        // event\\n        const loc = new URL(el.getAttribute('href'), location)\\n        if (loc.hash && loc.pathname === location.pathname) {\\n          if (!hashchange || location.hash === el.hash) {\\n            const hash = hashchange ? loc.hash : el.hash.toString()\\n            self.target = self.object.querySelector(hash)\\n            if (self.target && Xt.visible(self.target)) {\\n              // prevent page hash\\n              if (e) {\\n                e.preventDefault()\\n              }\\n              // current scrollElement\\n              for (const scrollElement of options.scrollElements) {\\n                if (scrollElement) {\\n                  if (scrollElement.contains(self.target)) {\\n                    self.scrollElementCurrent = scrollElement\\n                  }\\n                }\\n              }\\n              // els\\n              let els = Array.from(self.scrollElementCurrent.querySelectorAll(options.elements))\\n              // class\\n              for (const other of els) {\\n                other.classList.remove(...self.classes)\\n              }\\n              el.classList.add(...self.classes)\\n              // no location.hash or page scrolls\\n              if (location.hash !== el.hash) {\\n                history.pushState({}, '', loc.hash)\\n              }\\n              // vars\\n              self.scrollSpace = options.scrollSpace(self, self.scrollElementCurrent)\\n              self.scrollDistance = options.scrollDistance(self, self.scrollElementCurrent)\\n              self.position = options.position(self, self.scrollElementCurrent)\\n              // listener dispatch\\n              self.object.dispatchEvent(new CustomEvent('change.xt.scrolltoanchor'))\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * scroll handler\\n   * @param {Node|HTMLElement|EventTarget|Window} scrollElement Scroll element\\n   */\\n  eventScrollHandler(scrollElement) {\\n    const self = this\\n    const options = self.options\\n    // timeout\\n    clearTimeout(Xt.dataStorage.get(scrollElement, self.componentNamespace + 'ScrollTimeout'))\\n    Xt.dataStorage.set(\\n      scrollElement,\\n      self.componentNamespace + 'ScrollTimeout',\\n      setTimeout(() => {\\n        // handler\\n        self.eventScroll(scrollElement)\\n      }, options.scrollDelay)\\n    )\\n  }\\n\\n  /**\\n   * scroll\\n   */\\n  eventScroll(scrollElement) {\\n    const self = this\\n    const options = self.options\\n    // reset self.target\\n    self.target = null\\n    // scroll\\n    let found = false\\n    let scrollTop = scrollElement.scrollTop\\n    // fake scroll position if on bottom of the page\\n    const scrollMax = scrollElement.scrollHeight\\n    if (scrollTop + scrollElement.clientHeight >= scrollMax) {\\n      scrollTop = scrollMax\\n    }\\n    // els\\n    let els = Array.from(scrollElement.querySelectorAll(options.elements))\\n    els = els.filter(x => !x.closest('.xt-ignore')) // filter out ignore\\n    // filter out other scrollElement\\n    let elsFiltered = els\\n    for (const scrollElementOther of options.scrollElements.filter(x => x !== scrollElement)) {\\n      if (scrollElementOther) {\\n        for (const el of els) {\\n          if (scrollElementOther.contains(el)) {\\n            elsFiltered = elsFiltered.filter(x => x !== el) // filter out ignore\\n          }\\n        }\\n      }\\n    }\\n    els = elsFiltered.length > 0 ? elsFiltered : els\\n    // loop\\n    for (const el of els) {\\n      // event\\n      const loc = new URL(el.getAttribute('href'), location)\\n      if (loc.hash) {\\n        self.target = document.querySelector(loc.hash)\\n        if (self.target && Xt.visible(self.target)) {\\n          // current scrollElement\\n          for (const scrollElement of options.scrollElements) {\\n            if (scrollElement) {\\n              if (scrollElement.contains(self.target)) {\\n                self.scrollElementCurrent = scrollElement\\n              }\\n            }\\n          }\\n          // vars\\n          self.scrollSpace = options.scrollSpace(self, self.scrollElementCurrent)\\n          self.scrollDistance = options.scrollDistance(self, self.scrollElementCurrent)\\n          self.position = options.position(self, self.scrollElementCurrent)\\n          // check if activating\\n          if (scrollTop >= Math.floor(self.position - self.scrollSpace - self.scrollDistance)) {\\n            // loop multiple els of\\n            const matches = options.matches.replace('{hash}', loc.hash)\\n            const currents = els.filter(x => x.matches(matches))\\n            found = !!currents.length\\n            // reset others\\n            for (const other of els.filter(x => !currents.includes(x))) {\\n              other.classList.remove(...self.classes)\\n            }\\n            // class\\n            for (const current of currents) {\\n              if (!current.classList.contains('active')) {\\n                current.classList.add(...self.classes)\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n    // reset others when not found elements and found target\\n    if (!found && self.target) {\\n      for (const other of els) {\\n        other.classList.remove(...self.classes)\\n      }\\n    }\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * destroy\\n   */\\n  destroy() {\\n    const self = this\\n    const options = self.options\\n    // remove events\\n    self.object.removeEventListener('click', self.eventChange.bind(self, false, null))\\n    removeEventListener('hashchange', self.eventChange.bind(self).bind(self, true, null))\\n    for (const scrollElement of options.scrollElements) {\\n      if (scrollElement === document.scrollingElement) {\\n        removeEventListener('scroll', self.eventScrollHandler.bind(self).bind(self, scrollElement))\\n      } else {\\n        scrollElement.removeEventListener('scroll', self.eventScrollHandler.bind(self).bind(self, scrollElement))\\n      }\\n    }\\n    // initialized class\\n    self.object.classList.remove(self.componentName)\\n    // set self\\n    Xt.remove(self.componentName, self.object)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('destroy.xt.scrolltoanchor'))\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nScrollToAnchor.componentName = 'xt-scroll-to-anchor'\\nScrollToAnchor.optionsDefault = {\\n  // elements\\n  elements: '[href*=\\\"#\\\"]:not([aria-controls])', // filter out toggle components toggles with :not([aria-controls])\\n  matches: '[href$=\\\"{hash}\\\"]:not([aria-controls])', // filter out toggle components toggles with :not([aria-controls])\\n  scrollElements: [document.scrollingElement],\\n  // class\\n  class: 'active',\\n  // event\\n  scrollDelay: 75,\\n  // scroll\\n  position: (self, scrollingElement) => {\\n    const rect = self.target.getBoundingClientRect()\\n    let position = rect.top + scrollingElement.scrollTop\\n    if (scrollingElement !== document.scrollingElement) {\\n      const rectScrollingElement = scrollingElement.getBoundingClientRect()\\n      position = position - rectScrollingElement.top\\n    }\\n    return position\\n  },\\n  scrollDistance: () => {\\n    return 0\\n  },\\n  scrollSpace: () => {\\n    return 0\\n  },\\n}\\n\\n//\\n// export\\n//\\n\\nXt.ScrollToAnchor = ScrollToAnchor\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlayScreen = require('components/snippets/classes/card-default-overlay-screen').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center demo--overlay-class-html\\\">\\n\\n  <div data-xt-overlay=\\\"{ classHtml: 'demo--overlay-class-html-left' }\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container w-80 ml-0 mr-auto\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay=\\\"{ classHtml: 'demo--overlay-class-html-right' }\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      right\\n    </button>\\n\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container w-80 ml-auto mr-0\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<figure>\\n  <img src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\">\\n  <figcaption>\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur. Maecenas pulvinar mauris eget pharetra elementum.\\n  </figcaption>\\n</figure>\\n\\n<figure>\\n  <video class=\\\"media\\\" poster=\\\"/placeholder-1080.jpg\\\" muted loop playsinline controls>\\n    <source type=\\\"video/mp4\\\" src=\\\"/placeholder-1080.mp4\\\" />\\n  </video>\\n</figure>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      small max-w-xl\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-lg\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-sm\\\">\\n              <div class=\\\"h5\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      medium max-w-3xl\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-md\\\">\\n              <div class=\\\"h4\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      large max-w-5xl\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-5xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-lg\\\">\\n              <div class=\\\"h3\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      large full\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"card-lg\\\">\\n              <div class=\\\"h2\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div data-xt-overlay>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      custom\\n    </button>\\n\\n    <div class=\\\"overlay\\\">\\n      <div class=\\\"overlay-container max-w-3xl\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"p-8 text-sm\\\">\\n              <div class=\\\"h5\\\">Lorem ipsum</div>\\n              <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n              <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-infinite\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-4\\\">\\n\\n  <div class=\\\"w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-8/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-auto flex-1\\\">\\n    <div class=\\\"w-full py-3 px-4 text-sm bg-gray-500\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Form\\\"\\ntitle: \\\"Layout\\\"\\ndate: \\\"2030-03-03\\\"\\n---\\n\\n## Row\\n\\nUse **component classes** to assign [row spacing](/components/core/row/content#space).\\n\\nUse **tailwind classes** to assign column size (e.g. [width](https://tailwindcss.com/docs/width)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/mode-row\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Inline Row\\n\\nInline Row mode with `w-auto`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/mode-inline-row\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Horizontal\\n\\nUse **component classes** to assign [row spacing](/components/core/row/content#space) and column [width](https://tailwindcss.com/docs/width).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/mode-horizontal\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Inline Horizontal\\n\\nInline Horizontal mode with `w-auto`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/mode-inline-horizontal\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"overlay active-overlay\\\" id=\\\"overlay--standalone\\\" data-xt-overlay=\\\"{ on: false, instant: false }\\\">\\n  <div class=\\\"overlay-container max-w-5xl\\\">\\n    <div class=\\\"overlay-inner\\\">\\n\\n      <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n        <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n          ${iconX()}\\n        </div>\\n        <div class=\\\"card-lg\\\">\\n          <div class=\\\"h3\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import { Xt } from 'xtendui'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--loader-js-spinner',\\n  mount: object => {\\n    // vars\\n\\n    const spinnerTime = Xt.vars.timeBig\\n    const spinnerEase = 'linear'\\n\\n    // init\\n\\n    const loaderTimeout = () => {\\n      const spinner = object.querySelectorAll('.spinner svg:nth-child(1) circle')\\n      object.dataset.loaderActive = object.dataset.loaderActive === 'true' ? 'false' : 'true'\\n      if (object.dataset.loaderActive === 'true') {\\n        Xt.animOn(object)\\n        gsap.set(spinner, { strokeDashoffset: 628 })\\n        gsap.to(spinner, { strokeDashoffset: 0, duration: spinnerTime, ease: spinnerEase, autoRound: false })\\n        setTimeout(loaderTimeout, spinnerTime)\\n      } else {\\n        Xt.animOff(object)\\n        Xt.animTimeout(object, loaderTimeout)\\n      }\\n    }\\n\\n    loaderTimeout()\\n  },\\n})\\n\";","export default \"import { Xt } from 'xtendui'\\nimport JSON5 from 'json5'\\n\\n/**\\n * PropagateInteraction\\n */\\nclass PropagateInteraction {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // options\\n    self.options = Xt.merge([self.constructor.optionsDefault, self.optionsCustom])\\n    // targets\\n    self.targets = self.object.querySelectorAll(self.options.targets)\\n    // events\\n    if (self.targets.length) {\\n      self.object.addEventListener('mouseenter', self.hoverOn.bind(self))\\n      self.object.addEventListener('mouseleave', self.hoverOff.bind(self))\\n      self.object.addEventListener('mousedown', self.activeOn.bind(self))\\n      addEventListener('mouseup', self.activeOff.bind(self).bind(self, false))\\n      self.object.addEventListener('click', self.activeOff.bind(self).bind(self, true))\\n    }\\n    // initialized class\\n    self.object.classList.add(self.componentName)\\n    // @FIX raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt.propagateinteraction'))\\n    })\\n  }\\n\\n  //\\n  // methods\\n  //\\n\\n  /**\\n   * hoverOn\\n   */\\n  hoverOn() {\\n    const self = this\\n    for (const tr of self.targets) {\\n      tr.classList.add('hover')\\n      tr.dispatchEvent(new Event('mouseenter'))\\n    }\\n  }\\n\\n  /**\\n   * hoverOff\\n   */\\n  hoverOff() {\\n    const self = this\\n    for (const tr of self.targets) {\\n      tr.classList.remove('hover')\\n      tr.dispatchEvent(new Event('mouseleave'))\\n    }\\n  }\\n\\n  /**\\n   * activeOn\\n   */\\n  activeOn() {\\n    const self = this\\n    for (const tr of self.targets) {\\n      tr.classList.add('active')\\n      tr.dispatchEvent(new Event('mousedown'))\\n    }\\n  }\\n\\n  /**\\n   * activeOff\\n   */\\n  activeOff(isClick) {\\n    const self = this\\n    for (const tr of self.targets) {\\n      if (isClick) {\\n        tr.dispatchEvent(new Event('click'))\\n      } else {\\n        tr.classList.remove('active')\\n        tr.dispatchEvent(new Event('mouseup'))\\n      }\\n    }\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * destroy\\n   */\\n  destroy() {\\n    const self = this\\n    // remove events\\n    self.object.removeEventListener('mouseenter', self.hoverOn.bind(self))\\n    self.object.removeEventListener('mouseleave', self.hoverOff.bind(self))\\n    self.object.removeEventListener('mousedown', self.activeOn.bind(self))\\n    removeEventListener('mouseup', self.activeOff.bind(self))\\n    // initialized class\\n    self.object.classList.remove(self.componentName)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('destroy.xt.propagateinteraction'))\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nPropagateInteraction.componentName = 'xt-propagate-interaction'\\nPropagateInteraction.optionsDefault = {}\\n\\n//\\n// export\\n//\\n\\nXt.PropagateInteraction = PropagateInteraction\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.PropagateInteraction.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.PropagateInteraction.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.PropagateInteraction(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"const plugin = require('tailwindcss/plugin')\\nconst merge = require('lodash/merge')\\nconst castArray = require('lodash/castArray')\\n\\nmodule.exports = plugin.withOptions(() => {\\n  return function ({ addComponents, addUtilities, addVariant, e, theme }) {\\n    const componentsBase = require('./tailwind-xtend.js') || {}\\n    const componentsCustom = theme(`xtendui`, {}) || {}\\n\\n    /**\\n     * components\\n     */\\n\\n    for (const component of Object.keys(componentsBase)) {\\n      const componentBase = componentsBase[component] || {}\\n      const componentCustom = componentsCustom[component] || {}\\n      if (componentCustom !== false && componentCustom.component !== false) {\\n        const base = typeof componentBase.component === 'function' ? componentBase.component(theme) : componentBase.component\\n        const custom = typeof componentCustom.component === 'function' ? componentCustom.component(theme) : componentCustom.component\\n        const css = merge(...castArray(base || {}), custom || {})\\n        addComponents(css)\\n      }\\n    }\\n\\n    /**\\n     * utilities\\n     */\\n\\n    for (const component of Object.keys(componentsBase)) {\\n      const componentBase = componentsBase[component] || {}\\n      const componentCustom = componentsCustom[component] || {}\\n      if (componentCustom !== false && componentCustom.utility !== false) {\\n        const base = typeof componentBase.utility === 'function' ? componentBase.utility(theme) : componentBase.utility\\n        const custom = typeof componentCustom.utility === 'function' ? componentCustom.utility(theme) : componentCustom.utility\\n        const variants = merge(componentBase.variant || [], componentCustom.variant || [])\\n        const options = merge(...castArray(base || {}), custom || {})\\n        const utilities = Object.keys(options)\\n        for (const utility of utilities) {\\n          if (componentsCustom[utility] !== false) {\\n            if (component === 'list' && utility === 'space') {\\n              let css = {}\\n              Object.keys(options[utility]).forEach(name => {\\n                let value = options[utility][name]\\n                css[`.list-${e(name)}`] = {\\n                  margin: `-${value}`,\\n                  '> *': {\\n                    margin: `${value}`,\\n                  },\\n                }\\n                css[`.list-x-${e(name)}`] = {\\n                  marginLeft: `-${value}`,\\n                  marginRight: `-${value}`,\\n                  '> *': {\\n                    marginLeft: `${value}`,\\n                    marginRight: `${value}`,\\n                  },\\n                }\\n                css[`.list-y-${e(name)}`] = {\\n                  marginTop: `-${value}`,\\n                  marginBottom: `-${value}`,\\n                  '> *': {\\n                    marginTop: `${value}`,\\n                    marginBottom: `${value}`,\\n                  },\\n                }\\n              })\\n              addUtilities(css, variants)\\n            } else if (component === 'row' && utility === 'space') {\\n              let css = {}\\n              Object.keys(options[utility]).forEach(name => {\\n                let value = options[utility][name]\\n                css[`.row-${e(name)}`] = {\\n                  margin: `-${value}`,\\n                  '> *': {\\n                    padding: `${value}`,\\n                  },\\n                }\\n                css[`.row-x-${e(name)}`] = {\\n                  marginLeft: `-${value}`,\\n                  marginRight: `-${value}`,\\n                  '> *': {\\n                    paddingLeft: `${value}`,\\n                    paddingRight: `${value}`,\\n                  },\\n                }\\n                css[`.row-y-${e(name)}`] = {\\n                  marginTop: `-${value}`,\\n                  marginBottom: `-${value}`,\\n                  '> *': {\\n                    paddingTop: `${value}`,\\n                    paddingBottom: `${value}`,\\n                  },\\n                }\\n              })\\n              addUtilities(css, variants)\\n            } else {\\n              let css = {}\\n              css[utility] = options[utility]\\n              addUtilities(css, variants)\\n            }\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n     * variant\\n     */\\n\\n    addVariant('active', ({ modifySelectors, separator }) => {\\n      modifySelectors(({ className }) => {\\n        return `.${e(`active${separator}${className}`)}:active,.${e(`active${separator}${className}`)}.active`\\n      })\\n    })\\n  }\\n})\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"Slider\\\"\\ndescription: \\\"Customizable sliders with custom animation and interaction.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center demo--toggle-animation-js\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\n\\nimport { populateDemo, demoHash } from 'assets/scripts/demo'\\n\\nclass Demo extends React.Component {\\n  constructor() {\\n    super()\\n    this.demoRef = React.createRef()\\n  }\\n\\n  componentDidMount() {\\n    const container = this.demoRef.current\\n    // fix demo index when changing page\\n    let index = parseFloat(document.documentElement.getAttribute('data-demo-index') || 0)\\n    populateDemo(container, index)\\n    index++\\n    document.documentElement.setAttribute('data-demo-index', index.toString())\\n    // @FIX demo fullscreen\\n    for (const btnOpenFull of container.querySelectorAll('.btn-open-full')) {\\n      if (btnOpenFull.classList.contains('active')) {\\n        demoHash(null, true)\\n        break\\n      }\\n    }\\n  }\\n\\n  render() {\\n    const { children } = this.props\\n    return (\\n      <div className=\\\"gatsby_demo\\\" ref={this.demoRef}>\\n        {children}\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default Demo\\n\\nDemo.propTypes = {\\n  children: PropTypes.node.isRequired,\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"fashion-gallery-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-10\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-gallery-v1\\\"\\n]\\n---\\n\";","export default \".demo--toggle-custom-class {\\n  color: red !important;\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-block\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()} demo--scroll-block--btn\\\">\\n      Click to block/unblock and fade out/in\\n    </button>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      small\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-64 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-lg\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"card-sm\\\">\\n            <div class=\\\"h5\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      medium\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-80 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      large\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-96 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"card-lg\\\">\\n            <div class=\\\"h3\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      custom\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-96 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"p-8 text-sm\\\">\\n            <div class=\\\"h5\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst spinner = require('components/snippets/spinner').default\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <div class=\\\"loader\\\">\\n      <div class=\\\"spinner spinner-animated text-accent-500\\\">\\n        ${spinner({})}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader\\\">\\n      <span class=\\\"spinner spinner-animated text-accent-500\\\">\\n          ${spinner({})}\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst iconPackage = require('components/snippets/icons').iconPackage\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"card ${cardDefault()}\\\">\\n  <div class=\\\"card-md\\\">\\n    <div class=\\\"list list-3 flex-no-wrap items-baseline\\\">\\n      <div>\\n        ${iconPackage({ classes: 'icon-lg text-2xl' })}\\n      </div>\\n      <div>\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-1\\\">\\n\\n  <div class=\\\"w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-8/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-auto flex-1\\\">\\n    <div class=\\\"w-full py-3 px-4 text-sm bg-gray-500\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"Position\\\"\\ndate: \\\"2009-10-10\\\"\\n---\\n\\n## Align\\n\\nAlign the slides.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `align:String`                          | `'left'`        | Alignment 'left' or 'center' or 'right'           |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/align-left\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/slider/align-center\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/slider/align-right\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Contain\\n\\nContain the slides.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `contain:Boolean`                          | `false`        | If true contain the slides on available width            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/contain-center\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/slider/contain-left\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/slider/contain-right\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nWith `groupMq: { MediaQuery: Number }` you set a decimal number from 0 to 1 to group the slides with a factor of the available `drag.dragger` width.\\n\\n`MediaQuery` is a media query, you can have multiple, for example `groupMq: { all: 1, '(min-width: 768px)': 0.8 }`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `groupMq:Object`                          | `false`        | Set automatic grouping based on available width from 0 to 1            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/group-responsive\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Wrap\\n\\nYou can wrap the slides with `drag: { wrap: true }`. With `drag.wrap` you have to set `loop: true` and you can't use `contain: true`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `drag.wrap:Boolean|Number`                          | `false`        | Wrap slides on start and end             |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/wrap\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/slider/wrap-left\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/slider/wrap-right\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Other\\n\\nIf you have slides of different height you can set `autoHeight: '.slides'` to have the slides element resize automatically on activation.\\n\\nIf you want to keep the first element height on the slide use `keepHeight: '.slides'`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `autoHeight:Query`                          | `false`        | Elements to automaticaly height (ex: `.slides`)            |\\n| Option                  | `keepHeight:Query`                          | `false`        | Elements to keep height of the first slide (ex: `.slides`)            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/other\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop=\\\"{ backdrop: true }\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      backdrop\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop=\\\"{ on: 'mouseenter', off: 'mouseleave', backdrop: true }\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      backdrop mouse\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list flex-col list-2\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem Ipsum\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Dolor sit\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Amet\\n  </button>\\n\\n</nav>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"furniture-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-09\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-listing-v1\\\"\\n]\\n---\\n\";","export default \"import 'core-js'\\nimport { Xt } from 'xtendui'\\nimport 'xtendui/build/xtend-core'\\nimport 'xtendui/build/xtend-addons'\\nimport 'xtendui/build/xtend-demos'\\nconst iconLink = require('components/snippets/icons').iconLink\\n\\n/**\\n * gsap setup\\n */\\n\\nimport gsap from 'gsap'\\nimport { ScrollToPlugin } from 'gsap/ScrollToPlugin'\\n\\ngsap.defaults({\\n  overwrite: 'auto',\\n})\\n\\ngsap.config({\\n  force3D: false,\\n})\\n\\ngsap.globalTimeline.timeScale(1000) // milliseconds instead of seconds\\n\\ngsap.registerPlugin(ScrollToPlugin)\\n\\n/**\\n * Xt.vars\\n */\\n\\nXt.vars = {\\n  timeMicro: 50,\\n  timeMini: 100,\\n  timeTiny: 250,\\n  timeSmall: 500,\\n  timeMedium: 750,\\n  timeLarge: 1000,\\n  timeBig: 1500,\\n  timeGiant: 2000,\\n  timeHuge: 3000,\\n}\\n\\n// instant animations accessibility\\n\\nif (typeof window !== 'undefined' && window.matchMedia('(prefers-reduced-motion: reduce), (update: slow)').matches) {\\n  Xt.vars.timeMicro = 0\\n  Xt.vars.timeMini = 0\\n  Xt.vars.timeTiny = 0\\n  Xt.vars.timeSmall = 0\\n  Xt.vars.timeMedium = 0\\n  Xt.vars.timeLarge = 0\\n  Xt.vars.timeBig = 0\\n  Xt.vars.timeGiant = 0\\n  Xt.vars.timeHuge = 0\\n}\\n\\n/**\\n * favicon\\n */\\n\\nconst changeMq = () => {\\n  const colorSchemeMq = window.matchMedia('(prefers-color-scheme: dark)')\\n  const favicon = document.querySelector('link[rel=\\\"icon\\\"]')\\n  if (favicon) {\\n    favicon.remove()\\n  }\\n  if (colorSchemeMq.matches) {\\n    const icon = Xt.createElement('<link rel=\\\"icon\\\" href=\\\"/favicon-dark.png\\\">')\\n    document.head.append(icon)\\n  } else {\\n    const icon = Xt.createElement('<link rel=\\\"icon\\\" href=\\\"/favicon.png\\\">')\\n    document.head.append(icon)\\n  }\\n}\\n\\nif (typeof window !== 'undefined') {\\n  changeMq()\\n}\\n\\n/**\\n * #gatsby_open-full-trigger\\n */\\n\\nXt.mount.push({\\n  matches: '#gatsby_open-full-trigger',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      targets: '#gatsby_open-full',\\n      closeInside: ':scope > .btn-close',\\n      closeAuto: true, // needed for onPreRouteUpdate gatsby-browser.js\\n      scrollbar: true,\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\\n/**\\n * xt-scroll-to-anchor\\n */\\n\\nXt.mount.push({\\n  matches: '.gatsby_site_article',\\n  mount: object => {\\n    // vars\\n\\n    object = object.closest('body')\\n\\n    // init\\n\\n    let self = new Xt.ScrollToAnchor(object, {\\n      scrollDistance: () => {\\n        return window.innerHeight / 10\\n      },\\n      scrollSpace: () => {\\n        return 0\\n      },\\n    })\\n\\n    // change\\n\\n    const eventChange = () => {\\n      // val\\n      const scrollingElement = self.scrollElementCurrent\\n      let pos = self.position - self.scrollSpace - self.scrollDistance\\n      const min = 0\\n      const max = scrollingElement.scrollHeight - scrollingElement.offsetHeight\\n      pos = pos < min ? min : pos\\n      pos = pos > max ? max : pos\\n      // scroll\\n      gsap.to(scrollingElement, { scrollTo: pos, duration: Xt.vars.timeLarge, ease: 'quart.inOut' })\\n    }\\n\\n    self.object.addEventListener('change.xt.scrolltoanchor', eventChange)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.object.removeEventListener('change.xt.scrolltoanchor', eventChange)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\\n/**\\n * xt-scroll\\n\\nXt.mount.push({\\n  matches: '.gatsby_site_article_hero_content_inner',\\n  mount: (object) => {\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      sticky: 'fixed',\\n      end: 75,\\n    })\\n\\n    // change\\n\\n    const eventChange = (e) => {\\n      const element = e.target\\n      gsap.set(element, { transformOrigin: 'left top' })\\n      gsap.set(element, { opacity: self.detail.ratioInverse, scale: 0.9 + 0.1 * self.detail.ratioInverse })\\n    }\\n\\n    for (const el of self.elements) {\\n      el.addEventListener('change.xt', eventChange)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n*/\\n\\n//\\n// makeDocument\\n//\\n\\nconst makeDocument = () => {\\n  // .gatsby_make-line\\n  for (const el of document.querySelectorAll('.gatsby_site_article_content_inner > * > h2, .gatsby_site_article_content_inner > * > h4')) {\\n    el.classList.add('gatsby_make-line')\\n  }\\n  for (const el of document.querySelectorAll('.gatsby_make-line')) {\\n    el.innerHTML = '<span class=\\\"gatsby_make-line_line\\\">' + el.innerHTML + '</span>'\\n    el.innerHTML = '<span class=\\\"gatsby_make-line_container\\\">' + el.innerHTML + '</span>'\\n  }\\n  // .gatsby_make-anchor\\n  for (const el of document.querySelectorAll('.gatsby_site_article_content_inner > * > h2, .gatsby_site_article_content_inner > * > h4')) {\\n    el.classList.add('gatsby_make-line')\\n    // previous h2 if h4\\n    let prevElement\\n    if (el.tagName === 'H4') {\\n      prevElement = el\\n      while (prevElement.previousElementSibling) {\\n        if (prevElement.tagName === 'H2') {\\n          break\\n        }\\n        prevElement = prevElement.previousElementSibling\\n      }\\n    }\\n    // id\\n    let id = ''\\n    if (prevElement) {\\n      id += prevElement.textContent.trim().replace(/\\\\W/g, '-').toLowerCase() + '-'\\n    }\\n    id += el.textContent.trim().replace(/\\\\W/g, '-').toLowerCase()\\n    // sidebar links\\n    if (el.tagName === 'H2') {\\n      let container = document.querySelector('.gatsby_btn-site_article_sidebar--adiacent.active ~ .gatsby_site_header_adiacent_inner')\\n      container = container ? container : document.querySelector('.gatsby_btn-site_article_sidebar--sub.active ~ .gatsby_site_header_adiacent_inner')\\n      container.classList.add('active')\\n      container\\n        .querySelector('.gatsby_site_header_item')\\n        .append(\\n          Xt.createElement(\\n            '<div><a href=\\\"#' +\\n              id +\\n              '\\\" class=\\\"btn gatsby_btn-site_article_sidebar gatsby_btn-site_article_sidebar--adiacent_inner\\\"><span>' +\\n              el.textContent +\\n              '</span></button></div>'\\n          )\\n        )\\n    }\\n    // gatsby_make-anchor\\n    el.setAttribute('id', id)\\n    el.classList.add('gatsby_make-anchor')\\n    // wrapInner\\n    const link = Xt.createElement('<a href=\\\"#' + id + '\\\"></a>')\\n    el.classList.add('xt-ignore')\\n    el.before(link)\\n    const inner = el.querySelector(':scope > *')\\n    el.append(link)\\n    link.append(inner)\\n    el.append(\\n      Xt.createElement(`\\n<span class=\\\"gatsby_site_article_anchor\\\">\\n  <span class=\\\"btn btn-default\\\">\\n  ${iconLink()}\\n  </span>\\n</span>`)\\n    )\\n  }\\n  // docs tables\\n  const docs = document.querySelector('.gatsby_site_article_content_inner')\\n  if (docs) {\\n    const tables = docs.querySelectorAll('table')\\n    for (const table of tables) {\\n      table.classList.add('table', 'gatsby_table')\\n      for (const el of table.querySelectorAll('tr td:first-child')) {\\n        el.outerHTML = el.outerHTML.replace(/(<\\\\s*\\\\/?\\\\s*)td(\\\\s*([^>]*)?\\\\s*>)/gi, '$1th$2') // regex replace tagname\\n        el.setAttribute('scope', 'row')\\n      }\\n    }\\n  }\\n  // scrollSidebarToContent\\n  require('assets/scripts/gatsby.js').gatsbySidebar()\\n  // restart xt-scroll-to-anchor\\n  const gatsby = document.querySelector('.gatsby_site_wrapper')\\n  if (gatsby) {\\n    const scrollToAnchor = Xt.get('xt-scroll-to-anchor', gatsby.closest('body'))\\n    if (scrollToAnchor) {\\n      scrollToAnchor.eventStart()\\n    }\\n  }\\n}\\n\\nexport { makeDocument }\\n\";","export default \"import path from 'path'\\nconst cardDefaultfull = require('components/snippets/classes/card-default-full').default\\nconst iconPackage = require('components/snippets/icons').iconPackage\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"card ${cardDefaultfull()}\\\">\\n  <div class=\\\"card-md p-0\\\">\\n    <div class=\\\"list list-3 flex-no-wrap items-baseline\\\">\\n      <div>\\n        ${iconPackage({ classes: 'icon-lg text-2xl' })}\\n      </div>\\n      <div>\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Typography\\\"\\ntitle: \\\"Typography\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/typography.css.js](https://github.com/minimit/xtendui/blob/master/src/core/typography.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      typography: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nCheck subpage to [customize content](/components/core/typography/content).\\n\";","export default \"import { Xt } from 'xtendui'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Toggle\\n */\\nclass Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    self.componentNamespace = self.componentName.replace(/^[^a-z]+|[ ,#_:.-]+/gi, '')\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   */\\n  init(object = null, optionsCustom = null) {\\n    const self = this\\n    self.object = object || self.object\\n    self.optionsCustom = optionsCustom || self.optionsCustom\\n    // vars\\n    self.classes = []\\n    self.classesIn = []\\n    self.classesOut = []\\n    self.classesInitial = []\\n    self.classesInverse = []\\n    self.elements = []\\n    self.targets = []\\n    self.currentIndex = null\\n    self.oldIndex = null\\n    self.direction = null\\n    self.inverse = null\\n    self.initialCurrents = []\\n    self.detail = {}\\n    self.disabled = false\\n    self.detail.queueOn = []\\n    self.detail.queueOff = []\\n    self.detail.autopaused = false\\n    self.destroyElements = [document, window, self.object]\\n    // init\\n    self.initVars()\\n    self.initSetup()\\n    self.initLogic()\\n  }\\n\\n  /**\\n   * init vars\\n   */\\n  initVars() {\\n    const self = this\\n    // options\\n    self.optionsDefault = Xt.merge([self.constructor.optionsDefaultSuper, self.constructor.optionsDefault])\\n    self.optionsDefault = Xt.merge([self.optionsDefault, Xt.optionsGlobal[self.componentName]])\\n    self.options = Xt.merge([self.optionsDefault, self.optionsCustom])\\n    // classes\\n    self.classes = self.options.class ? [...self.options.class.split(' ')] : []\\n    self.classesIn = self.options.classIn ? [...self.options.classIn.split(' ')] : []\\n    self.classesOut = self.options.classOut ? [...self.options.classOut.split(' ')] : []\\n    self.classesDone = self.options.classDone ? [...self.options.classDone.split(' ')] : []\\n    self.classesInitial = self.options.classInitial ? [...self.options.classInitial.split(' ')] : []\\n    self.classesInverse = self.options.classInverse ? [...self.options.classInverse.split(' ')] : []\\n  }\\n\\n  /**\\n   * init setup\\n   */\\n  initSetup() {\\n    const self = this\\n    const options = self.options\\n    // setup (based on xtend mode)\\n    if (options.targets && options.targets.indexOf('#') !== -1) {\\n      // xtend unique mode\\n      self.mode = 'unique'\\n      self.container = document.documentElement\\n      options.max = Infinity\\n      self.namespace = self.componentName + '-' + options.targets.toString() + '-' + self.classes.toString()\\n    } else {\\n      // xtend multiple mode\\n      self.mode = 'multiple'\\n      self.container = self.object\\n      const uniqueId = Xt.dataStorage.get(self.container, 'xtUniqueId')\\n      Xt.dataStorage.set(self.container, 'xtUniqueId', uniqueId || Xt.getuniqueId())\\n      self.namespace = self.componentName + '-' + Xt.dataStorage.get(self.container, 'xtUniqueId')\\n    }\\n    // final namespace\\n    self.namespace = self.namespace.replace(/^[^a-z]+|[ ,#_:.-]+/gi, '')\\n    // currents array based on namespace (so shared between Xt objects)\\n    self.setCurrents([])\\n    // xtNamespace linked components\\n    const arr = Xt.dataStorage.get(self.namespace, 'xtNamespace') || []\\n    arr.push(self)\\n    Xt.dataStorage.set(self.namespace, 'xtNamespace', arr)\\n  }\\n\\n  /**\\n   * init logic\\n   * @param {Boolean} saveCurrents\\n   */\\n  initLogic(saveCurrents = true) {\\n    const self = this\\n    // init\\n    self.enable()\\n    self.initScope()\\n    self.initAria()\\n    self.eventStatusHandler()\\n    self.initEvents()\\n    self.initStart(saveCurrents)\\n  }\\n\\n  /**\\n   * init elements, targets and currents\\n   */\\n  initScope() {\\n    const self = this\\n    // elements\\n    self.initScopeElements()\\n    // targets\\n    self.initScopeTargets()\\n  }\\n\\n  /**\\n   * init elements\\n   */\\n  initScopeElements() {\\n    const self = this\\n    const options = self.options\\n    // elements\\n    if (options.elements) {\\n      let arr = Array.from(Xt.arrSingle(self.container.querySelectorAll(options.elements)))\\n      arr = arr.filter(x => !x.closest('.xt-ignore')) // filter out ignore\\n      arr = arr.filter(x => !x.closest('[data-xt-nav]')) // filter out nav\\n      self.elements = arr\\n      self.destroyElements.push(...self.elements)\\n    }\\n    // object if no elements\\n    if (!self.elements.length) {\\n      self.elements = Xt.arrSingle(self.object)\\n    }\\n  }\\n\\n  /**\\n   * init targets\\n   */\\n  initScopeTargets() {\\n    const self = this\\n    const options = self.options\\n    // targets\\n    if (options.targets) {\\n      let arr = Array.from(self.container.querySelectorAll(options.targets))\\n      arr = arr.filter(x => !x.closest('.xt-ignore')) // filter out ignore\\n      self.targets = arr\\n      self.destroyElements.push(...self.targets)\\n    }\\n  }\\n\\n  /**\\n   * init start\\n   * @param {Boolean} saveCurrents\\n   */\\n  initStart(saveCurrents = false) {\\n    const self = this\\n    const options = self.options\\n    // @fix raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // currents\\n      self.setCurrents([])\\n      // vars\\n      let currents = 0\\n      self.initial = true\\n      self.wrap = false\\n      self.currentIndex = null\\n      self.oldIndex = null\\n      // [disabled]\\n      self.destroyDisabled()\\n      // automatic initial currents\\n      const elements = self.getElementsGroups()\\n      if (elements.length) {\\n        // check elements\\n        for (const element of elements) {\\n          // reset\\n          const found = self.initReset(element, saveCurrents)\\n          if (found && currents < options.max) {\\n            // initial\\n            currents++\\n            // reactivate after raf\\n            requestAnimationFrame(() => {\\n              self.eventOn(element, true)\\n            })\\n          }\\n        }\\n        // if currents < min\\n        let todo = options.min - currents\\n        let start = 0\\n        if (todo > 0 && self.targets.length) {\\n          // @FIX initial activation drag wrap\\n          if ((!self.disabled || !self.initial) && self.wrapIndex) {\\n            start = self.wrapIndex\\n            todo += start\\n          }\\n          // initial\\n          currents += todo\\n        }\\n        if (todo > 0 && self.targets.length) {\\n          for (let i = start; i < todo; i++) {\\n            self.eventOn(self.elements[i], true)\\n          }\\n        }\\n        // currents\\n        if (saveCurrents) {\\n          // initialCurrents after raf\\n          requestAnimationFrame(() => {\\n            self.initialCurrents = self.getCurrents().slice(0)\\n          })\\n        }\\n        // no currents\\n        if (currents === 0) {\\n          // vars\\n          self.initial = false\\n          // @FIX autostart after self.initial or it gives error on reinitialization (demos fullscreen)\\n          // auto\\n          self.eventAutostart()\\n        }\\n      }\\n      // initialized class\\n      self.object.classList.add(self.componentName)\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt'))\\n    })\\n  }\\n\\n  /**\\n   * init reset element activation\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element to check and reset\\n   * @param {Boolean} saveCurrents\\n   * @return {Boolean} if element was activated\\n   */\\n  initReset(el, saveCurrents = false) {\\n    const self = this\\n    const options = self.options\\n    let found = false\\n    // reset\\n    const reset = elReset => {\\n      let isActive = false\\n      for (const c of self.classes) {\\n        if (elReset.classList.contains(c)) {\\n          isActive = true\\n          break\\n        }\\n      }\\n      if (isActive) {\\n        if (saveCurrents) {\\n          found = true\\n        }\\n        requestAnimationFrame(() => {\\n          elReset.classList.remove(...self.classes, ...self.classesIn, ...self.classesOut, ...self.classesDone, ...self.classesInitial, ...self.classesInverse)\\n          const elementsInner = Xt.queryAll(elReset, options.elementsInner)\\n          for (const elementInner of elementsInner) {\\n            elementInner.classList.remove(\\n              ...self.classes,\\n              ...self.classesIn,\\n              ...self.classesOut,\\n              ...self.classesDone,\\n              ...self.classesInitial,\\n              ...self.classesInverse\\n            )\\n          }\\n        })\\n      }\\n      return found\\n    }\\n    // elements\\n    const group = el.getAttribute('data-xt-group')\\n    if (group) {\\n      const groupEls = Array.from(self.elements).filter(x => x.getAttribute('data-xt-group') === group)\\n      for (const groupEl of groupEls) {\\n        found = reset(groupEl)\\n        if (!saveCurrents && self.initialCurrents.includes(groupEl)) {\\n          found = true\\n        }\\n      }\\n    } else {\\n      found = reset(el)\\n      if (!saveCurrents && self.initialCurrents.includes(el)) {\\n        found = true\\n      }\\n    }\\n    // targets\\n    const targets = self.getTargets(el)\\n    for (const tr of targets) {\\n      found = reset(tr)\\n    }\\n    return found\\n  }\\n\\n  /**\\n   * init aria\\n   */\\n  initAria() {\\n    const self = this\\n    const options = self.options\\n    // role\\n    self.initAriaRole()\\n    // aria\\n    if (options.aria) {\\n      if (self.targets.length) {\\n        // elements\\n        for (const el of self.elements) {\\n          const ariaEls = Xt.queryAll(el, options.ariaControls)\\n          const ariaEl = ariaEls.length ? ariaEls[0] : el\\n          // id\\n          if (options.aria === true || options.aria.labelledby || options.aria.controls) {\\n            const id = ariaEl.getAttribute('id')\\n            if (!id) {\\n              ariaEl.setAttribute('id', Xt.getuniqueId())\\n            }\\n          }\\n          // selected\\n          ariaEl.setAttribute('aria-selected', 'false')\\n        }\\n        // targets\\n        for (const tr of self.targets) {\\n          // expanded\\n          const role = tr.getAttribute('role')\\n          if (role === 'tabpanel' || role === 'listbox' || role === 'dialog') {\\n            tr.setAttribute('aria-expanded', 'false')\\n          }\\n          // tabindex\\n          if (options.aria === true || options.aria.tabindex) {\\n            const focusables = tr.querySelectorAll(Xt.focusables)\\n            for (const focusable of focusables) {\\n              focusable.setAttribute('tabindex', '-1')\\n            }\\n          }\\n          // id\\n          if (options.aria === true || options.aria.labelledby || options.aria.controls) {\\n            const id = tr.getAttribute('id')\\n            if (!id) {\\n              tr.setAttribute('id', Xt.getuniqueId())\\n            }\\n          }\\n          // labelledby\\n          if (options.aria === true || options.aria.labelledby) {\\n            const els = self.getElements(tr)\\n            let str = ' '\\n            str += ''\\n            for (const el of els) {\\n              const ariaEls = Xt.queryAll(el, options.ariaControls)\\n              const ariaEl = ariaEls.length ? ariaEls[0] : el\\n              str += ' ' + ariaEl.getAttribute('id')\\n            }\\n            tr.setAttribute('aria-labelledby', str.trim())\\n          }\\n        }\\n        // ariaControls\\n        if (options.aria === true || options.aria.controls) {\\n          for (const el of self.elements) {\\n            const trs = self.getTargets(el)\\n            const ariaEls = Xt.queryAll(el, options.ariaControls)\\n            const ariaEl = ariaEls.length ? ariaEls[0] : el\\n            // controls\\n            let str = ' '\\n            str += ''\\n            for (const tr of trs) {\\n              str += ' ' + tr.getAttribute('id')\\n            }\\n            ariaEl.setAttribute('aria-controls', str.trim())\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * init aria role\\n   */\\n  initAriaRole() {\\n    const self = this\\n    const options = self.options\\n    // aria\\n    if (options.aria) {\\n      if (self.targets.length) {\\n        // role\\n        if (self.mode === 'multiple') {\\n          self.object.setAttribute('role', 'tablist')\\n          if (options.max > 1) {\\n            self.object.setAttribute('aria-multiselectable', 'true')\\n          }\\n          for (const el of self.elements) {\\n            const ariaEls = Xt.queryAll(el, options.ariaControls)\\n            const ariaEl = ariaEls.length ? ariaEls[0] : el\\n            ariaEl.setAttribute('role', 'tab')\\n          }\\n          for (const tr of self.targets) {\\n            tr.setAttribute('role', 'tabpanel')\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * init events\\n   */\\n  initEvents() {\\n    const self = this\\n    const options = self.options\\n    // status\\n    const checkHandler = Xt.dataStorage.put(window, 'resize/check' + '/' + self.namespace, self.eventStatusHandler.bind(self).bind(self))\\n    addEventListener('resize', checkHandler)\\n    // elements\\n    for (const el of self.elements) {\\n      // event on\\n      const onHandler = Xt.dataStorage.put(el, options.on + '/' + self.namespace, self.eventOnHandler.bind(self).bind(self, el))\\n      if (options.on) {\\n        const events = [...options.on.split(' ')]\\n        for (const event of events) {\\n          el.addEventListener(event, onHandler)\\n        }\\n        if (options.preventEvent) {\\n          if (events.includes('click') || events.includes('mouseenter') || events.includes('mousehover')) {\\n            // @FIX prevents click links on click until clicked two times\\n            const preventeventStartTouchHandler = Xt.dataStorage.put(\\n              el,\\n              'touchend/preventevent' + '/' + self.namespace,\\n              self.eventPreventeventStartHandler.bind(self).bind(self, el)\\n            )\\n            el.addEventListener('touchend', preventeventStartTouchHandler)\\n          }\\n          if (events.includes('click')) {\\n            const preventeventStartMouseHandler = Xt.dataStorage.put(\\n              el,\\n              'mouseup/preventevent' + '/' + self.namespace,\\n              self.eventPreventeventStartHandler.bind(self).bind(self, el)\\n            )\\n            el.addEventListener('mouseup', preventeventStartMouseHandler)\\n          }\\n        }\\n        Xt.dataStorage.put(el, 'active/preventevent' + '/' + self.namespace, self.hasCurrent(el))\\n      }\\n      const onHandlerCustom = Xt.dataStorage.put(el, 'on' + '/' + self.namespace, self.eventOnHandler.bind(self).bind(self, el))\\n      el.addEventListener('on.trigger.xt', onHandlerCustom)\\n      // event off\\n      if (options.off) {\\n        const offHandler = Xt.dataStorage.put(el, options.off + '/' + self.namespace, self.eventOffHandler.bind(self).bind(self, el))\\n        const events = [...options.off.split(' ')]\\n        for (const event of events) {\\n          el.addEventListener(event, offHandler)\\n        }\\n        const offHandlerCustom = Xt.dataStorage.put(el, 'off' + '/' + self.namespace, self.eventOffHandler.bind(self).bind(self, el))\\n        el.addEventListener('off.trigger.xt', offHandlerCustom)\\n      } else {\\n        const offHandlerCustom = Xt.dataStorage.put(el, 'off' + '/' + self.namespace, self.eventOnHandler.bind(self).bind(self, el))\\n        el.addEventListener('off.trigger.xt', offHandlerCustom)\\n      }\\n    }\\n    // targets\\n    for (const tr of self.targets) {\\n      // event\\n      const onHandler = Xt.dataStorage.put(tr, options.on + '/' + self.namespace, self.eventOnHandler.bind(self).bind(self, tr))\\n      tr.addEventListener('on.trigger.xt', onHandler)\\n      if (options.off) {\\n        const offHandlerCustom = Xt.dataStorage.put(tr, 'off' + '/' + self.namespace, self.eventOffHandler.bind(self).bind(self, tr))\\n        tr.addEventListener('off.trigger.xt', offHandlerCustom)\\n      } else {\\n        const offHandlerCustom = Xt.dataStorage.put(tr, 'off' + '/' + self.namespace, self.eventOnHandler.bind(self).bind(self, tr))\\n        tr.addEventListener('off.trigger.xt', offHandlerCustom)\\n      }\\n    }\\n    // auto\\n    if (options.auto && options.auto.time) {\\n      // focus\\n      const focusHandler = Xt.dataStorage.put(window, 'focus/auto' + '/' + self.namespace, self.eventAutoresume.bind(self))\\n      addEventListener('focus', focusHandler)\\n      // blur\\n      const blurHandler = Xt.dataStorage.put(window, 'blur/auto' + '/' + self.namespace, self.eventAutopause.bind(self))\\n      addEventListener('blur', blurHandler)\\n      // event\\n      const autostartHandler = Xt.dataStorage.put(self.object, 'autostart' + '/' + self.namespace, self.eventAutostart.bind(self))\\n      self.object.addEventListener('autostart.trigger.xt', autostartHandler)\\n      const autostopHandler = Xt.dataStorage.put(self.object, 'autostop' + '/' + self.namespace, self.eventAutostop.bind(self))\\n      self.object.addEventListener('autostop.trigger.xt', autostopHandler)\\n      const autopauseHandler = Xt.dataStorage.put(self.object, 'autopause' + '/' + self.namespace, self.eventAutopause.bind(self))\\n      self.object.addEventListener('autopause.trigger.xt', autopauseHandler)\\n      const autoresumeHandler = Xt.dataStorage.put(self.object, 'autoresume' + '/' + self.namespace, self.eventAutoresume.bind(self))\\n      self.object.addEventListener('autoresume.trigger.xt', autoresumeHandler)\\n      // autopause\\n      if (options.auto.pause) {\\n        const autopauseEls = self.object.querySelectorAll(options.auto.pause)\\n        if (autopauseEls.length) {\\n          self.destroyElements.push(...autopauseEls)\\n          for (const el of autopauseEls) {\\n            // pause\\n            const autopauseOnHandler = Xt.dataStorage.put(el, 'mouseenter focus/auto' + '/' + self.namespace, self.eventAutopause.bind(self))\\n            const eventsPause = ['mouseenter', 'focus']\\n            for (const event of eventsPause) {\\n              el.addEventListener(event, autopauseOnHandler)\\n            }\\n            // resume\\n            const autoresumeOnHandler = Xt.dataStorage.put(el, 'mouseleave blur/auto' + '/' + self.namespace, self.eventAutoresume.bind(self))\\n            const eventsResume = ['mouseleave', 'blur']\\n            for (const event of eventsResume) {\\n              el.addEventListener(event, autoresumeOnHandler)\\n            }\\n          }\\n        }\\n      }\\n    }\\n    // jump\\n    if (options.jump) {\\n      for (const jump of self.targets) {\\n        const jumpHandler = Xt.dataStorage.put(jump, 'click/jump' + '/' + self.namespace, self.eventJumpHandler.bind(self).bind(self, jump))\\n        jump.addEventListener('click', jumpHandler, true) // @FIX elements inside targets (slider pagination)\\n        // jump\\n        if (!self.disabled) {\\n          jump.classList.add('xt-jump')\\n        } else {\\n          jump.classList.remove('xt-jump')\\n        }\\n      }\\n    }\\n    // navigation\\n    if (options.navigation) {\\n      self.navs = self.object.querySelectorAll(options.navigation)\\n      if (self.navs.length) {\\n        self.destroyElements.push(...self.navs)\\n        for (const nav of self.navs) {\\n          const navHandler = Xt.dataStorage.put(nav, 'click/nav' + '/' + self.namespace, self.eventNavHandler.bind(self).bind(self, nav))\\n          nav.addEventListener('click', navHandler)\\n        }\\n      }\\n    }\\n    // keyboard\\n    if (options.keyboard && options.keyboard.selector) {\\n      const keyboards = options.keyboard.selector === 'object' ? Xt.arrSingle(self.object) : self.object.querySelectorAll(options.keyboard.selector)\\n      self.destroyElements.push(...keyboards)\\n      for (const keyboard of keyboards) {\\n        keyboard.setAttribute('tabindex', '0')\\n        // focus\\n        const keyboardfocusHandler = Xt.dataStorage.put(keyboard, 'focus/keyboard' + '/' + self.namespace, self.eventKeyboardfocusHandler.bind(self))\\n        keyboard.addEventListener('focus', keyboardfocusHandler)\\n        // blur\\n        const keyboardblurHandler = Xt.dataStorage.put(keyboard, 'blur/keyboard' + '/' + self.namespace, self.eventKeyboardblurHandler.bind(self))\\n        keyboard.addEventListener('blur', keyboardblurHandler)\\n      }\\n    }\\n    // closeauto\\n    if (options.closeAuto) {\\n      const closeautoHandler = Xt.dataStorage.put(window, 'closeauto' + '/' + self.namespace, self.eventAutocloseHandler.bind(self))\\n      addEventListener('closeauto.trigger.xt', closeautoHandler)\\n    }\\n    // mediaLoaded\\n    if (options.mediaLoaded || options.mediaLoadedReinit) {\\n      for (const el of self.elements.filter(x => !x.classList.contains('xt-ignore'))) {\\n        const imgs = el.querySelectorAll('img')\\n        self.destroyElements.push(...imgs)\\n        for (const img of imgs) {\\n          if (!Xt.dataStorage.get(img, self.componentNamespace + 'MedialoadedDone')) {\\n            Xt.dataStorage.set(img, self.componentNamespace + 'MedialoadedDone', true)\\n            if (!img.complete) {\\n              const medialoadedHandler = Xt.dataStorage.put(\\n                img,\\n                'load/media' + '/' + self.namespace,\\n                self.eventMedialoadedHandler.bind(self).bind(self, el, true)\\n              )\\n              img.addEventListener('load', medialoadedHandler)\\n            } else {\\n              self.eventMedialoadedHandler(el)\\n            }\\n          }\\n        }\\n      }\\n      for (const tr of self.targets.filter(x => !x.classList.contains('xt-ignore'))) {\\n        const imgs = tr.querySelectorAll('img')\\n        self.destroyElements.push(...imgs)\\n        for (const img of imgs) {\\n          if (!Xt.dataStorage.get(img, self.componentNamespace + 'MedialoadedDone')) {\\n            if (!img.complete) {\\n              const medialoadedHandler = Xt.dataStorage.put(\\n                img,\\n                'load/media' + '/' + self.namespace,\\n                self.eventMedialoadedHandler.bind(self).bind(self, img, tr, true)\\n              )\\n              img.addEventListener('load', medialoadedHandler)\\n            } else {\\n              self.eventMedialoadedHandler(img, tr)\\n            }\\n          }\\n        }\\n      }\\n    }\\n    // wheel\\n    if (options.wheel && options.wheel.selector) {\\n      const wheel = (self.wheel =\\n        options.wheel.selector === 'object'\\n          ? self.object\\n          : options.wheel.selector === 'scrollingElement'\\n          ? document.scrollingElement\\n          : self.object.querySelector(options.wheel.selector))\\n      self.destroyElements.push(wheel)\\n      const eWheel = 'onwheel' in wheel ? 'wheel' : wheel.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll'\\n      // wheel\\n      const wheelHandler = Xt.dataStorage.put(wheel, eWheel + '/' + self.namespace, self.eventWheelHandler.bind(self))\\n      wheel.addEventListener(eWheel, wheelHandler, { passive: false })\\n      // stop\\n      const wheelstopHandler = Xt.dataStorage.put(wheel, eWheel + '/stop' + '/' + self.namespace, self.eventWheelstop.bind(self))\\n      wheel.addEventListener('wheelstop.trigger.xt', wheelstopHandler, { passive: false })\\n      // block\\n      if (options.wheel.block) {\\n        const block = wheel.parentNode\\n        const wheelblockHandler = Xt.dataStorage.put(block, eWheel + '/block' + '/' + self.namespace, self.eventWheelblockHandler.bind(self))\\n        block.addEventListener(eWheel, wheelblockHandler, { passive: false })\\n      }\\n    }\\n  }\\n\\n  //\\n  // handler\\n  //\\n\\n  /**\\n   * element on handler\\n   * @param {Node|HTMLElement|EventTarget|Window} element\\n   * @param {Event} e\\n   */\\n  eventOnHandler(element, e) {\\n    const self = this\\n    const options = self.options\\n    // @FIX targets handler\\n    const el = self.getElements(element)[0]\\n    // event block\\n    if (options.onBlock) {\\n      const now = new Date().getTime()\\n      const old = Xt.dataStorage.get(el, self.componentNamespace + 'EventBlock' + e.type) || 0\\n      Xt.dataStorage.set(el, self.componentNamespace + 'EventBlock' + e.type, now)\\n      if (now - old < options.onBlock) {\\n        return\\n      }\\n    }\\n    // handler\\n    if (options.eventLimit) {\\n      const eventLimit = self.container.querySelectorAll(options.eventLimit)\\n      if (eventLimit.length) {\\n        if (!Xt.contains(eventLimit, e.target) || e.target.closest('.event-force')) {\\n          self.eventOn(el, false, e)\\n        }\\n      } else {\\n        self.eventOn(el, false, e)\\n      }\\n    } else {\\n      self.eventOn(el, false, e)\\n    }\\n  }\\n\\n  /**\\n   * element off handler\\n   * @param {Node|HTMLElement|EventTarget|Window} element\\n   * @param {Event} e\\n   */\\n  eventOffHandler(element, e) {\\n    const self = this\\n    const options = self.options\\n    // @FIX targets handler\\n    const el = self.getElements(element)[0]\\n    // event block\\n    if (options.offBlock) {\\n      const now = new Date().getTime()\\n      const old = Xt.dataStorage.get(el, self.componentNamespace + 'EventBlock' + e.type) || 0\\n      Xt.dataStorage.set(el, self.componentNamespace + 'EventBlock' + e.type, now)\\n      if (now - old < options.offBlock) {\\n        return\\n      }\\n    }\\n    // handler\\n    if (options.eventLimit) {\\n      const eventLimit = self.container.querySelectorAll(options.eventLimit)\\n      if (eventLimit.length) {\\n        if (!Xt.contains(eventLimit, e.target) || e.target.closest('.event-force')) {\\n          self.eventOff(el, false, e)\\n        }\\n      } else {\\n        self.eventOff(el, false, e)\\n      }\\n    } else {\\n      self.eventOff(el, false, e)\\n    }\\n  }\\n\\n  /**\\n   * init prevents click on touch until clicked two times\\n   * @param {Node|HTMLElement|EventTarget|Window} el\\n   */\\n  eventPreventeventStartHandler(el) {\\n    const self = this\\n    // active\\n    Xt.dataStorage.put(el, 'active/preventevent' + '/' + self.namespace, self.hasCurrent(el))\\n    // event link\\n    const preventeventHandler = Xt.dataStorage.put(el, 'click/preventevent' + '/' + self.namespace, self.eventPreventeventHandler.bind(self).bind(self, el))\\n    el.addEventListener('click', preventeventHandler)\\n    // event reset\\n    const preventeventResetHandler = Xt.dataStorage.put(\\n      el,\\n      'off/preventevent' + '/' + self.namespace,\\n      self.eventPreventeventResetHandler.bind(self).bind(self, el)\\n    )\\n    el.addEventListener('off.xt', preventeventResetHandler)\\n  }\\n\\n  /**\\n   * remove prevents click on touch until clicked two times\\n   * @param {Node|HTMLElement|EventTarget|Window} el\\n   */\\n  eventPreventeventEndHandler(el) {\\n    const self = this\\n    // event link\\n    const preventeventHandler = Xt.dataStorage.get(el, 'click/preventevent' + '/' + self.namespace)\\n    el.removeEventListener('click', preventeventHandler)\\n    // event reset\\n    const preventeventResetHandler = Xt.dataStorage.get(el, 'off/preventevent' + '/' + self.namespace)\\n    el.removeEventListener('off.xt', preventeventResetHandler)\\n  }\\n\\n  /**\\n   * prevents click on touch until clicked two times\\n   * @param {Node|HTMLElement|EventTarget|Window} el\\n   * @param {Event} e\\n   */\\n  eventPreventeventHandler(el, e) {\\n    const self = this\\n    const active = Xt.dataStorage.get(el, 'active/preventevent' + '/' + self.namespace)\\n    if (!active && !Xt.dataStorage.get(el, self.componentNamespace + 'PreventeventDone')) {\\n      Xt.dataStorage.set(el, self.componentNamespace + 'PreventeventDone', true)\\n      // prevent default\\n      e.preventDefault()\\n    } else {\\n      self.eventPreventeventEndHandler(el)\\n      Xt.dataStorage.remove(el, self.componentNamespace + 'PreventeventDone')\\n      Xt.dataStorage.remove(el, 'active/preventevent' + '/' + self.namespace)\\n      // off on second interaction on touch\\n      el.dispatchEvent(new CustomEvent('off.trigger.xt'))\\n    }\\n  }\\n\\n  /**\\n   * reset prevents click on touch until clicked two times\\n   * @param {Node|HTMLElement|EventTarget|Window} el\\n   */\\n  eventPreventeventResetHandler(el) {\\n    const self = this\\n    self.eventPreventeventEndHandler(el)\\n    Xt.dataStorage.remove(el, self.componentNamespace + 'PreventeventDone')\\n    Xt.dataStorage.remove(el, 'active/preventevent' + '/' + self.namespace)\\n  }\\n\\n  /**\\n   * jump handler\\n   * @param {Node|HTMLElement|EventTarget|Window} tr\\n   * @param {Event} e\\n   */\\n  eventJumpHandler(tr, e) {\\n    const self = this\\n    // useCapture delegation\\n    if (self.targets.includes(tr)) {\\n      // handler\\n      self.eventJump(tr, e)\\n    }\\n  }\\n\\n  /**\\n   * nav handler\\n   * @param {Node|HTMLElement|EventTarget|Window} nav\\n   * @param {Event} e\\n   */\\n  eventNavHandler(nav, e) {\\n    const self = this\\n    // handler\\n    self.eventNav(nav, e)\\n  }\\n\\n  /**\\n   * keyboard focus handler\\n   */\\n  eventKeyboardfocusHandler() {\\n    const self = this\\n    // handler\\n    const keyboardHandler = Xt.dataStorage.put(document, 'keyup/keyboard' + '/' + self.namespace, self.eventKeyboardHandler.bind(self))\\n    document.addEventListener('keyup', keyboardHandler)\\n  }\\n\\n  /**\\n   * keyboard blur handler\\n   */\\n  eventKeyboardblurHandler() {\\n    const self = this\\n    // handler\\n    const keyboardHandler = Xt.dataStorage.get(document, 'keyup/keyboard' + '/' + self.namespace)\\n    document.removeEventListener('keyup', keyboardHandler)\\n  }\\n\\n  /**\\n   * keyboard handler\\n   * @param {Event} e\\n   */\\n  eventKeyboardHandler(e) {\\n    const self = this\\n    const options = self.options\\n    // key\\n    const code = e.keyCode ? e.keyCode : e.which\\n    let prev\\n    let next\\n    if (options.keyboard.vertical) {\\n      if (options.keyboard.inverse) {\\n        prev = 40\\n        next = 38\\n      } else {\\n        prev = 38\\n        next = 40\\n      }\\n    } else {\\n      if (options.keyboard.inverse) {\\n        prev = 39\\n        next = 37\\n      } else {\\n        prev = 37\\n        next = 39\\n      }\\n    }\\n    if (code === prev) {\\n      self.goToPrev(1)\\n    } else if (code === next) {\\n      self.goToNext(1)\\n    }\\n  }\\n\\n  /**\\n   * closeauto handler\\n   * @param {Event} e\\n   */\\n  eventAutocloseHandler(e) {\\n    const self = this\\n    // check\\n    let check = self.object\\n    if (self.mode === 'unique') {\\n      check = self.targets[0]\\n    }\\n    // triggering e.detail.container\\n    if (!e || !e.detail || !e.detail.container || e.detail.container.contains(check)) {\\n      Xt.eventDelay(\\n        e,\\n        check,\\n        () => {\\n          // handler\\n          const currents = self.getCurrents()\\n          for (const current of currents) {\\n            self.eventOff(current, true)\\n          }\\n        },\\n        self.componentNamespace + 'Status'\\n      )\\n    }\\n  }\\n\\n  /**\\n   * medialoaded\\n   * @param {Node|HTMLElement|EventTarget|Window} img\\n   * @param {Node|HTMLElement|EventTarget|Window} el\\n   * @param {Boolean} deferred\\n   */\\n  eventMedialoadedHandler(img, el, deferred = false) {\\n    const self = this\\n    const options = self.options\\n    // @FIX multiple calls\\n    Xt.dataStorage.set(img, self.componentNamespace + 'MedialoadedDone', true)\\n    // mediaLoadedReinit\\n    if (options.mediaLoadedReinit && deferred) {\\n      clearTimeout(Xt.dataStorage.get(self.object, 'xt' + self.componentNamespace + 'MedialoadedInit' + 'Timeout'))\\n      Xt.dataStorage.set(\\n        self.object,\\n        'xt' + self.componentNamespace + 'MedialoadedInit' + 'Timeout',\\n        setTimeout(() => {\\n          // mediaLoaded\\n          self.eventMediaLoadedReinit()\\n        }, Xt.medialoadedDelay)\\n      )\\n    }\\n    // mediaLoaded\\n    if (options.mediaLoaded) {\\n      el.classList.add('xt-medialoaded')\\n    }\\n    // listener dispatch\\n    el.dispatchEvent(new CustomEvent('medialoaded.xt', { detail: { deferred: deferred } }))\\n  }\\n\\n  //\\n  // event util\\n  //\\n\\n  /**\\n   * get elements groups (one element per group)\\n   * @return {Array} array of elements\\n   */\\n  getElementsGroups() {\\n    const self = this\\n    // groups\\n    const final = []\\n    for (const element of self.elements) {\\n      // choose element by group\\n      const group = element.getAttribute('data-xt-group')\\n      if (group) {\\n        const found = final.filter(x => x.getAttribute('data-xt-group') === group)\\n        if (!found.length) {\\n          final.push(element)\\n        }\\n      } else {\\n        final.push(element)\\n      }\\n    }\\n    return final\\n  }\\n\\n  /**\\n   * get targets groups (one target per group)\\n   * @return {Array} array of targets\\n   */\\n  getTargetsGroups() {\\n    const self = this\\n    // groups\\n    const final = []\\n    for (const targets of self.targets) {\\n      // choose element by group\\n      const group = targets.getAttribute('data-xt-group')\\n      if (group) {\\n        const found = final.filter(x => x.getAttribute('data-xt-group') === group)\\n        if (!found.length) {\\n          final.push(targets)\\n        }\\n      } else {\\n        final.push(targets)\\n      }\\n    }\\n    return final\\n  }\\n\\n  /**\\n   * get elements from element or target\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element that triggered interaction\\n   * @return {Array} The first element is the one on getElementsGroups()\\n   */\\n  getElements(el = null) {\\n    const self = this\\n    // getElements\\n    if (!self.elements || !self.elements.length) {\\n      return []\\n    }\\n    if (self.mode === 'unique' || !el) {\\n      // xtNamespace linked components\\n      const final = []\\n      const selfs = Xt.dataStorage.get(self.namespace, 'xtNamespace')\\n      for (const item of selfs) {\\n        // choose element by group\\n        final.push(...item.getElementsGroups())\\n      }\\n      return final\\n    } else if (self.mode === 'multiple') {\\n      // choose element by group\\n      let final\\n      const group = el.getAttribute('data-xt-group')\\n      const groupElements = Array.from(self.elements).filter(x => x.getAttribute('data-xt-group') === group)\\n      const groupTargets = Array.from(self.targets).filter(x => x.getAttribute('data-xt-group') === group)\\n      if (group) {\\n        // all group targets if group\\n        final = Xt.arrSingle(groupElements)\\n      } else {\\n        // not group targets by index if not group\\n        if (Array.from(self.elements).includes(el)) {\\n          // @FIX when argument is already element\\n          final = Xt.arrSingle(el)\\n        } else {\\n          const index = groupTargets.findIndex(x => x === el)\\n          final = Xt.arrSingle(groupElements[index])\\n        }\\n      }\\n      return final\\n    }\\n  }\\n\\n  /**\\n   * get targets from element or target\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element that triggered interaction\\n   * @return {Array}\\n   */\\n  getTargets(el = null) {\\n    const self = this\\n    // getTargets\\n    if (!self.targets || !self.targets.length) {\\n      return []\\n    }\\n    if (self.mode === 'unique' || !el) {\\n      // xtNamespace linked components\\n      const final = []\\n      const selfs = Xt.dataStorage.get(self.namespace, 'xtNamespace')\\n      for (const item of selfs) {\\n        // choose element by group\\n        final.push(...item.getTargetsGroups())\\n      }\\n      return final\\n    } else if (self.mode === 'multiple') {\\n      // choose only target by group\\n      let final\\n      const group = el.getAttribute('data-xt-group')\\n      const groupElements = Array.from(self.elements).filter(x => x.getAttribute('data-xt-group') === group)\\n      const groupTargets = Array.from(self.targets).filter(x => x.getAttribute('data-xt-group') === group)\\n      if (group) {\\n        // all group targets if group\\n        final = Xt.arrSingle(groupTargets)\\n      } else {\\n        // not group targets by index if not group\\n        if (Array.from(self.targets).includes(el)) {\\n          // @FIX when argument is already target\\n          final = Xt.arrSingle(el)\\n        } else {\\n          const index = groupElements.findIndex(x => x === el)\\n          final = Xt.arrSingle(groupTargets[index])\\n        }\\n      }\\n      return final\\n    }\\n  }\\n\\n  /**\\n   * get currents based on namespace (so shared between Xt objects)\\n   * @return {Array}\\n   */\\n  getCurrents() {\\n    const self = this\\n    // getCurrents\\n    return Xt.currents[self.namespace]\\n  }\\n\\n  /**\\n   * set currents based on namespace (so shared between Xt objects)\\n   * @param {Array} arr\\n   */\\n  setCurrents(arr) {\\n    const self = this\\n    // setCurrents\\n    Xt.currents[self.namespace] = arr\\n  }\\n\\n  /**\\n   * add current based on namespace (so shared between Xt objects)\\n   * @param {Node|HTMLElement|EventTarget|Window} element To be added\\n   */\\n  addCurrent(element) {\\n    const self = this\\n    // addCurrent\\n    if (!self.hasCurrent(element)) {\\n      const arr = Xt.currents[self.namespace]\\n      arr.push(element)\\n    }\\n  }\\n\\n  /**\\n   * remove currents based on namespace (so shared between Xt objects)\\n   * @param {Node|HTMLElement|EventTarget|Window} element To be removed\\n   */\\n  removeCurrent(element) {\\n    const self = this\\n    // removeCurrent\\n    Xt.currents[self.namespace] = Xt.currents[self.namespace].filter(x => x !== element)\\n  }\\n\\n  /**\\n   * if element or target is in current (so shared between Xt objects)\\n   * @param {Node|HTMLElement|EventTarget|Window} el To be checked\\n   */\\n  hasCurrent(el) {\\n    const self = this\\n    // hasCurrent\\n    const groupElements = self.getElements(el)\\n    return Xt.currents[self.namespace].filter(x => x === groupElements[0]).length\\n  }\\n\\n  /**\\n   * check element on\\n   * @param {Node|HTMLElement|EventTarget|Window} element To be checked\\n   * @return {Boolean} If elements can activate\\n   */\\n  checkOn(element) {\\n    const self = this\\n    // check\\n    return !self.hasCurrent(element) && !element.classList.contains('xt-block')\\n  }\\n\\n  /**\\n   * check element off\\n   * @param {Node|HTMLElement|EventTarget|Window} element To be checked\\n   * @return {Boolean} If elements can deactivate\\n   */\\n  checkOff(element) {\\n    const self = this\\n    const options = self.options\\n    // skip if min >= currents\\n    if (options.min - self.getCurrents().length >= 0) {\\n      return false\\n    }\\n    // check\\n    return self.hasCurrent(element) && !element.classList.contains('xt-block')\\n  }\\n\\n  /**\\n   * check elements animation\\n   * @param {NodeList|Array} elements To be checked\\n   * @return {Boolean} If elements are animating\\n   */\\n  checkAnim(elements) {\\n    const self = this\\n    // check\\n    elements = elements.filter(x => x.classList.contains(self.classesIn[0]) || x.classList.contains(self.classesOut[0]))\\n    return elements.length > 0\\n  }\\n\\n  /**\\n   * set index\\n   * @param {Node|HTMLElement|EventTarget|Window} element Current element\\n   */\\n  setIndex(element) {\\n    const self = this\\n    // set index\\n    let index = 0\\n    for (const [i, el] of self.getElementsGroups().entries()) {\\n      if (el === element) {\\n        index = i\\n        break\\n      }\\n    }\\n    self.oldIndex = self.currentIndex\\n    self.currentIndex = index\\n  }\\n\\n  /**\\n   * set direction\\n   */\\n  setDirection() {\\n    const self = this\\n    // set direction\\n    if (!self.initial && (self.currentIndex === null || self.oldIndex === null)) {\\n      self.direction = 0\\n    } else if (self.inverse !== null) {\\n      self.direction = self.inverse ? -1 : 1\\n    } else {\\n      self.direction = self.currentIndex < self.oldIndex ? -1 : 1\\n    }\\n  }\\n\\n  /**\\n   * activate element\\n   * @param {Node|HTMLElement|EventTarget|Window} el Elements to be activated\\n   */\\n  activate(el) {\\n    const self = this\\n    // activation\\n    el.classList.add(...self.classes)\\n    el.classList.remove(...self.classesIn)\\n    el.classList.remove(...self.classesOut)\\n    el.classList.remove(...self.classesDone)\\n    // keep the same level of raf as others\\n    cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'ActivateFrame'))\\n    Xt.dataStorage.put(\\n      el,\\n      self.componentNamespace + 'ActivateFrame',\\n      requestAnimationFrame(() => {\\n        el.classList.add(...self.classesIn)\\n      })\\n    )\\n    if (self.initial && !self.wrap) {\\n      el.classList.add(...self.classesInitial)\\n    }\\n    // direction\\n    if (self.direction >= 0) {\\n      el.classList.remove(...self.classesInverse)\\n    } else {\\n      el.classList.add(...self.classesInverse)\\n    }\\n  }\\n\\n  /**\\n   * activate element done\\n   * @param {Node|HTMLElement|EventTarget|Window} el Elements to be deactivated\\n   */\\n  activateDone(el) {\\n    const self = this\\n    // activation\\n    el.classList.add(...self.classesDone)\\n  }\\n\\n  /**\\n   * deactivate element\\n   * @param {Node|HTMLElement|EventTarget|Window} el Elements to be deactivated\\n   */\\n  deactivate(el) {\\n    const self = this\\n    // activation\\n    el.classList.remove(...self.classes)\\n    el.classList.remove(...self.classesIn)\\n    el.classList.add(...self.classesOut)\\n    el.classList.remove(...self.classesDone)\\n    if (self.direction >= 0) {\\n      el.classList.remove(...self.classesInverse)\\n    } else {\\n      el.classList.add(...self.classesInverse)\\n    }\\n  }\\n\\n  /**\\n   * deactivate element done\\n   * @param {Node|HTMLElement|EventTarget|Window} el Elements to be deactivated\\n   */\\n  deactivateDone(el) {\\n    const self = this\\n    // activation\\n    el.classList.remove(...self.classesOut)\\n  }\\n\\n  //\\n  // event\\n  //\\n\\n  /**\\n   * element on\\n   * @param {Node|HTMLElement|EventTarget|Window} element To be activated\\n   * @param {Boolean} force\\n   * @param {Event} e\\n   * @return {Boolean} If activated\\n   */\\n  eventOn(element, force = false, e = null) {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return false\\n    }\\n    // toggle\\n    if (force || (self.checkOn(element) && (!e || !e.type || e.type !== 'off.trigger.xt'))) {\\n      // auto\\n      self.eventAutostop()\\n      // on\\n      const groupElements = self.getElements(element)\\n      self.addCurrent(groupElements[0])\\n      self.setIndex(element)\\n      self.setDirection()\\n      const targets = self.getTargets(element)\\n      const elementsInner = Xt.queryAll(element, options.elementsInner)\\n      const targetsInner = Xt.queryAll(targets, options.targetsInner)\\n      // [disabled]\\n      if (options.autoDisable && options.min === options.max) {\\n        for (const disable of groupElements) {\\n          disable.setAttribute('disabled', 'disabled')\\n        }\\n      }\\n      // if currents > max\\n      const currents = self.getCurrents()\\n      if (currents.length > options.max) {\\n        // deactivate old\\n        self.eventOff(currents[0])\\n      }\\n      // queue obj\\n      const actionCurrent = 'On'\\n      const actionOther = 'Off'\\n      self.eventQueue(actionCurrent, groupElements, targets, elementsInner, targetsInner, e)\\n      // queue run\\n      // eslint-disable-next-line guard-for-in\\n      for (const type in self.detail['queue' + actionCurrent][0]) {\\n        self.queueStart(actionCurrent, actionOther, type, 0, true)\\n      }\\n      // activationd\\n      return true\\n    } else if (!e || !e.type || e.type !== 'on.trigger.xt') {\\n      self.eventOff(element, false, e)\\n    }\\n    // activationd\\n    return false\\n  }\\n\\n  /**\\n   * element off\\n   * @param {Node|HTMLElement|EventTarget|Window} element To be deactivated\\n   * @param {Boolean} force\\n   * @param {Event} e\\n   * @return {Boolean} If deactivated\\n   */\\n  eventOff(element, force = false, e = null) {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return false\\n    }\\n    // toggle\\n    if (force || (!element.classList.contains('xt-block') && self.checkOff(element))) {\\n      // off\\n      const groupElements = self.getElements(element)\\n      self.removeCurrent(groupElements[0])\\n      // @FIX raf for sequential activation/deactivation (eg: mousenter mouseleave)\\n      requestAnimationFrame(() => {\\n        if (self.getCurrents().length === 0) {\\n          self.currentIndex = null\\n        }\\n        self.setDirection()\\n      })\\n      const targets = self.getTargets(element)\\n      const elementsInner = Xt.queryAll(element, options.elementsInner)\\n      const targetsInner = Xt.queryAll(targets, options.targetsInner)\\n      // @FIX sometimes blur is undefined\\n      if (element.blur) {\\n        // @FIX :focus styles\\n        element.blur()\\n      }\\n      // [disabled]\\n      if (options.autoDisable && options.min === options.max) {\\n        for (const disable of groupElements) {\\n          disable.removeAttribute('disabled')\\n        }\\n      }\\n      // auto\\n      if (!self.getCurrents().length) {\\n        self.eventAutostop()\\n      }\\n      // queue obj\\n      const actionCurrent = 'Off'\\n      const actionOther = 'On'\\n      self.eventQueue(actionCurrent, groupElements, targets, elementsInner, targetsInner, e)\\n      // remove queue not started if queue too big\\n      if (self.detail['queue' + actionCurrent].length > options.max) {\\n        // remove queue and stop\\n        const removedOn = self.detail['queue' + actionOther].shift()\\n        self.queueStop(actionOther, actionCurrent, removedOn)\\n        // remove queue and stop\\n        const removedOff = self.detail['queue' + actionCurrent].shift()\\n        self.queueStop(actionCurrent, actionOther, removedOff)\\n      }\\n      // queue run\\n      // eslint-disable-next-line guard-for-in\\n      for (const type in self.detail['queue' + actionCurrent][0]) {\\n        self.queueStart(actionCurrent, actionOther, type, 0, true)\\n      }\\n      // deactivated\\n      return true\\n    }\\n    // deactivated\\n    return false\\n  }\\n\\n  /**\\n   * element on\\n   * @param {String} actionCurrent\\n   * @param {NodeList|Array|Node|HTMLElement|EventTarget|Window} groupElements\\n   * @param {NodeList|Array|Node|HTMLElement|EventTarget|Window} targets\\n   * @param {NodeList|Array|Node|HTMLElement|EventTarget|Window} elementsInner\\n   * @param {NodeList|Array|Node|HTMLElement|EventTarget|Window} targetsInner\\n   * @param {Event} e\\n   */\\n  eventQueue(actionCurrent, groupElements, targets, elementsInner, targetsInner, e) {\\n    const self = this\\n    const options = self.options\\n    // populate\\n    const obj = {}\\n    obj.elements = {\\n      queueEls: groupElements,\\n      event: e,\\n    }\\n    if (targets.length) {\\n      obj.targets = {\\n        queueEls: targets,\\n        event: e,\\n      }\\n    }\\n    if (elementsInner.length) {\\n      obj.elementsInner = {\\n        queueEls: elementsInner,\\n        event: e,\\n      }\\n    }\\n    if (targetsInner.length) {\\n      obj.targetsInner = {\\n        queueEls: targetsInner,\\n        event: e,\\n      }\\n    }\\n    // put in queue\\n    if (typeof options.instant !== 'object' && options.instant === true) {\\n      self.detail['queue' + actionCurrent] = [obj]\\n    } else {\\n      self.detail['queue' + actionCurrent].unshift(obj)\\n    }\\n  }\\n\\n  /**\\n   * auto\\n   */\\n  eventAuto() {\\n    const self = this\\n    const options = self.options\\n    // auto\\n    if (!self.detail.autopaused) {\\n      if (Xt.visible(self.object)) {\\n        // not when disabled\\n        if (getComputedStyle(self.object).pointerEvents !== 'none') {\\n          if (options.auto.inverse) {\\n            self.goToPrev(options.auto.step)\\n          } else {\\n            self.goToNext(options.auto.step)\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * auto start\\n   */\\n  eventAutostart() {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // start\\n    if (options.auto && options.auto.time && !self.wrap) {\\n      // not when nothing activated\\n      if (self.currentIndex !== null && (!self.initial || options.auto.initial)) {\\n        // clear\\n        clearTimeout(Xt.dataStorage.get(self.object, self.componentNamespace + 'AutoTimeout'))\\n        // auto\\n        const time = options.auto.time\\n        // @fix raf because after .xt custom listeners\\n        requestAnimationFrame(() => {\\n          // timeout\\n          Xt.dataStorage.set(\\n            self.object,\\n            self.componentNamespace + 'AutoTimeout',\\n            setTimeout(() => {\\n              // auto\\n              self.eventAuto()\\n            }, time)\\n          )\\n          // listener dispatch\\n          self.object.dispatchEvent(new CustomEvent('autostart.xt'))\\n        })\\n      }\\n    }\\n  }\\n\\n  /**\\n   * auto stop\\n   */\\n  eventAutostop() {\\n    const self = this\\n    const options = self.options\\n    // stop\\n    if (options.auto && options.auto.time && !self.wrap) {\\n      // clear\\n      clearTimeout(Xt.dataStorage.get(self.object, self.componentNamespace + 'AutoTimeout'))\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('autostop.xt'))\\n    }\\n  }\\n\\n  /**\\n   * auto pause\\n   */\\n  eventAutopause() {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // pause\\n    if (options.auto && options.auto.time) {\\n      if (!self.detail.autopaused) {\\n        // paused\\n        self.detail.autopaused = true\\n        // clear\\n        clearTimeout(Xt.dataStorage.get(self.object, self.componentNamespace + 'AutoTimeout'))\\n        // listener dispatch\\n        self.object.dispatchEvent(new CustomEvent('autopause.xt'))\\n      }\\n    }\\n  }\\n\\n  /**\\n   * auto resume\\n   */\\n  eventAutoresume() {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // @FIX focus eventAutoresume happening after first interaction\\n    requestAnimationFrame(() => {\\n      // pause\\n      if (options.auto && options.auto.time) {\\n        if (self.detail.autopaused) {\\n          // paused\\n          self.detail.autopaused = false\\n          // resume\\n          self.eventAutostart()\\n          // listener dispatch\\n          self.object.dispatchEvent(new CustomEvent('autoresume.xt'))\\n        }\\n      }\\n    })\\n  }\\n\\n  /**\\n   * jump\\n   * @param {Node|HTMLElement|EventTarget|Window} tr\\n   */\\n  eventJump(tr) {\\n    const self = this\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // check disabled\\n    if (tr.closest('.xt-jumps-none')) {\\n      return\\n    }\\n    // jump\\n    const element = self.getElements(tr)[0]\\n    if (self.checkOn(element)) {\\n      self.eventOn(element)\\n    }\\n  }\\n\\n  /**\\n   * nav\\n   * @param {Node|HTMLElement|EventTarget|Window} nav\\n   */\\n  eventNav(nav) {\\n    const self = this\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // nav\\n    const step = parseFloat(nav.getAttribute('data-xt-nav'))\\n    if (step < 0) {\\n      self.goToPrev(-step, true)\\n    } else {\\n      self.goToNext(step, true)\\n    }\\n  }\\n\\n  /**\\n   * medialoadedReinit\\n   */\\n  eventMedialoadedReinit() {\\n    const self = this\\n    // debug\\n    if (Xt.debug === true) {\\n      console.debug('Xt.debug: mediaLoadedReinit', self.object)\\n    }\\n    // restart\\n    self.reinit()\\n  }\\n\\n  //\\n  // queue\\n  //\\n\\n  /**\\n   * queue start\\n   * @param {String} actionCurrent Current action\\n   * @param {String} actionOther Other action\\n   * @param {String} type Type of element\\n   * @param {Number} index Queue index\\n   * @param {Boolean} queueInitial If it's the initial queue\\n   */\\n  queueStart(actionCurrent, actionOther, type, index, queueInitial = false) {\\n    const self = this\\n    const options = self.options\\n    // queue start\\n    const obj = self.detail['queue' + actionCurrent][index]\\n    if (obj && obj[type] && !obj[type].done) {\\n      const queueOther = self.detail['queue' + actionOther]\\n      const objOther = queueOther[queueOther.length - 1]\\n      /*\\n      if (objOther) {\\n        if (objOther[type]) {\\n          console.debug(actionCurrent, type, objOther[type].done)\\n        } else {\\n          console.debug(actionCurrent, type, 'no obj type')\\n        }\\n      } else {\\n        console.debug(actionCurrent, type, 'no obj')\\n      }\\n      */\\n      if (!objOther || !objOther[type] || objOther[type].done) {\\n        // zIndex\\n        if (options.zIndex) {\\n          // eslint-disable-next-line guard-for-in\\n          for (const type in options.zIndex) {\\n            for (const el of obj[type].queueEls) {\\n              self.detail.zIndex = self.detail.zIndex ? self.detail.zIndex : options.zIndex[type].start\\n              self.detail.zIndex = self.detail.zIndex + options.zIndex[type].factor\\n              el.style.zIndex = self.detail.zIndex\\n              // zIndex reset after duration\\n              const duration = Xt.animTime(el, options['duration' + actionCurrent])\\n              clearTimeout(Xt.dataStorage.get(el, self.componentNamespace + 'indexTimeout'))\\n              Xt.dataStorage.set(\\n                el,\\n                self.componentNamespace + 'indexTimeout',\\n                setTimeout(() => {\\n                  self.detail.zIndex = options.zIndex[type].start\\n                  el.style.zIndex = self.detail.zIndex\\n                }, duration)\\n              )\\n            }\\n          }\\n        }\\n        // @FIX if initial must be instant, fixes queue\\n        if (self.initial || (typeof options.instant !== 'object' && options.instant === true)) {\\n          obj[type].instant = true\\n        } else if (typeof options.instant === 'object' && options.instant[type]) {\\n          obj[type].instantType = true\\n        }\\n        // start queue\\n        self.queueDelay(actionCurrent, actionOther, obj, type, queueInitial)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * queue stop\\n   * @param {String} actionCurrent Current action\\n   * @param {String} actionOther Other action\\n   * @param {Object} obj Queue object to end\\n   */\\n  queueStop(actionCurrent, actionOther, obj) {\\n    const self = this\\n    // stop type if done\\n    for (const type in obj) {\\n      if (obj[type].done) {\\n        for (const el of obj[type].queueEls) {\\n          // clear timeout and frame\\n          cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'CollapseFrame'))\\n          cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + type + 'AnimFrame'))\\n          clearTimeout(Xt.dataStorage.get(el, self.componentNamespace + type + 'DelayTimeout'))\\n          clearTimeout(Xt.dataStorage.get(el, self.componentNamespace + type + 'AnimTimeout'))\\n          // done other queue\\n          self.queueDelayDone(actionOther, actionCurrent, obj, el, type, true)\\n          self.queueAnimDone(actionOther, actionCurrent, obj, el, type, true)\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * queue stop all\\n   */\\n  queueStopAll() {\\n    const self = this\\n    // stop all obj in queues\\n    if (self.detail) {\\n      // @FIX not already initialized\\n      const actions = [\\n        { current: 'On', other: 'Off' },\\n        { current: 'Off', other: 'On' },\\n      ]\\n      for (const action of actions) {\\n        // remove queue and stop\\n        const removed = self.detail['queue' + action.current].shift()\\n        self.queueStop(action.current, action.other, removed)\\n        self.detail['queue' + action.current] = []\\n      }\\n    }\\n  }\\n\\n  /**\\n   * queue delay\\n   * @param {String} actionCurrent Current action\\n   * @param {String} actionOther Other action\\n   * @param {Object} obj Queue object\\n   * @param {String} type Type of elements\\n   * @param {Boolean} queueInitial If it's the initial queue\\n   */\\n  queueDelay(actionCurrent, actionOther, obj, type, queueInitial) {\\n    const self = this\\n    const options = self.options\\n    // delay\\n    const els = obj[type].queueEls\\n    for (const el of els) {\\n      // delay\\n      let delay = options['delay' + actionCurrent]\\n      if (delay) {\\n        if (isNaN(delay)) {\\n          const count = Xt.dataStorage.get(el, self.componentNamespace + actionCurrent + 'Count') || els.findIndex(x => x === el)\\n          const tot = Xt.dataStorage.get(el, self.componentNamespace + actionCurrent + 'Tot') || els.length\\n          if (typeof delay === 'function') {\\n            delay = delay(count, tot - 1)\\n          }\\n        } else {\\n          delay = queueInitial && !options.delayInitial ? 0 : delay\\n        }\\n      }\\n      if (actionCurrent === 'On') {\\n        // listener dispatch\\n        el.dispatchEvent(new CustomEvent('ondelay.xt'))\\n      } else if (actionCurrent === 'Off') {\\n        // listener dispatch\\n        el.dispatchEvent(new CustomEvent('offdelay.xt'))\\n      }\\n      // delay fnc\\n      cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + type + 'AnimFrame'))\\n      clearTimeout(Xt.dataStorage.get(el, self.componentNamespace + type + 'DelayTimeout'))\\n      clearTimeout(Xt.dataStorage.get(el, self.componentNamespace + type + 'AnimTimeout'))\\n      if (!delay) {\\n        self.queueDelayDone(actionCurrent, actionOther, obj, el, type)\\n      } else {\\n        Xt.dataStorage.set(\\n          el,\\n          self.componentNamespace + type + 'DelayTimeout',\\n          setTimeout(() => {\\n            self.queueDelayDone(actionCurrent, actionOther, obj, el, type)\\n          }, delay)\\n        )\\n      }\\n      // queue done\\n      if (obj[type].instant) {\\n        if (el === els[els.length - 1]) {\\n          // only if last element\\n          self.queueDone(actionCurrent, actionOther, obj, type)\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * queue delay done\\n   * @param {String} actionCurrent Current action\\n   * @param {String} actionOther Other action\\n   * @param {Object} obj Queue object\\n   * @param {Node|HTMLElement|EventTarget|Window} el Elements to be deactivated\\n   * @param {String} type Type of elements\\n   * @param {Boolean} skipQueue If skip queue\\n   */\\n  queueDelayDone(actionCurrent, actionOther, obj, el, type, skipQueue = false) {\\n    const self = this\\n    const options = self.options\\n    if (actionCurrent === 'On') {\\n      // activation\\n      self.activate(el)\\n      // special\\n      const before = getComputedStyle(el, ':before').getPropertyValue('content').replace(/['\\\"]+/g, '')\\n      const after = getComputedStyle(el, ':after').getPropertyValue('content').replace(/['\\\"]+/g, '')\\n      self.specialCenter(el, before)\\n      self.specialMiddle(el, before, after)\\n      self.specialCollapse(actionCurrent, el, before, after)\\n      self.specialBackdrop(actionCurrent, obj)\\n      self.specialClassHtml(actionCurrent)\\n      self.specialScrollbar(actionCurrent)\\n      if (options.focusLimit) {\\n        if (obj.targets) {\\n          if (type === 'targets') {\\n            Xt.focusLimit.on(obj.targets.queueEls[0])\\n          }\\n        } else if (type === 'elements') {\\n          Xt.focusLimit.on(obj.elements.queueEls[0])\\n        }\\n      }\\n      // @FIX when standalone !self.targets.length && type === 'elements'\\n      if (type === 'targets' || (!self.targets.length && type === 'elements')) {\\n        // appendTo\\n        if (options.appendTo) {\\n          const appendToTarget = document.querySelector(options.appendTo)\\n          const appendOrigin = document.querySelector('[data-xt-origin=\\\"' + self.namespace + '\\\"]')\\n          if (!appendOrigin) {\\n            el.before(Xt.createElement('<div class=\\\"xt-ignore\\\" data-xt-origin=\\\"' + self.namespace + '\\\"></div>'))\\n          }\\n          el.classList.add('xt-ignore', 'xt-ignore-once') // @FIX ignore once for mount when moving\\n          appendToTarget.append(el)\\n        }\\n      }\\n      if (type === 'targets' || type === 'targetsInner' || el === self.object) {\\n        self.specialClose(actionCurrent, el)\\n      }\\n      // aria\\n      if (options.aria) {\\n        if (type === 'elements') {\\n          // selected\\n          const ariaEls = Xt.queryAll(el, options.ariaControls)\\n          const ariaEl = ariaEls.length ? ariaEls[0] : el\\n          ariaEl.setAttribute('aria-selected', 'true')\\n        }\\n        if (type === 'targets') {\\n          // expanded\\n          const role = el.getAttribute('role')\\n          if (role === 'tabpanel' || role === 'listbox' || role === 'dialog') {\\n            el.setAttribute('aria-expanded', 'true')\\n          }\\n        }\\n        // tabindex\\n        if (options.aria === true || (typeof options.aria === 'object' && options.aria.tabindex)) {\\n          if (type === 'targets') {\\n            const focusables = el.querySelectorAll(Xt.focusables)\\n            for (const focusable of focusables) {\\n              focusable.removeAttribute('tabindex')\\n            }\\n          }\\n        }\\n      }\\n      // listener dispatch\\n      if (type !== 'elementsInner' && type !== 'targetsInner') {\\n        el.dispatchEvent(new CustomEvent('on.xt'))\\n      }\\n    } else if (actionCurrent === 'Off') {\\n      // activation\\n      self.deactivate(el)\\n      // special\\n      const before = getComputedStyle(el, ':before').getPropertyValue('content').replace(/['\\\"]+/g, '')\\n      const after = getComputedStyle(el, ':after').getPropertyValue('content').replace(/['\\\"]+/g, '')\\n      self.specialCollapse(actionCurrent, el, before, after)\\n      if (type === 'targets' || type === 'targetsInner' || el === self.object) {\\n        self.specialClose(actionCurrent, el)\\n      }\\n      self.specialClassHtml(actionCurrent)\\n      if (options.focusLimit) {\\n        const el = obj.targets ? obj.targets.queueEls[0] : obj.elements.queueEls[0]\\n        Xt.focusLimit.off(el)\\n      }\\n      // listener dispatch\\n      if (type !== 'elementsInner' && type !== 'targetsInner') {\\n        el.dispatchEvent(new CustomEvent('off.xt'))\\n      }\\n    }\\n    // queue\\n    if (!skipQueue) {\\n      self.queueAnim(actionCurrent, actionOther, obj, el, type)\\n      // queue done\\n      if (obj[type].instantType) {\\n        const els = obj[type].queueEls\\n        if (el === els[els.length - 1]) {\\n          // only if last element\\n          self.queueDone(actionCurrent, actionOther, obj, type)\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * queue anim\\n   * @param {String} actionCurrent Current action\\n   * @param {String} actionOther Other action\\n   * @param {Object} obj Queue object\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element to be animated\\n   * @param {String} type Type of element\\n   */\\n  queueAnim(actionCurrent, actionOther, obj, el, type) {\\n    const self = this\\n    const options = self.options\\n    // anim\\n    const duration = Xt.animTime(el, options['duration' + actionCurrent])\\n    clearTimeout(Xt.dataStorage.get(el, self.componentNamespace + type + 'AnimTimeout'))\\n    // queue done\\n    if (!duration) {\\n      // keep the same level of raf as others\\n      cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + type + 'AnimFrame'))\\n      Xt.dataStorage.set(\\n        el,\\n        self.componentNamespace + type + 'AnimFrame',\\n        requestAnimationFrame(() => {\\n          self.queueAnimDone(actionCurrent, actionOther, obj, el, type)\\n        })\\n      )\\n    } else {\\n      Xt.dataStorage.set(\\n        el,\\n        self.componentNamespace + type + 'AnimTimeout',\\n        setTimeout(() => {\\n          self.queueAnimDone(actionCurrent, actionOther, obj, el, type)\\n        }, duration)\\n      )\\n    }\\n  }\\n\\n  /**\\n   * queue anim done\\n   * @param {String} actionCurrent Current action\\n   * @param {String} actionOther Other action\\n   * @param {Object} obj Queue object\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element to be animated\\n   * @param {String} type Type of element\\n   * @param {Boolean} skipQueue If skip queue\\n   */\\n  queueAnimDone(actionCurrent, actionOther, obj, el, type, skipQueue = false) {\\n    const self = this\\n    const options = self.options\\n    // special\\n    if (actionCurrent === 'On') {\\n      // activation\\n      self.activateDone(el)\\n      // special\\n      const before = getComputedStyle(el, ':before').getPropertyValue('content').replace(/['\\\"]+/g, '')\\n      const after = getComputedStyle(el, ':after').getPropertyValue('content').replace(/['\\\"]+/g, '')\\n      self.specialCollapse('Reset', el, before, after)\\n      // listener dispatch\\n      if (type !== 'elementsInner' && type !== 'targetsInner') {\\n        el.dispatchEvent(new CustomEvent('ondone.xt'))\\n      }\\n    } else if (actionCurrent === 'Off') {\\n      // activation\\n      self.deactivateDone(el)\\n      // special\\n      if (type === 'targets' || (!self.targets.length && type === 'elements')) {\\n        // appendTo\\n        if (options.appendTo) {\\n          const appendOrigin = document.querySelector('[data-xt-origin=\\\"' + self.namespace + '\\\"]')\\n          if (appendOrigin) {\\n            el.classList.add('xt-ignore', 'xt-ignore-once') // @FIX ignore once for mount when moving\\n            appendOrigin.before(el)\\n            appendOrigin.remove()\\n          } else {\\n            el.remove()\\n          }\\n        }\\n      }\\n      // aria\\n      if (options.aria) {\\n        // selected\\n        if (type === 'elements') {\\n          const ariaEls = Xt.queryAll(el, options.ariaControls)\\n          const ariaEl = ariaEls.length ? ariaEls[0] : el\\n          ariaEl.setAttribute('aria-selected', 'false')\\n        }\\n        if (type === 'targets') {\\n          // expanded\\n          const role = el.getAttribute('role')\\n          if (role === 'tabpanel' || role === 'listbox' || role === 'dialog') {\\n            el.setAttribute('aria-expanded', 'false')\\n          }\\n          // tabindex\\n          if (options.aria === true || (typeof options.aria === 'object' && options.aria.tabindex)) {\\n            const focusables = el.querySelectorAll(Xt.focusables)\\n            for (const focusable of focusables) {\\n              focusable.setAttribute('tabindex', '-1')\\n              focusable.blur()\\n            }\\n          }\\n        }\\n      }\\n      // listener dispatch\\n      if (type !== 'elementsInner' && type !== 'targetsInner') {\\n        el.dispatchEvent(new CustomEvent('offdone.xt'))\\n      }\\n    }\\n    // queue\\n    if (!skipQueue) {\\n      // queue done\\n      if (!obj[type].instant && !obj[type].instantType) {\\n        const els = obj[type].queueEls\\n        if (el === els[els.length - 1]) {\\n          // only if last element\\n          self.queueDone(actionCurrent, actionOther, obj, type)\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * queue done\\n   * @param {String} actionCurrent Current action\\n   * @param {String} actionOther Other action\\n   * @param {Object} obj Queue object\\n   * @param {String} type Type of element\\n   */\\n\\n  queueDone(actionCurrent, actionOther, obj, type) {\\n    const self = this\\n    // check\\n    if (obj[type]) {\\n      // type done\\n      obj[type].done = true\\n      // check done\\n      let done = 0\\n      for (const type in obj) {\\n        if (obj[type].done) {\\n          done++\\n        }\\n      }\\n      // queue\\n      self.queueStart(actionOther, actionCurrent, type, self.detail['queue' + actionOther].length - 1)\\n      // all done\\n      if (done === Object.entries(obj).length) {\\n        // remove queue\\n        self.detail['queue' + actionCurrent].pop()\\n        // queue complete\\n        self.queueComplete(actionCurrent, obj)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * logic to execute on queue complete\\n   * @param {String} actionCurrent Current action\\n   * @param {Object} obj Queue object\\n   */\\n  queueComplete(actionCurrent, obj) {\\n    const self = this\\n    if (actionCurrent === 'On') {\\n      // auto\\n      self.eventAutostart()\\n      // @fix raf because after .xt custom listeners\\n      requestAnimationFrame(() => {\\n        // remove class initial\\n        if (self.initial) {\\n          for (const type in obj) {\\n            if (obj[type].done) {\\n              for (const el of obj[type].queueEls) {\\n                el.classList.remove(...self.classesInitial)\\n              }\\n            }\\n          }\\n        }\\n        // reset\\n        self.inverse = null\\n        self.initial = false\\n        self.wrap = false\\n      })\\n    } else if (actionCurrent === 'Off') {\\n      // special\\n      self.specialBackdrop(actionCurrent, obj)\\n      self.specialScrollbar(actionCurrent)\\n    }\\n  }\\n\\n  //\\n  // wheel\\n  //\\n\\n  /**\\n   * wheel handler\\n   * @param {Event} e\\n   */\\n  eventWheelHandler(e) {\\n    const self = this\\n    self.eventWheelsmooth(e)\\n  }\\n\\n  /**\\n   * wheel block handler\\n   * @param {Event} e\\n   */\\n  eventWheelblockHandler(e) {\\n    const self = this\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // prevent default if not loop\\n    const max = self.getElementsGroups().length - 1\\n    const delta = -e.deltaY || e.wheelDeltaY\\n    if ((delta > 0 && self.currentIndex > 0) || (delta < 0 && self.currentIndex < max - 1)) {\\n      // prevent wheel\\n      e.preventDefault()\\n      e.stopPropagation()\\n    }\\n  }\\n\\n  /**\\n   * event wheel smooth for Xt\\n   * @param {Event} e\\n   */\\n\\n  eventWheelsmooth(e) {\\n    const self = this\\n    const options = self.options\\n    let el = self.wheel\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // delta\\n    let delta = -e.deltaY || e.wheelDeltaY\\n    // when no delta or delta = 0\\n    if (!delta) {\\n      return\\n    }\\n    // if document.scrollingElement scroll current overflow scroll\\n    if (el === document.scrollingElement) {\\n      let elFinal\\n      for (let composed of e.composedPath()) {\\n        if (composed instanceof Element) {\\n          const overflowY = getComputedStyle(composed).overflowY\\n          if (composed === document.body) {\\n            composed = document.scrollingElement // @FIX use scrollingElement when body\\n          }\\n          if (\\n            composed === document.scrollingElement || // always when scrollingElement\\n            overflowY === 'scroll' || // always when scroll\\n            (overflowY === 'auto' && composed.scrollHeight > composed.clientHeight)\\n          ) {\\n            // only when scrollable\\n            if (overflowY === 'scroll' && window.self === window.top) {\\n              // always when scroll and not iframe\\n              elFinal = composed\\n            } else if (\\n              (delta < 0 || composed.scrollTop > 0) && // limit top\\n              (delta > 0 || composed.scrollTop < composed.scrollHeight - composed.clientHeight)\\n            ) {\\n              // limit bottom\\n              elFinal = composed\\n            } else if (window.self !== window.top) {\\n              elFinal = window.top.document.scrollingElement\\n            } else {\\n              elFinal = window.self.document.scrollingElement\\n            }\\n            break\\n          }\\n        }\\n      }\\n      if (!elFinal) {\\n        return\\n      } else if (elFinal === document.body) {\\n        elFinal = self.object // document.scrollingElement\\n      }\\n      el = elFinal\\n    }\\n    // stop old when changing wheel target\\n    if (self.wheelTarget !== el) {\\n      self.eventWheelstop()\\n    }\\n    self.wheelTarget = el\\n    // delta\\n    if (e.deltaMode === 1) {\\n      // deltaMode 1: by lines\\n      delta *= 30\\n    } else if (e.deltaMode === 2) {\\n      // deltaMode 2: by pages\\n      if (options.wheel.horizontal) {\\n        delta *= el.clientWidth\\n      } else {\\n        delta *= el.clientHeight\\n      }\\n    }\\n    // factor\\n    delta *= options.wheel.factor\\n    // instant\\n    if (!options.wheel.friction) {\\n      // wheel\\n      if (delta < 0) {\\n        self.goToNext(1)\\n      } else if (delta > 0) {\\n        self.goToPrev(1)\\n      }\\n      // listener dispatch\\n      self.wheel.dispatchEvent(new CustomEvent('wheelstart.xt'))\\n      self.wheel.dispatchEvent(new CustomEvent('wheelend.xt'))\\n      // return\\n      return\\n    }\\n    // min and max\\n    const min = self.detail.wheelMin || 0\\n    let max = self.detail.wheelMax\\n    // calculate max\\n    if (!self.detail.wheelMax) {\\n      if (!options.wheel.transform) {\\n        if (options.wheel.horizontal) {\\n          max = el.scrollWidth - el.clientWidth\\n        } else {\\n          max = el.scrollHeight - el.clientHeight\\n        }\\n      } else {\\n        let full = 0\\n        if (options.wheel.horizontal) {\\n          for (const child of el.children) {\\n            full += child.clientWidth\\n          }\\n          max = full - el.clientWidth\\n        } else {\\n          for (const child of el.children) {\\n            full += child.clientHeight\\n          }\\n          max = full - el.clientHeight\\n        }\\n      }\\n    }\\n    // calculate end\\n    if (!self.detail.wheelMoving) {\\n      // get current\\n      if (!options.wheel.transform) {\\n        if (options.wheel.horizontal) {\\n          self.detail.wheelCurrent = el.scrollLeft\\n        } else {\\n          self.detail.wheelCurrent = el.scrollTop\\n        }\\n      } else {\\n        if (options.wheel.horizontal) {\\n          self.detail.wheelCurrent = -Xt.getTranslate(el)[0]\\n        } else {\\n          self.detail.wheelCurrent = -Xt.getTranslate(el)[1]\\n        }\\n      }\\n      // set end\\n      self.detail.wheelEnd = self.detail.wheelCurrent - delta\\n    } else {\\n      // set end\\n      self.detail.wheelEnd = self.detail.wheelEnd - delta\\n    }\\n    // friction to limit\\n    if (options.wheel.limit) {\\n      // limit\\n      self.detail.wheelEnd = Math.max(min, Math.min(self.detail.wheelEnd, max))\\n    }\\n    // propagate if already at min or max\\n    if (self.detail.wheelMin && self.detail.wheelMax) {\\n      // only when setting wheelMin and wheelMax\\n      if (delta < 0) {\\n        if (self.detail.wheelCurrent >= max) {\\n          return\\n        }\\n      } else if (delta > 0) {\\n        if (self.detail.wheelCurrent <= min) {\\n          return\\n        }\\n      }\\n    }\\n    // prevent wheel\\n    e.preventDefault()\\n    // moving\\n    if (!self.detail.wheelMoving) {\\n      self.detail.wheelMoving = true\\n      // listener dispatch\\n      self.wheel.dispatchEvent(new CustomEvent('wheelstart.xt', { detail: { wheelX: -self.detail.wheelCurrent } }))\\n      // friction\\n      self.eventFrictionsmooth(el, min, max)\\n    }\\n  }\\n\\n  /**\\n   * event friction smooth for Xt\\n   * @param {Node|HTMLElement|EventTarget|Window} el\\n   * @param {Number} min Minimum value\\n   * @param {Number} max Maximum value\\n   */\\n\\n  eventFrictionsmooth(el, min, max) {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // vars\\n    const delta = self.detail.wheelEnd - self.detail.wheelCurrent\\n    const deltaAbs = Math.abs(delta)\\n    const sign = Math.sign(delta)\\n    // momentum\\n    const fncFriction = options.wheel.friction\\n    if (deltaAbs >= options.wheel.frictionLimit) {\\n      self.detail.wheelCurrent += fncFriction(deltaAbs) * sign\\n    } else {\\n      self.detail.wheelCurrent = self.detail.wheelEnd\\n    }\\n    // set\\n    if (!options.wheel.transform) {\\n      if (options.wheel.horizontal) {\\n        el.scrollLeft = self.detail.wheelCurrent\\n      } else {\\n        el.scrollTop = self.detail.wheelCurrent\\n      }\\n    } else {\\n      if (options.wheel.horizontal) {\\n        el.style.transform = 'translateX(' + -self.detail.wheelCurrent + 'px)'\\n      } else {\\n        el.style.transform = 'translateY(' + -self.detail.wheelCurrent + 'px)'\\n      }\\n    }\\n    // loop\\n    if (self.detail.wheelCurrent > min && self.detail.wheelCurrent < max && deltaAbs >= options.wheel.frictionLimit) {\\n      // friction\\n      cancelAnimationFrame(Xt.dataStorage.get(self.wheel, self.componentNamespace + 'WheelsmoothFrame'))\\n      Xt.dataStorage.set(\\n        self.wheel,\\n        self.componentNamespace + 'WheelsmoothFrame',\\n        requestAnimationFrame(() => {\\n          self.eventFrictionsmooth(el, min, max)\\n        })\\n      )\\n      // listener dispatch\\n      self.wheel.dispatchEvent(new CustomEvent('wheel.xt', { detail: { wheelX: -self.detail.wheelCurrent } }))\\n    } else {\\n      // moving\\n      self.detail.wheelMoving = false\\n      // vars\\n      self.detail.wheelEnd = false\\n      // listener dispatch\\n      self.wheel.dispatchEvent(new CustomEvent('wheelend.xt', { detail: { wheelX: -self.detail.wheelCurrent } }))\\n    }\\n  }\\n\\n  /**\\n   * event wheel stop for Xt\\n   */\\n\\n  eventWheelstop() {\\n    const self = this\\n    const el = self.wheel\\n    cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'WheelsmoothFrame'))\\n    self.detail.wheelMoving = false\\n  }\\n\\n  //\\n  // special\\n  //\\n\\n  /**\\n   * add or remove close events on element\\n   * @param {String} actionCurrent Current action\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element\\n   */\\n  specialClose(actionCurrent, el) {\\n    const self = this\\n    const options = self.options\\n    if (actionCurrent === 'On') {\\n      // closeInside\\n      if (options.closeInside) {\\n        const closeElements = el.querySelectorAll(options.closeInside)\\n        for (const closeElement of closeElements) {\\n          const specialcloseinsideHandler = Xt.dataStorage.put(\\n            closeElement,\\n            'click/close' + '/' + self.namespace,\\n            self.eventSpecialcloseinsideHandler.bind(self)\\n          )\\n          // @FIX do not close when clicking things that trigger this\\n          requestAnimationFrame(() => {\\n            closeElement.addEventListener('click', specialcloseinsideHandler)\\n          })\\n          // focusable\\n          const specialcloseinsideKeydownHandler = Xt.dataStorage.put(\\n            closeElement,\\n            'keydown/close' + '/' + self.namespace,\\n            self.eventSpecialcloseinsideKeydownHandler.bind(self).bind(self, closeElement)\\n          )\\n          // @FIX do not close when clicking things that trigger this\\n          requestAnimationFrame(() => {\\n            closeElement.addEventListener('keydown', specialcloseinsideKeydownHandler)\\n            closeElement.setAttribute('tabindex', '0')\\n            closeElement.setAttribute('role', 'button')\\n          })\\n        }\\n      }\\n      // closeOutside\\n      if (options.closeOutside) {\\n        const closeElements = document.querySelectorAll(options.closeOutside)\\n        for (const closeElement of closeElements) {\\n          const specialcloseoutsideHandler = Xt.dataStorage.put(\\n            closeElement,\\n            'click/close' + '/' + self.namespace,\\n            self.eventSpecialcloseoutsideHandler.bind(self)\\n          )\\n          // @FIX do not close when clicking things that trigger this\\n          requestAnimationFrame(() => {\\n            closeElement.addEventListener('click', specialcloseoutsideHandler)\\n          })\\n        }\\n      }\\n    } else if (actionCurrent === 'Off') {\\n      // closeInside\\n      if (options.closeInside) {\\n        const closeElements = el.querySelectorAll(options.closeInside)\\n        for (const closeElement of closeElements) {\\n          const specialcloseinsideHandler = Xt.dataStorage.get(closeElement, 'click/close' + '/' + self.namespace)\\n          closeElement.removeEventListener('click', specialcloseinsideHandler)\\n          // focusable\\n          const specialcloseinsideKeydownHandler = Xt.dataStorage.get(closeElement, 'keydown/close' + '/' + self.namespace)\\n          closeElement.removeEventListener('keydown', specialcloseinsideKeydownHandler)\\n          closeElement.removeAttribute('tabindex')\\n          closeElement.removeAttribute('role')\\n        }\\n      }\\n      // closeOutside\\n      if (options.closeOutside) {\\n        const closeElements = document.querySelectorAll(options.closeOutside)\\n        for (const closeElement of closeElements) {\\n          const specialcloseoutsideHandler = Xt.dataStorage.get(closeElement, 'click/close' + '/' + self.namespace)\\n          closeElement.removeEventListener('click', specialcloseoutsideHandler)\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * specialClose on handler\\n   * @param {Event} e\\n   */\\n  eventSpecialcloseinsideHandler(e) {\\n    const self = this\\n    // handler\\n    if (Xt.contains([self.object, ...self.elements, ...self.targets], e.target)) {\\n      const currents = self.getCurrents()\\n      // only one close when both closeInside and closeOutside\\n      cancelAnimationFrame(Xt.dataStorage.get(self.object, self.componentNamespace + 'SpecialCloseFrame'))\\n      Xt.dataStorage.set(\\n        self.object,\\n        self.componentNamespace + 'SpecialCloseFrame',\\n        requestAnimationFrame(() => {\\n          for (const current of currents) {\\n            self.eventOff(current, true)\\n          }\\n        })\\n      )\\n    }\\n  }\\n\\n  /**\\n   * specialClose keydown handler\\n   * @param {Node|HTMLElement|EventTarget|Window} closeElement\\n   * @param {Event} e\\n   */\\n  eventSpecialcloseinsideKeydownHandler(closeElement, e) {\\n    const code = e.keyCode ? e.keyCode : e.which\\n    if (code === 13 || code === 32) {\\n      e.preventDefault()\\n      closeElement.dispatchEvent(new CustomEvent('click'))\\n    }\\n  }\\n\\n  /**\\n   * specialClose off handler\\n   * @param {Event} e\\n   */\\n  eventSpecialcloseoutsideHandler(e) {\\n    const self = this\\n    // handler\\n    if (!Xt.contains([self.object, ...self.elements, ...self.targets], e.target)) {\\n      const currents = self.getCurrents()\\n      // only one close when both closeInside and closeOutside\\n      cancelAnimationFrame(Xt.dataStorage.get(self.object, self.componentNamespace + 'SpecialCloseFrame'))\\n      Xt.dataStorage.set(\\n        self.object,\\n        self.componentNamespace + 'SpecialCloseFrame',\\n        requestAnimationFrame(() => {\\n          for (const current of currents) {\\n            self.eventOff(current, true)\\n          }\\n        })\\n      )\\n    }\\n  }\\n\\n  /**\\n   * open or close or reset collapse\\n   * @param {String} actionCurrent Current action\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element\\n   * @param {String} before Before content\\n   * @param {String} after After content\\n   */\\n  specialCollapse(actionCurrent, el, before, after) {\\n    if (el instanceof HTMLElement) {\\n      if (actionCurrent === 'On') {\\n        if (before === 'xt-collapse-height') {\\n          el.classList.remove('collapse-reset')\\n          el.classList.add('trans-anim-none')\\n          el.style.height = 'auto'\\n          const h = el.clientHeight + 'px'\\n          el.style.height = '0'\\n          el.classList.remove('trans-anim-none')\\n          // keep the same level of raf as others\\n          cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'CollapseFrame'))\\n          Xt.dataStorage.set(\\n            el,\\n            self.componentNamespace + 'CollapseFrame',\\n            requestAnimationFrame(() => {\\n              el.style.height = h\\n            })\\n          )\\n        }\\n        if (after === 'xt-collapse-width') {\\n          el.classList.remove('collapse-reset')\\n          el.classList.add('trans-anim-none')\\n          el.style.width = 'auto'\\n          const w = el.clientWidth + 'px'\\n          el.style.width = '0'\\n          el.classList.remove('trans-anim-none')\\n          // keep the same level of raf as others\\n          cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'CollapseFrame'))\\n          Xt.dataStorage.set(\\n            el,\\n            self.componentNamespace + 'CollapseFrame',\\n            requestAnimationFrame(() => {\\n              el.style.width = w\\n            })\\n          )\\n        }\\n      } else if (actionCurrent === 'Off') {\\n        if (before === 'xt-collapse-height') {\\n          el.classList.remove('collapse-reset')\\n          el.classList.add('trans-anim-none')\\n          const h = el.offsetHeight + 'px'\\n          el.style.height = h\\n          el.classList.remove('trans-anim-none')\\n          // keep the same level of raf as others\\n          cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'CollapseFrame'))\\n          Xt.dataStorage.set(\\n            el,\\n            self.componentNamespace + 'CollapseFrame',\\n            requestAnimationFrame(() => {\\n              el.style.height = '0'\\n            })\\n          )\\n        }\\n        if (after === 'xt-collapse-width') {\\n          el.classList.remove('collapse-reset')\\n          el.classList.add('trans-anim-none')\\n          const w = el.offsetWidth + 'px'\\n          el.style.width = w\\n          el.classList.remove('trans-anim-none')\\n          // keep the same level of raf as others\\n          cancelAnimationFrame(Xt.dataStorage.get(el, self.componentNamespace + 'CollapseFrame'))\\n          Xt.dataStorage.put(\\n            el,\\n            self.componentNamespace + 'CollapseFrame',\\n            requestAnimationFrame(() => {\\n              el.style.width = '0'\\n            })\\n          )\\n        }\\n      } else if (actionCurrent === 'Reset') {\\n        if (before === 'xt-collapse-height') {\\n          el.style.height = 'inherit'\\n          el.classList.add('collapse-reset')\\n        }\\n        if (after === 'xt-collapse-width') {\\n          el.style.width = 'inherit'\\n          el.classList.add('collapse-reset')\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * scrollbar activation\\n   * @param {String} actionCurrent Current action\\n   */\\n  specialScrollbar(actionCurrent) {\\n    const self = this\\n    const options = self.options\\n    if (actionCurrent === 'On') {\\n      // scrollbar on\\n      if (options.scrollbar) {\\n        // checks\\n        Xt.scrollbar.add(self.namespace)\\n        // check fixed\\n        const checks = document.querySelectorAll('.xt-fixed-check, .xt-fixed-check > *')\\n        for (const check of checks) {\\n          const style = getComputedStyle(check)\\n          if (style.position === 'fixed') {\\n            check.classList.add('xt-fixed')\\n          } else {\\n            check.classList.remove('xt-fixed')\\n          }\\n        }\\n        // scrollbar\\n        const container = document.documentElement\\n        container.classList.add('xt-scrollbar')\\n        Xt.scrollbarSpaceOn(container)\\n      }\\n    } else if (actionCurrent === 'Off') {\\n      // scrollbar off\\n      if (options.scrollbar) {\\n        // checks\\n        Xt.scrollbar.remove(self.namespace)\\n        if (!Xt.scrollbar.get().length) {\\n          // scrollbar\\n          const container = document.documentElement\\n          container.classList.remove('xt-scrollbar')\\n          Xt.scrollbarSpaceOff(container)\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * add or remove html class\\n   * @param {String} actionCurrent Current action\\n   */\\n  specialClassHtml(actionCurrent) {\\n    const self = this\\n    const options = self.options\\n    if (actionCurrent === 'On') {\\n      // class on\\n      if (options.classHtml) {\\n        const container = document.documentElement\\n        container.classList.add(...options.classHtml.split(' '))\\n      }\\n    } else if (actionCurrent === 'Off') {\\n      // class off\\n      if (options.classHtml) {\\n        const container = document.documentElement\\n        container.classList.remove(...options.classHtml.split(' '))\\n      }\\n    }\\n  }\\n\\n  /**\\n   * backdrop append to element\\n   * @param {String} actionCurrent Current action\\n   * @param {Object} obj Queue object\\n   */\\n  specialBackdrop(actionCurrent, obj) {\\n    const self = this\\n    const options = self.options\\n    // backdrop\\n    if (options.backdrop) {\\n      const elements = obj['targets'] ? Xt.arrSingle(obj['targets'].queueEls) : Xt.arrSingle(self.object)\\n      for (const element of elements) {\\n        if (actionCurrent === 'On') {\\n          const backdrops = element.querySelectorAll('.backdrop')\\n          if (!backdrops.length) {\\n            const backdrop = Xt.createElement('<div class=\\\"backdrop xt-ignore\\\"></div>')\\n            element.append(backdrop)\\n            // @FIX pass wheel event or when you mousewheel over .backdrop it doesn't scroll\\n            const eWheel = 'onwheel' in backdrop ? 'wheel' : backdrop.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll'\\n            backdrop.addEventListener(\\n              eWheel,\\n              e => {\\n                const delta = -e.deltaY || e.wheelDeltaY\\n                element.scrollTop -= delta\\n              },\\n              { passive: true }\\n            )\\n          }\\n        } else if (actionCurrent === 'Off') {\\n          const backdrops = element.querySelectorAll('.backdrop')\\n          if (backdrops.length) {\\n            for (const backdrop of backdrops) {\\n              backdrop.remove()\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * center position on activation\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element\\n   * @param {String} before Before content\\n   */\\n  specialCenter(el, before) {\\n    const self = this\\n    // specialCenter\\n    if (before === 'xt-drop-center') {\\n      const add = self.object.clientWidth\\n      const remove = el.clientWidth\\n      el.style.left = (add - remove) / 2 + 'px'\\n    }\\n  }\\n\\n  /**\\n   * middle position on activation\\n   * @param {Node|HTMLElement|EventTarget|Window} el Element\\n   * @param {String} before Before content\\n   * @param {String} after After content\\n   */\\n  specialMiddle(el, before, after) {\\n    const self = this\\n    // specialMiddle\\n    if (after === 'xt-drop-middle') {\\n      const add = self.object.clientHeight\\n      const remove = el.clientHeight\\n      el.style.top = (add - remove) / 2 + 'px'\\n    }\\n  }\\n\\n  //\\n  // index\\n  //\\n\\n  /**\\n   * get next index\\n   * @param {Number} amount\\n   * @param {Boolean} loop\\n   * @return {Number} index\\n   */\\n  getNextIndex(amount = 1, loop = null) {\\n    const self = this\\n    // logic\\n    let index = 0\\n    if (self.currentIndex !== null) {\\n      index = self.currentIndex + amount\\n    }\\n    return self.getNumIndex(index, loop)\\n  }\\n\\n  /**\\n   * get next element\\n   * @param {Number} amount\\n   * @param {Boolean} loop\\n   * @return {Number} index\\n   */\\n  getNext(amount = 1, loop = null) {\\n    const self = this\\n    // logic\\n    const i = self.getNextIndex(amount, loop)\\n    return self.getElementsGroups()[i]\\n  }\\n\\n  /**\\n   * activate next element\\n   * @param {Number} amount\\n   * @param {Boolean} force\\n   * @param {Boolean} loop\\n   */\\n  goToNext(amount = 1, force = false, loop = null) {\\n    const self = this\\n    // goToNum\\n    self.inverse = false\\n    self.goToNum(self.getNextIndex(amount, loop), force, loop)\\n  }\\n\\n  /**\\n   * get prev index\\n   * @param {Number} amount\\n   * @param {Boolean} loop\\n   * @return {Number} index\\n   */\\n  getPrevIndex(amount = 1, loop = null) {\\n    const self = this\\n    // logic\\n    let index = self.getElementsGroups().length - 1\\n    if (self.currentIndex !== null) {\\n      index = self.currentIndex - amount\\n    }\\n    return self.getNumIndex(index, loop)\\n  }\\n\\n  /**\\n   * get prev element\\n   * @param {Number} amount\\n   * @param {Boolean} loop\\n   * @return {Number} index\\n   */\\n  getPrev(amount = 1, loop = null) {\\n    const self = this\\n    // logic\\n    const i = self.getPrevIndex(amount, loop)\\n    return self.getElementsGroups()[i]\\n  }\\n\\n  /**\\n   * activate prev element\\n   * @param {Number} amount\\n   * @param {Boolean} force\\n   * @param {Boolean} loop\\n   */\\n  goToPrev(amount = 1, force = false, loop = null) {\\n    const self = this\\n    // goToNum\\n    self.inverse = true\\n    self.goToNum(self.getPrevIndex(amount, loop), force, loop)\\n  }\\n\\n  /**\\n   * get number index\\n   * @param {Number} index\\n   * @param {Boolean} loop\\n   * @return {Number} index\\n   */\\n  getNumIndex(index, loop = null) {\\n    const self = this\\n    const options = self.options\\n    // check\\n    const min = 0\\n    const max = self.getElementsGroups().length - 1\\n    if (min === max) {\\n      // if only one go to the only one\\n      index = min\\n    } else {\\n      if (index > max) {\\n        if (loop || (loop === null && options.loop)) {\\n          index = index - max - 1\\n          index = index > max ? max : index // prevent overflow\\n        } else {\\n          index = max\\n        }\\n      } else if (index < min) {\\n        if (loop || (loop == null && options.loop)) {\\n          index = index + max + 1\\n          index = index < min ? min : index // prevent overflow\\n        } else {\\n          index = min\\n        }\\n      }\\n    }\\n    // element\\n    return index\\n  }\\n\\n  /**\\n   * get number element\\n   * @param {Number} index\\n   * @param {Boolean} loop\\n   * @return {Element} element\\n   */\\n  getNum(index = 1, loop = null) {\\n    const self = this\\n    // logic\\n    const i = self.getNumIndex(index, loop)\\n    return self.getElementsGroups()[i]\\n  }\\n\\n  /**\\n   * activate number element\\n   * @param {Number} index\\n   * @param {Boolean} force\\n   * @param {Boolean} loop\\n   */\\n  goToNum(index, force = false, loop = null) {\\n    const self = this\\n    // go\\n    const el = self.getNum(index, loop)\\n    self.eventOn(el, force)\\n  }\\n\\n  //\\n  // status\\n  //\\n\\n  /**\\n   * status handler\\n   * @param {Event} e\\n   */\\n  eventStatusHandler(e = null) {\\n    const self = this\\n    // check\\n    let check = self.object\\n    if (self.mode === 'unique') {\\n      check = self.targets[0]\\n    }\\n    // triggering e.detail.container\\n    if (!e || !e.detail || !e.detail.container || e.detail.container.contains(check)) {\\n      Xt.eventDelay(\\n        e,\\n        check,\\n        () => {\\n          // handler\\n          self.eventStatus()\\n        },\\n        self.componentNamespace + 'Status'\\n      )\\n    }\\n  }\\n\\n  /**\\n   * status\\n   */\\n  eventStatus() {\\n    const self = this\\n    // check\\n    let check = self.object\\n    if (self.mode === 'unique') {\\n      check = self.targets[0]\\n    }\\n    // status\\n    const str = getComputedStyle(check, ':after').getPropertyValue('content').replace(/['\\\"]+/g, '')\\n    if (\\n      check instanceof HTMLElement && // @FIX not on window\\n      str === 'xt-disable-after-init'\\n    ) {\\n      // @FIX do calculation first\\n      const afterInitDisable = () => {\\n        self.object.removeEventListener('init.xt', afterInitDisable)\\n        // @FIX after init activation\\n        requestAnimationFrame(() => {\\n          self.disable()\\n        })\\n      }\\n      self.object.addEventListener('init.xt', afterInitDisable)\\n    } else if (str === 'xt-disable') {\\n      self.disable()\\n    } else {\\n      self.enable()\\n    }\\n  }\\n\\n  /**\\n   * enable\\n   */\\n  enable() {\\n    const self = this\\n    if (self.disabled) {\\n      // enable\\n      self.disabled = false\\n      self.object.classList.remove('xt-disabled')\\n    }\\n  }\\n\\n  /**\\n   * disable\\n   */\\n  disable() {\\n    const self = this\\n    const options = self.options\\n    if (!self.disabled) {\\n      // closeOnDisable\\n      if (options.closeOnDisable) {\\n        // @FIX appendTo targets\\n        for (const target of self.targets) {\\n          // listener dispatch\\n          target.dispatchEvent(new CustomEvent('off.trigger.xt'))\\n        }\\n      }\\n      // stop auto\\n      clearTimeout(Xt.dataStorage.get(self.object, self.componentNamespace + 'AutoTimeout'))\\n      // disable\\n      self.disabled = true\\n      self.object.classList.add('xt-disabled')\\n    }\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * reinit handler\\n   * @param {Event} e\\n   */\\n  eventReinitHandler(e) {\\n    const self = this\\n    // check\\n    let check = self.object\\n    if (self.mode === 'unique') {\\n      check = self.targets[0]\\n    }\\n    // triggering e.detail.container\\n    if (!e || !e.detail || !e.detail.container || e.detail.container.contains(check)) {\\n      Xt.eventDelay(\\n        e,\\n        self.object,\\n        () => {\\n          // handler\\n          self.reinit()\\n        },\\n        self.componentNamespace + 'Reinit'\\n      )\\n    }\\n  }\\n\\n  /**\\n   * reinit\\n   * @param {Boolean} saveCurrents\\n   */\\n  reinit(saveCurrents = true) {\\n    const self = this\\n    // @FIX bug when remove all elements, element becomes the object, then and add new elements\\n    self.destroy(true)\\n    // reinit\\n    self.initLogic(saveCurrents)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('reinit.xt'))\\n  }\\n\\n  /**\\n   * restart\\n   */\\n  restart() {\\n    const self = this\\n    // restart\\n    self.initStart()\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('restart.xt'))\\n  }\\n\\n  /**\\n   * destroy\\n   */\\n  destroy(weak = false) {\\n    const self = this\\n    // [disabled]\\n    self.destroyDisabled()\\n    // disable\\n    self.disable()\\n    // remove events\\n    if (self.destroyElements) {\\n      for (const element of self.destroyElements) {\\n        const storages = Xt.dataStorage.getAll(element)\\n        if (storages) {\\n          for (const [key] of storages) {\\n            if (key) {\\n              if (key.endsWith(self.namespace)) {\\n                const handler = Xt.dataStorage.get(element, key)\\n                if (typeof handler === 'function') {\\n                  const events = key.split('/')[0].split(' ')\\n                  for (const event of events) {\\n                    element.removeEventListener(event, handler)\\n                    element.removeEventListener(event, handler, true)\\n                    Xt.dataStorage.remove(element, key)\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n    // xtNamespace linked components\\n    const selfs = Xt.dataStorage.get(self.namespace, 'xtNamespace')\\n    selfs.filter(x => x !== self)\\n    Xt.dataStorage.set(self.namespace, 'xtNamespace', selfs)\\n    // weak\\n    if (!weak) {\\n      // initialized class\\n      self.object.classList.remove(self.componentName)\\n      // set self\\n      Xt.remove(self.componentName, self.object)\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('destroy.xt'))\\n      // delete\\n      delete this\\n    }\\n  }\\n\\n  /**\\n   * destroy disabled\\n   */\\n\\n  destroyDisabled() {\\n    const self = this\\n    const options = self.options\\n    if (options.autoDisable) {\\n      for (const el of self.elements) {\\n        el.removeAttribute('disabled')\\n      }\\n    }\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nToggle.componentName = 'xt-toggle'\\nToggle.optionsDefaultSuper = {\\n  // element\\n  elements: ':scope > a, :scope > button',\\n  targets: ':scope > .toggle, :scope > [class^=\\\"toggle-\\\"], :scope > [class*=\\\" toggle-\\\"]',\\n  elementsInner: false,\\n  targetsInner: false,\\n  // class\\n  class: 'active active-toggle',\\n  classIn: 'in',\\n  classOut: 'out',\\n  classDone: 'done',\\n  classInitial: 'initial',\\n  classInverse: 'inverse',\\n  // quantity\\n  min: 0,\\n  max: 1,\\n  autoDisable: false,\\n  // event\\n  on: 'click',\\n  off: false,\\n  eventLimit: '.event-limit',\\n  preventEvent: false,\\n  // timing\\n  instant: {\\n    elements: true,\\n    targets: false,\\n    elementsInner: true,\\n    targetsInner: false,\\n  },\\n  delayOn: false,\\n  delayOff: false,\\n  delayInitial: true,\\n  durationOn: false,\\n  durationOff: false,\\n  // auto\\n  auto: {\\n    time: false,\\n    initial: true,\\n    step: 1,\\n    inverse: false,\\n    pause: false,\\n  },\\n  // other\\n  loop: true,\\n  jump: false,\\n  navigation: false,\\n  keyboard: {\\n    selector: false,\\n  },\\n  backdrop: false,\\n  appendTo: false,\\n  classHtml: false,\\n  closeAuto: false,\\n  closeInside: false,\\n  closeOutside: false,\\n  closeOnDisable: false,\\n  scrollbar: false,\\n  onBlock: false,\\n  offBlock: false,\\n  mediaLoaded: false,\\n  mediaLoadedReinit: false,\\n  zIndex: false,\\n  focusLimit: false,\\n  aria: {\\n    tabindex: true,\\n    controls: true,\\n    labelledby: true,\\n  },\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Toggle = Toggle\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Toggle.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Toggle.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Toggle(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md disabled\\\" aria-disabled=\\\"true\\\">\\n    btn\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md disabled ${btnDefault()}\\\" aria-disabled=\\\"true\\\">\\n    default\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md disabled ${btnPrimary()}\\\" aria-disabled=\\\"true\\\">\\n    primary\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md link disabled\\\" aria-disabled=\\\"true\\\">\\n    link\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center demo--toggle-animation\\\" data-xt-toggle>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"#iframe--industrial-featured-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * slider\\n      */\\n    .slider {\\n      .slides-inner {\\n        overflow: hidden;\\n        // dragger animations\\n        .transition-none() !important;\\n        .transform-none() !important;\\n      }\\n      .slide {\\n        .toggle();\\n        .col(12);\\n      }\\n      .featured-item {\\n        position: relative;\\n      }\\n      .slide-pagination-content {\\n        display: none;\\n      }\\n      // navigation\\n      [data-xt-nav].btn {\\n        .btn-default();\\n        font-size: 10px;\\n        [class^='icon-'], [class*=' icon-'] {\\n          .icon-md();\\n        }\\n      }\\n      &.slider--nonav {\\n        [data-xt-nav].btn {\\n          display: none !important;\\n        }\\n      }\\n      // .featured-item\\n      .slide_card {\\n        @media @max-sm {\\n          .container-space-remove();\\n        }\\n        @media @min-sm {\\n          position: absolute;\\n          bottom: 2.5rem;\\n          right: 2.5rem;\\n          width: 49rem;\\n        }\\n        > .card {\\n          .card-squared();\\n          align-items: flex-end;\\n        }\\n      }\\n      .slide_card_inner {\\n        overflow: hidden;\\n      }\\n      .featured-item_asset {\\n        position: relative;\\n        background: @shade-100;\\n        .media-container {\\n          overflow: hidden;\\n          background: transparent;\\n        }\\n        .media-inner {\\n          overflow: hidden;\\n        }\\n      }\\n      .featured-item_assets {\\n        @media @max-sm {\\n          .container-space-remove();\\n        }\\n        > .row {\\n          .row-default();\\n          .row-y(none);\\n        }\\n      }\\n      .featured-item_assets_col--big {\\n        .col(12);\\n        .col(8, sm);\\n      }\\n      .featured-item_assets_col--sm {\\n        .col(12);\\n        .col(4, sm);\\n        @media @max-sm {\\n          display: none;\\n        }\\n      }\\n      .featured-item_asset {\\n        .media-container {\\n          height: 25rem;\\n          @media @min-sm {\\n            height: 49rem;\\n          }\\n        }\\n      }\\n      // pagination\\n      .slider-pagination {\\n        .container-space();\\n        .list(mini);\\n        flex-wrap: nowrap;\\n        align-items: center;\\n        justify-content: center;\\n        .padding(bottom, big);\\n      }\\n      [data-xt-pag].btn {\\n        .btn-default();\\n      }\\n      // pagination wrap\\n      .slider-pagination_inner {\\n        position: relative;\\n        overflow: hidden;\\n        white-space: nowrap;\\n        [data-xt-pag] {\\n          .margin(x, mini);\\n        }\\n        &:before, &:after {\\n          content: '';\\n          pointer-events: none;\\n          position: absolute;\\n          z-index: @index-active + 1;\\n          top: 0;\\n          bottom: 0;\\n          width: 30px;\\n        }\\n        &:before {\\n          left: 0;\\n          background: linear-gradient(-90deg, fade(@white, 0%) 0%, @white 100%);\\n        }\\n        &:after {\\n          right: 0;\\n          background: linear-gradient(90deg, fade(@white, 0%) 0%, @white 100%);\\n        }\\n      }\\n      .slider-cards--logos {\\n        .slider-pagination_inner {\\n          max-width: none;\\n        }\\n      }\\n      .slider-pagination_scroll {\\n        display: inline-block;\\n        position: relative;\\n        .padding(x, 30px);\\n        transition: left 750ms @ease-out;\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"Group\\\"\\ndescription: \\\"Css component to group up buttons and form inputs.\\\"\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Structure\\\"\\ntitle: \\\"propagate-interaction\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n@TODO\\n\\n<!--\\n```jsx\\nimport 'xtendui/src/addons/propagate-interaction'\\n```\\n\\n<button type=\\\"button\\\" data-xt-propagate-interaction=\\\"{ targets: '.btn' }\\\">\\n  <div class=\\\"btn btn-primary\\\">\\n    propagate interactions here\\n  </div>\\n</button>\\n\\n/**\\n * propagate-interaction\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--furniture-parallax-v1 body a, #iframe--furniture-parallax-v1 body button', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.PropagateInteraction(object, {\\n      targets: '.btn',\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\\n-->\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ align: 'right', drag: { wrap: true } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Input\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Disabled\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\" disabled>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\">\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" multiple>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-usage\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-usage\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-usage\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-usage\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list flex-col list-px\\\">\\n\\n  <div>\\n    <div class=\\\"list list-px\\\">\\n\\n      <div>\\n        <div class=\\\"list flex-col list-px\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Lorem Ipsum\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Dolor sit\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Amet\\n          </button>\\n\\n        </div>\\n      </div>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div class=\\\"list list-px\\\">\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Lorem Ipsum\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n</nav>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<br><br><br><br><br><br><br>\\n\\n<div data-xt-sticky=\\\"{ sticky: 'fixed' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst cardDefaultFull = require('components/snippets/classes/card-default-full').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefaultFull()} overflow-y-auto overflow-x-hidden overflow-sub max-h-96\\\">\\n      <div class=\\\"rounded-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md px-0 pb-0\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"rounded-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md px-0 pb-0 overflow-y-auto overflow-x-hidden overflow-sub max-h-64\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list flex-col list-3\\\">\\n\\n  <div>\\n    <div class=\\\"list list-3\\\">\\n\\n      <div>\\n        <div class=\\\"list flex-col list-3\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Lorem Ipsum\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Dolor sit\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Amet\\n          </button>\\n\\n        </div>\\n      </div>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div class=\\\"list list-3\\\">\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Lorem Ipsum\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n</nav>\\n`\\n\";","export default \".demo--scroll-once {\\n  .card {\\n    /* mode-once */\\n    &:not(.scroll-done) {\\n      /* initial */\\n      @apply transform transition-all duration-500;\\n      @apply opacity-0 -translate-x-4;\\n      &.inverse {\\n        @apply translate-x-4;\\n      }\\n      /* in */\\n      &.fade-in {\\n        @apply opacity-100 translate-x-0 ease-in;\\n      }\\n      /* out */\\n      &.fade-out {\\n        @apply opacity-0 translate-x-4 ease-out;\\n        &.inverse {\\n          @apply -translate-x-4;\\n        }\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-toggle=\\\"{ targets: '#toggle--unique-2, #toggle--unique-3' }\\\">\\n    Toggle same\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-toggle=\\\"{ targets: '#toggle--unique-2, #toggle--unique-3' }\\\">\\n    Toggle same\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" id=\\\"toggle--unique-2\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" id=\\\"toggle--unique-3\\\">\\n    Target 0\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `card-sm text-black links-default rounded-md bg-gray-200`\\n}\\n\";","export default \"const round = num =>\\n  num\\n    .toFixed(7)\\n    .replace(/(\\\\.[0-9]+?)0+$/, '$1')\\n    .replace(/\\\\.0$/, '')\\nconst rem = px => `${round(px / 16)}rem`\\n\\nmodule.exports = {\\n  component: theme => ({\\n    label: {\\n      cursor: 'pointer',\\n    },\\n    'fieldset, .fieldset': {\\n      // styles\\n      '& + &': {\\n        marginTop: theme('spacing.8'),\\n      },\\n    },\\n    'legend, .legend': {\\n      // styles\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.4'),\\n      '@apply mt-fc mb-lc': {},\\n      width: '100%',\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.bold'),\\n      fontSize: rem(24),\\n      lineHeight: theme('lineHeight.snug'),\\n    },\\n    '.form-valid': {\\n      borderColor: `${theme('colors.success')} !important`,\\n    },\\n    '.form-invalid': {\\n      borderColor: `${theme('colors.error')} !important`,\\n    },\\n    '.form-label': {\\n      // setup\\n      cursor: 'pointer',\\n      display: 'flex',\\n      // styles\\n      fontWeight: theme('fontWeight.semibold'),\\n      fontSize: '0.8em',\\n      lineHeight: theme('lineHeight.snug'),\\n    },\\n    '.form-label-required': {\\n      // styles\\n      '&:after': {\\n        content: '\\\"*\\\"',\\n        marginLeft: theme('spacing.1'),\\n      },\\n    },\\n    '.form-item': {\\n      // setup\\n      display: 'block', // @FIX select and textarea space below\\n      zIndex: theme('zIndex.base'),\\n      '&:focus, &.active': {\\n        zIndex: theme('zIndex.active'),\\n      },\\n      // styles\\n      padding: `.75em 1.2em`,\\n      width: '100%',\\n      fontSize: '0.8em',\\n      lineHeight: theme('lineHeight.snug'),\\n      // animation\\n      transitionProperty: 'all',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      '&:hover, &:focus': {\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n      },\\n    },\\n    '.form-select': {\\n      // setup\\n      '@apply appearance-none': '',\\n      backgroundRepeat: 'no-repeat',\\n      // styles\\n      paddingRight: '3em',\\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"${encodeURIComponent(\\n        theme('colors.black')\\n      )}\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"><polyline points=\\\"6 9 12 15 18 9\\\"></polyline></svg>')`,\\n      backgroundSize: '1em',\\n      backgroundPosition: 'right 1rem center',\\n      '&[multiple]': {\\n        backgroundImage: 'none !important',\\n      },\\n    },\\n    '.form-label-check': {\\n      // setup\\n      cursor: 'pointer',\\n      display: 'inline-flex',\\n      // styles\\n      fontSize: '0.8em',\\n      lineHeight: theme('lineHeight.snug'),\\n    },\\n    '.form-check': {\\n      // setup\\n      '@apply appearance-none': '',\\n      cursor: 'pointer',\\n      position: 'relative',\\n      flexShrink: '0',\\n      backgroundRepeat: 'no-repeat',\\n      // styles\\n      '&[disabled]': {\\n        backgroundColor: `${theme('colors.gray.500')} !important`,\\n        borderColor: `${theme('colors.gray.500')} !important`,\\n        opacity: '1',\\n      },\\n      // animation\\n      transitionProperty: 'all',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.out'),\\n      '&:checked': {\\n        transitionTimingFunction: theme('transitionTimingFunction.in'),\\n      },\\n      '&:hover, &:focus': {\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n      },\\n    },\\n    '.form-checkbox': {\\n      // styles\\n      top: '-1px',\\n      width: '1.5em',\\n      height: '1.5em',\\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg viewBox=\\\"0 0 16 16\\\" fill=\\\"${encodeURIComponent(\\n        theme('colors.white')\\n      )}\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.707 7.293a1 1 0 0 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0-1.414-1.414L7 8.586 5.707 7.293z\\\"/></svg>')`,\\n      backgroundSize: '0',\\n      backgroundPosition: 'center center',\\n      '&:checked': {\\n        backgroundSize: '100%',\\n        backgroundColor: 'currentColor',\\n        borderColor: 'currentColor',\\n      },\\n    },\\n    '.form-radio': {\\n      top: '-1px',\\n      width: '1.5em',\\n      height: '1.5em',\\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg viewBox=\\\"-6 -6 12 12\\\" fill=\\\"${encodeURIComponent(\\n        theme('colors.white')\\n      )}\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle r=\\\"3\\\"/></svg>')`,\\n      backgroundPosition: 'center center',\\n      backgroundSize: '0',\\n      '&:checked': {\\n        backgroundSize: '100%',\\n        backgroundColor: 'currentColor',\\n        borderColor: 'currentColor',\\n      },\\n    },\\n    '.form-switch': {\\n      top: '-1px',\\n      width: '2.5em',\\n      height: '1.5em',\\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg viewBox=\\\"-5 -5 10 10\\\" fill=\\\"${encodeURIComponent(\\n        theme('colors.gray.600')\\n      )}\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle r=\\\"3\\\"/></svg>')`,\\n      backgroundSize: 'contain',\\n      backgroundPosition: 'left center',\\n      '&:checked': {\\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg viewBox=\\\"-5 -5 10 10\\\" fill=\\\"${encodeURIComponent(\\n          theme('colors.white')\\n        )}\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle r=\\\"3\\\"/></svg>')`,\\n        backgroundPosition: 'right center',\\n        backgroundColor: 'currentColor',\\n        borderColor: 'currentColor',\\n      },\\n    },\\n  }),\\n}\\n\";","export default \"export default () => {\\n  return `text-black links-default bg-gray-200 hover:bg-gray-300 active:bg-gray-400`\\n}\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\">\\n\\n    <div class=\\\"slide\\\">\\n\\n      <div class=\\\"media-container\\\">\\n        <div class=\\\"media-inner relative\\\">\\n          <img class=\\\"media\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n\\n      <div class=\\\"media-container\\\">\\n        <div class=\\\"media-inner relative\\\">\\n          <img class=\\\"media\\\" src=\\\"/img-ratio.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n\\n      <div class=\\\"media-container\\\">\\n        <div class=\\\"media-inner relative\\\">\\n          <img class=\\\"media\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n\\n      <div class=\\\"media-container\\\">\\n        <div class=\\\"media-inner relative\\\">\\n          <img class=\\\"media\\\" src=\\\"/img-ratio.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n\\n      <div class=\\\"media-container\\\">\\n        <div class=\\\"media-inner relative\\\">\\n          <img class=\\\"media\\\" src=\\\"/img.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"slide\\\">\\n\\n      <div class=\\\"media-container\\\">\\n        <div class=\\\"media-inner relative\\\">\\n          <img class=\\\"media\\\" src=\\\"/img-ratio.svg\\\" loading=\\\"eager\\\" alt=\\\"\\\"/>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center inline-flex demo--drop-animation-js\\\">\\n\\n  <div class=\\\"drop-container\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-indicator\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card scroll-indicator ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"API\\\"\\ndate: \\\"1980-05-05\\\"\\n---\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-slider=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.Slider(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Slider(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\\n## Util\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Object                   | `let self = Xt.get('xt-slider', {DOM element})`       | `object` `elements` `targets` | Get object self for this component class             |\\n\\n</div>\\n\\n## Trigger\\n\\nTrigger events on **DOM elements**.\\n\\n```js\\ndocument.querySelector('#my-element-or-target').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.trigger.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.trigger.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `autostart.trigger.xt`           | `object` | Auto start event             |\\n| Event                   | `autostop.trigger.xt`           | `object` | Auto stop event             |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n```js\\nconst el = document.querySelector('#my-element-or-target')\\n\\nconst eventOn = e => {\\n  if (e.target === el) {\\n  // logic\\n  }\\n}\\n\\nel.addEventListener('on.xt', eventOn)\\n```\\n\\nListen to events delegation with **useCapture** this way:\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-slider', object)\\n\\nconst eventOn = e => {\\n  const element = e.target\\n  // useCapture delegation\\n  if (self.elements.includes(element)) {\\n    // logic\\n  }\\n  if (self.targets.includes(element)) {\\n    // logic\\n  }\\n}\\n\\nobject.addEventListener('on.xt', eventOn, true)\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `ondone.xt`           | `elements` `targets` | Activation event after delay and duration             |\\n| Event                   | `offdone.xt`           | `elements` `targets` | Deactivation event after delay and duration             |\\n| Event                   | `medialoaded.xt`           | `elements` `targets` | Images loaded event, only when setting `options.mediaLoaded: true`           |\\n| Event                   | `autostart.xt`           | `object` | Auto start event             |\\n| Event                   | `autostop.xt`           | `object` | Auto stop event             |\\n| Event                   | `autopause.xt`           | `object` | Auto pause event             |\\n| Event                   | `autoheight.xt`           | `targets` | Autoheight event             |\\n| Event                   | `wheelstart.xt`           | `wheel` | Wheel start event             |\\n| Event                   | `wheelend.xt`           | `wheel` | Wheel end event             |\\n| Event                   | `wheel.xt`           | `wheel` | Wheel event             |\\n| Event                   | `dragstart.xt`           | `dragger` | Drag start event             |\\n| Event                   | `dragend.xt`           | `dragger` | Drag end event             |\\n| Event                   | `drag.xt`           | `dragger` | Drag event             |\\n| Event                   | `dragreset.xt`           | `dragger` | Drag reset event             |\\n| Event                   | `init.xt`           | `object` | Init event             |\\n| Event                   | `restart.xt`           | `object` | Restart event             |\\n| Event                   | `reinit.xt`           | `object` | Reinit event             |\\n| Event                   | `destroy.xt`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-slider', object)\\nconst elements = self.elements\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `elements:Array`       | Elements nodes             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n| Property                  | `initial:Boolean`       | If initial or reset activation            |\\n| Property                   | `wrap:Boolean`       | If wrap activation             |\\n| Property                   | `direction:Number`       | Direction `1` or `-1`            |\\n| Property                   | `dragger:Node`       | Dragger node             |\\n| Property                   | `wheel:Node`       | Wheel node             |\\n| Property                   | `detail.dragging:Boolean`       | Returns true when slider is being dragged or just being dragged             |\\n| Property                   | `detail.dragBlock:Boolean`       | Returns true when slider is blocked on dragging and other interactions are prevented             |\\n| Property                   | `detail.draggerWidth:Number`       | Dragger width             |\\n| Property                   | `detail.dragRatio:Number`       | Drag ratio from 0 to 1             |\\n| Property                   | `detail.dragRatioInverse:Number`       | Drag ratio inverse from 1 to 0             |\\n| Property                   | `detail.dragStart:Number`       | Drag starting position             |\\n| Property                   | `detail.dragCurrent:Number`       | Drag current position             |\\n| Property                   | `detail.dragPos:Number`       | Drag distance from dragStart to dragCurrent with computation             |\\n| Property                   | `detail.dragPosOld:Number`       | Drag distance from dragStart to dragCurrent with computation on the previous frame             |\\n| Property                   | `detail.wheelCurrent:Number`       | Wheel current scroll position             |\\n| Property                   | `detail.wheelEnd:Number`       | Wheel end scroll position             |\\n\\n</div>\\n\\n## Methods\\n\\nCall methods by getting component object.\\n\\n```js\\nconst self = Xt.get('xt-slider', document.querySelector('#my-object'))\\nself.destroy()\\nself = null\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getElements(el:Node|null)`                          | Get all elements or all elements from element or target             |\\n| Method                  | `self.getTargets(el:Nod|null)`                          | Get all targets from or all targets from element or target             |\\n| Method                  | `self.getElementsGroups()`                          | Get elements (one per group)             |\\n| Method                  | `self.getTargetsGroups()`                          | Get targets (one per group)             |\\n| Method                  | `self.hasCurrent(el:Node)`                          | Returns `true` or `false` if element or target is activated             |\\n| Method                  | `self.reinit(saveCurrents:Boolean)`       | Reinit component and save currents as initial (default: `true`)             |\\n| Method                  | `self.restart()`                          | Restart component to initial             |\\n| Method                  | `self.destroy(weak:Boolean)`              | Destroy component            |\\n\\n</div>\\n\\nYou can get activated elements or targets with `hasCurrent`.\\n\\n```js\\nself.elements.filter(x => self.hasCurrent(x))\\nself.targets.filter(x => self.hasCurrent(x))\\n```\\n\\nIndex methods:\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getNextIndex(amount:Number:1, loop:Boolean:null)`                          | Get next activation index             |\\n| Method                  | `self.getNext(amount:Number:1, loop:Boolean:null)`                          | Get next activation element             |\\n| Method                  | `self.goToNext(amount:Number:1, force:Boolean:false, loop:Boolean:null)`                          | Activate next             |\\n| Method                  | `self.getPrevIndex(amount:Number:1, loop:Boolean:null)`                          | Get prev activation index             |\\n| Method                  | `self.getPrev(amount:Number:1, loop:Boolean:null)`                          | Get prev activation element             |\\n| Method                  | `self.goToPrev(amount:Number:1, force:Boolean:false, loop:Boolean:null)`                          | Activate prev             |\\n| Method                  | `self.getNumIndex(index:Number, loop:Boolean:null)`                          | Get number activation index             |\\n| Method                  | `self.getNum(index:Number, loop:Boolean:null)`                          | Get number activation element             |\\n| Method                  | `self.goToNum(index:Number, force:Boolean:false, loop:Boolean:null)`                          | Activate number             |\\n\\n</div>\\n\\n## Demo\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/slider/events-methods\\\">\\n  </div>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Layout\\\"\\ntitle: \\\"Layout\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"md:card-group\\\">\\n        <div class=\\\"card-md md:w-7/12\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n        <div class=\\\"border-t md:w-5/12 md:border-t-0 md:border-l border-solid border-gray-500\\\">\\n          <div class=\\\"card-sm\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n          <div class=\\\"card-md border-t border-solid border-gray-500\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \".demo--scroll-responsive {\\n  .card {\\n    @media (max-width: theme('screens.md')) {\\n      /* mode-infinite */\\n      /* initial */\\n      @apply transform transition-all duration-500;\\n      @apply opacity-0 -translate-x-4;\\n      &.inverse {\\n        @apply translate-x-4;\\n      }\\n      /* in */\\n      &.fade-in {\\n        @apply opacity-100 translate-x-0 ease-in;\\n      }\\n      /* out */\\n      &.fade-out {\\n        @apply opacity-0 translate-x-4 ease-out;\\n        &.inverse {\\n          @apply -translate-x-4;\\n        }\\n      }\\n    }\\n    @screen md {\\n      /* mode-once */\\n      &:not(.scroll-done) {\\n        /* initial */\\n        @apply transform transition-all duration-500;\\n        @apply opacity-0 -translate-x-4;\\n        &.inverse {\\n          @apply translate-x-4;\\n        }\\n        /* in */\\n        &.fade-in {\\n          @apply opacity-100 translate-x-0 ease-in;\\n        }\\n        /* out */\\n        &.fade-out {\\n          @apply opacity-0 translate-x-4 ease-out;\\n          &.inverse {\\n            @apply -translate-x-4;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group\\\">\\n\\n    <div class=\\\"group-inner\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-md rounded-l-md border border-gray-500 ${btnDefaultGroup()}\\\">\\n        ${iconSearch({ classes: 'icon-lg' })}\\n      </button>\\n      <input type=\\\"text\\\" class=\\\"form-item border border-l-0 border-gray-500 ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-r-md border border-l-0 border-gray-500 ${btnPrimaryGroup()}\\\">\\n      Lorem ipsum\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"Interaction\\\"\\ndate: \\\"2010-10-10\\\"\\n---\\n\\n## Class\\n\\nYou can customize the **class names** used with the component.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `class:String`                          | `active active-overlay`        | Class name for activation            |\\n| Option                  | `classIn:String`                          | `in`        | Class name for in animation            |\\n| Option                  | `classOut:String`                          | `out`        | Class name for out animation            |\\n| Option                  | `classDone:String`                          | `done`        | Class name for in animation done            |\\n| Option                  | `classInitial:String`                          | `initial`        | Class name for initialization            |\\n| Option                  | `classInverse:String`                          | `inverse`        | Class name for inverse direction activation            |\\n\\n</div>\\n\\nYou can start with toggled elements and targets just by adding **one of the class names for activation** to the **elements** or **targets**.\\n\\nAdditionally on component initialization the class `xt-overlay` gets added to the **object** (the DOM element you assigned the component).\\n\\n## Animations\\n\\nYou can use **css animations**, just add them with **class names**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/animation\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can use **javascript animations**, just use [overlay api](/components/core/overlay/api), and remember to set `durationOn: Milliseconds` and `durationOff: Milliseconds`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/animation-js\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Class html\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `classHtml:String`                          | `false`        | Add class to `html` on activation            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/overlay/class-html\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Block\\n\\nYou can block the activations with the class `.xt-block` on elements.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.xt-block`                     | `NOT POSSIBLE`                | Block scroll on element            |\\n\\n</div>\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--custom-constrain',\\n  mount: object => {\\n    // eventValidation\\n\\n    const eventValidation = () => {\\n      const constraints = ['^(CH-)?\\\\\\\\d{4}$', 'Switzerland ZIPs must have exactly 4 digits: e.g. CH-1950 or 1950']\\n      const constraint = new RegExp(constraints[0], '')\\n      if (constraint.test(object.value)) {\\n        object.setCustomValidity('')\\n      } else {\\n        object.setCustomValidity(constraints[1])\\n      }\\n    }\\n\\n    object.addEventListener('input', eventValidation)\\n    object.addEventListener('change', eventValidation)\\n  },\\n})\\n\";","export default \"export default () => {\\n  return `text-black links-default`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/addons/ripple'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--ripple-default .btn, .demo--ripple-default .card',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Ripple(object, {})\\n\\n    // on\\n\\n    const eventOn = () => {\\n      const ripple = self.container.querySelector('.ripple:last-child')\\n      // animate\\n      if (ripple) {\\n        gsap.set(ripple, { height: self.size, width: self.size, top: self.top, left: self.left, scale: 1, opacity: 0 })\\n        gsap.to(ripple, { opacity: 1, duration: Xt.vars.timeTiny, ease: 'quad.inOut' })\\n        gsap.to(ripple, { scale: self.scaleFinal, duration: Xt.vars.timeSmall, ease: 'quad.inOut' })\\n      }\\n    }\\n\\n    object.addEventListener('on.xt.ripple', eventOn)\\n\\n    // off\\n\\n    const eventOff = () => {\\n      const ripple = self.container.querySelector('.ripple:last-child')\\n      // animate\\n      if (ripple) {\\n        gsap.to(ripple, { opacity: 0, duration: Xt.vars.timeSmall, ease: 'quad.out', delay: Xt.vars.timeMini }).eventCallback('onComplete', () => {\\n          ripple.remove()\\n        })\\n      }\\n    }\\n\\n    object.addEventListener('off.xt.ripple', eventOff)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<ul>\\n  <li>\\n    <p><strong>Lorem ipsum dolor sit amet.</strong></p>\\n    <ul>\\n      <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n      <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</li>\\n    </ul>\\n  </li>\\n  <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</li>\\n  <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur. Maecenas pulvinar mauris eget pharetra elementum.</li>\\n</ul>\\n\\n<ol>\\n  <li>\\n    <p><strong>Lorem ipsum dolor sit amet.</strong></p>\\n    <ol>\\n      <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n      <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</li>\\n    </ol>\\n  </li>\\n  <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.</li>\\n  <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur. Maecenas pulvinar mauris eget pharetra elementum.</li>\\n</ol>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"sticky-0\\\" data-xt-sticky=\\\"{ contain: { bottom: '.sticky-1:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-1\\\" data-xt-sticky=\\\"{ contain: { bottom: '.sticky-2:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-2\\\" data-xt-sticky>\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"Overlay\\\"\\ndescription: \\\"Used when you need to display any content over the main page.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ align: 'right' }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 row-overflow\\\">\\n\\n  <div class=\\\"w-11/12 sm:w-8/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-11/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-10/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-10/12 sm:w-8/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie diam nec euismod commodo. Nunc ut fringilla nibh. Duis quis arcu quis neque tempor lobortis nec nec mauris. Proin vel elit pretium metus egestas congue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque hendrerit sagittis quam eget elementum. Vestibulum eu nulla nisl. Duis nec commodo tortor. Aenean feugiat, libero eget ultricies viverra, justo nunc efficitur lorem, at aliquet ante eros in est.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"#iframe--infinite-scroll {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    .infinite-scroll--spinner {\\n      opacity: 0;\\n      transition-property: opacity;\\n      transition-duration: theme('transitionDuration.500');\\n      transition-timing-function: theme('transitionTimingFunction.out');\\n      .spinner {\\n        opacity: 0;\\n        transform: scale(.75);\\n        transition-property: all;\\n        transition-duration: theme('transitionDuration.500');\\n        transition-timing-function: theme('transitionTimingFunction.out');\\n      }\\n    }\\n\\n    .infinite-scroll-loading {\\n      .infinite-scroll--spinner {\\n        opacity: 1;\\n        transition-timing-function: theme('transitionTimingFunction.in');\\n        .spinner {\\n          opacity: 1;\\n          transform: scale(1);\\n          transition-timing-function: theme('transitionTimingFunction.in');\\n        }\\n      }\\n    }\\n\\n    [data-xt-infinite-scroll-trigger] {\\n      .infinite-scroll--trigger_content-nomore {\\n        display: none;\\n      }\\n      .infinite-scroll--trigger_content {\\n        transition-property: transform, opacity;\\n        transition-duration: theme('transitionDuration.500');\\n        transition-timing-function: theme('transitionTimingFunction.out');\\n      }\\n    }\\n\\n    .infinite-scroll-loading {\\n      [data-xt-infinite-scroll-trigger] {\\n        pointer-events: none;\\n        > .infinite-scroll--trigger_content {\\n          opacity: 0;\\n          transform: translateY(0.7rem);\\n          transition-timing-function: theme('transitionTimingFunction.in');\\n        }\\n      }\\n    }\\n\\n    .infinite-scroll-nomore {\\n      [data-xt-infinite-scroll-trigger] {\\n        pointer-events: none;\\n        .infinite-scroll--trigger_content {\\n          display: none;\\n        }\\n        .infinite-scroll--trigger_content-nomore {\\n          display: block;\\n        }\\n      }\\n    }\\n\\n    .infinite-scroll-pre {\\n      display: none;\\n    }\\n\\n    .infinite-scroll-reset {\\n      .infinite-scroll-pre {\\n        display: block;\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Toggle\\\"\\ntitle: \\\"API\\\"\\ndate: \\\"1980-05-05\\\"\\n---\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-toggle=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.Toggle(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\\n## Util\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Object                   | `let self = Xt.get('xt-toggle', {DOM element})`       | `object` `elements` `targets` | Get object self for this component class             |\\n\\n</div>\\n\\n## Trigger\\n\\nTrigger events on **DOM elements**.\\n\\n```js\\ndocument.querySelector('#my-element-or-target').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.trigger.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.trigger.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `closeauto.trigger.xt`           | `window` | Autclose all components with `closeAuto: true` option             |\\n| Event                   | `autostart.trigger.xt`           | `object` | Auto start event             |\\n| Event                   | `autostop.trigger.xt`           | `object` | Auto stop event             |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n```js\\nconst el = document.querySelector('#my-element-or-target')\\n\\nconst eventOn = e => {\\n  if (e.target === el) {\\n  // logic\\n  }\\n}\\n\\nel.addEventListener('on.xt', eventOn)\\n```\\n\\nListen to events delegation with **useCapture** this way:\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-toggle', object)\\n\\nconst eventOn = e => {\\n  const element = e.target\\n  // useCapture delegation\\n  if (self.elements.includes(element)) {\\n    // logic\\n  }\\n  if (self.targets.includes(element)) {\\n    // logic\\n  }\\n}\\n\\nobject.addEventListener('on.xt', eventOn, true)\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `ondone.xt`           | `elements` `targets` | Activation event after delay and duration             |\\n| Event                   | `offdone.xt`           | `elements` `targets` | Deactivation event after delay and duration             |\\n| Event                   | `medialoaded.xt`           | `elements` `targets` | Images loaded event            |\\n| Event                   | `autostart.xt`           | `object` | Auto start event             |\\n| Event                   | `autostop.xt`           | `object` | Auto stop event             |\\n| Event                   | `autopause.xt`           | `object` | Auto pause event             |\\n| Event                   | `init.xt`           | `object` | Init event             |\\n| Event                   | `restart.xt`           | `object` | Restart event             |\\n| Event                   | `reinit.xt`           | `object` | Reinit event             |\\n| Event                   | `destroy.xt`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-toggle', object)\\nconst elements = self.elements\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `elements:Array`       | Elements nodes             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n| Property                  | `initial:Boolean`       | If initial or reset activation            |\\n| Property                   | `direction:Number`       | Direction `1` or `-1`            |\\n\\n</div>\\n\\n## Methods\\n\\nCall methods by getting component object.\\n\\n```js\\nlet self = Xt.get('xt-toggle', document.querySelector('#my-object'))\\nself.destroy()\\nself = null\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getElements(el:Node|null)`                          | Get all elements or all elements from element or target             |\\n| Method                  | `self.getTargets(el:Nod|null)`                          | Get all targets from or all targets from element or target             |\\n| Method                  | `self.getElementsGroups()`                          | Get elements (one per group)             |\\n| Method                  | `self.getTargetsGroups()`                          | Get targets (one per group)             |\\n| Method                  | `self.hasCurrent(el:Node)`                          | Returns `true` or `false` if element or target is activated             |\\n| Method                  | `self.reinit(saveCurrents:Boolean)`       | Reinit component and save currents as initial (default: `true`)             |\\n| Method                  | `self.restart()`                          | Restart component to initial             |\\n| Method                  | `self.destroy(weak:Boolean)`              | Destroy component            |\\n\\n</div>\\n\\nYou can get activated elements or targets with `hasCurrent`.\\n\\n```js\\nself.elements.filter(x => self.hasCurrent(x))\\nself.targets.filter(x => self.hasCurrent(x))\\n```\\n\\nIndex methods:\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getNextIndex(amount:Number:1, loop:Boolean:null)`                          | Get next activation index             |\\n| Method                  | `self.getNext(amount:Number:1, loop:Boolean:null)`                          | Get next activation element             |\\n| Method                  | `self.goToNext(amount:Number:1, force:Boolean:false, loop:Boolean:null)`                          | Activate next             |\\n| Method                  | `self.getPrevIndex(amount:Number:1, loop:Boolean:null)`                          | Get prev activation index             |\\n| Method                  | `self.getPrev(amount:Number:1, loop:Boolean:null)`                          | Get prev activation element             |\\n| Method                  | `self.goToPrev(amount:Number:1, force:Boolean:false, loop:Boolean:null)`                          | Activate prev             |\\n| Method                  | `self.getNumIndex(index:Number, loop:Boolean:null)`                          | Get number activation index             |\\n| Method                  | `self.getNum(index:Number, loop:Boolean:null)`                          | Get number activation element             |\\n| Method                  | `self.goToNum(index:Number, force:Boolean:false, loop:Boolean:null)`                          | Activate number             |\\n\\n</div>\\n\\n## Demo\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/toggle/events-methods\\\">\\n  </div>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form class=\\\"text-base\\\">\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Input\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\">\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" multiple>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-md\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-md\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-md\\\" checked>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-md\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"export default () => {\\n  return `md:text-white links-inverse md:bg-accent-500 md:hover:bg-accent-600 md:active:bg-accent-700`\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Lorem ipsum\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Dolor sit amet\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Lorem ipsum\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-auto\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Dolor sit amet\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n            <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-inline-row\\\" checked>\\n            <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-inline-row\\\">\\n            <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-auto\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n            <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-inline-row\\\" checked>\\n            <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-auto\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-inline-row\\\">\\n            <span class=\\\"ml-3\\\">Lorem ipsum</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"export default () => {\\n  return `border rounded-full text-accent-500 border-gray-400 bg-gray-200`\\n}\\n\";","export default \"module.exports = {\\n  component: {\\n    '.separator': {\\n      // setup\\n      display: 'inline-block',\\n      position: 'relative',\\n      fontSize: '1em',\\n      verticalAlign: 'baseline',\\n    },\\n    '.separator-dash': {\\n      // styles\\n      '&:after': {\\n        content: '\\\"-\\\"',\\n      },\\n    },\\n    '.separator-slash': {\\n      // styles\\n      '&:after': {\\n        content: '\\\"/\\\"',\\n      },\\n    },\\n    '.separator-pipe': {\\n      // styles\\n      '&:after': {\\n        content: '\\\"|\\\"',\\n      },\\n    },\\n    '.separator-point': {\\n      // styles\\n      '&:after': {\\n        content: '\\\"•\\\"',\\n      },\\n    },\\n    '.separator-arrow': {\\n      // styles\\n      '&:after': {\\n        content: '\\\">\\\"',\\n      },\\n    },\\n  },\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Ripple\\n */\\nclass Ripple {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // options\\n    self.options = Xt.merge([self.constructor.optionsDefault, self.optionsCustom])\\n    // generate\\n    if (!self.container) {\\n      self.object.append(Xt.createElement('<div class=\\\"ripple-container\\\"></div>'))\\n      self.container = self.object.querySelector(':scope > .ripple-container')\\n    }\\n    // on\\n    self.object.addEventListener('mousedown', self.eventStart.bind(self))\\n    self.object.addEventListener('touchstart', self.eventStart.bind(self), { passive: true })\\n    // initialized class\\n    self.object.classList.add(self.componentName)\\n    // @FIX raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt.ripple'))\\n    })\\n  }\\n\\n  //\\n  // methods\\n  //\\n\\n  /**\\n   * eventStart\\n   */\\n  eventStart(e) {\\n    const self = this\\n    const options = self.options\\n    // check if inside onlyInside\\n    if (!options.onlyInside || e.target.closest(options.onlyInside)) {\\n      self.container.append(Xt.createElement('<div class=\\\"ripple\\\"></div>'))\\n      // @FIX prevent dragging links and images\\n      if (e.type === 'mousedown') {\\n        e.preventDefault()\\n      }\\n      // size\\n      const h = self.object.offsetHeight\\n      const w = self.object.offsetWidth\\n      const sizeObject = h > w ? h : w\\n      const size = sizeObject * options.sizeInitial\\n      // scale from diagonal\\n      const sizeFinal = Math.sqrt(Math.pow(h, 2) + Math.pow(w, 2))\\n      const scaleFinal = (sizeFinal / size) * 2\\n      // offset (using clientX and clientY for touch so we need to get values with getBoundingClientRect also)\\n      let y\\n      let x\\n      if (e.clientX !== undefined) {\\n        y = e.clientY\\n        x = e.clientX\\n      } else if (e.touches && e.touches.length) {\\n        y = e.touches[0].clientY\\n        x = e.touches[0].clientX\\n      }\\n      const rectTarget = e.target.getBoundingClientRect()\\n      y = y - rectTarget.top\\n      x = x - rectTarget.left\\n      // position\\n      if (self.object !== e.target) {\\n        const rectObject = self.object.getBoundingClientRect()\\n        y += rectTarget.top - rectObject.top\\n        x += rectTarget.left - rectObject.left\\n      }\\n      const top = y - size / 2\\n      const left = x - size / 2\\n      // listener dispatch\\n      self.size = size\\n      self.top = top\\n      self.left = left\\n      self.sizeFinal = sizeFinal\\n      self.scaleFinal = scaleFinal\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('on.xt.ripple'))\\n      // off\\n      self.offListener = self.eventEnd.bind(self)\\n      addEventListener('mouseup', self.offListener)\\n      addEventListener('touchend', self.offListener, { passive: true })\\n    }\\n  }\\n\\n  /**\\n   * eventStart\\n   */\\n  eventEnd() {\\n    const self = this\\n    // off\\n    removeEventListener('mouseup', self.offListener)\\n    removeEventListener('touchend', self.offListener)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('off.xt.ripple'))\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * destroy\\n   */\\n  destroy() {\\n    const self = this\\n    // generate\\n    self.object.querySelector(':scope > .ripple-container').remove()\\n    // remove events\\n    // on\\n    self.object.removeEventListener('mousedown', self.eventStart.bind(self))\\n    self.object.removeEventListener('touchstart', self.eventStart.bind(self), { passive: true })\\n    // off\\n    removeEventListener('mouseup', self.offListener)\\n    removeEventListener('touchend', self.offListener)\\n    // initialized class\\n    self.object.classList.remove(self.componentName)\\n    // set self\\n    Xt.remove(self.componentName, self.object)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('destroy.xt.ripple'))\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nRipple.componentName = 'xt-ripple'\\nRipple.optionsDefault = {\\n  // ripple\\n  sizeInitial: 0.1,\\n  onlyInside: 'a, button, .btn',\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Ripple = Ripple\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Ripple.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Ripple.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Ripple(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      group\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-80 ${cardDefaultDrop()} overflow-y-auto overflow-x-hidden overflow-sub max-h-96\\\">\\n          <div class=\\\"rounded-t-md\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      group\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-80 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"rounded-t-md\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n          </div>\\n          <div class=\\\"card-md overflow-y-auto overflow-x-hidden overflow-sub max-h-64\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center xt-disable\\\" data-xt-toggle>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()} active-toggle\\\">\\n    Target 1\\n  </div>\\n\\n</div>\\n\\n<br/>\\n\\n<div class=\\\"list list-2 items-center xt-disable-after-init\\\" data-xt-toggle>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()} active-toggle\\\">\\n    Target 1\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"/* global google */\\nimport { Xt } from 'xtendui'\\nimport 'xtendui/src/addons/google-locator'\\n\\n// add yout api key here\\n\\nXt.addScript(\\n  'https://maps.googleapis.com/maps/api/js?key=AIzaSyDSZt9TUgS20QyAbAAL-X3tJIKVLEaCrts&v=3&libraries=places,geometry&language=en&&region=US&callback=demoGoogleLocator'\\n)\\n\\nwindow.demoGoogleLocator = function () {\\n  Xt.mount.push({\\n    matches: '#iframe--google-locator body .google-locator', // add your own selector instead of body to contain the code\\n    mount: object => {\\n      // init\\n\\n      let self = new Xt.GoogleLocator(object, {\\n        events: {\\n          animateMarkerResultClick: google.maps.Animation.BOUNCE,\\n          infoWindowMarkerClick: true,\\n        },\\n        map: {\\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\\n          zoomControlOptions: {\\n            position: google.maps.ControlPosition.RIGHT_CENTER,\\n          },\\n        },\\n        formatData: {\\n          filter: function (self, marker, filter) {\\n            return marker[filter] || (marker.type && marker.type.includes(filter))\\n          },\\n        },\\n      })\\n\\n      // unmount\\n\\n      const unmount = () => {\\n        self.destroy()\\n        self = null\\n      }\\n      return unmount\\n    },\\n  })\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupListing = require('components/snippets/themes/markup-listing').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${markupListing()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Smooth\\\"\\ntitle: \\\"Smooth\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n@TODO\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"expand\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **group expand**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/group-expand\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      bottom left\\n    </button>\\n\\n    <div class=\\\"drop md:drop-bottom md:drop-left\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      top left\\n    </button>\\n\\n    <div class=\\\"drop md:drop-top md:drop-left\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left middle\\n    </button>\\n\\n    <div class=\\\"drop md:drop-left md:drop-middle\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left contain-bottom\\n    </button>\\n\\n    <div class=\\\"drop md:drop-left md:drop-contain-bottom\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      left contain-top\\n    </button>\\n\\n    <div class=\\\"drop md:drop-left md:drop-contain-top\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst spinner = require('components/snippets/spinner').default\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <div class=\\\"loader bg-white bg-opacity-75\\\">\\n      <div class=\\\"spinner spinner-animated text-accent-500\\\">\\n        ${spinner({})}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader bg-white bg-opacity-75\\\">\\n      <span class=\\\"spinner spinner-animated text-accent-500\\\">\\n          ${spinner({})}\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ wheel: { selector: '.slides-inner' } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Introduction\\\"\\ntitle: \\\"Introduction\\\"\\ndescription: \\\"Extremely customizable and designed for building custom websites with complex interactions\\\"\\n---\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\" style=\\\"padding-bottom: 56.2%\\\">\\n  <div class=\\\"media-inner\\\">\\n    <img class=\\\"media object-cover object-center\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n  </div>\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\" id=\\\"demo--overlay-nested-disable-toggle\\\">\\n  Nested\\n</button>\\n\\n<div class=\\\"overlay\\\" id=\\\"demo--overlay-nested-disable\\\"\\n  data-xt-overlay=\\\"{ on: false, instant: false }\\\">\\n  <div class=\\\"overlay-container max-w-3xl\\\">\\n    <div class=\\\"overlay-inner\\\">\\n\\n      <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n        <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n          ${iconX()}\\n        </div>\\n        <div class=\\\"card-md\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n\\n          <div data-xt-overlay>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n              Overlay\\n            </button>\\n\\n            <div class=\\\"overlay\\\">\\n              <div class=\\\"overlay-container max-w-3xl\\\">\\n                <div class=\\\"overlay-inner\\\">\\n\\n                  <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n                    <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n                      ${iconX()}\\n                    </div>\\n                    <div class=\\\"card-md\\\">\\n                      <div class=\\\"h4\\\">Lorem ipsum</div>\\n                      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                      <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n                      <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ contain: true, align: 'center' }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"const cardDefault = require('components/snippets/classes/card-default').default\\nconst cardPrimary = require('components/snippets/classes/card-primary').default\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"row row-3\\\">\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <a role=\\\"button\\\" class=\\\"card ${cardDefault()}\\\">\\n        <div class=\\\"card-md\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <a role=\\\"button\\\" class=\\\"card ${cardPrimary()}\\\">\\n        <div class=\\\"card-md\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <div class=\\\"card ${cardDefault()}\\\">\\n        <div class=\\\"card-md\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n            primary\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <div class=\\\"card ${cardPrimary()}\\\">\\n        <div class=\\\"card-md\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum dolor sit amet</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            default\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n</div>\\n`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport JSON5 from 'json5'\\n\\n/**\\n * TextareaAutosize\\n */\\nclass TextareaAutosize {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // options\\n    self.options = Xt.merge([self.constructor.optionsDefault, self.optionsCustom])\\n    // class\\n    self.object.classList.add('textarea-autosize')\\n    // key\\n    self.object.addEventListener('keydown', self.keychange.bind(self))\\n    self.object.addEventListener('keyup', self.keychange.bind(self))\\n    // form\\n    self.form = self.object.closest('form')\\n    if (self.form) {\\n      self.form.addEventListener('reset', self.keychange.bind(self))\\n    }\\n    // initial\\n    self.keychange.bind(self)()\\n    // initialized class\\n    self.object.classList.add(self.componentName)\\n    // @FIX raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt.textareaautosize'))\\n    })\\n  }\\n\\n  //\\n  // methods\\n  //\\n\\n  /**\\n   * keychange\\n   */\\n  keychange() {\\n    const self = this\\n    self.object.style.height = '5px'\\n    self.object.style.height = self.object.scrollHeight + 'px' // fixes both safari RAF and form reset\\n    requestAnimationFrame(() => {\\n      self.object.style.height = '5px' // fixes both safari RAF and form reset\\n      self.object.style.height = self.object.scrollHeight + 'px'\\n    })\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * destroy\\n   */\\n  destroy() {\\n    const self = this\\n    // class\\n    self.object.classList.remove('textarea-autosize')\\n    // remove events\\n    if (self.form) {\\n      self.form.removeEventListener('reset', self.keychange.bind(self))\\n    }\\n    self.object.removeEventListener('keydown', self.keychange.bind(self))\\n    self.object.removeEventListener('keyup', self.keychange.bind(self))\\n    // initialized class\\n    self.object.classList.remove(self.componentName)\\n    // set self\\n    Xt.remove(self.componentName, self.object)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('destroy.xt.textareaautosize'))\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nTextareaAutosize.componentName = 'xt-textarea-autosize'\\nTextareaAutosize.optionsDefault = {}\\n\\n//\\n// export\\n//\\n\\nXt.TextareaAutosize = TextareaAutosize\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.TextareaAutosize.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.TextareaAutosize.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.TextareaAutosize(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"Interaction\\\"\\ndate: \\\"2010-10-10\\\"\\n---\\n\\n## Class\\n\\nYou can customize the **class names** used with the component.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `class:String`                          | `active active-slider`        | Class name for activation            |\\n| Option                  | `classIn:String`                          | `in`        | Class name for in animation            |\\n| Option                  | `classOut:String`                          | `out`        | Class name for out animation            |\\n| Option                  | `classDone:String`                          | `done`        | Class name for in animation done            |\\n| Option                  | `classInitial:String`                          | `initial`        | Class name for initialization            |\\n| Option                  | `classInverse:String`                          | `inverse`        | Class name for inverse direction activation            |\\n\\n</div>\\n\\nYou can start with toggled elements and targets just by adding **one of the class names for activation** to the **elements** or **targets**.\\n\\nAdditionally on component initialization the class `xt-slider` gets added to the **object** (the DOM element you assigned the component).\\n\\n## Pagination\\n\\nYou can add pagination with an element `[data-xt-pag].xt-ignore`, it gets cloned inside the closest `.slider-pagination`.\\n\\nInside it you can use this strings that gets populated with variables:\\n\\n- `xt-num` replaced with pagination's number slide\\n- `xt-tot` replaced with pagination's total slides\\n- `xt-content` replaced with slide's `.slide-pagination-content` **innerHTML**.\\n- Classes added with slide's `[data-slide-pagination-class]` **value**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `pagination:Query`                          | `'.slider-pagination'`        | Query for pagination element             |\\n\\n</div>\\n\\n[[notePrimary]]\\n| `[data-xt-pag].xt-ignore` is essential to the functioning of the slider, but you can hide it using the class `.hidden`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/pagination\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Navigation\\n\\nYou can add navigation with the `navigation:Query` option, on the queried elements use the attribute `[data-xt-nav=\\\"value\\\"]` to set the amount to add (`+1`) or remove (`-1`) to the current activation index.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `navigation:Query`                          | `[data-xt-nav]`        | Query for navigation elements             |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/navigation\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Drag\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `drag.dragger:Query`                          | `'.slides-inner'`        | Query for dragger element             |\\n| Option                  | `drag.manual:Boolean`                          | `false`        | Manual dragger position            |\\n| Option                  | `drag.threshold:Number`                          | `50`        | Minumim drag size for changing drag and disable links             |\\n| Option                  | `drag.factor:Number`                          | `1`        | Factor multiplier for drag             |\\n\\n</div>\\n\\n#### Friction\\n\\n@TODO\\n\\nYou can set friction with `drag: { friction: Function }`, for example `(velocity) => {return Math.pow(velocity, 0.9)}`.\\n\\nYou can disable friction with `drag: { friction: false }`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `drag.friction:Function`                          | `<function>`        | Function for friction             |\\n| Option                  | `drag.frictionLimit:Number`                          | `1.5`        | Limit for friction calculation             |\\n| Option                  | `drag.frictionTime:Milliseconds`                          | `25`        | Milliseconds after we disable drag friction building            |\\n\\n</div>\\n\\n#### Overflow\\n\\n@TODO\\n\\nYou can set overflow with `drag: { overflow: Function }`, for example `(overflow) => {return Math.pow(overflow, 0.73)}`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `drag.overflow:Function`                          | `<function>`        | Function for drag overflow             |\\n\\n</div>\\n\\n## Wheel\\n\\nUse `wheel: { selector: 'object' }` or `wheel: { selector: Query }` to enable mousewheel navigation.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/wheel\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Auto\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `auto.time:Milliseconds`                          | `false`        | Automatic activation time            |\\n| Option                  | `auto.initial:Boolean`                          | `true`        | Automatic activation on initial            |\\n| Option                  | `auto.step:Number`                          | `1`        | Automatic activation steps            |\\n| Option                  | `auto.inverse:Boolean`                          | `false`        | Automatic activation inverse order            |\\n| Option                  | `auto.pause:Query`                          | `[data-xt-pag], [data-xt-nav], .btn`        | Elements that pause automatic on mouseenter            |\\n\\n</div>\\n\\n[[notePrimary]]\\n| Auto doesn't run if the slider is `display: none`. Start it manually when visible using [slider events](/components/core/slider/api#trigger).\\n\\nUse the [api](/components/core/slider/api#listen) and listen to events to make auto progress indicators.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/progress\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Block\\n\\nYou can block the activations with the class `.xt-block` on elements.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.xt-block`                     | `NOT POSSIBLE`                | Block scroll on element            |\\n\\n</div>\\n\\n## Other\\n\\nDo not loop slides activation with `loop: false`.\\n\\nDisable the jump feature (clicking on not activated slides jumps to the slide) with `jump: false`. Jump only if the slide isn't entirely on screen.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `loop:Boolean`                          | `true`        | Loop activation            |\\n| Option                  | `jump:Boolean`                          | `true`        | Clicking on targets triggers activation            |\\n| Option                  | `jumpOverflow:Boolean`                          | `false`        | Jump only activates if slide overflows the dragger            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/slider/other\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n  button\\n</button>\\n`\\n\";","var map = {\n\t\"./addons/google-locator\": \"JZEl\",\n\t\"./addons/google-locator.js\": \"JZEl\",\n\t\"./addons/group-number\": \"aWqb\",\n\t\"./addons/group-number.css\": \"TRev\",\n\t\"./addons/group-number.css.js\": \"TRev\",\n\t\"./addons/group-number.js\": \"aWqb\",\n\t\"./addons/infinite-scroll\": \"rxXK\",\n\t\"./addons/infinite-scroll.js\": \"rxXK\",\n\t\"./addons/mouse-follow\": \"mHqi\",\n\t\"./addons/mouse-follow.css\": \"I9wt\",\n\t\"./addons/mouse-follow.css.js\": \"I9wt\",\n\t\"./addons/mouse-follow.js\": \"mHqi\",\n\t\"./addons/propagate-interaction\": \"dSwb\",\n\t\"./addons/propagate-interaction.js\": \"dSwb\",\n\t\"./addons/ripple\": \"jL0o\",\n\t\"./addons/ripple.css\": \"H8pM\",\n\t\"./addons/ripple.css.js\": \"H8pM\",\n\t\"./addons/ripple.js\": \"jL0o\",\n\t\"./addons/scroll-to-anchor\": \"cEEA\",\n\t\"./addons/scroll-to-anchor.js\": \"cEEA\",\n\t\"./addons/separator.css\": \"j1j2\",\n\t\"./addons/separator.css.js\": \"j1j2\",\n\t\"./addons/slider-navigation-sides.css\": \"slNr\",\n\t\"./addons/slider-navigation-sides.css.js\": \"slNr\",\n\t\"./addons/textarea-autosize\": \"kScU\",\n\t\"./addons/textarea-autosize.js\": \"kScU\",\n\t\"./core/_table.less\": \"Xyps\",\n\t\"./core/badge.css\": \"w/Ov\",\n\t\"./core/badge.css.js\": \"w/Ov\",\n\t\"./core/btn.css\": \"SOEB\",\n\t\"./core/btn.css.js\": \"SOEB\",\n\t\"./core/card.css\": \"+TtO\",\n\t\"./core/card.css.js\": \"+TtO\",\n\t\"./core/drop\": \"Y0XD\",\n\t\"./core/drop.css\": \"Nwys\",\n\t\"./core/drop.css.js\": \"Nwys\",\n\t\"./core/drop.js\": \"Y0XD\",\n\t\"./core/form\": \"0MGG\",\n\t\"./core/form.css\": \"gj32\",\n\t\"./core/form.css.js\": \"gj32\",\n\t\"./core/form.js\": \"0MGG\",\n\t\"./core/group.css\": \"z4N3\",\n\t\"./core/group.css.js\": \"z4N3\",\n\t\"./core/icons.css\": \"WfwK\",\n\t\"./core/icons.css.js\": \"WfwK\",\n\t\"./core/link.css\": \"qeSk\",\n\t\"./core/link.css.js\": \"qeSk\",\n\t\"./core/list.css\": \"7CHW\",\n\t\"./core/list.css.js\": \"7CHW\",\n\t\"./core/loader.css\": \"3B3+\",\n\t\"./core/loader.css.js\": \"3B3+\",\n\t\"./core/media.css\": \"p8dH\",\n\t\"./core/media.css.js\": \"p8dH\",\n\t\"./core/overlay\": \"oFud\",\n\t\"./core/overlay.css\": \"Bu/5\",\n\t\"./core/overlay.css.js\": \"Bu/5\",\n\t\"./core/overlay.js\": \"oFud\",\n\t\"./core/row.css\": \"vB/0\",\n\t\"./core/row.css.js\": \"vB/0\",\n\t\"./core/slider\": \"tqJu\",\n\t\"./core/slider.css\": \"KHFF\",\n\t\"./core/slider.css.js\": \"KHFF\",\n\t\"./core/slider.js\": \"tqJu\",\n\t\"./core/structure.css\": \"UlG0\",\n\t\"./core/structure.css.js\": \"UlG0\",\n\t\"./core/structurejs.css\": \"FXPA\",\n\t\"./core/structurejs.css.js\": \"FXPA\",\n\t\"./core/table.css\": \"Q2QN\",\n\t\"./core/table.css.js\": \"Q2QN\",\n\t\"./core/table.less\": \"peKf\",\n\t\"./core/toggle\": \"fRPe\",\n\t\"./core/toggle.css\": \"pCTr\",\n\t\"./core/toggle.css.js\": \"pCTr\",\n\t\"./core/toggle.js\": \"fRPe\",\n\t\"./core/typography.css\": \"qsQv\",\n\t\"./core/typography.css.js\": \"qsQv\",\n\t\"./future/ajax\": \"BktD\",\n\t\"./future/ajax.js\": \"BktD\",\n\t\"./future/scroll\": \"7OFo\",\n\t\"./future/scroll.js\": \"7OFo\",\n\t\"./future/smooth\": \"9pqP\",\n\t\"./future/smooth.js\": \"9pqP\",\n\t\"./future/sticky\": \"5Xyz\",\n\t\"./future/sticky.css\": \"ro7d\",\n\t\"./future/sticky.css.js\": \"ro7d\",\n\t\"./future/sticky.js\": \"5Xyz\",\n\t\"./gatsby/assets/scripts/ResizeSensor\": \"UkI1\",\n\t\"./gatsby/assets/scripts/ResizeSensor.js\": \"UkI1\",\n\t\"./gatsby/assets/scripts/demo\": \"Kyo/\",\n\t\"./gatsby/assets/scripts/demo.js\": \"Kyo/\",\n\t\"./gatsby/assets/scripts/gatsby\": \"LRAy\",\n\t\"./gatsby/assets/scripts/gatsby.js\": \"LRAy\",\n\t\"./gatsby/assets/scripts/source\": \"pJlA\",\n\t\"./gatsby/assets/scripts/source.js\": \"pJlA\",\n\t\"./gatsby/assets/scripts/theme\": \"fFMt\",\n\t\"./gatsby/assets/scripts/theme.js\": \"fFMt\",\n\t\"./gatsby/assets/styles/_demo.css\": \"vUr0\",\n\t\"./gatsby/assets/styles/_footer.css\": \"/7dL\",\n\t\"./gatsby/assets/styles/_header.css\": \"xO0q\",\n\t\"./gatsby/assets/styles/_main.css\": \"A35d\",\n\t\"./gatsby/assets/styles/_prism.css\": \"Ft54\",\n\t\"./gatsby/assets/styles/_shared.css\": \"vZR1\",\n\t\"./gatsby/assets/styles/theme.css\": \"ljIn\",\n\t\"./gatsby/code/iframe/components/addons/google-locator\": \"r5+8\",\n\t\"./gatsby/code/iframe/components/addons/google-locator.js\": \"r5+8\",\n\t\"./gatsby/code/iframe/components/addons/infinite-scroll\": \"5//2\",\n\t\"./gatsby/code/iframe/components/addons/infinite-scroll.js\": \"5//2\",\n\t\"./gatsby/code/iframe/components/addons/jump-to-content\": \"YKQF\",\n\t\"./gatsby/code/iframe/components/addons/jump-to-content.js\": \"YKQF\",\n\t\"./gatsby/code/iframe/components/addons/scroll-to-anchor\": \"bi9E\",\n\t\"./gatsby/code/iframe/components/addons/scroll-to-anchor.js\": \"bi9E\",\n\t\"./gatsby/code/iframe/components/addons/sticky-footer\": \"uUeQ\",\n\t\"./gatsby/code/iframe/components/addons/sticky-footer.js\": \"uUeQ\",\n\t\"./gatsby/code/iframe/components/core/drop/events-methods\": \"s6PS\",\n\t\"./gatsby/code/iframe/components/core/drop/events-methods.js\": \"s6PS\",\n\t\"./gatsby/code/iframe/components/core/overlay/events-methods\": \"wuU3\",\n\t\"./gatsby/code/iframe/components/core/overlay/events-methods.js\": \"wuU3\",\n\t\"./gatsby/code/iframe/components/core/overlay/usage-standalone\": \"dGJL\",\n\t\"./gatsby/code/iframe/components/core/overlay/usage-standalone.js\": \"dGJL\",\n\t\"./gatsby/code/iframe/components/core/scroll/block\": \"eQga\",\n\t\"./gatsby/code/iframe/components/core/scroll/block.js\": \"eQga\",\n\t\"./gatsby/code/iframe/components/core/scroll/delay\": \"JmQV\",\n\t\"./gatsby/code/iframe/components/core/scroll/delay.js\": \"JmQV\",\n\t\"./gatsby/code/iframe/components/core/scroll/distance\": \"DQTE\",\n\t\"./gatsby/code/iframe/components/core/scroll/distance.js\": \"DQTE\",\n\t\"./gatsby/code/iframe/components/core/scroll/indicator\": \"h5pn\",\n\t\"./gatsby/code/iframe/components/core/scroll/indicator.js\": \"h5pn\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-infinite\": \"cxaI\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-infinite.js\": \"cxaI\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-inside\": \"a4aZ\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-inside.js\": \"a4aZ\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-once\": \"7tmO\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-once.js\": \"7tmO\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-outside\": \"aij/\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-outside-once\": \"uSwv\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-outside-once.js\": \"uSwv\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-outside.js\": \"aij/\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-responsive\": \"1N3B\",\n\t\"./gatsby/code/iframe/components/core/scroll/mode-responsive.js\": \"1N3B\",\n\t\"./gatsby/code/iframe/components/core/slider/events-methods\": \"mGv5\",\n\t\"./gatsby/code/iframe/components/core/slider/events-methods.js\": \"mGv5\",\n\t\"./gatsby/code/iframe/components/core/sticky/block\": \"XuJL\",\n\t\"./gatsby/code/iframe/components/core/sticky/block.js\": \"XuJL\",\n\t\"./gatsby/code/iframe/components/core/sticky/contain-bottom\": \"i0R2\",\n\t\"./gatsby/code/iframe/components/core/sticky/contain-bottom.js\": \"i0R2\",\n\t\"./gatsby/code/iframe/components/core/sticky/contain-top\": \"+WrL\",\n\t\"./gatsby/code/iframe/components/core/sticky/contain-top.js\": \"+WrL\",\n\t\"./gatsby/code/iframe/components/core/sticky/disable\": \"CrIT\",\n\t\"./gatsby/code/iframe/components/core/sticky/disable.js\": \"CrIT\",\n\t\"./gatsby/code/iframe/components/core/sticky/hide\": \"LeTi\",\n\t\"./gatsby/code/iframe/components/core/sticky/hide.js\": \"LeTi\",\n\t\"./gatsby/code/iframe/components/core/sticky/limit\": \"XcVu\",\n\t\"./gatsby/code/iframe/components/core/sticky/limit.js\": \"XcVu\",\n\t\"./gatsby/code/iframe/components/core/sticky/mode-absolute\": \"zts3\",\n\t\"./gatsby/code/iframe/components/core/sticky/mode-absolute.js\": \"zts3\",\n\t\"./gatsby/code/iframe/components/core/sticky/mode-fixed\": \"g8jM\",\n\t\"./gatsby/code/iframe/components/core/sticky/mode-fixed-always\": \"9LMn\",\n\t\"./gatsby/code/iframe/components/core/sticky/mode-fixed-always.js\": \"9LMn\",\n\t\"./gatsby/code/iframe/components/core/sticky/mode-fixed.js\": \"g8jM\",\n\t\"./gatsby/code/iframe/components/core/sticky/position\": \"T6rR\",\n\t\"./gatsby/code/iframe/components/core/sticky/position.js\": \"T6rR\",\n\t\"./gatsby/code/iframe/components/core/sticky/showhide-bottom\": \"xb5S\",\n\t\"./gatsby/code/iframe/components/core/sticky/showhide-bottom.js\": \"xb5S\",\n\t\"./gatsby/code/iframe/components/core/sticky/showhide-hide\": \"Arsx\",\n\t\"./gatsby/code/iframe/components/core/sticky/showhide-hide.js\": \"Arsx\",\n\t\"./gatsby/code/iframe/components/core/sticky/showhide-top\": \"Mu9w\",\n\t\"./gatsby/code/iframe/components/core/sticky/showhide-top.js\": \"Mu9w\",\n\t\"./gatsby/code/iframe/components/core/toggle/events-methods\": \"ZHR+\",\n\t\"./gatsby/code/iframe/components/core/toggle/events-methods.js\": \"ZHR+\",\n\t\"./gatsby/code/iframe/test/demo-vanilla-iframe\": \"0mzM\",\n\t\"./gatsby/code/iframe/test/demo-vanilla-iframe.js\": \"0mzM\",\n\t\"./gatsby/code/iframe/themes/brands-featured-v1\": \"y6Cb\",\n\t\"./gatsby/code/iframe/themes/brands-featured-v1.js\": \"y6Cb\",\n\t\"./gatsby/code/iframe/themes/collapse-theme-v1\": \"Zo2p\",\n\t\"./gatsby/code/iframe/themes/collapse-theme-v1.js\": \"Zo2p\",\n\t\"./gatsby/code/iframe/themes/fashion-gallery-v1\": \"DaM5\",\n\t\"./gatsby/code/iframe/themes/fashion-gallery-v1.js\": \"DaM5\",\n\t\"./gatsby/code/iframe/themes/fashion-hero-v1\": \"00KY\",\n\t\"./gatsby/code/iframe/themes/fashion-hero-v1.js\": \"00KY\",\n\t\"./gatsby/code/iframe/themes/fashion-hero-v2\": \"Tzrx\",\n\t\"./gatsby/code/iframe/themes/fashion-hero-v2.js\": \"Tzrx\",\n\t\"./gatsby/code/iframe/themes/fashion-listing-v1\": \"IRsl\",\n\t\"./gatsby/code/iframe/themes/fashion-listing-v1.js\": \"IRsl\",\n\t\"./gatsby/code/iframe/themes/furniture-featured-v1\": \"NXwD\",\n\t\"./gatsby/code/iframe/themes/furniture-featured-v1.js\": \"NXwD\",\n\t\"./gatsby/code/iframe/themes/furniture-listing-v1\": \"jYiU\",\n\t\"./gatsby/code/iframe/themes/furniture-listing-v1.js\": \"jYiU\",\n\t\"./gatsby/code/iframe/themes/industrial-featured-v1\": \"WAF5\",\n\t\"./gatsby/code/iframe/themes/industrial-featured-v1.js\": \"WAF5\",\n\t\"./gatsby/code/iframe/themes/opacity-listing-v1\": \"SvmF\",\n\t\"./gatsby/code/iframe/themes/opacity-listing-v1.js\": \"SvmF\",\n\t\"./gatsby/code/iframe/themes/sequential-megamenu-v1\": \"rmWD\",\n\t\"./gatsby/code/iframe/themes/sequential-megamenu-v1.js\": \"rmWD\",\n\t\"./gatsby/code/iframe/themes/slide-overlay-v1\": \"q40G\",\n\t\"./gatsby/code/iframe/themes/slide-overlay-v1.js\": \"q40G\",\n\t\"./gatsby/code/iframe/themes/stores-listing-v1\": \"r8nO\",\n\t\"./gatsby/code/iframe/themes/stores-listing-v1.js\": \"r8nO\",\n\t\"./gatsby/code/iframe/themes/stores-listing-v2\": \"r98H\",\n\t\"./gatsby/code/iframe/themes/stores-listing-v2.js\": \"r98H\",\n\t\"./gatsby/code/iframe/themes/xtend-theme-v1\": \"qxxn\",\n\t\"./gatsby/code/iframe/themes/xtend-theme-v1.js\": \"qxxn\",\n\t\"./gatsby/code/vanilla/components/addons/group-expand\": \"Tr2t\",\n\t\"./gatsby/code/vanilla/components/addons/group-expand.js\": \"Tr2t\",\n\t\"./gatsby/code/vanilla/components/addons/group-nav\": \"D0SR\",\n\t\"./gatsby/code/vanilla/components/addons/group-nav.js\": \"D0SR\",\n\t\"./gatsby/code/vanilla/components/addons/group-number\": \"3JzM\",\n\t\"./gatsby/code/vanilla/components/addons/group-number.js\": \"3JzM\",\n\t\"./gatsby/code/vanilla/components/addons/group-toolbar\": \"oe8p\",\n\t\"./gatsby/code/vanilla/components/addons/group-toolbar.js\": \"oe8p\",\n\t\"./gatsby/code/vanilla/components/addons/list-custom\": \"8CUV\",\n\t\"./gatsby/code/vanilla/components/addons/list-custom.js\": \"8CUV\",\n\t\"./gatsby/code/vanilla/components/addons/mouse-follow\": \"vHkC\",\n\t\"./gatsby/code/vanilla/components/addons/mouse-follow.js\": \"vHkC\",\n\t\"./gatsby/code/vanilla/components/addons/overlay-close-outside\": \"/Rug\",\n\t\"./gatsby/code/vanilla/components/addons/overlay-close-outside.js\": \"/Rug\",\n\t\"./gatsby/code/vanilla/components/addons/overlay-message-outside\": \"NDs3\",\n\t\"./gatsby/code/vanilla/components/addons/overlay-message-outside.js\": \"NDs3\",\n\t\"./gatsby/code/vanilla/components/addons/ripple\": \"TnIv\",\n\t\"./gatsby/code/vanilla/components/addons/ripple.js\": \"TnIv\",\n\t\"./gatsby/code/vanilla/components/addons/separator\": \"wWbl\",\n\t\"./gatsby/code/vanilla/components/addons/separator-type\": \"YlYF\",\n\t\"./gatsby/code/vanilla/components/addons/separator-type.js\": \"YlYF\",\n\t\"./gatsby/code/vanilla/components/addons/separator.js\": \"wWbl\",\n\t\"./gatsby/code/vanilla/components/addons/slider-navigation-sides\": \"A5Ep\",\n\t\"./gatsby/code/vanilla/components/addons/slider-navigation-sides.js\": \"A5Ep\",\n\t\"./gatsby/code/vanilla/components/addons/textarea-autosize\": \"up2z\",\n\t\"./gatsby/code/vanilla/components/addons/textarea-autosize.js\": \"up2z\",\n\t\"./gatsby/code/vanilla/components/addons/toggle-multilevel\": \"EVpE\",\n\t\"./gatsby/code/vanilla/components/addons/toggle-multilevel.js\": \"EVpE\",\n\t\"./gatsby/code/vanilla/components/core/badge/interactive\": \"ZqK/\",\n\t\"./gatsby/code/vanilla/components/core/badge/interactive.js\": \"ZqK/\",\n\t\"./gatsby/code/vanilla/components/core/badge/size\": \"MMf9\",\n\t\"./gatsby/code/vanilla/components/core/badge/size.js\": \"MMf9\",\n\t\"./gatsby/code/vanilla/components/core/badge/usage\": \"FMq4\",\n\t\"./gatsby/code/vanilla/components/core/badge/usage.js\": \"FMq4\",\n\t\"./gatsby/code/vanilla/components/core/badge/variant\": \"HsJA\",\n\t\"./gatsby/code/vanilla/components/core/badge/variant.js\": \"HsJA\",\n\t\"./gatsby/code/vanilla/components/core/breadcrumbs/title\": \"7/yG\",\n\t\"./gatsby/code/vanilla/components/core/breadcrumbs/title.js\": \"7/yG\",\n\t\"./gatsby/code/vanilla/components/core/breadcrumbs/usage\": \"0xGx\",\n\t\"./gatsby/code/vanilla/components/core/breadcrumbs/usage.js\": \"0xGx\",\n\t\"./gatsby/code/vanilla/components/core/button/active\": \"JZmd\",\n\t\"./gatsby/code/vanilla/components/core/button/active.js\": \"JZmd\",\n\t\"./gatsby/code/vanilla/components/core/button/alignment\": \"v99g\",\n\t\"./gatsby/code/vanilla/components/core/button/alignment.js\": \"v99g\",\n\t\"./gatsby/code/vanilla/components/core/button/disabled\": \"fWem\",\n\t\"./gatsby/code/vanilla/components/core/button/disabled.js\": \"fWem\",\n\t\"./gatsby/code/vanilla/components/core/button/icons\": \"Ohb3\",\n\t\"./gatsby/code/vanilla/components/core/button/icons.js\": \"Ohb3\",\n\t\"./gatsby/code/vanilla/components/core/button/size\": \"4G38\",\n\t\"./gatsby/code/vanilla/components/core/button/size.js\": \"4G38\",\n\t\"./gatsby/code/vanilla/components/core/button/usage\": \"kTM1\",\n\t\"./gatsby/code/vanilla/components/core/button/usage.js\": \"kTM1\",\n\t\"./gatsby/code/vanilla/components/core/button/variant\": \"WUQi\",\n\t\"./gatsby/code/vanilla/components/core/button/variant-inverse\": \"JkaJ\",\n\t\"./gatsby/code/vanilla/components/core/button/variant-inverse.js\": \"JkaJ\",\n\t\"./gatsby/code/vanilla/components/core/button/variant.js\": \"WUQi\",\n\t\"./gatsby/code/vanilla/components/core/card/close\": \"LRqv\",\n\t\"./gatsby/code/vanilla/components/core/card/close-full\": \"x9Rf\",\n\t\"./gatsby/code/vanilla/components/core/card/close-full.js\": \"x9Rf\",\n\t\"./gatsby/code/vanilla/components/core/card/close.js\": \"LRqv\",\n\t\"./gatsby/code/vanilla/components/core/card/content\": \"nUdw\",\n\t\"./gatsby/code/vanilla/components/core/card/content-full\": \"4LyH\",\n\t\"./gatsby/code/vanilla/components/core/card/content-full.js\": \"4LyH\",\n\t\"./gatsby/code/vanilla/components/core/card/content.js\": \"nUdw\",\n\t\"./gatsby/code/vanilla/components/core/card/disable\": \"oiLr\",\n\t\"./gatsby/code/vanilla/components/core/card/disable.js\": \"oiLr\",\n\t\"./gatsby/code/vanilla/components/core/card/group\": \"J6c/\",\n\t\"./gatsby/code/vanilla/components/core/card/group-full\": \"qDG6\",\n\t\"./gatsby/code/vanilla/components/core/card/group-full.js\": \"qDG6\",\n\t\"./gatsby/code/vanilla/components/core/card/group.js\": \"J6c/\",\n\t\"./gatsby/code/vanilla/components/core/card/interactive\": \"NdTT\",\n\t\"./gatsby/code/vanilla/components/core/card/interactive-full\": \"XBvw\",\n\t\"./gatsby/code/vanilla/components/core/card/interactive-full.js\": \"XBvw\",\n\t\"./gatsby/code/vanilla/components/core/card/interactive.js\": \"NdTT\",\n\t\"./gatsby/code/vanilla/components/core/card/list\": \"eezf\",\n\t\"./gatsby/code/vanilla/components/core/card/list-full\": \"fNR0\",\n\t\"./gatsby/code/vanilla/components/core/card/list-full.js\": \"fNR0\",\n\t\"./gatsby/code/vanilla/components/core/card/list.js\": \"eezf\",\n\t\"./gatsby/code/vanilla/components/core/card/overflow-y\": \"P0vo\",\n\t\"./gatsby/code/vanilla/components/core/card/overflow-y-full\": \"gHf2\",\n\t\"./gatsby/code/vanilla/components/core/card/overflow-y-full.js\": \"gHf2\",\n\t\"./gatsby/code/vanilla/components/core/card/overflow-y.js\": \"P0vo\",\n\t\"./gatsby/code/vanilla/components/core/card/separator\": \"hIgw\",\n\t\"./gatsby/code/vanilla/components/core/card/separator-full\": \"uh6z\",\n\t\"./gatsby/code/vanilla/components/core/card/separator-full.js\": \"uh6z\",\n\t\"./gatsby/code/vanilla/components/core/card/separator.js\": \"hIgw\",\n\t\"./gatsby/code/vanilla/components/core/card/size\": \"W5vX\",\n\t\"./gatsby/code/vanilla/components/core/card/size-full\": \"oIor\",\n\t\"./gatsby/code/vanilla/components/core/card/size-full.js\": \"oIor\",\n\t\"./gatsby/code/vanilla/components/core/card/size.js\": \"W5vX\",\n\t\"./gatsby/code/vanilla/components/core/card/usage\": \"NxES\",\n\t\"./gatsby/code/vanilla/components/core/card/usage-stack\": \"LSlm\",\n\t\"./gatsby/code/vanilla/components/core/card/usage-stack.js\": \"LSlm\",\n\t\"./gatsby/code/vanilla/components/core/card/usage.js\": \"NxES\",\n\t\"./gatsby/code/vanilla/components/core/card/variant\": \"x8Wl\",\n\t\"./gatsby/code/vanilla/components/core/card/variant-full\": \"ykUk\",\n\t\"./gatsby/code/vanilla/components/core/card/variant-full.js\": \"ykUk\",\n\t\"./gatsby/code/vanilla/components/core/card/variant.js\": \"x8Wl\",\n\t\"./gatsby/code/vanilla/components/core/drop/after\": \"644X\",\n\t\"./gatsby/code/vanilla/components/core/drop/after.js\": \"644X\",\n\t\"./gatsby/code/vanilla/components/core/drop/animation\": \"1YBB\",\n\t\"./gatsby/code/vanilla/components/core/drop/animation-js\": \"gqYa\",\n\t\"./gatsby/code/vanilla/components/core/drop/animation-js.js\": \"gqYa\",\n\t\"./gatsby/code/vanilla/components/core/drop/animation.js\": \"1YBB\",\n\t\"./gatsby/code/vanilla/components/core/drop/backdrop\": \"f4oi\",\n\t\"./gatsby/code/vanilla/components/core/drop/backdrop.js\": \"f4oi\",\n\t\"./gatsby/code/vanilla/components/core/drop/before\": \"Em9U\",\n\t\"./gatsby/code/vanilla/components/core/drop/before.js\": \"Em9U\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-content\": \"n9Tz\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-content.js\": \"n9Tz\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-group\": \"6VpO\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-group.js\": \"6VpO\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-list\": \"6E6K\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-list.js\": \"6E6K\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-overflow-y\": \"jRE4\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-overflow-y.js\": \"jRE4\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-separator\": \"PeJx\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-separator.js\": \"PeJx\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-size\": \"eR5i\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-size.js\": \"eR5i\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-variant\": \"136V\",\n\t\"./gatsby/code/vanilla/components/core/drop/card-variant.js\": \"136V\",\n\t\"./gatsby/code/vanilla/components/core/drop/center\": \"7Fur\",\n\t\"./gatsby/code/vanilla/components/core/drop/center.js\": \"7Fur\",\n\t\"./gatsby/code/vanilla/components/core/drop/disable\": \"+VkE\",\n\t\"./gatsby/code/vanilla/components/core/drop/disable.js\": \"+VkE\",\n\t\"./gatsby/code/vanilla/components/core/drop/event\": \"KO8C\",\n\t\"./gatsby/code/vanilla/components/core/drop/event.js\": \"KO8C\",\n\t\"./gatsby/code/vanilla/components/core/drop/left\": \"jhOu\",\n\t\"./gatsby/code/vanilla/components/core/drop/left.js\": \"jhOu\",\n\t\"./gatsby/code/vanilla/components/core/drop/list-size\": \"4p2q\",\n\t\"./gatsby/code/vanilla/components/core/drop/list-size.js\": \"4p2q\",\n\t\"./gatsby/code/vanilla/components/core/drop/list-variant\": \"kxxV\",\n\t\"./gatsby/code/vanilla/components/core/drop/list-variant.js\": \"kxxV\",\n\t\"./gatsby/code/vanilla/components/core/drop/prevent-event\": \"p4ib\",\n\t\"./gatsby/code/vanilla/components/core/drop/prevent-event-hover\": \"mZ8n\",\n\t\"./gatsby/code/vanilla/components/core/drop/prevent-event-hover.js\": \"mZ8n\",\n\t\"./gatsby/code/vanilla/components/core/drop/prevent-event.js\": \"p4ib\",\n\t\"./gatsby/code/vanilla/components/core/drop/right\": \"C8+O\",\n\t\"./gatsby/code/vanilla/components/core/drop/right.js\": \"C8+O\",\n\t\"./gatsby/code/vanilla/components/core/drop/static\": \"8got\",\n\t\"./gatsby/code/vanilla/components/core/drop/static.js\": \"8got\",\n\t\"./gatsby/code/vanilla/components/core/drop/usage-multiple\": \"lbJ/\",\n\t\"./gatsby/code/vanilla/components/core/drop/usage-multiple.js\": \"lbJ/\",\n\t\"./gatsby/code/vanilla/components/core/drop/usage-self\": \"OxhZ\",\n\t\"./gatsby/code/vanilla/components/core/drop/usage-self.js\": \"OxhZ\",\n\t\"./gatsby/code/vanilla/components/core/drop/usage-unique\": \"aJGq\",\n\t\"./gatsby/code/vanilla/components/core/drop/usage-unique.js\": \"aJGq\",\n\t\"./gatsby/code/vanilla/components/core/form/checks-button\": \"Spae\",\n\t\"./gatsby/code/vanilla/components/core/form/checks-button.js\": \"Spae\",\n\t\"./gatsby/code/vanilla/components/core/form/checks-card\": \"R0zR\",\n\t\"./gatsby/code/vanilla/components/core/form/checks-card.js\": \"R0zR\",\n\t\"./gatsby/code/vanilla/components/core/form/disabled\": \"qjQI\",\n\t\"./gatsby/code/vanilla/components/core/form/disabled.js\": \"qjQI\",\n\t\"./gatsby/code/vanilla/components/core/form/fieldset-legend\": \"MP5g\",\n\t\"./gatsby/code/vanilla/components/core/form/fieldset-legend.js\": \"MP5g\",\n\t\"./gatsby/code/vanilla/components/core/form/label-addon\": \"c/Yu\",\n\t\"./gatsby/code/vanilla/components/core/form/label-addon.js\": \"c/Yu\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-horizontal\": \"n/Xy\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-horizontal.js\": \"n/Xy\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-inline-horizontal\": \"LINp\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-inline-horizontal.js\": \"LINp\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-inline-row\": \"izEl\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-inline-row.js\": \"izEl\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-row\": \"7voc\",\n\t\"./gatsby/code/vanilla/components/core/form/mode-row.js\": \"7voc\",\n\t\"./gatsby/code/vanilla/components/core/form/size-lg\": \"DmXe\",\n\t\"./gatsby/code/vanilla/components/core/form/size-lg.js\": \"DmXe\",\n\t\"./gatsby/code/vanilla/components/core/form/size-md\": \"ihgq\",\n\t\"./gatsby/code/vanilla/components/core/form/size-md.js\": \"ihgq\",\n\t\"./gatsby/code/vanilla/components/core/form/size-sm\": \"2n2E\",\n\t\"./gatsby/code/vanilla/components/core/form/size-sm.js\": \"2n2E\",\n\t\"./gatsby/code/vanilla/components/core/form/usage\": \"fuzO\",\n\t\"./gatsby/code/vanilla/components/core/form/usage.js\": \"fuzO\",\n\t\"./gatsby/code/vanilla/components/core/form/validation\": \"meL/\",\n\t\"./gatsby/code/vanilla/components/core/form/validation.js\": \"meL/\",\n\t\"./gatsby/code/vanilla/components/core/form/variant-default\": \"Mwrd\",\n\t\"./gatsby/code/vanilla/components/core/form/variant-default.js\": \"Mwrd\",\n\t\"./gatsby/code/vanilla/components/core/form/variant-primary\": \"pI8S\",\n\t\"./gatsby/code/vanilla/components/core/form/variant-primary.js\": \"pI8S\",\n\t\"./gatsby/code/vanilla/components/core/group/border\": \"hPZ3\",\n\t\"./gatsby/code/vanilla/components/core/group/border-vertical\": \"tfRU\",\n\t\"./gatsby/code/vanilla/components/core/group/border-vertical.js\": \"tfRU\",\n\t\"./gatsby/code/vanilla/components/core/group/border.js\": \"hPZ3\",\n\t\"./gatsby/code/vanilla/components/core/group/merge\": \"Vmcs\",\n\t\"./gatsby/code/vanilla/components/core/group/merge-vertical\": \"5BbQ\",\n\t\"./gatsby/code/vanilla/components/core/group/merge-vertical.js\": \"5BbQ\",\n\t\"./gatsby/code/vanilla/components/core/group/merge.js\": \"Vmcs\",\n\t\"./gatsby/code/vanilla/components/core/group/size\": \"Ej+Y\",\n\t\"./gatsby/code/vanilla/components/core/group/size.js\": \"Ej+Y\",\n\t\"./gatsby/code/vanilla/components/core/group/space\": \"SkJu\",\n\t\"./gatsby/code/vanilla/components/core/group/space-vertical\": \"3OEB\",\n\t\"./gatsby/code/vanilla/components/core/group/space-vertical.js\": \"3OEB\",\n\t\"./gatsby/code/vanilla/components/core/group/space.js\": \"SkJu\",\n\t\"./gatsby/code/vanilla/components/core/group/usage\": \"ufdG\",\n\t\"./gatsby/code/vanilla/components/core/group/usage-vertical\": \"Hm2C\",\n\t\"./gatsby/code/vanilla/components/core/group/usage-vertical.js\": \"Hm2C\",\n\t\"./gatsby/code/vanilla/components/core/group/usage.js\": \"ufdG\",\n\t\"./gatsby/code/vanilla/components/core/icons/size\": \"wSdM\",\n\t\"./gatsby/code/vanilla/components/core/icons/size.js\": \"wSdM\",\n\t\"./gatsby/code/vanilla/components/core/icons/usage\": \"T+ny\",\n\t\"./gatsby/code/vanilla/components/core/icons/usage-img\": \"00Pm\",\n\t\"./gatsby/code/vanilla/components/core/icons/usage-img.js\": \"00Pm\",\n\t\"./gatsby/code/vanilla/components/core/icons/usage.js\": \"T+ny\",\n\t\"./gatsby/code/vanilla/components/core/icons/variant\": \"pIYK\",\n\t\"./gatsby/code/vanilla/components/core/icons/variant-inverse\": \"90HK\",\n\t\"./gatsby/code/vanilla/components/core/icons/variant-inverse.js\": \"90HK\",\n\t\"./gatsby/code/vanilla/components/core/icons/variant.js\": \"pIYK\",\n\t\"./gatsby/code/vanilla/components/core/link/usage\": \"148n\",\n\t\"./gatsby/code/vanilla/components/core/link/usage.js\": \"148n\",\n\t\"./gatsby/code/vanilla/components/core/link/variant-inverse\": \"W/fi\",\n\t\"./gatsby/code/vanilla/components/core/link/variant-inverse.js\": \"W/fi\",\n\t\"./gatsby/code/vanilla/components/core/list/alignment\": \"aURY\",\n\t\"./gatsby/code/vanilla/components/core/list/alignment.js\": \"aURY\",\n\t\"./gatsby/code/vanilla/components/core/list/space-1\": \"4zvC\",\n\t\"./gatsby/code/vanilla/components/core/list/space-1.js\": \"4zvC\",\n\t\"./gatsby/code/vanilla/components/core/list/space-2\": \"GIpX\",\n\t\"./gatsby/code/vanilla/components/core/list/space-2.js\": \"GIpX\",\n\t\"./gatsby/code/vanilla/components/core/list/space-3\": \"gIlL\",\n\t\"./gatsby/code/vanilla/components/core/list/space-3.js\": \"gIlL\",\n\t\"./gatsby/code/vanilla/components/core/list/space-4\": \"yYnW\",\n\t\"./gatsby/code/vanilla/components/core/list/space-4.js\": \"yYnW\",\n\t\"./gatsby/code/vanilla/components/core/list/space-px\": \"fvFg\",\n\t\"./gatsby/code/vanilla/components/core/list/space-px.js\": \"fvFg\",\n\t\"./gatsby/code/vanilla/components/core/list/usage\": \"RrPb\",\n\t\"./gatsby/code/vanilla/components/core/list/usage-vertical\": \"f8MD\",\n\t\"./gatsby/code/vanilla/components/core/list/usage-vertical.js\": \"f8MD\",\n\t\"./gatsby/code/vanilla/components/core/list/usage.js\": \"RrPb\",\n\t\"./gatsby/code/vanilla/components/core/loader/background-filler\": \"C3Ff\",\n\t\"./gatsby/code/vanilla/components/core/loader/background-filler.js\": \"C3Ff\",\n\t\"./gatsby/code/vanilla/components/core/loader/background-spinner\": \"jj3g\",\n\t\"./gatsby/code/vanilla/components/core/loader/background-spinner.js\": \"jj3g\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-inverse\": \"taYD\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-inverse.js\": \"taYD\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-bottom\": \"riVa\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-bottom.js\": \"riVa\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-left\": \"QefV\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-left.js\": \"QefV\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-right\": \"KUSL\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-right.js\": \"KUSL\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-top\": \"EUvn\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-top.js\": \"EUvn\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-x\": \"OQso\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-x.js\": \"OQso\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-y\": \"wstR\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-size-y.js\": \"wstR\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-x\": \"/QfT\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-x.js\": \"/QfT\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-y\": \"9lEy\",\n\t\"./gatsby/code/vanilla/components/core/loader/filler-y.js\": \"9lEy\",\n\t\"./gatsby/code/vanilla/components/core/loader/js-filler\": \"Dwz/\",\n\t\"./gatsby/code/vanilla/components/core/loader/js-filler.js\": \"Dwz/\",\n\t\"./gatsby/code/vanilla/components/core/loader/js-spinner\": \"HyWA\",\n\t\"./gatsby/code/vanilla/components/core/loader/js-spinner.js\": \"HyWA\",\n\t\"./gatsby/code/vanilla/components/core/loader/spinner\": \"edFJ\",\n\t\"./gatsby/code/vanilla/components/core/loader/spinner-inverse\": \"6lKH\",\n\t\"./gatsby/code/vanilla/components/core/loader/spinner-inverse.js\": \"6lKH\",\n\t\"./gatsby/code/vanilla/components/core/loader/spinner.js\": \"edFJ\",\n\t\"./gatsby/code/vanilla/components/core/media/16-9\": \"k/ob\",\n\t\"./gatsby/code/vanilla/components/core/media/16-9-iframe\": \"OIVE\",\n\t\"./gatsby/code/vanilla/components/core/media/16-9-iframe.js\": \"OIVE\",\n\t\"./gatsby/code/vanilla/components/core/media/16-9-video\": \"5lcA\",\n\t\"./gatsby/code/vanilla/components/core/media/16-9-video.js\": \"5lcA\",\n\t\"./gatsby/code/vanilla/components/core/media/16-9.js\": \"k/ob\",\n\t\"./gatsby/code/vanilla/components/core/media/contain\": \"vN5w\",\n\t\"./gatsby/code/vanilla/components/core/media/contain.js\": \"vN5w\",\n\t\"./gatsby/code/vanilla/components/core/media/cover\": \"B+7L\",\n\t\"./gatsby/code/vanilla/components/core/media/cover-min-height\": \"3ydO\",\n\t\"./gatsby/code/vanilla/components/core/media/cover-min-height.js\": \"3ydO\",\n\t\"./gatsby/code/vanilla/components/core/media/cover.js\": \"B+7L\",\n\t\"./gatsby/code/vanilla/components/core/media/responsive\": \"RifA\",\n\t\"./gatsby/code/vanilla/components/core/media/responsive.js\": \"RifA\",\n\t\"./gatsby/code/vanilla/components/core/media/usage\": \"3Aus\",\n\t\"./gatsby/code/vanilla/components/core/media/usage.js\": \"3Aus\",\n\t\"./gatsby/code/vanilla/components/core/overlay/animation\": \"U0sE\",\n\t\"./gatsby/code/vanilla/components/core/overlay/animation-js\": \"a9WC\",\n\t\"./gatsby/code/vanilla/components/core/overlay/animation-js.js\": \"a9WC\",\n\t\"./gatsby/code/vanilla/components/core/overlay/animation.js\": \"U0sE\",\n\t\"./gatsby/code/vanilla/components/core/overlay/class-html\": \"cJ/i\",\n\t\"./gatsby/code/vanilla/components/core/overlay/class-html.js\": \"cJ/i\",\n\t\"./gatsby/code/vanilla/components/core/overlay/close-fixed\": \"OC5p\",\n\t\"./gatsby/code/vanilla/components/core/overlay/close-fixed.js\": \"OC5p\",\n\t\"./gatsby/code/vanilla/components/core/overlay/content\": \"as5g\",\n\t\"./gatsby/code/vanilla/components/core/overlay/content.js\": \"as5g\",\n\t\"./gatsby/code/vanilla/components/core/overlay/disable\": \"kCoN\",\n\t\"./gatsby/code/vanilla/components/core/overlay/disable.js\": \"kCoN\",\n\t\"./gatsby/code/vanilla/components/core/overlay/group\": \"5Z7T\",\n\t\"./gatsby/code/vanilla/components/core/overlay/group.js\": \"5Z7T\",\n\t\"./gatsby/code/vanilla/components/core/overlay/list\": \"RAIn\",\n\t\"./gatsby/code/vanilla/components/core/overlay/list.js\": \"RAIn\",\n\t\"./gatsby/code/vanilla/components/core/overlay/overflow-y\": \"SBu2\",\n\t\"./gatsby/code/vanilla/components/core/overlay/overflow-y.js\": \"SBu2\",\n\t\"./gatsby/code/vanilla/components/core/overlay/position\": \"JuPE\",\n\t\"./gatsby/code/vanilla/components/core/overlay/position.js\": \"JuPE\",\n\t\"./gatsby/code/vanilla/components/core/overlay/screen\": \"skhr\",\n\t\"./gatsby/code/vanilla/components/core/overlay/screen.js\": \"skhr\",\n\t\"./gatsby/code/vanilla/components/core/overlay/separator\": \"ROj5\",\n\t\"./gatsby/code/vanilla/components/core/overlay/separator.js\": \"ROj5\",\n\t\"./gatsby/code/vanilla/components/core/overlay/size\": \"ckW6\",\n\t\"./gatsby/code/vanilla/components/core/overlay/size.js\": \"ckW6\",\n\t\"./gatsby/code/vanilla/components/core/overlay/usage-self\": \"6L+j\",\n\t\"./gatsby/code/vanilla/components/core/overlay/usage-self.js\": \"6L+j\",\n\t\"./gatsby/code/vanilla/components/core/overlay/usage-unique\": \"m2E7\",\n\t\"./gatsby/code/vanilla/components/core/overlay/usage-unique.js\": \"m2E7\",\n\t\"./gatsby/code/vanilla/components/core/overlay/variant\": \"Dt6U\",\n\t\"./gatsby/code/vanilla/components/core/overlay/variant.js\": \"Dt6U\",\n\t\"./gatsby/code/vanilla/components/core/row/alignment\": \"7DXR\",\n\t\"./gatsby/code/vanilla/components/core/row/alignment.js\": \"7DXR\",\n\t\"./gatsby/code/vanilla/components/core/row/overflow\": \"iIa8\",\n\t\"./gatsby/code/vanilla/components/core/row/overflow.js\": \"iIa8\",\n\t\"./gatsby/code/vanilla/components/core/row/space-1\": \"ek3u\",\n\t\"./gatsby/code/vanilla/components/core/row/space-1.js\": \"ek3u\",\n\t\"./gatsby/code/vanilla/components/core/row/space-2\": \"4sfC\",\n\t\"./gatsby/code/vanilla/components/core/row/space-2.js\": \"4sfC\",\n\t\"./gatsby/code/vanilla/components/core/row/space-3\": \"rpYs\",\n\t\"./gatsby/code/vanilla/components/core/row/space-3.js\": \"rpYs\",\n\t\"./gatsby/code/vanilla/components/core/row/space-4\": \"d/Ot\",\n\t\"./gatsby/code/vanilla/components/core/row/space-4.js\": \"d/Ot\",\n\t\"./gatsby/code/vanilla/components/core/row/space-px\": \"9u9X\",\n\t\"./gatsby/code/vanilla/components/core/row/space-px.js\": \"9u9X\",\n\t\"./gatsby/code/vanilla/components/core/row/stretch\": \"DbZ7\",\n\t\"./gatsby/code/vanilla/components/core/row/stretch.js\": \"DbZ7\",\n\t\"./gatsby/code/vanilla/components/core/row/usage\": \"XbPA\",\n\t\"./gatsby/code/vanilla/components/core/row/usage.js\": \"XbPA\",\n\t\"./gatsby/code/vanilla/components/core/slider/align-center\": \"6fbm\",\n\t\"./gatsby/code/vanilla/components/core/slider/align-center.js\": \"6fbm\",\n\t\"./gatsby/code/vanilla/components/core/slider/align-left\": \"lWe0\",\n\t\"./gatsby/code/vanilla/components/core/slider/align-left.js\": \"lWe0\",\n\t\"./gatsby/code/vanilla/components/core/slider/align-right\": \"iF6r\",\n\t\"./gatsby/code/vanilla/components/core/slider/align-right.js\": \"iF6r\",\n\t\"./gatsby/code/vanilla/components/core/slider/contain-center\": \"kNhL\",\n\t\"./gatsby/code/vanilla/components/core/slider/contain-center.js\": \"kNhL\",\n\t\"./gatsby/code/vanilla/components/core/slider/contain-left\": \"nbm1\",\n\t\"./gatsby/code/vanilla/components/core/slider/contain-left.js\": \"nbm1\",\n\t\"./gatsby/code/vanilla/components/core/slider/contain-right\": \"q79F\",\n\t\"./gatsby/code/vanilla/components/core/slider/contain-right.js\": \"q79F\",\n\t\"./gatsby/code/vanilla/components/core/slider/disable\": \"3ZU6\",\n\t\"./gatsby/code/vanilla/components/core/slider/disable.js\": \"3ZU6\",\n\t\"./gatsby/code/vanilla/components/core/slider/expand\": \"sEr6\",\n\t\"./gatsby/code/vanilla/components/core/slider/expand.js\": \"sEr6\",\n\t\"./gatsby/code/vanilla/components/core/slider/group-responsive\": \"NiUK\",\n\t\"./gatsby/code/vanilla/components/core/slider/group-responsive.js\": \"NiUK\",\n\t\"./gatsby/code/vanilla/components/core/slider/media-loaded\": \"1AFn\",\n\t\"./gatsby/code/vanilla/components/core/slider/media-loaded.js\": \"1AFn\",\n\t\"./gatsby/code/vanilla/components/core/slider/navigation\": \"6IAi\",\n\t\"./gatsby/code/vanilla/components/core/slider/navigation.js\": \"6IAi\",\n\t\"./gatsby/code/vanilla/components/core/slider/other\": \"Tp+I\",\n\t\"./gatsby/code/vanilla/components/core/slider/other.js\": \"Tp+I\",\n\t\"./gatsby/code/vanilla/components/core/slider/overflow-auto\": \"3hpf\",\n\t\"./gatsby/code/vanilla/components/core/slider/overflow-auto-false\": \"3QWU\",\n\t\"./gatsby/code/vanilla/components/core/slider/overflow-auto-false.js\": \"3QWU\",\n\t\"./gatsby/code/vanilla/components/core/slider/overflow-auto.js\": \"3hpf\",\n\t\"./gatsby/code/vanilla/components/core/slider/pagination\": \"0V62\",\n\t\"./gatsby/code/vanilla/components/core/slider/pagination.js\": \"0V62\",\n\t\"./gatsby/code/vanilla/components/core/slider/progress\": \"FiKH\",\n\t\"./gatsby/code/vanilla/components/core/slider/progress.js\": \"FiKH\",\n\t\"./gatsby/code/vanilla/components/core/slider/touch-overflow\": \"7HV6\",\n\t\"./gatsby/code/vanilla/components/core/slider/touch-overflow.js\": \"7HV6\",\n\t\"./gatsby/code/vanilla/components/core/slider/usage\": \"nJtS\",\n\t\"./gatsby/code/vanilla/components/core/slider/usage.js\": \"nJtS\",\n\t\"./gatsby/code/vanilla/components/core/slider/wheel\": \"jovs\",\n\t\"./gatsby/code/vanilla/components/core/slider/wheel.js\": \"jovs\",\n\t\"./gatsby/code/vanilla/components/core/slider/wrap\": \"t4dj\",\n\t\"./gatsby/code/vanilla/components/core/slider/wrap-left\": \"VPPx\",\n\t\"./gatsby/code/vanilla/components/core/slider/wrap-left.js\": \"VPPx\",\n\t\"./gatsby/code/vanilla/components/core/slider/wrap-right\": \"fs8B\",\n\t\"./gatsby/code/vanilla/components/core/slider/wrap-right.js\": \"fs8B\",\n\t\"./gatsby/code/vanilla/components/core/slider/wrap.js\": \"t4dj\",\n\t\"./gatsby/code/vanilla/components/core/toggle/animation\": \"fYxB\",\n\t\"./gatsby/code/vanilla/components/core/toggle/animation-inverse\": \"8KcH\",\n\t\"./gatsby/code/vanilla/components/core/toggle/animation-inverse.js\": \"8KcH\",\n\t\"./gatsby/code/vanilla/components/core/toggle/animation-js\": \"diOL\",\n\t\"./gatsby/code/vanilla/components/core/toggle/animation-js.js\": \"diOL\",\n\t\"./gatsby/code/vanilla/components/core/toggle/animation.js\": \"fYxB\",\n\t\"./gatsby/code/vanilla/components/core/toggle/auto\": \"7WGE\",\n\t\"./gatsby/code/vanilla/components/core/toggle/auto.js\": \"7WGE\",\n\t\"./gatsby/code/vanilla/components/core/toggle/class\": \"sP2X\",\n\t\"./gatsby/code/vanilla/components/core/toggle/class.js\": \"sP2X\",\n\t\"./gatsby/code/vanilla/components/core/toggle/disable\": \"jWHc\",\n\t\"./gatsby/code/vanilla/components/core/toggle/disable.js\": \"jWHc\",\n\t\"./gatsby/code/vanilla/components/core/toggle/event\": \"tuUg\",\n\t\"./gatsby/code/vanilla/components/core/toggle/event.js\": \"tuUg\",\n\t\"./gatsby/code/vanilla/components/core/toggle/group\": \"u4rn\",\n\t\"./gatsby/code/vanilla/components/core/toggle/group.js\": \"u4rn\",\n\t\"./gatsby/code/vanilla/components/core/toggle/jump\": \"R3/b\",\n\t\"./gatsby/code/vanilla/components/core/toggle/jump.js\": \"R3/b\",\n\t\"./gatsby/code/vanilla/components/core/toggle/navigation\": \"lrKu\",\n\t\"./gatsby/code/vanilla/components/core/toggle/navigation.js\": \"lrKu\",\n\t\"./gatsby/code/vanilla/components/core/toggle/prevent-event\": \"v/8s\",\n\t\"./gatsby/code/vanilla/components/core/toggle/prevent-event.js\": \"v/8s\",\n\t\"./gatsby/code/vanilla/components/core/toggle/progress\": \"ITDc\",\n\t\"./gatsby/code/vanilla/components/core/toggle/progress.js\": \"ITDc\",\n\t\"./gatsby/code/vanilla/components/core/toggle/quantity\": \"0Ryd\",\n\t\"./gatsby/code/vanilla/components/core/toggle/quantity.js\": \"0Ryd\",\n\t\"./gatsby/code/vanilla/components/core/toggle/start\": \"zYog\",\n\t\"./gatsby/code/vanilla/components/core/toggle/start.js\": \"zYog\",\n\t\"./gatsby/code/vanilla/components/core/toggle/timing\": \"KsI5\",\n\t\"./gatsby/code/vanilla/components/core/toggle/timing.js\": \"KsI5\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usability-keyboard\": \"lyZt\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usability-keyboard.js\": \"lyZt\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-multiple-custom\": \"8QWV\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-multiple-custom.js\": \"8QWV\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-multiple-default\": \"YAhe\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-multiple-default.js\": \"YAhe\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-self\": \"ZSQ4\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-self.js\": \"ZSQ4\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-unique-same\": \"gYVs\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-unique-same.js\": \"gYVs\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-unique-single\": \"yaeX\",\n\t\"./gatsby/code/vanilla/components/core/toggle/usage-unique-single.js\": \"yaeX\",\n\t\"./gatsby/code/vanilla/components/core/typography/definition-list\": \"M47M\",\n\t\"./gatsby/code/vanilla/components/core/typography/definition-list.js\": \"M47M\",\n\t\"./gatsby/code/vanilla/components/core/typography/figure\": \"caQf\",\n\t\"./gatsby/code/vanilla/components/core/typography/figure.js\": \"caQf\",\n\t\"./gatsby/code/vanilla/components/core/typography/headers\": \"AxE5\",\n\t\"./gatsby/code/vanilla/components/core/typography/headers.js\": \"AxE5\",\n\t\"./gatsby/code/vanilla/components/core/typography/list\": \"hlw2\",\n\t\"./gatsby/code/vanilla/components/core/typography/list.js\": \"hlw2\",\n\t\"./gatsby/code/vanilla/components/core/typography/paragraph\": \"YLKG\",\n\t\"./gatsby/code/vanilla/components/core/typography/paragraph.js\": \"YLKG\",\n\t\"./gatsby/code/vanilla/components/core/typography/text\": \"ZSFT\",\n\t\"./gatsby/code/vanilla/components/core/typography/text.js\": \"ZSFT\",\n\t\"./gatsby/code/vanilla/components/core/typography/variant\": \"I2TQ\",\n\t\"./gatsby/code/vanilla/components/core/typography/variant.js\": \"I2TQ\",\n\t\"./gatsby/code/vanilla/test/demo-vanilla\": \"vPnc\",\n\t\"./gatsby/code/vanilla/test/demo-vanilla.js\": \"vPnc\",\n\t\"./gatsby/components/demo/demo\": \"djDg\",\n\t\"./gatsby/components/demo/demo-vanilla\": \"XKA0\",\n\t\"./gatsby/components/demo/demo-vanilla-iframe\": \"atYH\",\n\t\"./gatsby/components/demo/demo-vanilla-iframe.js\": \"atYH\",\n\t\"./gatsby/components/demo/demo-vanilla.js\": \"XKA0\",\n\t\"./gatsby/components/demo/demo.js\": \"djDg\",\n\t\"./gatsby/components/includes/doc-foot\": \"6lBU\",\n\t\"./gatsby/components/includes/doc-foot.js\": \"6lBU\",\n\t\"./gatsby/components/includes/doc-fullscreen\": \"9Q/R\",\n\t\"./gatsby/components/includes/doc-fullscreen.js\": \"9Q/R\",\n\t\"./gatsby/components/includes/doc-head\": \"TtlE\",\n\t\"./gatsby/components/includes/doc-head.js\": \"TtlE\",\n\t\"./gatsby/components/includes/doc-index\": \"T2R1\",\n\t\"./gatsby/components/includes/doc-index.js\": \"T2R1\",\n\t\"./gatsby/components/includes/footer\": \"2T6D\",\n\t\"./gatsby/components/includes/footer.js\": \"2T6D\",\n\t\"./gatsby/components/includes/header\": \"N1S+\",\n\t\"./gatsby/components/includes/header.js\": \"N1S+\",\n\t\"./gatsby/components/layout\": \"Rw/R\",\n\t\"./gatsby/components/layout-demo\": \"O3Hx\",\n\t\"./gatsby/components/layout-demo.js\": \"O3Hx\",\n\t\"./gatsby/components/layout.js\": \"Rw/R\",\n\t\"./gatsby/components/pages/404\": \"sVvy\",\n\t\"./gatsby/components/pages/404.js\": \"sVvy\",\n\t\"./gatsby/components/seo\": \"Dx5W\",\n\t\"./gatsby/components/seo.js\": \"Dx5W\",\n\t\"./gatsby/components/snippets/classes/badge-default\": \"HVJy\",\n\t\"./gatsby/components/snippets/classes/badge-default-interactive\": \"goGq\",\n\t\"./gatsby/components/snippets/classes/badge-default-interactive.js\": \"goGq\",\n\t\"./gatsby/components/snippets/classes/badge-default.js\": \"HVJy\",\n\t\"./gatsby/components/snippets/classes/badge-primary\": \"qXI1\",\n\t\"./gatsby/components/snippets/classes/badge-primary-interactive\": \"PK/Y\",\n\t\"./gatsby/components/snippets/classes/badge-primary-interactive.js\": \"PK/Y\",\n\t\"./gatsby/components/snippets/classes/badge-primary.js\": \"qXI1\",\n\t\"./gatsby/components/snippets/classes/btn-close-outside\": \"iu3M\",\n\t\"./gatsby/components/snippets/classes/btn-close-outside.js\": \"iu3M\",\n\t\"./gatsby/components/snippets/classes/btn-default\": \"/iw1\",\n\t\"./gatsby/components/snippets/classes/btn-default-drop\": \"XdSy\",\n\t\"./gatsby/components/snippets/classes/btn-default-drop.js\": \"XdSy\",\n\t\"./gatsby/components/snippets/classes/btn-default-group\": \"AcuH\",\n\t\"./gatsby/components/snippets/classes/btn-default-group.js\": \"AcuH\",\n\t\"./gatsby/components/snippets/classes/btn-default.js\": \"/iw1\",\n\t\"./gatsby/components/snippets/classes/btn-primary\": \"W/+z\",\n\t\"./gatsby/components/snippets/classes/btn-primary-drop\": \"4crJ\",\n\t\"./gatsby/components/snippets/classes/btn-primary-drop.js\": \"4crJ\",\n\t\"./gatsby/components/snippets/classes/btn-primary-group\": \"zuQL\",\n\t\"./gatsby/components/snippets/classes/btn-primary-group.js\": \"zuQL\",\n\t\"./gatsby/components/snippets/classes/btn-primary.js\": \"W/+z\",\n\t\"./gatsby/components/snippets/classes/card-default\": \"nTJC\",\n\t\"./gatsby/components/snippets/classes/card-default-block\": \"M3o3\",\n\t\"./gatsby/components/snippets/classes/card-default-block.js\": \"M3o3\",\n\t\"./gatsby/components/snippets/classes/card-default-drop\": \"4fmj\",\n\t\"./gatsby/components/snippets/classes/card-default-drop-list\": \"54rG\",\n\t\"./gatsby/components/snippets/classes/card-default-drop-list.js\": \"54rG\",\n\t\"./gatsby/components/snippets/classes/card-default-drop.js\": \"4fmj\",\n\t\"./gatsby/components/snippets/classes/card-default-full\": \"hiio\",\n\t\"./gatsby/components/snippets/classes/card-default-full-interactive\": \"KDoc\",\n\t\"./gatsby/components/snippets/classes/card-default-full-interactive.js\": \"KDoc\",\n\t\"./gatsby/components/snippets/classes/card-default-full.js\": \"hiio\",\n\t\"./gatsby/components/snippets/classes/card-default-interactive\": \"JG4Z\",\n\t\"./gatsby/components/snippets/classes/card-default-interactive.js\": \"JG4Z\",\n\t\"./gatsby/components/snippets/classes/card-default-overlay\": \"QIwR\",\n\t\"./gatsby/components/snippets/classes/card-default-overlay-screen\": \"XVjR\",\n\t\"./gatsby/components/snippets/classes/card-default-overlay-screen.js\": \"XVjR\",\n\t\"./gatsby/components/snippets/classes/card-default-overlay.js\": \"QIwR\",\n\t\"./gatsby/components/snippets/classes/card-default.js\": \"nTJC\",\n\t\"./gatsby/components/snippets/classes/card-primary\": \"vmw8\",\n\t\"./gatsby/components/snippets/classes/card-primary-drop\": \"9vRH\",\n\t\"./gatsby/components/snippets/classes/card-primary-drop-list\": \"nLDq\",\n\t\"./gatsby/components/snippets/classes/card-primary-drop-list.js\": \"nLDq\",\n\t\"./gatsby/components/snippets/classes/card-primary-drop.js\": \"9vRH\",\n\t\"./gatsby/components/snippets/classes/card-primary-full\": \"Vxq1\",\n\t\"./gatsby/components/snippets/classes/card-primary-full-interactive\": \"QfoX\",\n\t\"./gatsby/components/snippets/classes/card-primary-full-interactive.js\": \"QfoX\",\n\t\"./gatsby/components/snippets/classes/card-primary-full.js\": \"Vxq1\",\n\t\"./gatsby/components/snippets/classes/card-primary-interactive\": \"7r7/\",\n\t\"./gatsby/components/snippets/classes/card-primary-interactive.js\": \"7r7/\",\n\t\"./gatsby/components/snippets/classes/card-primary-overlay\": \"QyNP\",\n\t\"./gatsby/components/snippets/classes/card-primary-overlay.js\": \"QyNP\",\n\t\"./gatsby/components/snippets/classes/card-primary.js\": \"vmw8\",\n\t\"./gatsby/components/snippets/classes/card-scroll\": \"6AVt\",\n\t\"./gatsby/components/snippets/classes/card-scroll.js\": \"6AVt\",\n\t\"./gatsby/components/snippets/classes/card-slide\": \"bfa1\",\n\t\"./gatsby/components/snippets/classes/card-slide.js\": \"bfa1\",\n\t\"./gatsby/components/snippets/classes/card-sticky-default\": \"bHDW\",\n\t\"./gatsby/components/snippets/classes/card-sticky-default.js\": \"bHDW\",\n\t\"./gatsby/components/snippets/classes/card-sticky-primary\": \"EiCB\",\n\t\"./gatsby/components/snippets/classes/card-sticky-primary.js\": \"EiCB\",\n\t\"./gatsby/components/snippets/classes/card-toggle\": \"geYN\",\n\t\"./gatsby/components/snippets/classes/card-toggle.js\": \"geYN\",\n\t\"./gatsby/components/snippets/classes/form-check-default\": \"ZlFz\",\n\t\"./gatsby/components/snippets/classes/form-check-default.js\": \"ZlFz\",\n\t\"./gatsby/components/snippets/classes/form-check-primary\": \"5mDK\",\n\t\"./gatsby/components/snippets/classes/form-check-primary.js\": \"5mDK\",\n\t\"./gatsby/components/snippets/classes/form-radio-default\": \"OHnG\",\n\t\"./gatsby/components/snippets/classes/form-radio-default.js\": \"OHnG\",\n\t\"./gatsby/components/snippets/classes/form-radio-primary\": \"mMQ2\",\n\t\"./gatsby/components/snippets/classes/form-radio-primary.js\": \"mMQ2\",\n\t\"./gatsby/components/snippets/classes/form-switch-default\": \"j+zP\",\n\t\"./gatsby/components/snippets/classes/form-switch-default.js\": \"j+zP\",\n\t\"./gatsby/components/snippets/classes/form-switch-primary\": \"8+t1\",\n\t\"./gatsby/components/snippets/classes/form-switch-primary.js\": \"8+t1\",\n\t\"./gatsby/components/snippets/classes/input-default\": \"pYFD\",\n\t\"./gatsby/components/snippets/classes/input-default-group\": \"m/4+\",\n\t\"./gatsby/components/snippets/classes/input-default-group.js\": \"m/4+\",\n\t\"./gatsby/components/snippets/classes/input-default.js\": \"pYFD\",\n\t\"./gatsby/components/snippets/classes/input-primary\": \"1LKp\",\n\t\"./gatsby/components/snippets/classes/input-primary.js\": \"1LKp\",\n\t\"./gatsby/components/snippets/classes/label-default\": \"xIfj\",\n\t\"./gatsby/components/snippets/classes/label-default.js\": \"xIfj\",\n\t\"./gatsby/components/snippets/classes/label-primary\": \"M/+F\",\n\t\"./gatsby/components/snippets/classes/label-primary.js\": \"M/+F\",\n\t\"./gatsby/components/snippets/classes/note\": \"w+XC\",\n\t\"./gatsby/components/snippets/classes/note.js\": \"w+XC\",\n\t\"./gatsby/components/snippets/components/markup-slider\": \"a3rB\",\n\t\"./gatsby/components/snippets/components/markup-slider-event-method\": \"Enst\",\n\t\"./gatsby/components/snippets/components/markup-slider-event-method.js\": \"Enst\",\n\t\"./gatsby/components/snippets/components/markup-slider-media\": \"gppT\",\n\t\"./gatsby/components/snippets/components/markup-slider-media.js\": \"gppT\",\n\t\"./gatsby/components/snippets/components/markup-slider-navigation\": \"+Q3+\",\n\t\"./gatsby/components/snippets/components/markup-slider-navigation.js\": \"+Q3+\",\n\t\"./gatsby/components/snippets/components/markup-slider-other\": \"tk60\",\n\t\"./gatsby/components/snippets/components/markup-slider-other.js\": \"tk60\",\n\t\"./gatsby/components/snippets/components/markup-slider-overflow\": \"nVWD\",\n\t\"./gatsby/components/snippets/components/markup-slider-overflow.js\": \"nVWD\",\n\t\"./gatsby/components/snippets/components/markup-slider-pagination\": \"Qxsx\",\n\t\"./gatsby/components/snippets/components/markup-slider-pagination.js\": \"Qxsx\",\n\t\"./gatsby/components/snippets/components/markup-slider-progress\": \"64zO\",\n\t\"./gatsby/components/snippets/components/markup-slider-progress.js\": \"64zO\",\n\t\"./gatsby/components/snippets/components/markup-slider.js\": \"a3rB\",\n\t\"./gatsby/components/snippets/icons\": \"DPh+\",\n\t\"./gatsby/components/snippets/icons.js\": \"DPh+\",\n\t\"./gatsby/components/snippets/img\": \"v9le\",\n\t\"./gatsby/components/snippets/img.js\": \"v9le\",\n\t\"./gatsby/components/snippets/markdown-slug\": \"nMKP\",\n\t\"./gatsby/components/snippets/markdown-slug.js\": \"nMKP\",\n\t\"./gatsby/components/snippets/spinner\": \"zROs\",\n\t\"./gatsby/components/snippets/spinner.js\": \"zROs\",\n\t\"./gatsby/components/snippets/themes/markup-button\": \"8Z5T\",\n\t\"./gatsby/components/snippets/themes/markup-button.js\": \"8Z5T\",\n\t\"./gatsby/components/snippets/themes/markup-card\": \"kODR\",\n\t\"./gatsby/components/snippets/themes/markup-card.js\": \"kODR\",\n\t\"./gatsby/components/snippets/themes/markup-drop\": \"bQ1w\",\n\t\"./gatsby/components/snippets/themes/markup-drop.js\": \"bQ1w\",\n\t\"./gatsby/components/snippets/themes/markup-group\": \"D7Zl\",\n\t\"./gatsby/components/snippets/themes/markup-group.js\": \"D7Zl\",\n\t\"./gatsby/components/snippets/themes/markup-listing\": \"4YCb\",\n\t\"./gatsby/components/snippets/themes/markup-listing.js\": \"4YCb\",\n\t\"./gatsby/components/snippets/themes/markup-megamenus\": \"ngUq\",\n\t\"./gatsby/components/snippets/themes/markup-megamenus.js\": \"ngUq\",\n\t\"./gatsby/components/snippets/themes/markup-overlay\": \"Z4Zo\",\n\t\"./gatsby/components/snippets/themes/markup-overlay.js\": \"Z4Zo\",\n\t\"./gatsby/components/snippets/themes/markup-slider-hero\": \"8hxD\",\n\t\"./gatsby/components/snippets/themes/markup-slider-hero.js\": \"8hxD\",\n\t\"./gatsby/components/snippets/themes/markup-stores\": \"7fIU\",\n\t\"./gatsby/components/snippets/themes/markup-stores.js\": \"7fIU\",\n\t\"./gatsby/components/templates/doc-category\": \"+5bL\",\n\t\"./gatsby/components/templates/doc-category.js\": \"+5bL\",\n\t\"./gatsby/components/templates/doc-page\": \"KnCU\",\n\t\"./gatsby/components/templates/doc-page.js\": \"KnCU\",\n\t\"./gatsby/markdown/components/addons/form/index.md\": \"/91/\",\n\t\"./gatsby/markdown/components/addons/form/textarea-autosize.md\": \"FfKC\",\n\t\"./gatsby/markdown/components/addons/group/group-expand.md\": \"jgES\",\n\t\"./gatsby/markdown/components/addons/group/group-nav.md\": \"Q1hB\",\n\t\"./gatsby/markdown/components/addons/group/group-number.md\": \"/KR6\",\n\t\"./gatsby/markdown/components/addons/group/group-toolbar.md\": \"+oe6\",\n\t\"./gatsby/markdown/components/addons/group/index.md\": \"fn7v\",\n\t\"./gatsby/markdown/components/addons/layout/google-locator.md\": \"mNfZ\",\n\t\"./gatsby/markdown/components/addons/layout/index.md\": \"hERV\",\n\t\"./gatsby/markdown/components/addons/layout/jump-to-content.md\": \"nIHH\",\n\t\"./gatsby/markdown/components/addons/layout/sticky-footer.md\": \"2A90\",\n\t\"./gatsby/markdown/components/addons/listing/index.md\": \"LZBt\",\n\t\"./gatsby/markdown/components/addons/listing/infinite-scroll.md\": \"6E3b\",\n\t\"./gatsby/markdown/components/addons/navigation/index.md\": \"FI+V\",\n\t\"./gatsby/markdown/components/addons/navigation/scroll-to-anchor.md\": \"t6yK\",\n\t\"./gatsby/markdown/components/addons/overlay/index.md\": \"i7yi\",\n\t\"./gatsby/markdown/components/addons/overlay/overlay-close-outside.md\": \"PWgL\",\n\t\"./gatsby/markdown/components/addons/overlay/overlay-message-outside.md\": \"OvZ4\",\n\t\"./gatsby/markdown/components/addons/slider/index.md\": \"dbiq\",\n\t\"./gatsby/markdown/components/addons/slider/slider-navigation-sides.md\": \"v3a2\",\n\t\"./gatsby/markdown/components/addons/structure/index.md\": \"NBQ4\",\n\t\"./gatsby/markdown/components/addons/structure/mouse-follow.md\": \"QpWg\",\n\t\"./gatsby/markdown/components/addons/structure/propagate-interaction.md\": \"frRB\",\n\t\"./gatsby/markdown/components/addons/structure/ripple.md\": \"meAF\",\n\t\"./gatsby/markdown/components/addons/toggle/index.md\": \"ayyS\",\n\t\"./gatsby/markdown/components/addons/toggle/toggle-multilevel.md\": \"+D6z\",\n\t\"./gatsby/markdown/components/addons/typography/index.md\": \"ltUp\",\n\t\"./gatsby/markdown/components/addons/typography/list-custom.md\": \"LWm/\",\n\t\"./gatsby/markdown/components/addons/typography/separator.md\": \"pF+L\",\n\t\"./gatsby/markdown/components/core/badge/content.md\": \"Utn5\",\n\t\"./gatsby/markdown/components/core/badge/index.md\": \"CwxU\",\n\t\"./gatsby/markdown/components/core/breadcrumbs/content.md\": \"oEr0\",\n\t\"./gatsby/markdown/components/core/breadcrumbs/index.md\": \"G4Ec\",\n\t\"./gatsby/markdown/components/core/button/content.md\": \"2OUg\",\n\t\"./gatsby/markdown/components/core/button/index.md\": \"kzIL\",\n\t\"./gatsby/markdown/components/core/button/other.md\": \"zjJe\",\n\t\"./gatsby/markdown/components/core/card/content-full.md\": \"NJrC\",\n\t\"./gatsby/markdown/components/core/card/content.md\": \"DYjH\",\n\t\"./gatsby/markdown/components/core/card/index.md\": \"K9rX\",\n\t\"./gatsby/markdown/components/core/card/other.md\": \"HFCE\",\n\t\"./gatsby/markdown/components/core/drop/api.md\": \"6/cv\",\n\t\"./gatsby/markdown/components/core/drop/content-card.md\": \"Dq0w\",\n\t\"./gatsby/markdown/components/core/drop/content-list.md\": \"qpJ8\",\n\t\"./gatsby/markdown/components/core/drop/index.md\": \"59JR\",\n\t\"./gatsby/markdown/components/core/drop/interaction.md\": \"6JFp\",\n\t\"./gatsby/markdown/components/core/drop/other.md\": \"oNRJ\",\n\t\"./gatsby/markdown/components/core/form/content.md\": \"Kr+U\",\n\t\"./gatsby/markdown/components/core/form/index.md\": \"yzuU\",\n\t\"./gatsby/markdown/components/core/form/layout.md\": \"d9Fo\",\n\t\"./gatsby/markdown/components/core/form/other.md\": \"K5JY\",\n\t\"./gatsby/markdown/components/core/group/content.md\": \"E7X3\",\n\t\"./gatsby/markdown/components/core/group/index.md\": \"/PHK\",\n\t\"./gatsby/markdown/components/core/group/other.md\": \"Kk+1\",\n\t\"./gatsby/markdown/components/core/icons/content.md\": \"rWIb\",\n\t\"./gatsby/markdown/components/core/icons/index.md\": \"XS1q\",\n\t\"./gatsby/markdown/components/core/link/index.md\": \"Z7n7\",\n\t\"./gatsby/markdown/components/core/list/content.md\": \"BC4L\",\n\t\"./gatsby/markdown/components/core/list/index.md\": \"1IOB\",\n\t\"./gatsby/markdown/components/core/loader/content.md\": \"/7Kb\",\n\t\"./gatsby/markdown/components/core/loader/index.md\": \"2wA2\",\n\t\"./gatsby/markdown/components/core/loader/other.md\": \"nkS8\",\n\t\"./gatsby/markdown/components/core/media/content.md\": \"4GBz\",\n\t\"./gatsby/markdown/components/core/media/index.md\": \"ZtuG\",\n\t\"./gatsby/markdown/components/core/overlay/api.md\": \"uxW7\",\n\t\"./gatsby/markdown/components/core/overlay/content.md\": \"4Z+7\",\n\t\"./gatsby/markdown/components/core/overlay/index.md\": \"PZcn\",\n\t\"./gatsby/markdown/components/core/overlay/interaction.md\": \"hRwY\",\n\t\"./gatsby/markdown/components/core/overlay/other.md\": \"9MkQ\",\n\t\"./gatsby/markdown/components/core/row/content.md\": \"n1/X\",\n\t\"./gatsby/markdown/components/core/row/index.md\": \"TEVl\",\n\t\"./gatsby/markdown/components/core/row/other.md\": \"o8Qv\",\n\t\"./gatsby/markdown/components/core/slider/api.md\": \"h8Ph\",\n\t\"./gatsby/markdown/components/core/slider/index.md\": \"Q32O\",\n\t\"./gatsby/markdown/components/core/slider/interaction.md\": \"kTH+\",\n\t\"./gatsby/markdown/components/core/slider/other.md\": \"NhHv\",\n\t\"./gatsby/markdown/components/core/slider/position.md\": \"eyVc\",\n\t\"./gatsby/markdown/components/core/structure/css.md\": \"v9IO\",\n\t\"./gatsby/markdown/components/core/structure/index.md\": \"wKq7\",\n\t\"./gatsby/markdown/components/core/structure/javascript.md\": \"VE/5\",\n\t\"./gatsby/markdown/components/core/table/index.md\": \"GUX3\",\n\t\"./gatsby/markdown/components/core/toggle/api.md\": \"iQOk\",\n\t\"./gatsby/markdown/components/core/toggle/index.md\": \"lLsj\",\n\t\"./gatsby/markdown/components/core/toggle/interaction.md\": \"KhvV\",\n\t\"./gatsby/markdown/components/core/toggle/other.md\": \"XJtk\",\n\t\"./gatsby/markdown/components/core/typography/content.md\": \"A9Ao\",\n\t\"./gatsby/markdown/components/core/typography/index.md\": \"fQeD\",\n\t\"./gatsby/markdown/components/index.md\": \"m+vp\",\n\t\"./gatsby/markdown/introduction/aria/index.md\": \"zunw\",\n\t\"./gatsby/markdown/introduction/customization/index.md\": \"0aNc\",\n\t\"./gatsby/markdown/introduction/index.md\": \"jy4w\",\n\t\"./gatsby/markdown/introduction/information/index.md\": \"lsBL\",\n\t\"./gatsby/markdown/introduction/installation/index.md\": \"NQT9\",\n\t\"./gatsby/markdown/introduction/issues/index.md\": \"vLAt\",\n\t\"./gatsby/markdown/tests/index.md\": \"tMWC\",\n\t\"./gatsby/markdown/tests/markdown/index.md\": \"5zHI\",\n\t\"./gatsby/markdown/tests/scroll/api.md\": \"xd7b\",\n\t\"./gatsby/markdown/tests/scroll/index.md\": \"J7zw\",\n\t\"./gatsby/markdown/tests/scroll/interaction.md\": \"wEce\",\n\t\"./gatsby/markdown/tests/scroll/other.md\": \"Nss3\",\n\t\"./gatsby/markdown/tests/smooth/index.md\": \"jdND\",\n\t\"./gatsby/markdown/tests/sticky/api.md\": \"DgLM\",\n\t\"./gatsby/markdown/tests/sticky/index.md\": \"IAZx\",\n\t\"./gatsby/markdown/tests/sticky/interaction.md\": \"ujDj\",\n\t\"./gatsby/markdown/tests/sticky/other.md\": \"3d2H\",\n\t\"./gatsby/markdown/themes/by-component/animation/fashion-gallery-v1.md\": \"vIBH\",\n\t\"./gatsby/markdown/themes/by-component/animation/index.md\": \"t79p\",\n\t\"./gatsby/markdown/themes/by-component/button/furniture-featured-v1.md\": \"DuDy\",\n\t\"./gatsby/markdown/themes/by-component/button/index.md\": \"OO/9\",\n\t\"./gatsby/markdown/themes/by-component/button/xtend-theme-v1.md\": \"Z6D/\",\n\t\"./gatsby/markdown/themes/by-component/card/fashion-listing-v1.md\": \"MiSk\",\n\t\"./gatsby/markdown/themes/by-component/card/furniture-listing-v1.md\": \"TihZ\",\n\t\"./gatsby/markdown/themes/by-component/card/index.md\": \"RR0s\",\n\t\"./gatsby/markdown/themes/by-component/card/stores-listing-v1.md\": \"Tw2V\",\n\t\"./gatsby/markdown/themes/by-component/card/stores-listing-v2.md\": \"2RIW\",\n\t\"./gatsby/markdown/themes/by-component/card/xtend-theme-v1.md\": \"VK/u\",\n\t\"./gatsby/markdown/themes/by-component/drop/collapse-theme-v1.md\": \"nMjM\",\n\t\"./gatsby/markdown/themes/by-component/drop/index.md\": \"boAs\",\n\t\"./gatsby/markdown/themes/by-component/drop/sequential-megamenu-v1.md\": \"24na\",\n\t\"./gatsby/markdown/themes/by-component/drop/xtend-theme-v1.md\": \"DyAk\",\n\t\"./gatsby/markdown/themes/by-component/group/collapse-theme-v1.md\": \"vEEi\",\n\t\"./gatsby/markdown/themes/by-component/group/index.md\": \"2h08\",\n\t\"./gatsby/markdown/themes/by-component/media/fashion-gallery-v1.md\": \"970q\",\n\t\"./gatsby/markdown/themes/by-component/media/fashion-listing-v1.md\": \"EhBu\",\n\t\"./gatsby/markdown/themes/by-component/media/furniture-listing-v1.md\": \"aYK4\",\n\t\"./gatsby/markdown/themes/by-component/media/index.md\": \"DgG+\",\n\t\"./gatsby/markdown/themes/by-component/media/opacity-listing-v1.md\": \"7K26\",\n\t\"./gatsby/markdown/themes/by-component/overlay/collapse-theme-v1.md\": \"JiJ6\",\n\t\"./gatsby/markdown/themes/by-component/overlay/fashion-gallery-v1.md\": \"eGVd\",\n\t\"./gatsby/markdown/themes/by-component/overlay/index.md\": \"WtET\",\n\t\"./gatsby/markdown/themes/by-component/overlay/slide-overlay-v1.md\": \"OwCM\",\n\t\"./gatsby/markdown/themes/by-component/overlay/xtend-theme-v1.md\": \"YI6o\",\n\t\"./gatsby/markdown/themes/by-component/scroll/fashion-listing-v1.md\": \"W2Xf\",\n\t\"./gatsby/markdown/themes/by-component/scroll/furniture-featured-v1.md\": \"zVo9\",\n\t\"./gatsby/markdown/themes/by-component/scroll/furniture-listing-v1.md\": \"fCoj\",\n\t\"./gatsby/markdown/themes/by-component/scroll/index.md\": \"mR+U\",\n\t\"./gatsby/markdown/themes/by-component/slider/brands-featured-v1.md\": \"8BX+\",\n\t\"./gatsby/markdown/themes/by-component/slider/fashion-hero-v1.md\": \"oxNk\",\n\t\"./gatsby/markdown/themes/by-component/slider/fashion-hero-v2.md\": \"Ba7r\",\n\t\"./gatsby/markdown/themes/by-component/slider/index.md\": \"cBCd\",\n\t\"./gatsby/markdown/themes/by-component/slider/industrial-featured-v1.md\": \"2e6q\",\n\t\"./gatsby/markdown/themes/by-component/smooth/furniture-featured-v1.md\": \"GRB2\",\n\t\"./gatsby/markdown/themes/by-component/smooth/index.md\": \"nqGM\",\n\t\"./gatsby/markdown/themes/by-type/featured/brands-featured-v1.md\": \"x/D7\",\n\t\"./gatsby/markdown/themes/by-type/featured/furniture-featured-v1.md\": \"BbhD\",\n\t\"./gatsby/markdown/themes/by-type/featured/index.md\": \"Tzd5\",\n\t\"./gatsby/markdown/themes/by-type/featured/industrial-featured-v1.md\": \"7SlC\",\n\t\"./gatsby/markdown/themes/by-type/gallery/fashion-gallery-v1.md\": \"J38n\",\n\t\"./gatsby/markdown/themes/by-type/gallery/index.md\": \"ueyO\",\n\t\"./gatsby/markdown/themes/by-type/hero/fashion-hero-v1.md\": \"5NF0\",\n\t\"./gatsby/markdown/themes/by-type/hero/fashion-hero-v2.md\": \"Ue3/\",\n\t\"./gatsby/markdown/themes/by-type/hero/index.md\": \"yC/B\",\n\t\"./gatsby/markdown/themes/by-type/layout/fashion-gallery-v1.md\": \"ryx8\",\n\t\"./gatsby/markdown/themes/by-type/layout/furniture-featured-v1.md\": \"1+AU\",\n\t\"./gatsby/markdown/themes/by-type/layout/index.md\": \"oop4\",\n\t\"./gatsby/markdown/themes/by-type/listing/fashion-listing-v1.md\": \"vQpP\",\n\t\"./gatsby/markdown/themes/by-type/listing/furniture-listing-v1.md\": \"J8CB\",\n\t\"./gatsby/markdown/themes/by-type/listing/index.md\": \"Faq5\",\n\t\"./gatsby/markdown/themes/by-type/listing/opacity-listing-v1.md\": \"PT0+\",\n\t\"./gatsby/markdown/themes/by-type/listing/stores-listing-v1.md\": \"M9up\",\n\t\"./gatsby/markdown/themes/by-type/listing/stores-listing-v2.md\": \"ndLd\",\n\t\"./gatsby/markdown/themes/by-type/navigation/index.md\": \"OI6u\",\n\t\"./gatsby/markdown/themes/by-type/navigation/sequential-megamenu-v1.md\": \"1CuI\",\n\t\"./gatsby/markdown/themes/by-type/theme/collapse-theme-v1.md\": \"/YMp\",\n\t\"./gatsby/markdown/themes/by-type/theme/index.md\": \"1r5Z\",\n\t\"./gatsby/markdown/themes/by-type/theme/xtend-theme-v1.md\": \"Ur2o\",\n\t\"./gatsby/markdown/themes/index.md\": \"59Mi\",\n\t\"./html\": \"zSfW\",\n\t\"./html.js\": \"zSfW\",\n\t\"./polyfill\": \"9jiw\",\n\t\"./polyfill.js\": \"9jiw\",\n\t\"./private/demos/components/addons/google-locator\": \"jYYb\",\n\t\"./private/demos/components/addons/google-locator.css\": \"+rxh\",\n\t\"./private/demos/components/addons/google-locator.js\": \"jYYb\",\n\t\"./private/demos/components/addons/group-expand\": \"EU51\",\n\t\"./private/demos/components/addons/group-expand.css\": \"RI/0\",\n\t\"./private/demos/components/addons/group-expand.js\": \"EU51\",\n\t\"./private/demos/components/addons/infinite-scroll.css\": \"iO6O\",\n\t\"./private/demos/components/addons/jump-to-content\": \"EyQ7\",\n\t\"./private/demos/components/addons/jump-to-content.css\": \"G9Qz\",\n\t\"./private/demos/components/addons/jump-to-content.js\": \"EyQ7\",\n\t\"./private/demos/components/addons/list-custom.css\": \"EgsT\",\n\t\"./private/demos/components/addons/overlay-message-outside.css\": \"wuFg\",\n\t\"./private/demos/components/addons/ripple\": \"hivd\",\n\t\"./private/demos/components/addons/ripple.js\": \"hivd\",\n\t\"./private/demos/components/addons/scroll-to-anchor\": \"IvZf\",\n\t\"./private/demos/components/addons/scroll-to-anchor.js\": \"IvZf\",\n\t\"./private/demos/components/addons/sticky-footer.css\": \"QbWN\",\n\t\"./private/demos/components/addons/toggle-multilevel\": \"pHIF\",\n\t\"./private/demos/components/addons/toggle-multilevel.js\": \"pHIF\",\n\t\"./private/demos/components/core/card/disable.css\": \"QlVq\",\n\t\"./private/demos/components/core/drop/animation-js\": \"3XzH\",\n\t\"./private/demos/components/core/drop/animation-js.js\": \"3XzH\",\n\t\"./private/demos/components/core/drop/animation.css\": \"Z++d\",\n\t\"./private/demos/components/core/drop/disable.css\": \"lHOe\",\n\t\"./private/demos/components/core/drop/events-methods\": \"vYHz\",\n\t\"./private/demos/components/core/drop/events-methods.js\": \"vYHz\",\n\t\"./private/demos/components/core/form/validation\": \"hX/J\",\n\t\"./private/demos/components/core/form/validation.js\": \"hX/J\",\n\t\"./private/demos/components/core/form/variant-primary.css\": \"vCRe\",\n\t\"./private/demos/components/core/group/merge-line\": \"Dhe+\",\n\t\"./private/demos/components/core/group/merge-line.js\": \"Dhe+\",\n\t\"./private/demos/components/core/group/merge-stack\": \"MXyq\",\n\t\"./private/demos/components/core/group/merge-stack.js\": \"MXyq\",\n\t\"./private/demos/components/core/loader/js-filler\": \"udqv\",\n\t\"./private/demos/components/core/loader/js-filler.js\": \"udqv\",\n\t\"./private/demos/components/core/loader/js-spinner\": \"dNsI\",\n\t\"./private/demos/components/core/loader/js-spinner.js\": \"dNsI\",\n\t\"./private/demos/components/core/overlay/animation-js\": \"mwFb\",\n\t\"./private/demos/components/core/overlay/animation-js.js\": \"mwFb\",\n\t\"./private/demos/components/core/overlay/animation.css\": \"04md\",\n\t\"./private/demos/components/core/overlay/class-html.css\": \"DsQj\",\n\t\"./private/demos/components/core/overlay/disable\": \"809t\",\n\t\"./private/demos/components/core/overlay/disable.css\": \"0GNm\",\n\t\"./private/demos/components/core/overlay/disable.js\": \"809t\",\n\t\"./private/demos/components/core/overlay/events-methods\": \"7NuX\",\n\t\"./private/demos/components/core/overlay/events-methods.js\": \"7NuX\",\n\t\"./private/demos/components/core/scroll/block\": \"DYPQ\",\n\t\"./private/demos/components/core/scroll/block.css\": \"vu90\",\n\t\"./private/demos/components/core/scroll/block.js\": \"DYPQ\",\n\t\"./private/demos/components/core/scroll/delay\": \"53Xq\",\n\t\"./private/demos/components/core/scroll/delay.css\": \"s2TE\",\n\t\"./private/demos/components/core/scroll/delay.js\": \"53Xq\",\n\t\"./private/demos/components/core/scroll/direction\": \"mClQ\",\n\t\"./private/demos/components/core/scroll/direction.js\": \"mClQ\",\n\t\"./private/demos/components/core/scroll/distance.css\": \"zWHC\",\n\t\"./private/demos/components/core/scroll/indicator.css\": \"xFXV\",\n\t\"./private/demos/components/core/scroll/mode-block\": \"9NN3\",\n\t\"./private/demos/components/core/scroll/mode-block.js\": \"9NN3\",\n\t\"./private/demos/components/core/scroll/mode-infinite.css\": \"tDIM\",\n\t\"./private/demos/components/core/scroll/mode-inside.css\": \"wTyU\",\n\t\"./private/demos/components/core/scroll/mode-once.css\": \"gW7t\",\n\t\"./private/demos/components/core/scroll/mode-outside-once.css\": \"xv5x\",\n\t\"./private/demos/components/core/scroll/mode-outside.css\": \"NSJ9\",\n\t\"./private/demos/components/core/scroll/mode-responsive.css\": \"hOQh\",\n\t\"./private/demos/components/core/slider/disable.css\": \"5ejp\",\n\t\"./private/demos/components/core/slider/events-methods\": \"aokZ\",\n\t\"./private/demos/components/core/slider/events-methods.js\": \"aokZ\",\n\t\"./private/demos/components/core/slider/expand.css\": \"Nn8y\",\n\t\"./private/demos/components/core/slider/media-loaded.css\": \"2+tF\",\n\t\"./private/demos/components/core/slider/overflow-auto.css\": \"9CI3\",\n\t\"./private/demos/components/core/slider/progress\": \"1qIo\",\n\t\"./private/demos/components/core/slider/progress.css\": \"Suf7\",\n\t\"./private/demos/components/core/slider/progress.js\": \"1qIo\",\n\t\"./private/demos/components/core/slider/touch-overflow.css\": \"+tpR\",\n\t\"./private/demos/components/core/sticky/block\": \"wErA\",\n\t\"./private/demos/components/core/sticky/block.js\": \"wErA\",\n\t\"./private/demos/components/core/sticky/disable.css\": \"Tw9R\",\n\t\"./private/demos/components/core/toggle/animation-inverse.css\": \"DjW1\",\n\t\"./private/demos/components/core/toggle/animation-js\": \"TtRL\",\n\t\"./private/demos/components/core/toggle/animation-js.js\": \"TtRL\",\n\t\"./private/demos/components/core/toggle/animation.css\": \"yd8s\",\n\t\"./private/demos/components/core/toggle/class.css\": \"eN2x\",\n\t\"./private/demos/components/core/toggle/custom-options.css\": \"GPGe\",\n\t\"./private/demos/components/core/toggle/events-methods\": \"xwUM\",\n\t\"./private/demos/components/core/toggle/events-methods.js\": \"xwUM\",\n\t\"./private/demos/components/core/toggle/jump.css\": \"rgin\",\n\t\"./private/demos/components/core/toggle/progress\": \"Y1Tw\",\n\t\"./private/demos/components/core/toggle/progress.js\": \"Y1Tw\",\n\t\"./private/demos/components/core/toggle/timing\": \"9UZt\",\n\t\"./private/demos/components/core/toggle/timing.css\": \"9gdA\",\n\t\"./private/demos/components/core/toggle/timing.js\": \"9UZt\",\n\t\"./private/demos/test/demo-vanilla\": \"2F1r\",\n\t\"./private/demos/test/demo-vanilla-iframe\": \"rYBI\",\n\t\"./private/demos/test/demo-vanilla-iframe.css\": \"B/GD\",\n\t\"./private/demos/test/demo-vanilla-iframe.js\": \"rYBI\",\n\t\"./private/demos/test/demo-vanilla.css\": \"qDkg\",\n\t\"./private/demos/test/demo-vanilla.js\": \"2F1r\",\n\t\"./private/demos/themes/brands-featured-v1\": \"UIXD\",\n\t\"./private/demos/themes/brands-featured-v1.js\": \"UIXD\",\n\t\"./private/demos/themes/brands-featured-v1.less\": \"IZdf\",\n\t\"./private/demos/themes/collapse-theme-v1.less\": \"2Na+\",\n\t\"./private/demos/themes/fashion-gallery-v1\": \"+IwI\",\n\t\"./private/demos/themes/fashion-gallery-v1.js\": \"+IwI\",\n\t\"./private/demos/themes/fashion-gallery-v1.less\": \"z/A7\",\n\t\"./private/demos/themes/fashion-hero-v1\": \"0/Ac\",\n\t\"./private/demos/themes/fashion-hero-v1.css\": \"shBP\",\n\t\"./private/demos/themes/fashion-hero-v1.js\": \"0/Ac\",\n\t\"./private/demos/themes/fashion-hero-v2\": \"vtXt\",\n\t\"./private/demos/themes/fashion-hero-v2.css\": \"ISeS\",\n\t\"./private/demos/themes/fashion-hero-v2.js\": \"vtXt\",\n\t\"./private/demos/themes/fashion-listing-v1\": \"sAAt\",\n\t\"./private/demos/themes/fashion-listing-v1.js\": \"sAAt\",\n\t\"./private/demos/themes/fashion-listing-v1.less\": \"TJti\",\n\t\"./private/demos/themes/furniture-featured-v1\": \"GHiE\",\n\t\"./private/demos/themes/furniture-featured-v1.js\": \"GHiE\",\n\t\"./private/demos/themes/furniture-featured-v1.less\": \"oGrp\",\n\t\"./private/demos/themes/furniture-listing-v1\": \"/1qR\",\n\t\"./private/demos/themes/furniture-listing-v1.js\": \"/1qR\",\n\t\"./private/demos/themes/furniture-listing-v1.less\": \"UHtO\",\n\t\"./private/demos/themes/industrial-featured-v1\": \"vR0C\",\n\t\"./private/demos/themes/industrial-featured-v1.js\": \"vR0C\",\n\t\"./private/demos/themes/industrial-featured-v1.less\": \"fkI+\",\n\t\"./private/demos/themes/opacity-listing-v1\": \"uGOK\",\n\t\"./private/demos/themes/opacity-listing-v1.js\": \"uGOK\",\n\t\"./private/demos/themes/opacity-listing-v1.less\": \"BwG2\",\n\t\"./private/demos/themes/sequential-megamenu-v1\": \"3i2g\",\n\t\"./private/demos/themes/sequential-megamenu-v1.js\": \"3i2g\",\n\t\"./private/demos/themes/sequential-megamenu-v1.less\": \"9l0S\",\n\t\"./private/demos/themes/slide-overlay-v1.less\": \"D+OP\",\n\t\"./private/demos/themes/stores-listing-v1\": \"Vz2P\",\n\t\"./private/demos/themes/stores-listing-v1.js\": \"Vz2P\",\n\t\"./private/demos/themes/stores-listing-v1.less\": \"LE2G\",\n\t\"./private/demos/themes/stores-listing-v2\": \"GanC\",\n\t\"./private/demos/themes/stores-listing-v2.js\": \"GanC\",\n\t\"./private/demos/themes/stores-listing-v2.less\": \"F2cA\",\n\t\"./private/demos/themes/xtend-theme-v1.less\": \"5vAS\",\n\t\"./tailwind-config\": \"vAcp\",\n\t\"./tailwind-config.js\": \"vAcp\",\n\t\"./tailwind-plugin\": \"dYt1\",\n\t\"./tailwind-plugin.js\": \"dYt1\",\n\t\"./tailwind-xtend\": \"mgE8\",\n\t\"./tailwind-xtend.js\": \"mgE8\",\n\t\"./xt\": \"Fd44\",\n\t\"./xt.js\": \"Fd44\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"kfOr\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst btnPrimaryDrop = require('components/snippets/classes/btn-primary-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\nconst cardPrimaryDropList = require('components/snippets/classes/card-primary-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      default\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      primary\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardPrimaryDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnPrimaryDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimaryDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimaryDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Button\\\"\\ntitle: \\\"Button\\\"\\ndescription: \\\"Simple and extensible button styles.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/btn.css.js](https://github.com/minimit/xtendui/blob/master/src/core/btn.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      btn: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **button**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/button/content).\\n\";","export default \".demo--drop-container-disable {\\n  /*@apply md:drop-container-disable !important;*/\\n  @apply drop-container-disable !important;\\n  /* disable additional padding */\\n  @screen md {\\n    .list {\\n      > .btn, > * > .btn {\\n        @apply px-0;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Toggle\\\"\\ntitle: \\\"Toggle\\\"\\ndescription: \\\"Toggle is the main js component that toggle classes, it's inherited by many other js components.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/core/toggle'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/toggle.css.js](https://github.com/minimit/xtendui/blob/master/src/core/toggle.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      toggle: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nPass **elements** and **targets** options if different from defaults. **Elements** listens to events, **targets and inners** activate on events.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `elements:Query`                          | `:scope > a, :scope > button`        | Elements query            |\\n| Option                  | `targets:Query`                          | `:scope > .toggle, :scope > [class^=\\\"toggle-\\\"], :scope > [class*=\\\" toggle-\\\"]`        | Targets query            |\\n| Option                  | `elementsInner:Query`                          | `false`        | Inner elements query (scope inside elements)            |\\n| Option                  | `targetsInner:Query`                          | `false`        | Inner targets query (scope inside targets)     \\n\\n</div>\\n\\n#### Self\\n\\nUse this code to create a **self toggle**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/usage-self\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/toggle/interaction).\\n\\n#### Unique\\n\\nUse this code to create a **unique toggle**.\\n\\nThe **unique** mode is useful when triggering **targets outside the scope** of the component.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/usage-unique-single\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can also toggle the **same targets on multiple toggles**.\\n\\n[[notePrimary]]\\n| To activate **unique mode** you **need** to specify targets with **#id**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/usage-unique-same\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/toggle/interaction).\\n\\n#### Multiple\\n\\nUse this code to create **multiple toggle**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/usage-multiple-default\\\">\\n  </demovanilla>\\n</demo>\\n\\nYou can also specify your own `elements` and `targets`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/toggle/usage-multiple-custom\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize interaction](/components/core/toggle/interaction).\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ align: 'left' }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center inline-flex\\\"\\n  data-xt-drop=\\\"{ elements: ':scope > .drop-container', targets: ':scope > .drop-container > .drop' }\\\">\\n\\n  <div class=\\\"drop-container\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"/**\\n * import\\n */\\n\\n@import \\\"tailwindcss/base\\\";\\n\\n@import \\\"tailwindcss/components\\\";\\n\\n@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap);\\n@import \\\"prismjs/plugins/unescaped-markup/prism-unescaped-markup.css\\\";\\n@import \\\"./_prism.css\\\";\\n@import \\\"./_shared.css\\\";\\n@import \\\"./_header.css\\\";\\n@import \\\"./_footer.css\\\";\\n@import \\\"./_main.css\\\";\\n@import \\\"./_demo.css\\\";\\n@import \\\"xtendui/build/xtend-demos.css\\\";\\n\\n@import \\\"tailwindcss/utilities\\\";\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\nconst iconArrowLeft = require('components/snippets/icons').iconArrowLeft\\nconst iconArrowRight = require('components/snippets/icons').iconArrowRight\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ navigation: '[data-xt-nav]' }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 3\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n    ${iconArrowLeft({ classes: 'icon-lg' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n    ${iconArrowRight({ classes: 'icon-lg' })}\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 3\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Introduction\\\"\\ncategory: \\\"Getting Started\\\"\\nparent: \\\"Information\\\"\\ntitle: \\\"Information\\\"\\ndescription: \\\"Project informations.\\\"\\ndate: \\\"2050-10-05\\\"\\n---\\n\\n<p align=\\\"center\\\">\\n  <a href=\\\"https://xtendui.com/\\\" style=\\\"display: inline-block;\\\">\\n    <img src=\\\"https://raw.githubusercontent.com/minimit/xtendui/master/static/logo.svg\\\" alt=\\\"Xtend UI\\\" width=\\\"200\\\" height=\\\"47\\\">\\n  </a>\\n</p>\\n\\n<p align=\\\"center\\\">\\n  Powerful frontend library with Tailwind components and vanilla Javascript.\\n  <br/>\\n  <a href=\\\"https://xtendui.com\\\">Introduction</a>&nbsp;&nbsp;·&nbsp;&nbsp;<a href=\\\"https://xtendui.com/components\\\">Components</a>&nbsp;&nbsp;·&nbsp;&nbsp;<a href=\\\"https://xtendui.com/themes\\\">Themes</a>\\n  <br/><br/>\\n  <a href=\\\"https://github.com/minimit/xtendui/blob/master/LICENSE\\\" style=\\\"display: inline-block;\\\">\\n    <img src=\\\"https://img.shields.io/npm/l/xtendui.svg\\\" alt=\\\"License\\\" loading=\\\"eager\\\">\\n  </a>\\n  <a href=\\\"https://www.npmjs.com/package/xtendui\\\" style=\\\"display: inline-block;\\\">\\n    <img src=\\\"https://img.shields.io/npm/v/xtendui.svg\\\" alt=\\\"Latest Release\\\" loading=\\\"eager\\\">\\n  </a>\\n  <a href=\\\"https://github.com/minimit/xtendui/actions?query=workflow%3ARelease\\\" style=\\\"display: inline-block;\\\">\\n    <img src=\\\"https://img.shields.io/github/workflow/status/minimit/xtendui/Release\\\" alt=\\\"Build Status\\\" loading=\\\"eager\\\">\\n  </a>\\n</p>\\n\\n## About\\n\\n<@TODO intro>\\n\\n<@TODO phylosophy>\\n\\n* Css with [TailwindCss](https://tailwindcss.com/) and [Postcss](https://postcss.org/)\\n* Docs with [Gatsby](https://www.gatsbyjs.com/)\\n* Animations with [Gsap](https://greensock.com/gsap/)\\n* Icons with [Feather Icons](https://feathericons.com/)\\n\\nSupported browsers are as follow: **chrome 38**, **safari 10**, **ios 10**, **firefox 38**, **edge 12**, **opera 25**.\\n\\n## Setup\\n\\n#### Installation\\n\\nFor a complete css and js setup guide visit [online installation page](https://xtendui.com/introduction/getting-started/installation) or [github installation page](https://github.com/minimit/xtendui/blob/master/INSTALLATION.md).\\n\\n#### Customization\\n\\nTo customize css and js visit [online customization page](https://xtendui.com/introduction/getting-started/customization) or [github customization page](https://github.com/minimit/xtendui/blob/master/CUSTOMIZATION.md).\\n\\n#### Boilerplate\\n\\nIf you want we have some boilerplate projects to start a project all ready to go!\\n\\n* [xtendui-vanilla](https://github.com/minimit/xtendui-vanilla)\\n\\n## Contributing\\n\\nRead our [contributing docs](https://github.com/minimit/xtendui/blob/master/.github/CONTRIBUTING.md) before submitting a pull request.\\n\\n## Documentation\\n\\n* Clone the repository `git clone https://github.com/minimit/xtendui.git --depth 1`\\n* Install required npm packages with `npm install`\\n* Use `npm run build` to build the docs in `/public`\\n* Use `npm run dev` to serve a develop version\\n* Use `npm run serve` to serve a production version\\n\\n## Copyright\\n\\nLicensed under [MIT license](https://github.com/minimit/xtendui/blob/master/LICENSE).\\nDocs licensed under [CC BY 3.0](https://github.com/minimit/xtendui/blob/master/LICENSE-DOCS).\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Typography\\\"\\ntitle: \\\"Typography\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ keyboard: { selector: 'object' } }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 3\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 3\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ntitle: \\\"Components\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"export default () => {\\n  return `text-black links-default placeholder-black placeholder-opacity-50 border border-gray-200 bg-gray-200 focus:bg-gray-300`\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\"\\n  data-xt-overlay=\\\"{ targets: '#overlay--unique' }\\\">\\n  overlay\\n</button>\\n\\n<div class=\\\"overlay\\\" id=\\\"overlay--unique\\\">\\n  <div class=\\\"overlay-container max-w-3xl\\\">\\n    <div class=\\\"overlay-inner\\\">\\n\\n      <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n        <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n          ${iconX()}\\n        </div>\\n        <div class=\\\"card-md\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--scroll-direction',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      elements: '.card',\\n      delayOn: current => {\\n        return Math.min((current + 1) * 75, 300)\\n      },\\n      delayOff: (current, total) => {\\n        return Math.min((total - (current + 1)) * 75, 300)\\n      },\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst markupSlider = require('components/snippets/components/markup-slider-event-method').default\\nconst indentString = require('indent-string')\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-1 items-center\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-first-element\\\">\\n    1st element\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-first-target\\\">\\n    1st target\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-autostart\\\">\\n    Autostart\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--toggle-events-autostop\\\">\\n    Autostop\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-add\\\">\\n    Add\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-remove\\\">\\n    Remove\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-block\\\">\\n    Block/Unblock\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-reinit\\\">\\n    Reinit\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-restart\\\">\\n    Restart\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-destroy\\\">\\n    Destroy\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--slider-events-unmount\\\">\\n    Unmount\\n  </button>\\n</div>\\n\\n<br/>\\n\\n<div class=\\\"slider\\\" id=\\\"demo--slider-events\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n\\n<div class=\\\"card ${cardDefault()} mt-6\\\">\\n  <div class=\\\"card-sm overflow-y-auto overflow-x-hidden overflow-sub max-h-56\\\" id=\\\"demo--slider-events-log\\\">\\n  </div>\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import { Xt } from 'xtendui'\\nimport JSON5 from 'json5'\\n\\n/**\\n * MouseFollow\\n */\\nclass MouseFollow {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Node|HTMLElement|EventTarget|Window} container Container node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // options\\n    self.options = Xt.merge([self.constructor.optionsDefault, self.optionsCustom])\\n    // targets\\n    self.targets = self.object.querySelectorAll(self.options.targets)\\n    // events\\n    self.object.addEventListener('mousemove', self.mousemove.bind(self))\\n    self.object.addEventListener('mouseenter', self.mouseenter.bind(self))\\n    self.object.addEventListener('mouseleave', self.mouseleave.bind(self))\\n    // initialized class\\n    self.object.classList.add(self.componentName)\\n    // @FIX raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt.mousefollow'))\\n    })\\n  }\\n\\n  //\\n  // methods\\n  //\\n\\n  /**\\n   * mousemove\\n   */\\n  mousemove(e) {\\n    const self = this\\n    const options = self.options\\n    // fix initial\\n    if (self.width === undefined) {\\n      self.mouseenter(e)\\n    }\\n    // position\\n    for (const tr of self.targets) {\\n      Xt.friction(\\n        tr,\\n        {\\n          x: e.clientX - self.width / 2,\\n          y: e.clientY - self.height / 2,\\n          friction: options.friction,\\n        },\\n        options.transform\\n      )\\n    }\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('change.xt.mousefollow'))\\n  }\\n\\n  /**\\n   * mouseenter\\n   */\\n  mouseenter(e) {\\n    const self = this\\n    const options = self.options\\n    if (!options.mouseCheck || options.mouseCheck.call(self)) {\\n      for (const tr of self.targets) {\\n        // size\\n        const rect = tr.getBoundingClientRect()\\n        self.width = rect.width\\n        self.height = rect.height\\n        // class\\n        Xt.animOn(tr)\\n        // initial\\n        Xt.friction(\\n          tr,\\n          {\\n            x: e.clientX - self.width / 2,\\n            y: e.clientY - self.height / 2,\\n            friction: options.friction,\\n          },\\n          options.transform\\n        )\\n      }\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('on.xt.mousefollow'))\\n    }\\n  }\\n\\n  /**\\n   * mouseleave\\n   */\\n  mouseleave() {\\n    const self = this\\n    const options = self.options\\n    if (!options.mouseCheck || options.mouseCheck.call(self)) {\\n      for (const tr of self.targets) {\\n        // class\\n        Xt.animOff(tr)\\n      }\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('off.xt.mousefollow'))\\n    }\\n  }\\n\\n  //\\n  // destroy\\n  //\\n\\n  /**\\n   * destroy\\n   */\\n  destroy() {\\n    const self = this\\n    // remove events\\n    self.object.removeEventListener('mousemove', self.mousemove.bind(self))\\n    self.object.removeEventListener('mouseenter', self.mouseenter.bind(self))\\n    self.object.removeEventListener('mouseleave', self.mouseleave.bind(self))\\n    removeEventListener('mouseup', self.mouseleave.bind(self))\\n    // initialized class\\n    self.object.classList.remove(self.componentName)\\n    // set self\\n    Xt.remove(self.componentName, self.object)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('destroy.xt.mousefollow'))\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nMouseFollow.componentName = 'xt-mouse-follow'\\nMouseFollow.optionsDefault = {\\n  // elements\\n  targets: ':scope > .mouse-follow',\\n  // mousefollow\\n  transform: true,\\n  friction: delta => {\\n    return delta / 9\\n  },\\n  mouseCheck: false,\\n}\\n\\n//\\n// export\\n//\\n\\nXt.MouseFollow = MouseFollow\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.MouseFollow.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.MouseFollow.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.MouseFollow(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"export default () => {\\n  return `border rounded-full text-accent-400 border-accent-200 bg-accent-200`\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Layout\\\"\\ntitle: \\\"google-locator\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/addons/google-locator'\\n```\\n\\n## Usage\\n\\nUse this code to create a **google locator**. Search for \\\"New York\\\" to see it in action.\\n\\n[[notePrimary]]\\n| Needs google API key with **Maps Javascript API**, **Places API**.\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/addons/google-locator\\\">\\n  </div>\\n</demo>\\n\\n## Options\\n\\nFor advanced options see javascript file source code `xtendui/src/addons/google-locator.js`.\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `change.xt.googlelocator`           | `object` | Change event             |\\n| Event                   | `init.xt.googlelocator`           | `object` | Init event             |\\n| Event                   | `destroy.xt.googlelocator`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `locateCache:Object`       | Locate cache object             |\\n| Property                   | `loaderElement:Node`       | Loader node             |\\n| Property                   | `itemsTemplate:Node`       | Items template node             |\\n| Property                   | `itemsContainer:Node`       | Items container node             |\\n| Property                   | `resultElement:Node`       | Result node             |\\n| Property                   | `foundElement:Node`       | Found node             |\\n| Property                   | `mapElement:Node`       | Map node             |\\n| Property                   | `map:Object`       | Map object             |\\n| Property                   | `searchInput:Node`       | Search input node             |\\n| Property                   | `search:Object`       | Search object             |\\n| Property                   | `searchBtn:Node`       | Search button node             |\\n\\n</div>\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-google-locator=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.GoogleLocator(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.GoogleLocator(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"Scroll\\\"\\ndescription: \\\"Content animation when you scroll the page, fade in elements, parallax.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop=\\\"{ on: 'mouseenter', off: 'mouseleave', closeOutside: false, preventEvent: true }\\\">\\n\\n    <a href=\\\"#drop-with-link-1\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </a>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Structure\\\"\\ntitle: \\\"ripple\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/addons/ripple'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/addons/ripple.css.js](https://github.com/minimit/xtendui/blob/master/src/addons/ripple.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      ripple: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **ripple**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/ripple\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Options\\n \\nHere are the main **javascript options**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                    | `sizeInitial:Boolean`                          | `0.1`        | Initial size factor            |\\n| Option                    | `onlyInside:Query`                          | `'a, button, .btn'`        | Only if selector else query closest             |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.xt.ripple`       | `object` | Activation event             |\\n| Event                   | `off.xt.ripple`      | `object` | Deactivation event            |\\n| Event                   | `init.xt.ripple`           | `object` | Init event             |\\n| Event                   | `destroy.xt.ripple`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `container:Node`       | Container node             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n\\n</div>\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-ripple=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.Ripple(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Ripple(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Custom constrain\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()} demo--custom-constrain\\\" placeholder=\\\"Custom constrain\\\" required>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Email\\n      </label>\\n      <input type=\\\"email\\\" class=\\\"form-item ${inputDefault()} \\\" placeholder=\\\"Email\\\" required>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Number\\n      </label>\\n      <input type=\\\"number\\\" class=\\\"form-item ${inputDefault()} \\\" placeholder=\\\"Number\\\" required min=\\\"1\\\" max=\\\"10\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Letters\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()} \\\" placeholder=\\\"Letter\\\" required pattern=\\\"[A-Za-z]+\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputDefault()}\\\" required/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\" required></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" required>\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" multiple required>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" required disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" required>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-validation\\\" required>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-validation\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()} form-label-required\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" required>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-validation\\\" required>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-validation\\\">\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"module.exports = {\\n  // core\\n  badge: require('./core/badge.css.js'),\\n  btn: require('./core/btn.css.js'),\\n  card: require('./core/card.css.js'),\\n  drop: require('./core/drop.css.js'),\\n  form: require('./core/form.css.js'),\\n  group: require('./core/group.css.js'),\\n  icons: require('./core/icons.css.js'),\\n  link: require('./core/link.css.js'),\\n  list: require('./core/list.css.js'),\\n  loader: require('./core/loader.css.js'),\\n  media: require('./core/media.css.js'),\\n  overlay: require('./core/overlay.css.js'),\\n  row: require('./core/row.css.js'),\\n  slider: require('./core/slider.css.js'),\\n  structure: require('./core/structure.css.js'),\\n  table: require('./core/table.css.js'),\\n  toggle: require('./core/toggle.css.js'),\\n  typography: require('./core/typography.css.js'),\\n  // addons\\n  'group-number': require('./addons/group-number.css.js'),\\n  'mouse-follow': require('./addons/mouse-follow.css.js'),\\n  ripple: require('./addons/ripple.css.js'),\\n  'slider-navigation-sides': require('./addons/slider-navigation-sides.css.js'),\\n  // next\\n  sticky: require('./future/sticky.css.js'),\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/overlay'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--overlay-animation-js',\\n  mount: object => {\\n    // vars\\n\\n    const targetTimeOn = Xt.vars.timeSmall\\n    const targetEaseOn = 'quad.out'\\n    const targetTimeOff = Xt.vars.timeSmall\\n    const targetEaseOff = 'quad.inOut'\\n\\n    // init\\n\\n    let self = new Xt.Overlay(object, {\\n      durationOn: Xt.vars.timeSmall,\\n      durationOff: Xt.vars.timeSmall,\\n    })\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      const inner = tr.querySelector('.overlay-inner')\\n      if (!tr.classList.contains('inverse')) {\\n        gsap.set(inner, { x: -15 })\\n      } else {\\n        gsap.set(inner, { x: 15 })\\n      }\\n      gsap.set(inner, { opacity: 0 })\\n      gsap.to(inner, { x: 0, opacity: 1, duration: targetTimeOn, ease: targetEaseOn })\\n      const backdrop = tr.querySelector('.backdrop')\\n      gsap.set(backdrop, { opacity: 0 })\\n      gsap.to(backdrop, { opacity: 1, duration: targetTimeOn, ease: targetEaseOn })\\n    }\\n\\n    for (const target of self.targets) {\\n      target.addEventListener('on.xt', eventOn)\\n    }\\n\\n    // off\\n\\n    const eventOff = e => {\\n      const tr = e.target\\n      if (!tr.classList.contains('inverse')) {\\n        const inner = tr.querySelector('.overlay-inner')\\n        gsap.to(inner, { x: 15, opacity: 0, duration: targetTimeOff, ease: targetEaseOff })\\n      } else {\\n        const inner = tr.querySelector('.overlay-inner')\\n        gsap.to(inner, { x: -15, opacity: 0, duration: targetTimeOff, ease: targetEaseOff })\\n      }\\n      const backdrop = tr.querySelector('.backdrop')\\n      gsap.to(backdrop, { opacity: 0, duration: targetTimeOff, ease: targetEaseOff })\\n    }\\n\\n    for (const target of self.targets) {\\n      target.addEventListener('off.xt', eventOff)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-2/12 md:self-center\\\">\\n          <label class=\\\"form-label ${labelDefault()}\\\">\\n            Lorem ipsum\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-2/12 md:self-center\\\">\\n          <label class=\\\"form-label ${labelDefault()}\\\">\\n            Dolor sit amet\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-4/12 md:self-center\\\">\\n          <label class=\\\"form-label ${labelDefault()}\\\">\\n            Lorem ipsum\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-8/12\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full md:w-6/12\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n        <div class=\\\"w-full md:w-4/12 md:self-center\\\">\\n          <label class=\\\"form-label ${labelDefault()}\\\">\\n            Dolor sit amet\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-8/12\\\">\\n          <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\"/>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-2/12 md:self-baseline\\\">\\n          <label class=\\\"form-label ${labelDefault()}\\\">\\n            Checkbox\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n            <div class=\\\"w-full\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n                <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\">\\n                <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n              </label>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-2/12 md:self-baseline\\\">\\n          <label class=\\\"form-label ${labelDefault()}\\\">\\n            Radio\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n            <div class=\\\"w-full\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-horizontal\\\" checked>\\n                <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-horizontal\\\">\\n                <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n              </label>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full md:w-2/12 md:self-baseline\\\">\\n          <label class=\\\"form-label ${labelDefault()}\\\">\\n            Switch\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full md:w-10/12\\\">\\n          <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n            <div class=\\\"w-full\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\">\\n                <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-horizontal\\\">\\n                <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"w-full\\\">\\n              <label class=\\\"form-label-check\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-horizontal\\\">\\n                <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n              </label>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Row\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Space\\n\\nUse **component utility** `.row-<space>` to space content.\\n\\nFor `<space>` values use any of [tailwind spacing](https://tailwindcss.com/docs/customizing-spacing) up to 10.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.row-<space>`       | `row-<space>`                | `responsive`                | Space contents horizontally and vertically            |\\n| Utility                  | `.row-x-<space>`       | `row-x-<space>`                | `responsive`                | Space contents horizontally            |\\n| Utility                  | `.row-y-<space>`       | `row-y-<space>`                | `responsive`                | Space contents vertically            |\\n\\n</div>\\n\\n[[notePrimary]]\\n| **Do not use margin** css or classes on `.row` because it has automatic negative margins for internal spacing.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/row/space-px\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/row/space-1\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/row/space-2\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/row/space-3\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/row/space-4\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Alignment\\n\\nUse **tailwind classes** to assign alignment (e.g. [align-items](https://tailwindcss.com/docs/align-items), [justify-content](https://tailwindcss.com/docs/justify-content)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/row/alignment\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultDrop = require('components/snippets/classes/card-default-drop').default\\nconst img = require('components/snippets/img').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      asset\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-80 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"rounded-md\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      asset and text\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-80 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"btn btn-close p-5 text-xl\\\" aria-label=\\\"Close\\\">\\n            ${iconX()}\\n          </div>\\n          <div class=\\\"rounded-t-md\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      text\\n    </button>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"card w-80 ${cardDefaultDrop()}\\\">\\n          <div class=\\\"card-md rounded-t-md bg-gray-500\\\">\\n            <div class=\\\"h4\\\">Lorem ipsum</div>\\n          </div>\\n          <div class=\\\"card-md\\\">\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n          <div class=\\\"card-sm pt-0\\\">\\n            <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Layout\\\"\\ntitle: \\\"jump-to-content\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Usage\\n\\nUse this code to create a **jump to content**.\\n\\nUse the tab key to reveal the **jump to content** button.\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/addons/jump-to-content\\\">\\n  </div>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider>\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"export default () => {\\n  return `text-white links-inverse rounded-md bg-accent-500 shadow-lg`\\n}\\n\";","export default \"import kebabCase from 'lodash.kebabcase'\\n\\nconst markdownSlug = page => {\\n  const slugType = kebabCase(page.frontmatter.type)\\n  const slugCategory = kebabCase(page.frontmatter.category)\\n  const slugParent = kebabCase(page.frontmatter.parent)\\n  const slugTitle = kebabCase(page.frontmatter.title)\\n  let slug = `/${slugType}`\\n  if (page.frontmatter.category && page.frontmatter.category !== page.frontmatter.type) {\\n    slug += `/${slugCategory}`\\n  }\\n  if (page.frontmatter.parent) {\\n    slug += `/${slugParent}`\\n  }\\n  if (slugTitle !== slugType && slugTitle !== slugParent) {\\n    slug += `/${slugTitle}`\\n  }\\n  return slug\\n}\\n\\nexport { markdownSlug }\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"collapse-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-24\\\"\\ndemos: [\\n  \\\"iframe/themes/collapse-theme-v1\\\"\\n]\\n---\\n\";","export default \"export default () => {\\n  return `text-black links-default rounded-md bg-gray-200`\\n}\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"rounded-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"rounded-t-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n      </div>\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-md rounded-t-md bg-gray-500\\\">\\n        <div class=\\\"h4\\\">Lorem ipsum</div>\\n      </div>\\n      <div class=\\\"card-md\\\">\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n      <div class=\\\"card-sm pt-0\\\">\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\">\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">1</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">2</div>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"-1\\\" title=\\\"Previous slide\\\">\\n    prev\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()}\\\" data-xt-nav=\\\"1\\\" title=\\\"Next slide\\\">\\n    next\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ contain: true, align: 'left' }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"stores-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-22\\\"\\ndemos: [\\n  \\\"iframe/themes/stores-listing-v1\\\"\\n]\\n---\\n\";","export default \"const img = require('components/snippets/img').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"megamenus\\\">\\n  <span class=\\\"megamenus_line\\\"></span>\\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"list\\\">\\n\\n      <div class=\\\"drop-container drop-container-static megamenu_outer\\\">\\n\\n        <a href=\\\"#menu-0\\\" type=\\\"button\\\" class=\\\"btn btn_megamenus\\\">\\n          Lorem ipsum\\n        </a>\\n\\n        <div class=\\\"drop drop-primary\\\">\\n          <div class=\\\"drop-inner\\\">\\n            <div class=\\\"drop-design\\\"></div>\\n            <div class=\\\"drop-content\\\">\\n\\n              <div class=\\\"megamenu\\\">\\n                <div class=\\\"container\\\">\\n                  <div class=\\\"megamenu_inner\\\">\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"megamenu_col_left\\\">\\n                        <div class=\\\"megamenu_left\\\">\\n                          ${img({ classes: 'object-cover object-center', ratio: '72.6%', loading: 'eager' })}\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"megamenu_col_right\\\">\\n                        <div class=\\\"row\\\" style=\\\"max-height: 20rem;\\\">\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                Lorem ipsum\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    Lorem ipsum\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    dolor sit amet\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    consectetur\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    adipiscing elit\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                dolor sit amet\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    Lorem ipsum\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    dolor sit amet\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                Lorem ipsum\\n                              </a>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                dolor sit amet\\n                              </a>\\n                            </div>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"drop-container drop-container-static megamenu_outer\\\">\\n\\n        <a href=\\\"#menu-1\\\" type=\\\"button\\\" class=\\\"btn btn_megamenus\\\">\\n          dolor\\n        </a>\\n\\n        <div class=\\\"drop drop-primary\\\">\\n          <div class=\\\"drop-inner\\\">\\n            <div class=\\\"drop-design\\\"></div>\\n            <div class=\\\"drop-content\\\">\\n\\n              <div class=\\\"megamenu\\\">\\n                <div class=\\\"container\\\">\\n                  <div class=\\\"megamenu_inner\\\">\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"megamenu_col_left\\\">\\n                        <div class=\\\"megamenu_left\\\">\\n                          ${img({ classes: 'object-cover object-center', ratio: '100%', loading: 'eager' })}\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"megamenu_col_right\\\">\\n                        <div class=\\\"row\\\" style=\\\"max-height: 30rem;\\\">\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                Lorem ipsum\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    Lorem ipsum\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    dolor sit amet\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    consectetur\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    adipiscing elit\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                dolor sit amet\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    Lorem ipsum\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    dolor sit amet\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                consectetur\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    consectetur\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    adipiscing elit\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                adipiscing elit\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    Lorem ipsum\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    dolor sit amet\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    consectetur\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    adipiscing elit\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                Lorem ipsum\\n                              </a>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                dolor sit amet\\n                              </a>\\n                            </div>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"drop-container drop-container-static megamenu_outer\\\">\\n\\n        <a href=\\\"#menu-2\\\" type=\\\"button\\\" class=\\\"btn btn_megamenus\\\">\\n          sit amet\\n        </a>\\n\\n        <div class=\\\"drop drop-primary\\\">\\n          <div class=\\\"drop-inner\\\">\\n            <div class=\\\"drop-design\\\"></div>\\n            <div class=\\\"drop-content\\\">\\n\\n              <div class=\\\"megamenu\\\">\\n                <div class=\\\"container\\\">\\n                  <div class=\\\"megamenu_inner\\\">\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"megamenu_col_left\\\">\\n                        <div class=\\\"megamenu_left\\\">\\n                          ${img({ classes: 'object-cover object-center', ratio: '50%', loading: 'eager' })}\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"megamenu_col_right\\\">\\n                        <div class=\\\"row\\\" style=\\\"max-height: 20rem;\\\">\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                Lorem ipsum\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    Lorem ipsum\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    dolor sit amet\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    consectetur\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    adipiscing elit\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"megamenu_item_col\\\">\\n                            <div class=\\\"megamenu_item\\\">\\n                              <a href=\\\"#\\\" class=\\\"megamenu_item_title\\\">\\n                                dolor sit amet\\n                              </a>\\n                              <div class=\\\"megamenu_item_content\\\">\\n                                <div class=\\\"list flex-col\\\">\\n                                  <a href=\\\"#\\\">\\n                                    Lorem ipsum\\n                                  </a>\\n                                  <a href=\\\"#\\\">\\n                                    dolor sit amet\\n                                  </a>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <a href=\\\"#menu-3\\\" class=\\\"btn btn_megamenus\\\">\\n        consectetur\\n      </a>\\n\\n      <a href=\\\"#menu-4\\\" class=\\\"btn btn_megamenus\\\">\\n        adipiscing elit\\n      </a>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<!-- mouse events instead of click you can remove this -->\\n<div class=\\\"container\\\">\\n  <div class=\\\"form form-default\\\">\\n    <input type=\\\"checkbox\\\" id=\\\"check-sequential-megamenu-v1\\\">\\n    <label class=\\\"form-label\\\" for=\\\"check-sequential-megamenu-v1\\\">\\n      Use mouse events\\n    </label>\\n  </div>\\n</div>\\n`\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Loader\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Background\\n\\nUse **tailwind classes** to assign variant (e.g. [background-color](https://tailwindcss.com/docs/background-color), [opacity](https://tailwindcss.com/docs/opacity)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/background-spinner\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/loader/background-filler\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Activation\\n\\nUse **component classes** to assign loader activation animation. \\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.loader-animated`                     | `loader-animated`                | Loader activation animation            |\\n\\n</div>\\n\\nExample loader spinner with activation animation*.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/js-spinner\\\">\\n  </demovanilla>\\n</demo>\\n\\nExample loader filler with activation animation.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/loader/js-filler\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Mouse\\n\\nUse **component classes** to create a loader positioned for mouse.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.loader-mouse`                     | `loader-mouse`                | Loader position for mouse            |\\n\\n</div>\\n\\nSee [mouse follow addon](/components/addons/mouse-follow) to create a loader with mouse follow.\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Smooth\\\"\\ntitle: \\\"Smooth\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Row\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Stretch\\n\\nUse `.row-stretch` to stretch content vertically.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.row-stretch`                     | `row-stretch`                | Stretch content vertically            |\\n\\n</div>\\n\\nWhen using cards you can space with `margin auto` on **card content**. When not using cards, be sure that the content have class `flex-auto`.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/row/stretch\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Overflow\\n\\nUse `.row-overflow` to have browser overflow scroll on **touch devices** (use touch device to see it in action).\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.row-overflow`                     | `row-overflow`                | Overflow on touch devices            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/row/overflow\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Breadcrumbs\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Metadata\\n\\nUse markup to add **json-ld** metadata to **breadcrumb**.\\n\\n```html\\n<script type=\\\"application/ld+json\\\">\\n  {\\n      \\\"@context\\\": \\\"https://schema.org\\\",\\n      \\\"@type\\\": \\\"BreadcrumbList\\\",\\n      \\\"itemListElement\\\": [\\n          {\\n              \\\"@type\\\": \\\"ListItem\\\",\\n              \\\"position\\\": 1,\\n              \\\"name\\\": \\\"Home\\\",\\n              \\\"item\\\": \\\"#\\\"\\n          },\\n          {\\n              \\\"@type\\\": \\\"ListItem\\\",\\n              \\\"position\\\": 2,\\n              \\\"name\\\": \\\"Lorem ipsum dolor sit amet\\\",\\n              \\\"item\\\": \\\"#\\\"\\n          },\\n          {\\n              \\\"@type\\\": \\\"ListItem\\\",\\n              \\\"position\\\": 3,\\n              \\\"name\\\": \\\"Lorem ipsum\\\"\\n          }\\n      ]\\n  }\\n</script>\\n```\\n\\n## Title\\n\\nUse **tailwind classes** to add title and background.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/breadcrumbs/title\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Overlay\\n */\\nclass Overlay extends Xt.Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    super(object, optionsCustom)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init aria\\n   */\\n  initAriaRole() {\\n    const self = this\\n    const options = self.options\\n    // aria\\n    if (options.aria) {\\n      // role\\n      if (self.targets.length) {\\n        for (const el of self.elements) {\\n          const ariaEls = Xt.queryAll(el, options.ariaControls)\\n          const ariaEl = ariaEls.length ? ariaEls[0] : el\\n          ariaEl.setAttribute('aria-haspopup', 'dialog')\\n        }\\n        for (const tr of self.targets) {\\n          tr.setAttribute('role', 'dialog')\\n          tr.setAttribute('aria-modal', 'true')\\n        }\\n      } else {\\n        for (const el of self.elements) {\\n          el.setAttribute('role', 'dialog')\\n          el.setAttribute('aria-modal', 'true')\\n        }\\n      }\\n    }\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nOverlay.componentName = 'xt-overlay'\\nOverlay.optionsDefault = {\\n  // element\\n  elements: ':scope > a, :scope > button',\\n  targets: ':scope > .overlay',\\n  // class\\n  class: 'active active-overlay',\\n  // quantity\\n  min: 0,\\n  max: 1,\\n  // event\\n  on: 'click',\\n  eventLimit: '.event-limit, :scope > .overlay-container > .overlay-inner > .card-overlay .card-content',\\n  // other\\n  backdrop: true,\\n  closeAuto: true,\\n  appendTo: 'body',\\n  classHtml: false,\\n  closeInside: '.overlay-dismiss, .backdrop, .btn-close',\\n  closeOnDisable: true,\\n  scrollbar: true,\\n  focusLimit: true,\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Overlay = Overlay\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Overlay.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Overlay.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Overlay(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"#iframe--furniture-featured-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n      * .featured\\n      */\\n\\n    .featured {\\n      .padding(y, huge);\\n      background: @white;\\n    }\\n\\n    .featured_item {\\n      .full();\\n      .margin(y, huge);\\n      .text-black links-default() !important;\\n    }\\n\\n    .featured--inverse {\\n      background: @shade-700;\\n      .featured_item {\\n        .text-white links-inverse() !important;\\n      }\\n    }\\n\\n    .featured_item_inner {\\n      > .row {\\n        align-items: center;\\n      }\\n    }\\n\\n    .featured_img_col {\\n      z-index: 1;\\n      .col(12);\\n      .col-custom(40%, sm);\\n    }\\n\\n    .featured_item--big {\\n      .featured_img_col {\\n        .col-custom(55%, sm);\\n      }\\n    }\\n\\n    .featured_content_col {\\n      z-index: 2;\\n      .col(12);\\n      .col-auto(sm);\\n    }\\n\\n    .featured_img {\\n      .media-container();\\n      padding-bottom: 72.6%;\\n      overflow: hidden;\\n    }\\n\\n    .featured_img--vertical {\\n      padding-bottom: 121%;\\n    }\\n\\n    .featured_img_inner {\\n      .media-inner();\\n      img {\\n        .media();\\n        .object-cover();\\n      }\\n    }\\n\\n    .featured_content {\\n      @media @min-sm {\\n        .padding(x, giant);\\n      }\\n    }\\n\\n    .featured_item--align-right {\\n      .featured_content {\\n        @media @min-sm {\\n          text-align: right;\\n        }\\n      }\\n    }\\n\\n    .featured_title {\\n      .spacing-md();\\n      font-size: 4rem;\\n      @media @min-sm {\\n        .margin-remove(left, 12rem);\\n      }\\n    }\\n\\n    .featured_desc {\\n      font-size: 1rem;\\n      line-height: 2.5;\\n    }\\n\\n    .featured_item--desc-right {\\n      .featured_desc {\\n        @media @min-sm {\\n          .padding(left, 6rem);\\n          .margin-remove(right, 18rem);\\n        }\\n      }\\n    }\\n\\n    .featured_item--right {\\n      .featured_img_col {\\n        .order(2, sm);\\n      }\\n      .featured_content_col {\\n        .order(1, sm);\\n      }\\n      .featured_title {\\n        .margin(left, 0);\\n        .margin-remove(right, 12rem);\\n      }\\n    }\\n\\n    /**\\n      * .btn--line\\n      */\\n\\n    @line-width: 15px;\\n    @line-space: 15px;\\n    @line-opacity: 0.4;\\n\\n    .btn--line {\\n      .padding(x, none);\\n      .font-sans-semibold();\\n      font-size: 12px;\\n      letter-spacing: .1em;\\n      text-transform: uppercase;\\n      border-color: transparent;\\n      background: transparent;\\n      color: @text;\\n      &:hover {\\n        color: @text;\\n        box-shadow: none;\\n      }\\n      &:active, &.active {\\n        border-color: transparent;\\n        background: transparent;\\n        box-shadow: none;\\n        transform: none;\\n      }\\n    }\\n\\n    .btn--line_text {\\n      .padding(left, @line-width + @line-space);\\n    }\\n\\n    .btn--line_line {\\n      position: absolute;\\n      width: @line-width;\\n      height: 1px;\\n      background: @text;\\n      opacity: @line-opacity;\\n    }\\n\\n    .featured--inverse {\\n      .btn--line {\\n        color: @text-white links-inverse;\\n        &:hover {\\n          color: @text-white links-inverse;\\n          box-shadow: none;\\n        }\\n      }\\n      .btn--line_line {\\n        background: @white;\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import path from 'path'\\nconst cardDefaultFull = require('components/snippets/classes/card-default-full').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"card-md p-0 text-sm\\\">\\n        <div class=\\\"h5\\\">Small</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"card-md p-0\\\">\\n        <div class=\\\"h4\\\">Medium</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"card-md p-0 text-lg\\\">\\n        <div class=\\\"h3\\\">Large</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"card-md p-0 text-sm\\\">\\n        <div class=\\\"h5\\\">Custom</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Disable\\n\\nYou can disable styles and javascript using `.drop-container-disable`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.drop-container-disable`       | `drop-container-disable !important`                | `responsive`                | Reset drop styles and javascript            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/disable\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Static\\n\\nIf you want a drop with size and position **relative to a parent Node** use `drop-container-static` and `w-full`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |----------------------------- |\\n| Utility                  | `.drop-container-static`       | `drop-container-static`                | `responsive`                | Position relative to closest element with `.relative`            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/static\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Prevent Event\\n\\nYou can have **element's link** and **click events** prevented when the drop opens with `preventEvent: true`, they will trigger only if the drop is already opened.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `preventEvent:Boolean`                          | `false`        | Prevent interaction until activated depending on `on` and `off` events (second click or mouseenter)            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/prevent-event\\\">\\n  </demovanilla>\\n  <demovanilla src=\\\"vanilla/components/core/drop/prevent-event-hover\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Other\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `closeAuto:Boolean`                          | `true`        | Close automatically on `closeauto.trigger.xt` event            |\\n| Option                  | `closeOutside:Query`                          | `'body'`        | Query Node outside to close on click            |\\n| Option                  | `closeInside:Query`                          | `'.drop-dismiss, .backdrop, .btn-close'`        | Query Node inside to close on click            |\\n\\n</div>\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"group w-full\\\" role=\\\"toolbar\\\">\\n\\n  <div class=\\\"group-inner mr-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-md mr-2 ${btnDefaultGroup()}\\\">\\n      Back\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-md mr-2 ${btnDefaultGroup()}\\\">\\n      Clear\\n    </button>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md rounded-md ${btnPrimaryGroup()}\\\">\\n    Submit\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst cardPrimary = require('components/snippets/classes/card-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()} demo--card-disable\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Default</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardPrimary()} demo--card-disable\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Primary</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Layout\\\"\\ntitle: \\\"Layout\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"fashion-hero-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-04-27\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-hero-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div class=\\\"drop-container\\\" data-xt-drop=\\\"{ preventEvent: true }\\\">\\n\\n    <a href=\\\"#drop-with-link-0\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      drop\\n    </a>\\n\\n    <div class=\\\"drop\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"module.exports = {\\n  component: theme => ({\\n    '.media-container': {\\n      // setup\\n      display: 'block',\\n      position: 'relative',\\n      overflow: 'hidden',\\n      width: '100%',\\n      minHeight: '100%',\\n      borderRadius: 'inherit',\\n      // styles\\n      backgroundColor: theme('colors.gray.500'),\\n    },\\n    '.media-inner': {\\n      // setup\\n      position: 'absolute',\\n      top: '0',\\n      left: '0',\\n      bottom: '0',\\n      right: '0',\\n    },\\n    '.media': {\\n      // setup\\n      width: '100%',\\n      height: '100%',\\n    },\\n  }),\\n}\\n\";","export default \"module.exports = {\\n  variant: ['responsive'],\\n  utility: {\\n    '.toggle': {\\n      // setup\\n      '&:not(.active):not(.out)': {\\n        display: 'none',\\n      },\\n    },\\n    '.toggle-inverse': {\\n      // setup\\n      '&.done': {\\n        display: 'none',\\n      },\\n    },\\n  },\\n}\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Typography\\\"\\ntitle: \\\"Separator\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/addons/separator.css.js](https://github.com/minimit/xtendui/blob/master/src/addons/separator.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      separator: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **separator**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/separator\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Type\\n\\nUse **tailwind classes** to assign styles (e.g. [margin](https://tailwindcss.com/docs/margin), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\nFor `<type>` values use `dash`, `slash`, `pipe`, `point` or `arrow`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.separator-<type>`                     | `separator-<type>`                | Separator content            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/separator-type\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--multilevel',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      elements: '[data-multilevel-reset], [data-multilevel-element]',\\n      targets: '[data-multilevel-tab]',\\n      min: 1,\\n    })\\n\\n    // click\\n\\n    const eventClick = () => {\\n      object.querySelector('[data-multilevel-reset]').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    const btns = object.querySelectorAll('[data-multilevel-reset]')\\n    for (const btn of btns) {\\n      btn.addEventListener('click', eventClick)\\n    }\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst labelPrimary = require('components/snippets/classes/label-primary').default\\nconst inputPrimary = require('components/snippets/classes/input-primary').default\\nconst checkPrimary = require('components/snippets/classes/form-check-primary').default\\nconst radioPrimary = require('components/snippets/classes/form-radio-primary').default\\nconst switchPrimary = require('components/snippets/classes/form-switch-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form class=\\\"demo--form-variant-primary py-4 px-6 bg-accent-500\\\">\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Input\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputPrimary()}\\\" placeholder=\\\"Input\\\">\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Disabled\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputPrimary()}\\\" placeholder=\\\"Input\\\" disabled>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputPrimary()}\\\"/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputPrimary()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select form-select-primary ${inputPrimary()}\\\">\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select form-select-primary ${inputPrimary()}\\\" multiple>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkPrimary()}\\\" checked disabled>\\n            <span class=\\\"ml-3 text-white links-inverse\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkPrimary()}\\\">\\n            <span class=\\\"ml-3 text-white links-inverse\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioPrimary()}\\\" name=\\\"radio-primary\\\" checked>\\n            <span class=\\\"ml-3 text-white links-inverse\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioPrimary()}\\\" name=\\\"radio-primary\\\">\\n            <span class=\\\"ml-3 text-white links-inverse\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelPrimary()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${radioPrimary()}\\\">\\n            <span class=\\\"ml-3 text-white links-inverse\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchPrimary()}\\\" name=\\\"switch-primary\\\" checked>\\n            <span class=\\\"ml-3 text-white links-inverse\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchPrimary()}\\\" name=\\\"switch-primary\\\">\\n            <span class=\\\"ml-3 text-white links-inverse\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Default\\n</div>\\n\\n${iconSearch({ classes: 'icon-md' })}\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Accent\\n</div>\\n\\n${iconSearch({ classes: 'icon-md text-accent-50' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-100' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-200' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-300' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-400' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-500' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-600' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-700' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-800' })}\\n\\n${iconSearch({ classes: 'icon-md text-accent-900' })}\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Black opacity\\n</div>\\n\\n${iconSearch({ classes: 'icon-md text-black text-opacity-0' })}\\n\\n${iconSearch({ classes: 'icon-md text-black text-opacity-25' })}\\n\\n${iconSearch({ classes: 'icon-md text-black text-opacity-50' })}\\n\\n${iconSearch({ classes: 'icon-md text-black text-opacity-75' })}\\n\\n${iconSearch({ classes: 'icon-md text-black text-opacity-100' })}\\n`\\n\";","export default \"const cssSource = (demo, nameOverride, type = '.css') => {\\n  return require(`!!raw-loader!xtendui/src/${demo.path}${type}`).default\\n}\\n\\nconst jsSource = (demo, nameOverride, type = '.js') => {\\n  return require(`!!raw-loader!xtendui/src/${demo.path}${type}`).default\\n}\\n\\nconst jsxSource = (demo, nameOverride, type = '.jsx') => {\\n  return require(`!!raw-loader!xtendui/src/${demo.type}${type}`).default\\n}\\n\\nexport { cssSource, jsSource, jsxSource }\\n\";","export default \"export default () => {\\n  return `text-black links-default placeholder-black placeholder-opacity-50 rounded-md border border-gray-200 bg-gray-200 focus:bg-gray-300`\\n}\\n\";","export default \"@import 'xtendui/src/core/table/_table.less';\\n\\n/**\\n * vars\\n */\\n\\n// generate class: [false], [true] non responsive only, [sm, md, lg] responsive @breakpoints\\n\\n@generate-table-scroll: sm, md;\\n\\n/**\\n * tables\\n */\\n\\n.table, .table-scroll {\\n  .margin(bottom, layout) !important;\\n  .margin(bottom, medium);\\n}\\n\\n// .table\\n\\n.table {\\n  th {\\n    vertical-align: top;\\n    .padding(x, tiny);\\n    .padding(y, tiny);\\n    .font-sans-semibold();\\n    .line-height-sm();\\n    font-size: 11px;\\n    letter-spacing: .025em;\\n    text-transform: uppercase;\\n  }\\n  td {\\n    vertical-align: top;\\n    .padding(x, tiny);\\n    .padding(y, tiny);\\n    .line-height-sm();\\n    font-size: 0.8rem;\\n  }\\n  // thead\\n  thead {\\n    th, td {\\n      border-right: 1px solid @shade-100;\\n      border-bottom: 1px solid @shade-100;\\n    }\\n    th, td {\\n      &:last-child {\\n        border-right: 0;\\n      }\\n    }\\n  }\\n  // tbody\\n  tbody {\\n    th, td {\\n      border-right: 1px solid @shade-100;\\n      border-bottom: 1px solid @shade-100;\\n    }\\n    th, td {\\n      &:last-child {\\n        border-right: 0;\\n      }\\n    }\\n    tr {\\n      &:last-child {\\n        th, td {\\n          border-bottom: 0;\\n        }\\n      }\\n    }\\n  }\\n  // tfoot\\n  /*\\n  tfoot {\\n    .padding(y, big) !important;\\n    background: @shade-100;\\n    th {\\n      .reset-text();\\n    }\\n    tr {\\n      border: 0;\\n      th, td {\\n        vertical-align: top;\\n        .padding(y, tiny) !important;\\n        .padding(x, medium) !important;\\n        text-align: right;\\n      }\\n      &:first-child {\\n        th, td {\\n          .padding(top, medium) !important;\\n        }\\n      }\\n      &:last-child {\\n        th, td {\\n          .padding(bottom, medium) !important;\\n        }\\n      }\\n    }\\n  }\\n  */\\n}\\n\\n// .table-narrow\\n\\n.table-narrow {\\n  th, td {\\n    .padding(x, layout);\\n    background: transparent;\\n  }\\n}\\n\\n// .table-sm\\n\\n.table-sm {\\n  th {\\n    .padding(x, small);\\n    .padding(y, small);\\n  }\\n  td {\\n    .padding(x, small);\\n    .padding(y, small);\\n  }\\n}\\n\\n// .table-stripe\\n\\n.table-stripe {\\n  tbody tr:nth-of-type(odd) {\\n    background: @shade-100;\\n  }\\n  tbody tr:nth-of-type(even) {\\n    background: transparent;\\n  }\\n}\\n\\n// .table-border\\n\\n.table-border {\\n  border-radius: 6px;\\n  border: 3px solid @shade-100;\\n  border-collapse: separate;\\n  border-spacing: 0;\\n}\\n\\n// .table-responsive\\n\\n.table-responsive {\\n  @media @max-sm {\\n    border-top: 2px solid @shade-100;\\n    thead, th {\\n      display: none;\\n    }\\n    tr {\\n      .full();\\n      .padding(y, medium);\\n    }\\n    td {\\n      display: inline-flex;\\n      flex-direction: column;\\n      justify-content: center;\\n      .padding(x, medium);\\n      .padding(y, small);\\n      text-align: center;\\n      .list {\\n        justify-content: center;\\n      }\\n    }\\n    // data-th\\n    td:before {\\n      .form-label();\\n      content: attr(data-th);\\n      width: 100%;\\n      justify-content: center;\\n      text-align: center;\\n    }\\n  }\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupOverlay = require('components/snippets/themes/markup-overlay').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${markupOverlay()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ contain: true, align: 'right' }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst cardDefaultFull = require('components/snippets/classes/card-default-full').default\\nconst img = require('components/snippets/img').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"md:card-group\\\">\\n        <div class=\\\"card-md px-0 pt-0 md:pb-0 md:pr-6 md:w-7/12\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n        <div class=\\\"card-sm md:w-5/12 rounded-md bg-gray-500\\\">\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"md:card-group\\\">\\n        <div class=\\\"card-md md:w-7/12 px-0 pt-0 md:pb-0 md:pr-6\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n        <div class=\\\"md:w-5/12\\\">\\n          <div class=\\\"card-sm rounded-md bg-gray-500\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n          <div class=\\\"card-md px-0\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"rounded-md\\\">\\n        ${img({ classes: 'object-cover object-center', ratio: '15%' })}\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"/* Vanilla css */\\n\";","export default \"export default () => {\\n  return `text-white links-inverse bg-accent-500`\\n}\\n\";","export default \"module.exports = {\\n  variant: ['responsive'],\\n  utility: theme => ({\\n    '.links-default': {\\n      'a:not([class]), .link': {\\n        color: theme('colors.accent.500'),\\n        '&:hover, &:active, &.active': {\\n          color: theme('colors.accent.600'),\\n        },\\n      },\\n    },\\n    '.links-inverse': {\\n      'a:not([class]), .link': {\\n        color: theme('colors.white'),\\n        '&:hover, &:active, &.active': {\\n          color: theme('colors.white'),\\n        },\\n      },\\n    },\\n  }),\\n  component: theme => ({\\n    'a:not([class]), .link': {\\n      // setup\\n      '@apply text-reset !important': {},\\n      wordWrap: 'break-word',\\n      overflowWrap: 'break-word',\\n      textDecoration: 'underline',\\n      // animation\\n      transitionProperty: 'color',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      '&:hover, &:active, &.active': {\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n      },\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\nconst checkDefault = require('components/snippets/classes/form-check-default').default\\nconst radioDefault = require('components/snippets/classes/form-radio-default').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Input\\n      </label>\\n      <input type=\\\"text\\\" class=\\\"form-item ${inputDefault()}\\\" placeholder=\\\"Input\\\" disabled>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        File\\n      </label>\\n      <input type=\\\"file\\\" class=\\\"form-item ${inputDefault()}\\\" disabled/>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Textarea\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} h-24 resize-vertical duration-150\\\" placeholder=\\\"Textarea\\\" disabled></textarea>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" disabled>\\n        <option selected value=\\\"\\\">Select an option</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n        <option>Test</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Select multiple\\n      </label>\\n      <select class=\\\"form-item form-select ${inputDefault()}\\\" multiple disabled>\\n        <option>Option 1</option>\\n        <option>Option 2</option>\\n        <option>Option 3</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Checkbox\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" checked disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-checkbox ${checkDefault()}\\\" disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Radio\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-usage\\\" checked disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-radio ${radioDefault()}\\\" name=\\\"radio-usage\\\" disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Switch\\n      </label>\\n\\n      <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-usage\\\" checked disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"w-full\\\">\\n          <label class=\\\"form-label-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" name=\\\"switch-usage\\\" disabled>\\n            <span class=\\\"ml-3\\\"><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</span>\\n          </label>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"w-full\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n        submit\\n      </button>\\n    </div>\\n\\n  </div>\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Drop\\\"\\ntitle: \\\"Content List\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [border-color](https://tailwindcss.com/docs/border-color), [background-color](https://tailwindcss.com/docs/background-color), [text-color](https://tailwindcss.com/docs/text-color)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/list-variant\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **tailwind classes** to assign size (e.g. [width](https://tailwindcss.com/docs/width), [padding](https://tailwindcss.com/docs/padding)).\\n\\nUse [button classes](/components/core/button/content#size) to assign button size (e.g. [padding](https://tailwindcss.com/docs/padding), [font-size](https://tailwindcss.com/docs/font-size)).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/drop/list-size\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"const round = num =>\\n  num\\n    .toFixed(7)\\n    .replace(/(\\\\.[0-9]+?)0+$/, '$1')\\n    .replace(/\\\\.0$/, '')\\nconst rem = px => `${round(px / 16)}rem`\\n\\nmodule.exports = {\\n  variant: ['responsive'],\\n  utility: theme => ({\\n    '.h1': {\\n      // style\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.3'),\\n      '@apply mt-fc mb-lc': {},\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.bold'),\\n      fontSize: rem(35),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.tight'),\\n      textTransform: 'none',\\n      '@screen lg': {\\n        fontSize: rem(40),\\n      },\\n    },\\n    '.h2': {\\n      // style\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.3'),\\n      '@apply mt-fc mb-lc': {},\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      fontSize: rem(30),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.tight'),\\n      textTransform: 'none',\\n      '@screen lg': {\\n        fontSize: rem(35),\\n      },\\n    },\\n    '.h3': {\\n      // style\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.3'),\\n      '@apply mt-fc mb-lc': {},\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      fontSize: rem(25),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.tight'),\\n      textTransform: 'none',\\n      '@screen lg': {\\n        fontSize: rem(30),\\n      },\\n    },\\n    '.h4': {\\n      // style\\n      marginTop: theme('spacing.4'),\\n      marginBottom: theme('spacing.2'),\\n      '@apply mt-fc mb-lc': {},\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      fontSize: rem(24),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.tight'),\\n      textTransform: 'none',\\n    },\\n    '.h5': {\\n      // style\\n      marginTop: theme('spacing.4'),\\n      marginBottom: theme('spacing.2'),\\n      '@apply mt-fc mb-lc': {},\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      fontSize: rem(18),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.tight'),\\n      textTransform: 'none',\\n    },\\n    '.h6': {\\n      // style\\n      marginTop: theme('spacing.4'),\\n      marginBottom: theme('spacing.2'),\\n      '@apply mt-fc mb-lc': {},\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      fontSize: '13px',\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.wide'),\\n      textTransform: 'uppercase',\\n    },\\n    '.h-block': {\\n      // style\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.6'),\\n      '@apply mt-fc mb-lc': {},\\n      paddingTop: theme('spacing.3'),\\n      paddingBottom: theme('spacing.3'),\\n      paddingLeft: theme('spacing.6'),\\n      paddingRight: theme('spacing.6'),\\n    },\\n    '.p': {\\n      // setup\\n      fontFamily: 'inherit',\\n      fontStyle: 'inherit',\\n      fontWeight: 'inherit',\\n      letterSpacing: 'inherit',\\n      textTransform: 'inherit',\\n      // style\\n      marginBottom: theme('spacing.3'),\\n      '@apply text-reset mb-lc': {},\\n    },\\n    '.text-reset': {\\n      // setup\\n      fontFamily: 'inherit',\\n      fontStyle: 'inherit',\\n      fontWeight: 'inherit',\\n      fontSize: 'inherit',\\n      lineHeight: 'inherit',\\n      letterSpacing: 'inherit',\\n      textTransform: 'inherit',\\n    },\\n    '.ellipsis': {\\n      // setup\\n      overflow: 'hidden',\\n      whiteSpace: 'nowrap',\\n      textOverflow: 'ellipsis',\\n      '> *': {\\n        display: 'inline !important',\\n        verticalAlign: 'middle !important',\\n      },\\n    },\\n    '.lowercase-capitalize': {\\n      // setup\\n      textTransform: 'lowercase',\\n      '&:first-letter': {\\n        textTransform: 'uppercase',\\n      },\\n    },\\n  }),\\n  component: theme => ({\\n    html: {\\n      // base rem value\\n      fontSize: rem(14),\\n      '@screen sm': {\\n        fontSize: rem(15.5), // odd number with .5 to fix chrome alignment\\n      },\\n      '@screen md': {\\n        fontSize: rem(16),\\n      },\\n      '@screen xl': {\\n        fontSize: rem(17.5), // odd number with .5 to fix chrome alignment\\n      },\\n      // style\\n      '@apply text-black links-default': '',\\n      lineHeight: 1.8,\\n    },\\n    body: {\\n      // style\\n      '@apply text-base': '',\\n    },\\n    h1: {\\n      // setup\\n      '@apply h1': '',\\n    },\\n    h2: {\\n      // setup\\n      '@apply h2': '',\\n    },\\n    h3: {\\n      // setup\\n      '@apply h3': '',\\n    },\\n    h4: {\\n      // setup\\n      '@apply h4': '',\\n    },\\n    h5: {\\n      // setup\\n      '@apply h5': '',\\n    },\\n    h6: {\\n      // setup\\n      '@apply h6': '',\\n    },\\n    p: {\\n      // setup\\n      '@apply p': '',\\n      // @FIX NESTED APPLY\\n      '@apply mb-lc': {},\\n    },\\n    strong: {\\n      // styles\\n      fontWeight: theme('fontWeight.semibold'),\\n    },\\n    blockquote: {\\n      // styles\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.3'),\\n      '@apply mt-fc mb-lc': {},\\n    },\\n    code: {\\n      // styles\\n      fontSize: '.875em',\\n      color: '#7567F8',\\n    },\\n    '.links-inverse': {\\n      // styles\\n      code: {\\n        color: theme('colors.white'),\\n        opacity: '0.75',\\n      },\\n    },\\n    'ul:not([class]), ol:not([class])': {\\n      // style\\n      marginBottom: theme('spacing.3'),\\n      '@apply mb-lc': {},\\n      '> li': {\\n        position: 'relative',\\n        marginBottom: theme('spacing.3'),\\n        '@apply mb-lc': {},\\n        '&:before': {\\n          position: 'absolute',\\n          display: 'inline-block',\\n          left: '0',\\n        },\\n        '> ul:not([class]), > ol:not([class])': {\\n          marginTop: theme('spacing.3'),\\n        },\\n      },\\n    },\\n    'ul:not([class])': {\\n      // style\\n      '> li': {\\n        paddingLeft: '1.25rem',\\n        '&:before': {\\n          content: '\\\"\\\\\\\\2022\\\"',\\n          color: theme('colors.gray.600'),\\n        },\\n      },\\n    },\\n    'ol:not([class])': {\\n      // style\\n      '> li': {\\n        counterIncrement: 'ol-counter',\\n        paddingLeft: '1.5rem',\\n        '&:before': {\\n          content: 'counter(ol-counter) \\\".\\\"',\\n          color: theme('colors.gray.600'),\\n        },\\n      },\\n    },\\n    dl: {\\n      // style\\n      marginBottom: theme('spacing.3'),\\n      '@apply mb-lc': {},\\n    },\\n    hr: {\\n      // style\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.6'),\\n      '@apply mt-fc mb-lc': {},\\n    },\\n    'figure, .figure': {\\n      // style\\n      marginTop: theme('spacing.6'),\\n      marginBottom: theme('spacing.6'),\\n      '@apply mt-fc mb-lc': {},\\n    },\\n    'figcaption, .figcaption': {\\n      // style\\n      marginTop: theme('spacing.3'),\\n      fontSize: rem(14),\\n      lineHeight: theme('lineHeight.snug'),\\n    },\\n  }),\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupButton = require('components/snippets/themes/markup-button').default\\nconst markupDrop = require('components/snippets/themes/markup-drop').default\\nconst markupOverlay = require('components/snippets/themes/markup-overlay').default\\nconst markupCard = require('components/snippets/themes/markup-card').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Button\\n</div>\\n${markupButton()}\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Drop\\n</div>\\n${markupDrop()}\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Overlay\\n</div>\\n${markupOverlay()}\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Card\\n</div>\\n${markupCard()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst spinner = require('components/snippets/spinner').default\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst switchDefault = require('components/snippets/classes/form-switch-default').default\\nconst iconLocate = require('components/snippets/icons').iconLocate\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"google-locator\\\">\\n\\n  <div class=\\\"google-locator_aside\\\">\\n\\n    <div class=\\\"google-locator_aside_head\\\">\\n\\n      <div class=\\\"form\\\">\\n        <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n          <div class=\\\"w-full\\\">\\n            <div class=\\\"group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-item rounded-l-md ${inputDefaultGroup()}\\\" placeholder=\\\"Search\\\" data-xt-google-locator-search-input>\\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefaultGroup()}\\\" data-xt-google-locator-locate-btn=\\\"Locate\\\">\\n                ${iconLocate({ classes: 'icon-lg' })}\\n              </button>\\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-md rounded-r-md ${btnDefaultGroup()}\\\" data-xt-google-locator-search-btn>\\n                ${iconSearch({ classes: 'icon-lg' })}\\n              </button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"w-full\\\">\\n            <label class=\\\"form-label-check\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check form-radio ${switchDefault()}\\\" name=\\\"google-locator-options\\\" value=\\\"\\\" checked data-xt-google-locator-option/>\\n              <span class=\\\"ml-3\\\">All types</span>\\n            </label>\\n          </div>\\n\\n          <div class=\\\"w-full\\\">\\n            <label class=\\\"form-label-check\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check form-radio ${switchDefault()}\\\" name=\\\"google-locator-options\\\" value=\\\"restaurant\\\" data-xt-google-locator-option/>\\n              <span class=\\\"ml-3\\\">Restaurant</span>\\n            </label>\\n          </div>\\n\\n          <div class=\\\"w-full\\\">\\n            <label class=\\\"form-label-check\\\" for=\\\"google-locator-options-school\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check form-radio ${switchDefault()}\\\" id=\\\"google-locator-options-school\\\" name=\\\"google-locator-options\\\" value=\\\"school\\\" data-xt-google-locator-option/>\\n              <span class=\\\"ml-3\\\">School</span>\\n            </label>\\n          </div>\\n\\n          <div class=\\\"w-full\\\">\\n            <label class=\\\"form-label-check\\\" for=\\\"google-locator-options-fav\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"form-check form-switch ${switchDefault()}\\\" id=\\\"google-locator-options-fav\\\" name=\\\"google-locator-fav\\\" value=\\\"fav\\\" data-xt-google-locator-option/>\\n              <span class=\\\"ml-3\\\">Favourite</span>\\n            </label>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"google-locator_aside_body\\\" data-xt-google-locator-results>\\n\\n      <div class=\\\"google-locator_result\\\" data-xt-google-locator-result-initial>\\n        Insert your position and find a place near you\\n      </div>\\n      <div class=\\\"google-locator_result\\\" data-xt-google-locator-result-error>\\n        Request timed out, retry\\n      </div>\\n      <div class=\\\"google-locator_result\\\" data-xt-google-locator-result-noplace>\\n        Not a valid place\\n      </div>\\n      <div class=\\\"google-locator_result\\\" data-xt-google-locator-result-empty>\\n        No place found\\n      </div>\\n      <div class=\\\"google-locator_result\\\" data-xt-google-locator-result-founds>\\n        <span data-xt-google-locator-result-found></span>\\n        places found\\n      </div>\\n\\n      <div class=\\\"google-locator_items\\\" data-xt-google-locator-items>\\n\\n        <script type=\\\"text/x-template\\\">\\n          <div class=\\\"google-locator_item\\\" tabindex=\\\"-1\\\">\\n            <div class=\\\"list\\\">\\n              <div class=\\\"google-locator_item_content\\\">\\n                <div class=\\\"google-locator_item_name\\\" data-xt-google-locator-data=\\\"name\\\"></div>\\n                <address class=\\\"google-locator_item_address\\\" data-xt-google-locator-data=\\\"address\\\"></address>\\n                <div class=\\\"google-locator_item_additional\\\" data-xt-google-locator-data=\\\"additional\\\"></div>\\n              </div>\\n              <a href=\\\"#\\\" target=\\\"_blank\\\" class=\\\"google-locator_item_directions\\\" title=\\\"directions\\\" data-xt-google-locator-data=\\\"direction\\\">\\n                <span class=\\\"google-locator_item_directions_icon\\\">\\n                  ${iconSearch({ classes: 'icon-lg' })}\\n                </span>\\n                <span data-xt-google-locator-data=\\\"distance\\\"></span>\\n              </a>\\n            </div>\\n          </div>\\n        </script>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"google-locator_main\\\">\\n    <div class=\\\"google-locator_main_inner\\\">\\n\\n      <div class=\\\"google-locator_main_map\\\" data-xt-google-locator-map>\\n      </div>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()} google-locator_repeat\\\" data-xt-google-locator-repeat>\\n        Search in this area\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"loader bg-white bg-opacity-75 toggle\\\" data-xt-google-locator-loader>\\n    <span class=\\\"spinner spinner-animated text-white\\\">\\n      ${spinner({})}\\n    </span>\\n  </div>\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupStores = require('components/snippets/themes/markup-stores').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${markupStores()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupStores = require('components/snippets/themes/markup-stores').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${markupStores()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Icons\\\"\\ntitle: \\\"Content\\\"\\ndate: \\\"2030-10-10\\\"\\n---\\n\\n## Variant\\n\\nUse **tailwind classes** to assign variant (e.g. [text-color](https://tailwindcss.com/docs/text-color), [opacity](https://tailwindcss.com/docs/opacity)).\\n\\n\\n[[notePrimary]]\\n| Svg needs `fill: currentColor` or `stroke: currentColor` to have parent text color.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/icons/variant\\\">\\n  </demovanilla>\\n</demo>\\n\\nUse **tailwind classes** to assign styles (e.g. [text-color](https://tailwindcss.com/docs/text-color), [text-opacity](https://tailwindcss.com/docs/text-opacity)).\\n\\nText styles on **parent elements** are applied when **inerithed**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/icons/variant-inverse\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Size\\n\\nUse **component classes** to assign size. You can add **additional size** for example `.icon-xs`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ---------------------------- | -----------------| ----------------------------- |\\n| Component                  | `.icon-sm`       | `icon-sm`                | Size small            |\\n| Component                  | `.icon-md`       | `icon-md`                | Size medium            |\\n| Component                  | `.icon-lg`       | `icon-lg`                | Size large            |\\n\\n</div>\\n\\n[[noteDefault]]\\n| **Size bigger** than `1em` **has negative margin** to not enlarge the parent element (e.g. button).\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/icons/size\\\">\\n  </demovanilla>\\n</demo>\\n\\nOtherwise use **tailwind classes** to assign size (e.g. [font-size](https://tailwindcss.com/docs/font-size), [stroke-width](https://tailwindcss.com/docs/stroke-width)).\\n\\n## Button\\n\\nRefer to [button icons and alignment](/components/core/button/content#icons-and-alignment).\\n\";","export default \"// Vanilla Iframe js\\n\";","export default \".demo--toggle-jump {\\n  opacity: .5;\\n  transition: opacity theme('transitionDuration.500') theme('transitionTimingFunction.out');\\n  &.active {\\n    opacity: 1;\\n    transition: opacity theme('transitionDuration.500') theme('transitionTimingFunction.in');\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-bottom\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-x loader-x-animated loader-size-bottom\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst markupMegamenus = require('components/snippets/themes/markup-megamenus').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n${markupMegamenus()}\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"module.exports = {\\n  utility: {\\n    '.sticky-disable': {\\n      // setup\\n      '@apply xt-disable': '',\\n      position: 'relative !important',\\n      top: 'initial !important',\\n      left: 'initial !important',\\n      right: 'initial !important',\\n      bottom: 'initial !important',\\n      '&.xt-clone': {\\n        display: 'none !important',\\n      },\\n      '&:not(.xt-clone)': {\\n        position: 'relative !important',\\n      },\\n    },\\n  },\\n  component: theme => ({\\n    '.xt-sticky': {\\n      // setup\\n      '&.xt-clone': {\\n        pointerEvents: 'none',\\n        position: 'relative',\\n        visibility: 'hidden',\\n        top: '0',\\n        width: '100%',\\n      },\\n      '&:not(.xt-clone)': {\\n        position: 'relative',\\n        width: '100%',\\n      },\\n      '&.xt-clone:not(.active)': {\\n        position: 'absolute',\\n      },\\n      '&:not(.xt-clone):not(.active)': {\\n        position: 'relative',\\n      },\\n      '.show-sticky': {\\n        display: 'none',\\n      },\\n      '.hide-sticky': {\\n        display: 'block',\\n      },\\n      '&:not(.xt-clone).active': {\\n        position: 'fixed',\\n        zIndex: theme('zIndex.sticky'),\\n        width: '100%',\\n        '.show-sticky': {\\n          display: 'block',\\n        },\\n        '.hide-sticky': {\\n          display: 'none',\\n        },\\n      },\\n    },\\n    '.xt-sticky-absolute': {\\n      // setup\\n      '&.xt-clone': {\\n        position: 'relative',\\n      },\\n      '&.xt-clone:not(.active)': {\\n        position: 'relative',\\n      },\\n      '&:not(.xt-clone):not(.active)': {\\n        position: 'relative',\\n      },\\n      '&.xt-fixed:not(.xt-clone):not(.active)': {\\n        position: 'absolute',\\n        width: '100%',\\n      },\\n    },\\n    '.xt-sticky-fixed': {\\n      // setup\\n      '&.xt-clone': {\\n        position: 'relative',\\n      },\\n      '&.xt-clone:not(.active)': {\\n        position: 'relative',\\n      },\\n      '&:not(.xt-clone):not(.active)': {\\n        position: 'relative',\\n      },\\n      '&.xt-fixed:not(.xt-clone):not(.active)': {\\n        position: 'fixed',\\n        zIndex: theme('zIndex.sticky'),\\n        width: '100%',\\n      },\\n    },\\n    '.xt-sticky-fixed-always': {\\n      // setup\\n      '&.xt-clone': {\\n        position: 'absolute',\\n      },\\n      '&.xt-clone:not(.active)': {\\n        position: 'absolute',\\n      },\\n      '&:not(.xt-clone):not(.active)': {\\n        position: 'fixed',\\n        zIndex: theme('zIndex.sticky'),\\n        width: '100%',\\n      },\\n      '&.xt-fixed:not(.xt-clone):not(.active)': {\\n        position: 'fixed',\\n        zIndex: theme('zIndex.sticky'),\\n        width: '100%',\\n      },\\n    },\\n    '.sticky-moving': {\\n      // animation\\n      transitionProperty: 'top, bottom, opacity',\\n      transitionDuration: theme('transitionDuration.500'),\\n      transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      '&.inverse': {\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n      },\\n    },\\n    '.sticky-hide': {\\n      // styles\\n      opacity: '0',\\n    },\\n    '.sticky-disable': {\\n      // styles\\n      opacity: '1 !important',\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-8/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-500\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-4/12\\\">\\n    <div class=\\\"w-full h-12 bg-gray-300\\\"></div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-auto flex-1\\\">\\n    <div class=\\\"w-full py-3 px-4 text-sm bg-gray-500\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in laoreet tellus, nec commodo massa. Aenean ut ex at ex pellentesque efficitur.\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\nimport JSON5 from 'json5'\\n\\n/**\\n * InfiniteScroll\\n */\\nclass InfiniteScroll {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    const self = this\\n    self.object = object\\n    self.optionsCustom = optionsCustom\\n    self.componentName = self.constructor.componentName\\n    Xt.destroyAndInit(self)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init\\n   */\\n  init() {\\n    const self = this\\n    // options\\n    self.options = Xt.merge([self.constructor.optionsDefault, self.optionsCustom])\\n    // vars\\n    self.current = self.options.min\\n    self.classes = self.options.class ? [...self.options.class.split(' ')] : []\\n    self.classesNoMore = self.options.classNoMore ? [...self.options.classNoMore.split(' ')] : []\\n    self.classesReset = self.options.classReset ? [...self.options.classReset.split(' ')] : []\\n    // elements\\n    self.scrollElement = self.object.querySelector(self.options.elements.scroll)\\n    self.triggerElement = self.object.querySelector(self.options.elements.trigger)\\n    self.resetElement = self.object.querySelector(self.options.elements.reset)\\n    self.itemsElement = self.object.querySelector(self.options.elements.items)\\n    // unload\\n    const unloadHandler = Xt.dataStorage.put(window, 'on.xt.unload' + '/' + self.namespace, self.eventUnloadHandler.bind(self))\\n    addEventListener('unload', unloadHandler)\\n    // beforeunload\\n    const beforeunloadHandler = Xt.dataStorage.put(window, 'on.xt.beforeunload' + '/' + self.namespace, self.eventBeforeunloadHandler.bind(self))\\n    addEventListener('beforeunload', beforeunloadHandler)\\n    // scroll\\n    const scrollHandler = Xt.dataStorage.put(window, 'on.xt.scroll' + '/' + self.namespace, self.eventScrollHandler.bind(self))\\n    addEventListener('scroll', scrollHandler)\\n    // setCurrent\\n    self.setCurrent()\\n    if (self.itemsElement) {\\n      const found = self.itemsElement.querySelector(self.options.elements.item)\\n      if (found) {\\n        found.setAttribute('data-xt-infinitescroll-item-first', self.current)\\n      }\\n    }\\n    // resume state\\n    const state = history.state\\n    if (state && state.scrollResume) {\\n      document.scrollingElement.scrollTop = state.scrollResume\\n      // debug\\n      if (Xt.debug === true) {\\n        console.debug('Xt.debug: xt-infinitescroll scrollResume', state.scrollResume)\\n      }\\n    }\\n    // paginate\\n    self.paginate()\\n    // class\\n    if (self.current > self.options.min) {\\n      self.object.classList.add(...self.classesReset)\\n    }\\n    // trigger\\n    if (self.options.events.trigger) {\\n      self.triggerElement.addEventListener(self.options.events.trigger, self.eventTrigger.bind(self))\\n    }\\n    // reset\\n    if (self.options.events.reset) {\\n      self.resetElement.addEventListener(self.options.events.reset, self.eventReset.bind(self))\\n    }\\n    // initialized class\\n    self.object.classList.add(self.componentName)\\n    // @FIX raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // listener dispatch\\n      self.object.dispatchEvent(new CustomEvent('init.xt.infinitescroll'))\\n    })\\n  }\\n\\n  //\\n  // handler\\n  //\\n\\n  /**\\n   * unload handler\\n   */\\n  eventUnloadHandler() {\\n    const self = this\\n    self.eventUnload()\\n  }\\n\\n  /**\\n   * beforeunload handler\\n   */\\n  eventBeforeunloadHandler() {\\n    const self = this\\n    self.eventBeforeunload()\\n  }\\n\\n  /**\\n   * scroll handler\\n   * @param {Event} e\\n   */\\n  eventScrollHandler(e = null) {\\n    const self = this\\n    Xt.eventDelay(\\n      e,\\n      self.object,\\n      () => {\\n        // handler\\n        self.eventScroll(e)\\n      },\\n      self.componentNamespace + 'Scroll'\\n    )\\n  }\\n\\n  //\\n  // methods\\n  //\\n\\n  /**\\n   * trigger\\n   */\\n  eventTrigger() {\\n    const self = this\\n    // request\\n    self.request()\\n  }\\n\\n  /**\\n   * reset\\n   */\\n  eventReset() {\\n    const self = this\\n    const options = self.options\\n    // request\\n    self.setCurrent(options.min)\\n    window.location = self.url.href\\n  }\\n\\n  /**\\n   * unload\\n   */\\n  eventUnload() {\\n    const self = this\\n    // save scroll position\\n    if (self.scrollResume) {\\n      document.scrollingElement.scrollTop = 0\\n    }\\n  }\\n\\n  /**\\n   * unload\\n   */\\n  eventBeforeunload() {\\n    const self = this\\n    // save scroll position\\n    if (self.scrollResume) {\\n      history.replaceState({ scrollResume: self.scrollResume }, '', self.url.href)\\n    }\\n  }\\n\\n  /**\\n   * scroll\\n   */\\n  eventScroll() {\\n    const self = this\\n    // not if requesting\\n    if (!self.object.classList.contains(self.classes[0])) {\\n      // scroll\\n      const top = document.scrollingElement.scrollTop\\n      const height = window.innerHeight\\n      // current page\\n      let found = self.itemsElement.querySelector(self.options.elements.item)\\n      const scrollInitial = found.offsetTop\\n      const items = self.itemsElement.querySelectorAll('[data-xt-infinitescroll-item-first]')\\n      for (const item of items) {\\n        const itemTop = item.offsetTop\\n        if (top > itemTop - height) {\\n          found = item\\n        }\\n      }\\n      self.setCurrent(parseFloat(found.getAttribute('data-xt-infinitescroll-item-first')))\\n      // save scroll position\\n      self.scrollResume = top + scrollInitial - found.offsetTop\\n      // replace state\\n      const linkOrigin = self.url.origin || self.url.protocol + '//' + self.url.host\\n      if (linkOrigin === location.origin) {\\n        if (self.url.href !== location.href) {\\n          history.replaceState(null, '', self.url.href)\\n          if (Xt.debug === true) {\\n            console.debug('Xt.debug: xt-infinitescroll history replace', self.url.href)\\n          }\\n        }\\n      } else {\\n        if (Xt.debug === true) {\\n          console.error('Xt.debug: xt-infinitescroll cannot set history with different origin', linkOrigin)\\n        }\\n      }\\n      // request if on bottom\\n      if (self.options.events.scroll) {\\n        const bottom = self.scrollElement.offsetTop + self.scrollElement.offsetHeight\\n        if (top > bottom - height) {\\n          self.request()\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * request\\n   */\\n  request() {\\n    const self = this\\n    const options = self.options\\n    // not if requesting\\n    if (!self.object.classList.contains(self.classes[0])) {\\n      // current\\n      if (self.current < options.max) {\\n        self.current = self.current > options.max ? options.max : self.current\\n        // class\\n        self.object.classList.add(...self.classes)\\n        // params\\n        self.setCurrentNext()\\n        // request\\n        const request = new XMLHttpRequest()\\n        request.open('GET', self.url.href, true)\\n        request.onload = () => {\\n          // debug\\n          if (Xt.debug === true) {\\n            console.debug('Xt.debug: xt-infinitescroll request success', request, self.url)\\n          }\\n          // response\\n          self.response(request)\\n        }\\n        request.onerror = () => {\\n          // debug\\n          if (Xt.debug === true) {\\n            console.debug('Xt.debug: xt-infinitescroll request failed', request)\\n          }\\n          // response\\n          self.response(request)\\n        }\\n        request.send()\\n      }\\n    }\\n  }\\n\\n  /**\\n   * response\\n   * @param {XMLHttpRequest|Object} request Html response\\n   */\\n  response(request) {\\n    const self = this\\n    // request\\n    if (request.status >= 200 && request.status <= 300) {\\n      self.success(request)\\n    } else {\\n      self.error(request)\\n    }\\n  }\\n\\n  /**\\n   * success\\n   * @param {XMLHttpRequest|Object} request Html response\\n   */\\n  success(request) {\\n    const self = this\\n    // set substitute\\n    const html = document.createElement('html')\\n    html.innerHTML = request.responseText.trim()\\n    const items = html.querySelector(self.options.elements.items)\\n    if (items) {\\n      self.populate(items)\\n    } else {\\n      // fake\\n      setTimeout(() => {\\n        self.populate(self.object.querySelector(self.options.elements.items).cloneNode(true))\\n      }, 1000)\\n    }\\n  }\\n\\n  /**\\n   * error\\n   */\\n  error() {\\n    const self = this\\n    // class\\n    self.object.classList.remove(...self.classes)\\n  }\\n\\n  /**\\n   * populate\\n   * @param {Node|HTMLElement|EventTarget|Window} items Items to add\\n   */\\n  populate(items) {\\n    const self = this\\n    // current page\\n    const found = items.querySelector(self.options.elements.item)\\n    found.setAttribute('data-xt-infinitescroll-item-first', self.current)\\n    // populate dom\\n    for (const item of items.querySelectorAll(':scope > *')) {\\n      self.itemsElement.querySelector(':scope > *:last-child').after(item)\\n    }\\n    // class\\n    self.object.classList.remove(...self.classes)\\n    // paginate\\n    self.paginate()\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('replace.xt.infinitescroll'))\\n  }\\n\\n  /**\\n   * paginate\\n   */\\n  paginate() {\\n    const self = this\\n    const options = self.options\\n    // paginate\\n    for (const el of self.object.querySelectorAll('[data-xt-infinite-scroll-tot]')) {\\n      el.innerHTML = options.max\\n    }\\n    for (const el of self.object.querySelectorAll('[data-xt-infinite-scroll-num]')) {\\n      el.innerHTML = self.current\\n    }\\n    // class\\n    if (self.current >= options.max) {\\n      self.object.classList.add(...self.classesNoMore)\\n    }\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * setCurrent\\n   * @param {Number} page Page number to set\\n   */\\n  setCurrent(page = null) {\\n    const self = this\\n    const options = self.options\\n    // check url\\n    const url = new URL(location.href)\\n    const searchParams = new URLSearchParams(url.search)\\n    // set current\\n    const get = searchParams.get(options.get)\\n    self.current = page !== null ? page : get ? parseFloat(get) : self.current\\n    searchParams.set(options.get, self.current)\\n    // set url\\n    url.search = searchParams.toString()\\n    self.url = url\\n  }\\n\\n  /**\\n   * setCurrentNext\\n   */\\n  setCurrentNext() {\\n    const self = this\\n    const options = self.options\\n    // check url\\n    const url = new URL(location.href)\\n    const searchParams = new URLSearchParams(url.search)\\n    // set current\\n    const get = searchParams.get(options.get)\\n    self.current = get ? parseFloat(get) + options.add : self.current + options.add\\n    searchParams.set(options.get, self.current)\\n    // set url\\n    url.search = searchParams.toString()\\n    self.url = url\\n  }\\n\\n  /**\\n   * destroy\\n   */\\n  destroy() {\\n    const self = this\\n    // class\\n    removeEventListener('unload', self.eventUnloadHandler.bind(self))\\n    removeEventListener('beforeunload', self.eventBeforeunloadHandler.bind(self))\\n    removeEventListener('scroll', self.eventScrollHandler.bind(self))\\n    // set self\\n    Xt.remove(self.componentName, self.object)\\n    // listener dispatch\\n    self.object.dispatchEvent(new CustomEvent('destroy.xt.infinitescroll'))\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nInfiniteScroll.componentName = 'xt-infinite-scroll'\\nInfiniteScroll.optionsDefault = {\\n  // infiniteScroll\\n  get: 'page',\\n  // element\\n  elements: {\\n    scroll: '[data-xt-infinite-scroll-scroll]',\\n    trigger: '[data-xt-infinite-scroll-trigger]',\\n    reset: '[data-xt-infinitescroll-reset]',\\n    items: '[data-xt-infinite-scroll-items]',\\n    item: ':scope > *',\\n  },\\n  // class\\n  class: 'infinite-scroll-loading',\\n  classNoMore: 'infinite-scroll-nomore',\\n  classReset: 'infinite-scroll-reset',\\n  // quantity\\n  min: 1,\\n  max: 'Infinity',\\n  add: 1,\\n  // event\\n  events: {\\n    scroll: true,\\n    trigger: 'click',\\n    reset: 'click',\\n  },\\n}\\n\\n//\\n// export\\n//\\n\\nXt.InfiniteScroll = InfiniteScroll\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.InfiniteScroll.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.InfiniteScroll.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.InfiniteScroll(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Layout\\\"\\ntitle: \\\"fashion-gallery-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-08-14\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-gallery-v1\\\"\\n]\\n---\\n\";","export default \".demo--scroll-delay {\\n  .card {\\n    /* mode-infinite */\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n    &.inverse {\\n      @apply translate-x-4;\\n    }\\n    /* in */\\n    &.fade-in {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    /* out */\\n    &.fade-out {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\nconst cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-1 items-center\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-first-element\\\">\\n    1st element\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-first-target\\\">\\n    1st target\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-add\\\">\\n    Add\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-remove\\\">\\n    Remove\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-block\\\">\\n    Block/Unblock\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-reinit\\\">\\n    Reinit\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-restart\\\">\\n    Restart\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-destroy\\\">\\n    Destroy\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--drop-events-unmount\\\">\\n    Unmount\\n  </button>\\n</div>\\n\\n<br/>\\n\\n<div class=\\\"list list-2 items-center inline-flex\\\" id=\\\"demo--drop-events\\\" title=\\\"Object\\\">\\n\\n  <div class=\\\"drop-container\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      Element 0\\n    </button>\\n\\n    <div class=\\\"drop\\\" title=\\\"Target 0\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"drop-container\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      Element 1\\n    </button>\\n\\n    <div class=\\\"drop\\\" title=\\\"Target 1\\\">\\n      <div class=\\\"drop-inner\\\">\\n        <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n          <nav class=\\\"list flex-col\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n            </a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Dolor sit\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n              Amet\\n            </button>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"card ${cardDefault()} mt-6\\\">\\n  <div class=\\\"card-sm overflow-y-auto overflow-x-hidden overflow-sub max-h-56\\\" id=\\\"demo--drop-events-log\\\">\\n  </div>\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import { Xt } from 'xtendui'\\nimport gsap from 'gsap'\\n\\n/**\\n * listing-page\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-listing-v1 body .listing-page_item', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // markup\\n\\n    if (!object.querySelector('.media_mask')) {\\n      object.querySelector('.media-container').prepend(Xt.createElement('<span class=\\\"media_mask\\\"></span>'))\\n    }\\n\\n    // vars\\n\\n    const imgScaleContainer = -0.04\\n    const imgScale = 0.08\\n\\n    const maskOpacityOn = 0.2\\n    const maskOpacityOff = 0.2\\n    const maskOpacityDone = 0.1\\n\\n    const titleY = -10\\n\\n    // enter\\n\\n    const eventEnter = e => {\\n      const tr = e.target\\n      // img\\n      const img = tr.querySelector('.media-container')\\n      gsap.to(img, { scale: 1 + imgScaleContainer, duration: Xt.vars.timeSmall, ease: 'quart.out' })\\n      const imgInner = tr.querySelector('.media-inner')\\n      gsap.to(imgInner, { scale: 1 + imgScale, duration: Xt.vars.timeBig, ease: 'quart.out' })\\n      // mask\\n      const mask = tr.querySelector('.media_mask')\\n      gsap.set(mask, { height: 0, y: img.offsetHeight, skewY: 0, opacity: maskOpacityOff })\\n      gsap.to(mask, { height: '150%', y: 0, opacity: maskOpacityOn, duration: Xt.vars.timeSmall, ease: 'quart.out' }) // @FIX to cover height: '150%'\\n      gsap.to(mask, { skewY: -10, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' }).eventCallback('onComplete', () => {\\n        gsap.to(mask, { skewY: 0, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' })\\n      })\\n      gsap.to(mask, { opacity: maskOpacityDone, duration: Xt.vars.timeMedium, ease: 'quart.out', delay: Xt.vars.timeSmall })\\n      // item\\n      const item = tr.querySelector('.card-item')\\n      if (item) {\\n        gsap.to(item, { y: titleY, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n      }\\n    }\\n\\n    object.addEventListener('mouseenter', eventEnter)\\n\\n    // leave\\n\\n    const eventLeave = e => {\\n      const tr = e.target\\n      // img\\n      const img = tr.querySelector('.media-container')\\n      gsap.to(img, { scale: 1, duration: Xt.vars.timeSmall, ease: 'quart.out' })\\n      const imgInner = tr.querySelector('.media-inner')\\n      gsap.to(imgInner, { scale: 1, duration: Xt.vars.timeBig, ease: 'quart.out' })\\n      // mask\\n      const mask = tr.querySelector('.media_mask')\\n      gsap.to(mask, { height: '50%', y: '-100%', opacity: maskOpacityOff, duration: Xt.vars.timeSmall, ease: 'quart.out' }) // @FIX to cover height: '50%', y: '-100%'\\n      gsap.to(mask, { skewY: 10, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' }).eventCallback('onComplete', () => {\\n        gsap.to(mask, { skewY: 0, duration: Xt.vars.timeSmall / 2, ease: 'quart.out' })\\n      })\\n      // item\\n      const item = tr.querySelector('.card-item')\\n      if (item) {\\n        gsap.to(item, { y: 0, duration: Xt.vars.timeSmall, ease: 'expo.out' })\\n      }\\n    }\\n\\n    object.addEventListener('mouseleave', eventLeave)\\n\\n    // unmount\\n\\n    const unmount = () => {}\\n    return unmount\\n  },\\n})\\n\\n/**\\n * scroll\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-listing-v1 body #gatsby_body-inner', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    object = document.documentElement\\n\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      // the same css and js\\n      elements: '.scroll-item, .listing-page_item',\\n      delayOn: current => {\\n        return Math.min((current + 1) * 75, 300)\\n      },\\n      delayOff: (current, total) => {\\n        return Math.min((total - (current + 1)) * 75, 300)\\n      },\\n      distance: 100,\\n    })\\n\\n    // unmount\\n\\n    const unmount = function () {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider demo--slider-expand\\\" data-xt-slider>\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ class: 'active active-toggle demo--toggle-custom-class' }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import React from 'react'\\n\\nimport SEO from 'components/seo'\\nimport Layout from 'components/layout'\\n\\nclass Page extends React.Component {\\n  render() {\\n    const seo = {}\\n    seo.title = '404'\\n    seo.description = 'Page not found'\\n    return (\\n      <Layout seo={seo}>\\n        <SEO title={seo.title} description={seo.description} />\\n        <h1>Error 404</h1>\\n        <p>Page not found.</p>\\n      </Layout>\\n    )\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"#iframe--fashion-hero-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /* slider */\\n\\n    .slides-inner {\\n      @apply duration-none transform-none !important;\\n    }\\n\\n    .slide {\\n      @apply w-full;\\n      position: relative;\\n      /* activation */\\n      display: none;\\n      &.active {\\n        display: block;\\n        z-index: theme('zIndex.active');\\n      }\\n      &.out {\\n        display: block;\\n      }\\n      &.next {\\n        display: block;\\n        z-index: calc(theme('zIndex.active') + 1);\\n      }\\n      &:not(.active) {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n      }\\n    }\\n\\n    .slider-pagination {\\n      display: none;\\n    }\\n\\n    /* hero */\\n\\n    .hero {\\n      @apply w-full;\\n      display: block;\\n      overflow: hidden;\\n    }\\n\\n    .hero_asset {\\n      .media-container {\\n        height: 100vh;\\n        height: calc(var(--vh, 1vh) * 100);\\n        background: theme('colors.accent.900');\\n      }\\n      &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: 2;\\n        left: 0;\\n        bottom: 0;\\n        width: 100%;\\n        height: 75%;\\n        background: linear-gradient(180deg, rgba(0, 0, 0, 0) 33%, rgba(0, 0, 0, 0.3) 100%);\\n      }\\n    }\\n\\n    .hero_content {\\n      @apply container;\\n      position: absolute;\\n      z-index: calc(theme('zIndex.active') + 1);\\n      top: 0;\\n      left: 0;\\n      bottom: 0;\\n      right: 0;\\n      display: flex;\\n      align-items: flex-end;\\n      justify-content: flex-start;\\n      .btn {\\n        @apply btn-lg px-0;\\n      }\\n    }\\n\\n    .hero_content_inner {\\n      @apply block w-full max-w-xl py-10 md:py-16 text-white links-inverse;\\n    }\\n\\n    /* variants */\\n\\n    .hero--big {\\n      .h1 {\\n        font-size: 3rem;\\n        @screen md {\\n          font-size: 5rem;\\n        }\\n      }\\n    }\\n\\n    .hero--center {\\n      .hero_content {\\n        justify-content: center;\\n        text-align: center;\\n      }\\n    }\\n\\n    .hero--middle {\\n      @screen md {\\n        .hero_content {\\n          align-items: center;\\n        }\\n      }\\n    }\\n\\n    .hero--left {\\n      @screen md {\\n        .hero_asset {\\n          &:before {\\n            width: 75%;\\n            height: 100%;\\n            background: linear-gradient(90deg, rgba(0, 0, 0, 0.3) 33%, rgba(0, 0, 0, 0) 100%);\\n          }\\n        }\\n        .hero_content {\\n          justify-content: flex-start;\\n          text-align: left;\\n        }\\n      }\\n    }\\n\\n    .hero--right {\\n      @screen md {\\n        .hero_asset {\\n          &:before {\\n            left: auto;\\n            right: 0;\\n            width: 75%;\\n            height: 100%;\\n            background: linear-gradient(-90deg, rgba(0, 0, 0, 0.3) 33%, rgba(0, 0, 0, 0) 100%);\\n          }\\n        }\\n        .hero_content {\\n          justify-content: flex-end;\\n          text-align: right;\\n        }\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"import path from 'path'\\nconst img = require('components/snippets/img').default\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardDefaultOverlayScreen = require('components/snippets/classes/card-default-overlay-screen').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <div data-xt-overlay>\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      screen image full\\n    </button>\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()} items-center justify-center\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"w-full\\\">\\n              ${img({ classes: 'object-cover object-center', ratio: '100%' })}\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div data-xt-overlay>\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      screen max-w-3xl\\n    </button>\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()} items-center justify-center\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"max-w-3xl\\\">\\n              <div class=\\\"card-md\\\">\\n                <div class=\\\"h4\\\">Lorem ipsum</div>\\n                <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n                <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div data-xt-overlay>\\n    <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n      screen group max-w-3xl\\n    </button>\\n    <div class=\\\"overlay overlay-screen\\\">\\n      <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-inner\\\">\\n\\n          <div class=\\\"card ${cardDefaultOverlayScreen()} items-center justify-center\\\">\\n            <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n              ${iconX()}\\n            </div>\\n            <div class=\\\"max-w-3xl\\\">\\n              <div class=\\\"md:card-group\\\">\\n                <div class=\\\"card-md md:w-7/12\\\">\\n                  <div class=\\\"h4\\\">Lorem ipsum</div>\\n                  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n                </div>\\n                <div class=\\\"md:w-5/12\\\">\\n                  <div class=\\\"card-sm bg-gray-500\\\">\\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n                  </div>\\n                  <div class=\\\"card-md\\\">\\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"w-full\\\">\\n                ${img({ classes: 'object-cover object-center', ratio: '15%' })}\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"module.exports = {\\n  component: theme => ({\\n    '.slider-navigation-sides': {\\n      // setup\\n      cursor: 'none',\\n      position: 'absolute',\\n      zIndex: theme('zIndex.top'),\\n      top: '0',\\n      height: '100%',\\n      '.slider.xt-disabled &': {\\n        display: 'none',\\n      },\\n      // styles\\n      width: '6rem',\\n      // animation\\n      '.slider-navigation-sides-btn > *': {\\n        transitionProperty: 'opacity, transform',\\n        transitionDuration: theme('transitionDuration.200'),\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      },\\n      '&:active': {\\n        '.slider-navigation-sides-btn > *': {\\n          opacity: '.75',\\n          transform: 'scale(0.8)',\\n          transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n        },\\n      },\\n    },\\n    '.slider-navigation-sides-btn': {\\n      // setup\\n      padding: '0',\\n      lineHeight: '0',\\n      // animation\\n      opacity: '0',\\n      transitionProperty: 'opacity',\\n      transitionDuration: theme('transitionDuration.200'),\\n      transitionTimingFunction: theme('transitionTimingFunction.ease.out'),\\n      '&.in': {\\n        opacity: '1',\\n        transitionTimingFunction: theme('transitionTimingFunction.ease.in'),\\n      },\\n    },\\n    '@media (hover: none)': {\\n      '.slider-navigation-sides': {\\n        // styles\\n        width: '3rem',\\n      },\\n      '.slider-navigation-sides-btn': {\\n        // styles\\n        '@apply transform-none !important': '',\\n        position: 'absolute',\\n        top: '50%',\\n        left: '50%',\\n        marginTop: '-0.7rem',\\n        marginLeft: '-0.7rem',\\n        opacity: '1',\\n      },\\n    },\\n  }),\\n}\\n\";","export default \"import path from 'path'\\nconst markupSlider = require('components/snippets/components/markup-slider').default\\nconst indentString = require('indent-string')\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"slider\\\" data-xt-slider=\\\"{ drag: { wrap: true } }\\\">\\n${indentString(markupSlider(), 2)}\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Navigation\\\"\\ntitle: \\\"scroll-to-anchor\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n#### Javascript\\n\\nFollow the [javascript installation](/introduction/getting-started/installation#javascript-installation) instructions and **import the component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/addons/scroll-to-anchor'\\n```\\n\\n## Usage\\n\\nUse this code to create a **scroll to anchor**.\\n\\n[[notePrimary]]\\n| This addon uses [sticky](/components/core/sticky). Visit the component page to import and customize.\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/addons/scroll-to-anchor\\\">\\n  </div>\\n</demo>\\n\\n## Options\\n \\nHere are the main **javascript options**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                    | `elements:Array`                          | `[href*=\\\"#\\\"]:not([aria-controls])`        | Elements nodes (filter out toggle components toggles with `:not([aria-controls])`)            |\\n| Option                    | `matches:Query`                          | `'[href$=\\\"{hash}\\\"]:not([aria-controls])'`        | Matches nodes (filter out toggle components toggles with `:not([aria-controls])`)               |\\n| Option                    | `scrollElements:Array`                          | `[document.scrollingElement]`        | Scroll nodes (ordered parent > child)             |\\n| Option                    | `class:String`                          | `'active'`        | Activation class             |\\n| Option                    | `scrollDelay:Number`                          | `250`        | Delay on scroll checks             |\\n| Option                    | `position(self, scrollingElement):Function`             | `<Function>`        | Positioning function return `Number`             |\\n| Option                    | `scrollDistance:Function`                          | `<Function>`        | Distance from top on scroll checks return `Number`            |\\n| Option                    | `scrollSpace:Function`                          | `<Function>`        | Positioning space from top return `Number`             |\\n\\n</div>\\n\\n## Trigger\\n\\nTrigger events on **DOM elements**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `scroll.trigger.xt.scrolltoanchor`       | `scrollElement` | Scroll event             |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `change.xt.scrolltoanchor`      | `object` | Change event            |\\n| Event                   | `init.xt.scrolltoanchor`           | `object` | Init event             |\\n| Event                   | `destroy.xt.scrolltoanchor`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n\\n</div>\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-scroll-to-anchor=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.ScrollToAnchor(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.ScrollToAnchor(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Animation\\\"\\ntitle: \\\"Animation\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \".demo--scroll-infinite {\\n  .card {\\n    /* mode-infinite */\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n    &.inverse {\\n      @apply translate-x-4;\\n    }\\n    /* in */\\n    &.fade-in {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    /* out */\\n    &.fade-out {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ntitle: \\\"Tests\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst cardPrimary = require('components/snippets/classes/card-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardPrimary()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-x loader-x-animated\\\">\\n      <span class=\\\"filler text-white\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-x loader-x-animated\\\">\\n      <span class=\\\"filler text-white\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group flex-col\\\">\\n\\n    <div class=\\\"group-inner\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-md rounded-tl-md border border-gray-500 ${btnDefaultGroup()}\\\">\\n        ${iconSearch({ classes: 'icon-lg' })}\\n      </button>\\n      <input type=\\\"text\\\" class=\\\"form-item rounded-tr-md border border-l-0 border-gray-500 ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-b-md border border-t-0 border-gray-500 ${btnPrimaryGroup()}\\\">\\n      Lorem ipsum\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"const btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardSlide = require('components/snippets/classes/card-slide').default\\n\\nexport default () => {\\n  return `\\n<div class=\\\"slides\\\">\\n  <nav class=\\\"slides-inner row row-2\\\">\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">1</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">2</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-6/12 sm:w-4/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">3</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()}\\\">\\n        <div class=\\\"h4\\\">4</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"slide w-7/12 sm:w-5/12 opacity-50 active:opacity-100\\\">\\n      <div class=\\\"card ${cardSlide()} h-40\\\">\\n        <div class=\\\"h4\\\">5</div>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n<nav class=\\\"slider-pagination w-full list list-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn ${btnDefault()} xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n  </button>\\n</nav>\\n`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/toggle'\\nimport JSON5 from 'json5'\\n\\n/**\\n * Slider\\n */\\nclass Slider extends Xt.Toggle {\\n  /**\\n   * constructor\\n   * @param {Node|HTMLElement|EventTarget|Window} object Base node\\n   * @param {Object} optionsCustom User options\\n   * @constructor\\n   */\\n  constructor(object, optionsCustom = {}) {\\n    super(object, optionsCustom)\\n  }\\n\\n  //\\n  // init\\n  //\\n\\n  /**\\n   * init elements, targets and currents\\n   */\\n  initScope() {\\n    const self = this\\n    const options = self.options\\n    // dragger\\n    if (options.drag && options.drag.dragger) {\\n      self.dragger = self.object.querySelector(options.drag.dragger)\\n    }\\n    // @FIX performances\\n    self.detail.objectWidth = self.object.offsetWidth\\n    if (self.dragger) {\\n      self.detail.draggerWidth = self.dragger.offsetWidth\\n    }\\n    // targets\\n    self.initScopeTargets()\\n    // autoHeight and keepHeight\\n    if (options.autoHeight) {\\n      self.autoHeight = self.object.querySelector(options.autoHeight)\\n    }\\n    if (options.keepHeight) {\\n      self.keepHeight = self.object.querySelector(options.keepHeight)\\n    }\\n    // initSliderGroup\\n    self.initSliderGroup()\\n    // initSliderPags\\n    self.initSliderPags()\\n    // elements\\n    self.initScopeElements()\\n  }\\n\\n  /**\\n   * init start\\n   * @param {Boolean} saveCurrents\\n   */\\n  initStart(saveCurrents = false) {\\n    const self = this\\n    // @fix raf because after .xt custom listeners\\n    requestAnimationFrame(() => {\\n      // initSliderPos\\n      if (self.dragger) {\\n        self.initSliderPos()\\n      }\\n    })\\n    // super\\n    super.initStart(saveCurrents)\\n  }\\n\\n  /**\\n   * init slider group\\n   */\\n  initSliderGroup() {\\n    const self = this\\n    const options = self.options\\n    // not when empty\\n    if (!self.targets.length) {\\n      return false\\n    }\\n    // @FIX disable slider if not overflowing\\n    self.object.classList.remove('xt-overflow-auto')\\n    // drag wrap\\n    self.destroyWraps()\\n    // @FIX performances\\n    self.detail.objectWidth = self.object.offsetWidth\\n    if (self.dragger) {\\n      self.detail.draggerWidth = self.dragger.offsetWidth\\n      self.detail.draggerLeft = self.dragger.offsetLeft\\n    }\\n    for (const slide of self.targets) {\\n      Xt.dataStorage.set(slide, self.componentNamespace + 'SlideLeft', slide.offsetLeft)\\n      Xt.dataStorage.set(slide, self.componentNamespace + 'SlideWidth', slide.offsetWidth)\\n    }\\n    // width\\n    const draggerWidth = self.dragger ? self.detail.draggerWidth : self.detail.objectWidth\\n    let draggerWidthAvailable = 0\\n    // draggerWidthAvailable\\n    if (options.groupMq) {\\n      const mqs = Object.entries(options.groupMq)\\n      if (mqs.length) {\\n        for (const [key, value] of mqs) {\\n          if (window.matchMedia(key).matches) {\\n            draggerWidthAvailable = draggerWidth * value\\n          }\\n        }\\n      }\\n    }\\n    // groupMqInitial\\n    self.groupMq = []\\n    self.groupMq.push([])\\n    let currentCount = draggerWidthAvailable\\n    let totalCount = draggerWidth\\n    let doneFirst = false\\n    for (const target of self.targets) {\\n      let targetWidth = Xt.dataStorage.get(target, self.componentNamespace + 'SlideWidth')\\n      if (targetWidth === 0) {\\n        // when display none\\n        const container = target.parentNode\\n        const cloned = target.cloneNode(true)\\n        cloned.classList.add('xt-calculating', 'xt-ignore')\\n        container.append(cloned)\\n        targetWidth = cloned.offsetWidth\\n        cloned.remove()\\n      }\\n      currentCount -= targetWidth\\n      totalCount -= targetWidth\\n      // overflow\\n      let currentGroup = self.groupMq.length - 1\\n      if (currentCount < 0 && self.groupMq[currentGroup].length) {\\n        self.groupMq.push([])\\n        currentGroup = self.groupMq.length - 1\\n        currentCount = draggerWidthAvailable\\n        currentCount -= targetWidth\\n      }\\n      // @FIX when dragger not :visible with draggerWidth === 0 groups of 1 slide\\n      if (draggerWidth === 0 && doneFirst) {\\n        self.groupMq.push([])\\n        currentGroup = self.groupMq.length - 1\\n      }\\n      doneFirst = true\\n      // assign group\\n      self.groupMq[currentGroup].push(target)\\n      target.setAttribute('data-xt-group', self.namespace + '-' + currentGroup)\\n    }\\n    self.groupMqInitial = self.groupMq\\n    // @FIX position values negative margins\\n    self.detail.fixNegativeMargin = Xt.dataStorage.get(self.groupMq[0][0], self.componentNamespace + 'SlideLeft')\\n    // @FIX disable slider if not overflowing\\n    if (options.overflowAuto && totalCount >= 0) {\\n      // disable\\n      self.object.classList.add('xt-overflow-auto')\\n    }\\n    // drag wrap\\n    const wrapFirst = []\\n    const wrapLast = []\\n    const wrapMaxWidth = -draggerWidth * (options.drag.wrap - 1)\\n    let wrapLastCountIteration = 0\\n    let wrapFirstCountIteration = 0\\n    if (self.dragger && options.drag.wrap) {\\n      const container = self.targets[0].parentNode\\n      if (Xt.debug === true) {\\n        if (!options.loop) {\\n          console.debug('Xt.debug: Xt.Slider needs \\\"loop\\\": true when using \\\"drag\\\": {\\\"wrap\\\": true}', self.object)\\n        }\\n        if (options.contain) {\\n          console.debug('Xt.debug: Xt.Slider cannot use \\\"contain\\\": true when using \\\"drag\\\": {\\\"wrap\\\": true}', self.object)\\n        }\\n      }\\n      const cloneSlide = slide => {\\n        const cloned = slide.cloneNode(true)\\n        cloned.classList.add('xt-clone', 'xt-wrap')\\n        cloned.classList.remove(...self.classes, ...self.classesIn, ...self.classesOut, ...self.classesInitial, ...self.classesInverse)\\n        return cloned\\n      }\\n      // wrapLast\\n      let wrapLastCount = draggerWidth\\n      const wrapLastFunction = () => {\\n        for (const [i, group] of self.groupMqInitial.entries()) {\\n          wrapLast.push([])\\n          for (const slide of group) {\\n            const cloned = cloneSlide(slide)\\n            wrapLast[wrapLastCountIteration * self.groupMqInitial.length + i].push(cloned)\\n            cloned.setAttribute('data-xt-group', self.namespace + '-' + 'wrapLast' + wrapLastCountIteration + i)\\n            self.targets.push(cloned)\\n            container.append(cloned)\\n            wrapLastCount -= Xt.dataStorage.get(slide, self.componentNamespace + 'SlideWidth')\\n          }\\n          if (wrapLastCount <= wrapMaxWidth) {\\n            return\\n          } else if (i === self.groupMqInitial.length - 1) {\\n            wrapLastCountIteration++\\n            wrapLastFunction()\\n          }\\n        }\\n      }\\n      wrapLastFunction()\\n      // wrapFirst\\n      let wrapFirstCount = draggerWidth\\n      self.groupMqInitial.reverse()\\n      const wrapFirstFunction = () => {\\n        for (const [i, group] of self.groupMqInitial.entries()) {\\n          wrapFirst.unshift([])\\n          for (const slide of group.reverse()) {\\n            const cloned = cloneSlide(slide)\\n            wrapFirst[0].unshift(cloned)\\n            cloned.setAttribute('data-xt-group', self.namespace + '-' + 'wrapFirst' + wrapFirstCountIteration + i)\\n            self.targets.unshift(cloned)\\n            container.prepend(cloned)\\n            wrapFirstCount -= Xt.dataStorage.get(slide, self.componentNamespace + 'SlideWidth')\\n          }\\n          if (wrapFirstCount <= wrapMaxWidth) {\\n            group.reverse() // reset reverse\\n            return\\n          } else if (i === self.groupMqInitial.length - 1) {\\n            wrapFirstCountIteration++\\n            group.reverse() // reset reverse\\n            wrapFirstFunction()\\n          }\\n        }\\n      }\\n      wrapFirstFunction()\\n      self.groupMqInitial.reverse() // reset reverse\\n      // @FIX performances\\n      for (const slide of self.targets) {\\n        // needs to recalculate not only xt-wrap but all targets\\n        Xt.dataStorage.set(slide, self.componentNamespace + 'SlideLeft', slide.offsetLeft)\\n        Xt.dataStorage.set(slide, self.componentNamespace + 'SlideWidth', slide.offsetWidth)\\n      }\\n    }\\n    self.groupMqFirst = wrapFirst\\n    self.groupMqLast = wrapLast\\n    self.groupMq = wrapFirst.concat(self.groupMq.concat(wrapLast))\\n    self.wrapIndex = self.groupMqFirst.length\\n  }\\n\\n  /**\\n   * init slider pagination\\n   */\\n  initSliderPags() {\\n    const self = this\\n    const options = self.options\\n    // not when empty\\n    if (!self.targets.length) {\\n      return false\\n    }\\n    // generate elements\\n    const pags = self.object.querySelectorAll(options.pagination)\\n    if (!pags.length) {\\n      console.error('Error: Xt.Slider pagination not found for', self.object)\\n    }\\n    // clean pags\\n    self.destroyPags()\\n    // pags\\n    self.pags = self.pags ? self.pags : []\\n    for (const [z, pag] of pags.entries()) {\\n      // vars\\n      const cloned = pag.querySelector('[data-xt-pag]')\\n      cloned.classList.add('xt-ignore')\\n      const container = cloned.parentNode\\n      const arr = self.groupMq\\n      // populate\\n      self.pags[z] = []\\n      for (const [i, group] of arr.entries()) {\\n        const item = document.createElement('div') // needed to set innerHTML instead of outerHTML to do html.search also attributes\\n        const clone = cloned.cloneNode(true)\\n        clone.classList.remove('xt-ignore')\\n        clone.classList.add('xt-clone')\\n        item.append(clone)\\n        let html = item.innerHTML\\n        const classes = []\\n        let regex = new RegExp('xt-content', 'ig')\\n        if (html.search(regex) !== -1) {\\n          let replace = ''\\n          for (const slide of group) {\\n            const content = slide.querySelector('.slide-pagination-content')\\n            if (content) {\\n              replace += '<span>' + content.innerHTML + '</span>'\\n            }\\n            const attr = slide.querySelector('[data-slide-pagination-class]')\\n            if (attr) {\\n              classes.push(attr.getAttribute('data-slide-pagination-class'))\\n            }\\n          }\\n          html = html.replace(regex, replace)\\n        }\\n        regex = new RegExp('xt-num', 'ig')\\n        if (html.search(regex) !== -1) {\\n          html = html.replace(regex, (i - self.wrapIndex + 1).toString())\\n        }\\n        regex = new RegExp('xt-tot', 'ig')\\n        if (html.search(regex) !== -1) {\\n          html = html.replace(regex, self.groupMqInitial.length.toString())\\n        }\\n        item.innerHTML = html\\n        if (classes.length) {\\n          item.children[0].classList.add(...classes)\\n        }\\n        item.children[0].setAttribute('data-xt-group', group[0].getAttribute('data-xt-group'))\\n        container.insertBefore(item.children[0], cloned)\\n        item.remove()\\n        self.pags[z][i] = container.querySelectorAll('[data-xt-pag].xt-clone')[i]\\n        // drag wrap\\n        if (self.dragger && options.drag.wrap) {\\n          const min = self.wrapIndex\\n          const max = self.wrapIndex + self.groupMqInitial.length - 1\\n          if (i < min || i > max) {\\n            self.pags[z][i].classList.add('xt-clone', 'xt-wrap', 'hidden')\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * init slider group positions\\n   */\\n  initSliderPos() {\\n    const self = this\\n    const options = self.options\\n    // reset done\\n    for (const slide of self.targets) {\\n      Xt.dataStorage.remove(slide, self.componentNamespace + 'GroupPosDone')\\n    }\\n    // @FIX performances\\n    const draggerWidth = self.detail.draggerWidth\\n    for (const slide of self.targets) {\\n      Xt.dataStorage.set(slide, self.componentNamespace + 'SlideHeight', slide.children[0].offsetHeight)\\n    }\\n    // slides pos\\n    let slidesWidth = 0\\n    for (const slide of self.targets) {\\n      // once per group\\n      if (!Xt.dataStorage.get(slide, self.componentNamespace + 'GroupPosDone')) {\\n        // vars\\n        const targets = self.getTargets(slide)\\n        let slideLeft = Infinity\\n        let slideWidth = 0\\n        let slideHeight = 0\\n        let slideHeightTemp = 0\\n        // vars\\n        for (const target of targets) {\\n          // @FIX performances\\n          const tl = Xt.dataStorage.get(target, self.componentNamespace + 'SlideLeft')\\n          const sl = Xt.dataStorage.get(slide, self.componentNamespace + 'SlideLeft')\\n          slideLeft = tl < slideLeft ? sl : slideLeft\\n          slideWidth += Xt.dataStorage.get(target, self.componentNamespace + 'SlideWidth')\\n          slideHeightTemp = Xt.dataStorage.get(target, self.componentNamespace + 'SlideHeight')\\n          slidesWidth += slideWidth\\n          slideHeight = slideHeightTemp > slideHeight ? slideHeightTemp : slideHeight\\n        }\\n        for (const target of targets) {\\n          Xt.dataStorage.set(target, self.componentNamespace + 'GroupPosDone', true)\\n          Xt.dataStorage.set(target, self.componentNamespace + 'GroupHeight', slideHeight)\\n        }\\n        // pos with alignment\\n        let pos\\n        if (!self.object.classList.contains('xt-overflow-auto')) {\\n          // @FIX disable slider if not overflowing\\n          if (options.align === 'center') {\\n            pos = draggerWidth / 2 - slideLeft - slideWidth / 2\\n          } else if (options.align === 'left') {\\n            pos = -slideLeft\\n          } else if (options.align === 'right') {\\n            pos = draggerWidth - slideLeft - slideWidth\\n          }\\n        }\\n        // save pos\\n        for (const target of targets) {\\n          Xt.dataStorage.set(target, self.componentNamespace + 'GroupPos', pos)\\n        }\\n      }\\n    }\\n    // @FIX xt-wrap clone offsetWidth on resize\\n    for (const target of self.targets) {\\n      target.children[0].style.width = ''\\n    }\\n    // min max pos with contain\\n    if (options.contain && slidesWidth > draggerWidth) {\\n      // only if slides overflow dragger\\n      const slideFirst = self.targets[0]\\n      const slideFirstLeft = Xt.dataStorage.get(slideFirst, self.componentNamespace + 'SlideLeft')\\n      const slideLast = self.targets[self.targets.length - 1]\\n      const slideLastLeft = Xt.dataStorage.get(slideLast, self.componentNamespace + 'SlideLeft')\\n      const slideLastWidth = Xt.dataStorage.get(slideLast, self.componentNamespace + 'SlideWidth')\\n      const min = -slideFirstLeft\\n      const max = -slideLastLeft + draggerWidth - slideLastWidth\\n      for (const group of self.groupMq) {\\n        for (const target of group) {\\n          let pos = Xt.dataStorage.get(target, self.componentNamespace + 'GroupPos')\\n          pos = pos > min ? min : pos\\n          pos = pos < max ? max : pos\\n          Xt.dataStorage.set(target, self.componentNamespace + 'GroupPos', pos)\\n        }\\n      }\\n    }\\n    // @FIX position values negative margins\\n    for (const target of self.targets) {\\n      let pos = Xt.dataStorage.get(target, self.componentNamespace + 'GroupPos')\\n      pos += self.detail.fixNegativeMargin\\n      Xt.dataStorage.set(target, self.componentNamespace + 'GroupPos', pos)\\n    }\\n    // set wheel min and max\\n    if (options.wheel && options.wheel.selector) {\\n      const arr = self.targets.filter(x => !x.classList.contains('xt-wrap'))\\n      const first = arr[0]\\n      const last = arr[arr.length - 1]\\n      self.detail.wheelMin = -Xt.dataStorage.get(first, self.componentNamespace + 'GroupPos')\\n      self.detail.wheelMax = -Xt.dataStorage.get(last, self.componentNamespace + 'GroupPos')\\n    }\\n  }\\n\\n  /**\\n   * init events\\n   */\\n  initEvents() {\\n    super.initEvents()\\n    const self = this\\n    const options = self.options\\n    const dragger = self.dragger\\n    // dragger\\n    if (options.drag && !options.drag.manual) {\\n      // @FIX prevent dragging links and images\\n      for (const img of self.dragger.querySelectorAll('img')) {\\n        const imgnodragHandler = Xt.dataStorage.put(img, 'mousedown/drag' + '/' + self.namespace, self.eventImgnodragHandler.bind(self))\\n        img.addEventListener('mousedown', imgnodragHandler)\\n      }\\n      // drag start\\n      const dragstartHandler = Xt.dataStorage.put(\\n        window,\\n        'mousedown touchstart/drag' + '/' + self.namespace,\\n        self.eventDragstartHandler.bind(self).bind(self, dragger)\\n      )\\n      const events = ['mousedown', 'touchstart']\\n      for (const event of events) {\\n        addEventListener(event, dragstartHandler, { passive: true })\\n      }\\n      // xt-grab\\n      if (!self.disabled) {\\n        dragger.classList.add('xt-grab')\\n      } else {\\n        dragger.classList.remove('xt-grab')\\n      }\\n      // wheel\\n      if (options.wheel && options.wheel.selector) {\\n        const wheel = self.wheel\\n        wheel.addEventListener('wheelstart.xt', self.logicDragstart.bind(self).bind(self, dragger))\\n        wheel.addEventListener('wheel.xt', self.logicDrag.bind(self).bind(self, dragger))\\n        wheel.addEventListener('wheelend.xt', self.logicDragend.bind(self).bind(self, dragger))\\n        wheel.addEventListener('wheelend.xt', self.logicDragfrictionend.bind(self).bind(self, dragger))\\n      }\\n    }\\n    // resize\\n    const reinitHandler = Xt.dataStorage.put(window, 'resize/reinit' + '/' + self.namespace, self.eventReinitHandler.bind(self).bind(self))\\n    addEventListener('resize', reinitHandler)\\n  }\\n\\n  //\\n  // handler\\n  //\\n\\n  /**\\n   * drag fix handler\\n   * @param {Event} e\\n   */\\n  eventImgnodragHandler(e) {\\n    e.preventDefault()\\n  }\\n\\n  /**\\n   * element drag on handler\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  eventDragstartHandler(dragger, e) {\\n    const self = this\\n    const options = self.options\\n    // not when outside dragger\\n    if (!dragger.contains(e.target)) {\\n      return\\n    }\\n    // handler\\n    if (!e.button || e.button !== 2) {\\n      // not right click or it gets stuck\\n      if (self.initial || !self.checkAnim(Xt.arrSingle(dragger))) {\\n        // logic\\n        if (options.eventLimit) {\\n          const eventLimit = self.container.querySelectorAll(options.eventLimit)\\n          if (!Xt.contains(eventLimit, e.target) || e.target.closest('.event-force')) {\\n            self.eventDragstart(dragger, e)\\n          }\\n        } else {\\n          self.eventDragstart(dragger, e)\\n        }\\n        // drag end\\n        const dragendHandler = Xt.dataStorage.put(\\n          window,\\n          'mouseup touchend/drag' + '/' + self.namespace,\\n          self.eventDragendHandler.bind(self).bind(self, dragger)\\n        )\\n        const events = ['mouseup', 'touchend']\\n        for (const event of events) {\\n          addEventListener(event, dragendHandler)\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * element drag off handler\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  eventDragendHandler(dragger, e) {\\n    const self = this\\n    const options = self.options\\n    // logic\\n    if (options.eventLimit) {\\n      const eventLimit = self.container.querySelectorAll(options.eventLimit)\\n      if (!Xt.contains(eventLimit, e.target) || e.target.closest('.event-force')) {\\n        self.eventDragend(dragger, e)\\n      }\\n    } else {\\n      self.eventDragend(dragger, e)\\n    }\\n  }\\n\\n  /**\\n   * element drag on\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  eventDragstart(dragger, e) {\\n    const self = this\\n    // event move\\n    const dragHandler = Xt.dataStorage.put(window, 'mousemove touchmove/drag' + '/' + self.namespace, self.eventDragHandler.bind(self).bind(self, dragger))\\n    const events = ['mousemove', 'touchmove']\\n    for (const event of events) {\\n      addEventListener(event, dragHandler, { passive: false })\\n    }\\n    // logic\\n    self.logicDragstart(dragger, e)\\n  }\\n\\n  /**\\n   * element drag off\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  eventDragend(dragger, e) {\\n    const self = this\\n    // event off\\n    const dragendHandler = Xt.dataStorage.get(window, 'mouseup touchend/drag' + '/' + self.namespace)\\n    const eventsoff = ['mouseup', 'touchend']\\n    for (const event of eventsoff) {\\n      removeEventListener(event, dragendHandler)\\n    }\\n    // event move\\n    const dragHandler = Xt.dataStorage.get(window, 'mousemove touchmove/drag' + '/' + self.namespace)\\n    const eventsmove = ['mousemove', 'touchmove']\\n    for (const event of eventsmove) {\\n      removeEventListener(event, dragHandler)\\n    }\\n    // logic\\n    self.logicDragend(dragger, e)\\n  }\\n\\n  /**\\n   * element drag handler\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  eventDragHandler(dragger, e) {\\n    const self = this\\n    // logic\\n    cancelAnimationFrame(Xt.dataStorage.get(dragger, self.componentNamespace + 'DragFrame'))\\n    Xt.dataStorage.set(\\n      dragger,\\n      self.componentNamespace + 'DragFrame',\\n      requestAnimationFrame(() => {\\n        self.logicDrag(dragger, e)\\n      })\\n    )\\n  }\\n\\n  //\\n  // event\\n  //\\n\\n  /**\\n   * element on\\n   * @param {Node|HTMLElement|EventTarget|Window} element To be activated\\n   * @param {Boolean} force\\n   * @param {Event} e\\n   * @return {Boolean} If activated\\n   */\\n  eventOn(element, force = false, e = null) {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return false\\n    }\\n    // toggle\\n    if (force || (self.checkOn(element) && (!e || !e.type || e.type !== 'off.trigger.xt'))) {\\n      // @FIX targets handler\\n      const slides = self.getTargets(element)\\n      const slide = slides[0]\\n      // only one call per group\\n      if (Xt.dataStorage.get(slide, self.componentNamespace + 'SlideonDone')) {\\n        return false\\n      }\\n      Xt.dataStorage.set(slide, self.componentNamespace + 'SlideonDone', true)\\n      requestAnimationFrame(() => {\\n        Xt.dataStorage.remove(slide, self.componentNamespace + 'SlideonDone')\\n      })\\n      // val\\n      self.detail.dragPos = self.detail.dragPosCurrent = self.detail.dragPosReal = Xt.dataStorage.get(slide, self.componentNamespace + 'GroupPos')\\n      // autoHeight and keepHeight\\n      if (self.autoHeight || (self.keepHeight && self.initial)) {\\n        let slideHeight = Xt.dataStorage.get(slide, self.componentNamespace + 'SlideHeight')\\n        const groupHeight = Xt.dataStorage.get(slide, self.componentNamespace + 'GroupHeight')\\n        slideHeight = groupHeight > slideHeight ? groupHeight : slideHeight\\n        if (slideHeight > 0) {\\n          slideHeight += 'px'\\n          if (self.autoHeight) {\\n            if (self.autoHeight.style.height !== slideHeight) {\\n              if (!self.initial) {\\n                self.autoHeight.classList.add('xt-autoHeight')\\n              }\\n              self.autoHeight.style.height = slideHeight\\n              // listener dispatch\\n              slide.dispatchEvent(new CustomEvent('autoheight.xt'))\\n            }\\n          }\\n          if (self.keepHeight) {\\n            if (self.initial) {\\n              self.keepHeight.style.height = slideHeight\\n            }\\n          }\\n        }\\n      }\\n      // dragger\\n      const dragger = self.dragger\\n      if (dragger && !options.drag.manual) {\\n        // prevent alignment animation\\n        dragger.classList.remove('duration-none')\\n        // initial or resizing\\n        if (self.initial) {\\n          // prevent alignment animation\\n          dragger.classList.add('duration-none')\\n          requestAnimationFrame(() => {\\n            dragger.classList.remove('duration-none')\\n          })\\n        }\\n        // drag position\\n        if (!options.drag.manual) {\\n          dragger.style.transform = 'translateX(' + self.detail.dragPos + 'px)'\\n        }\\n        // disable links not active slide\\n        Xt.animTimeout(\\n          dragger,\\n          () => {\\n            if (options.jump) {\\n              if (options.jumpOverflow) {\\n                const draggerTranslate = Xt.getTranslate(self.dragger)[0]\\n                for (const target of self.targets) {\\n                  const slideLeft = Xt.dataStorage.get(target, self.componentNamespace + 'SlideLeft')\\n                  const slideWidth = Xt.dataStorage.get(target, self.componentNamespace + 'SlideWidth')\\n                  const slideBound = slideLeft + slideWidth\\n                  if (slideLeft < -Math.ceil(draggerTranslate) || slideBound > self.detail.draggerWidth - draggerTranslate) {\\n                    target.classList.add('xt-links-none')\\n                    target.classList.remove('xt-jumps-none')\\n                  } else {\\n                    target.classList.add('xt-jumps-none')\\n                    target.classList.remove('xt-links-none')\\n                  }\\n                }\\n              } else {\\n                for (const target of self.targets) {\\n                  if (!target.classList.contains(...self.classes)) {\\n                    target.classList.add('xt-links-none')\\n                    target.classList.remove('xt-jumps-none')\\n                  } else {\\n                    target.classList.add('xt-jumps-none')\\n                    target.classList.remove('xt-links-none')\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          'draggerDisableLinks',\\n          self.initial ? 0 : self.options.durationOn\\n        )\\n        // disable dragger\\n        dragger.classList.add('xt-pointer-events-none')\\n        for (const nav of self.navs) {\\n          nav.classList.add('xt-pointer-events-none')\\n        }\\n        for (const el of self.elements) {\\n          el.classList.add('xt-pointer-events-none')\\n        }\\n        Xt.animTimeout(\\n          dragger,\\n          () => {\\n            dragger.classList.remove('xt-pointer-events-none')\\n            for (const nav of self.navs) {\\n              nav.classList.remove('xt-pointer-events-none')\\n            }\\n            for (const el of self.elements) {\\n              el.classList.remove('xt-pointer-events-none')\\n            }\\n          },\\n          'draggerDisable',\\n          self.initial ? 0 : self.options.durationOn\\n        )\\n        // disable links\\n        dragger.classList.remove('xt-links-none')\\n        dragger.classList.remove('xt-jumps-none')\\n        // drag wrap\\n        if (self.dragger && options.drag.wrap && !options.drag.manual && !self.wrap) {\\n          // @FIX wrap around xt-wrap items\\n          Xt.animTimeout(\\n            dragger,\\n            () => {\\n              self.eventWrap()\\n            },\\n            'wrap'\\n          )\\n        }\\n      }\\n    } else if (!e || !e.type || e.type !== 'on.trigger.xt') {\\n      // drag reset\\n      self.logicDragreset(self.dragger)\\n    }\\n    // super\\n    super.eventOn(element, force, e)\\n  }\\n\\n  /**\\n   * wrap\\n   */\\n  eventWrap() {\\n    const self = this\\n    // wrap around xt-wrap items\\n    const min = self.wrapIndex\\n    const max = self.wrapIndex + self.groupMqInitial.length - 1\\n    if (self.currentIndex < min) {\\n      self.initial = true\\n      self.wrap = true\\n      self.goToNum(max + self.currentIndex - min + 1, true)\\n    } else if (self.currentIndex > max) {\\n      self.initial = true\\n      self.wrap = true\\n      self.goToNum(min + self.currentIndex - max - 1, true)\\n    }\\n  }\\n\\n  /**\\n   * medialoadedReinit\\n   */\\n  eventMediaLoadedReinit() {\\n    const self = this\\n    // mediaLoaded\\n    // @FIX performances\\n    for (const slide of self.targets) {\\n      // needs to recalculate not only xt-wrap but all targets\\n      Xt.dataStorage.set(slide, self.componentNamespace + 'SlideLeft', slide.offsetLeft)\\n      Xt.dataStorage.set(slide, self.componentNamespace + 'SlideWidth', slide.offsetWidth)\\n      Xt.dataStorage.set(slide, self.componentNamespace + 'SlideHeight', slide.children[0].offsetHeight)\\n    }\\n    // debug\\n    if (Xt.debug === true) {\\n      console.debug('Xt.debug: mediaLoadedReinit', self.object)\\n    }\\n    // restart\\n    self.reinit()\\n  }\\n\\n  //\\n  // logic\\n  //\\n\\n  /**\\n   * element drag on logic\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  logicDragstart(dragger, e) {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // manual\\n    if (options.drag.manual) {\\n      return\\n    }\\n    // save event\\n    if (e.detail.wheelX !== undefined) {\\n      self.detail.dragStart = e.detail.wheelX\\n      self.detail.dragStartOther = e.detail.wheelY\\n    } else if (e.clientX !== undefined) {\\n      self.detail.dragStart = e.clientX\\n      self.detail.dragStartOther = e.clientY\\n    } else if (e.touches && e.touches.length) {\\n      self.detail.dragStart = e.touches[0].clientX\\n      self.detail.dragStartOther = e.touches[0].clientY\\n    }\\n    // auto\\n    self.eventAutopause()\\n    // prevent dragging animation\\n    dragger.classList.add('duration-none')\\n    // logic\\n    self.detail.dragVelocity = null\\n    self.detail.dragVelocityNext = null\\n    // dragging\\n    self.detail.dragging = true\\n    self.detail.dragBlock = false\\n    // listener dispatch\\n    if (!self.initial) {\\n      dragger.dispatchEvent(new CustomEvent('dragstart.xt'))\\n    }\\n  }\\n\\n  /**\\n   * element drag off logic\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  logicDragend(dragger, e) {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // manual\\n    if (options.drag.manual) {\\n      return\\n    }\\n    // save event\\n    if (e.detail.wheelX !== undefined) {\\n      self.detail.dragCurrent = e.detail.wheelX\\n      self.detail.dragCurrentOther = e.detail.wheelY\\n    } else if (e.clientX !== undefined) {\\n      self.detail.dragCurrent = e.clientX\\n      self.detail.dragCurrentOther = e.clientY\\n    } else if (e.touches && e.touches.length) {\\n      self.detail.dragCurrent = e.touches[0].clientX\\n      self.detail.dragCurrentOther = e.touches[0].clientY\\n    }\\n    // logic\\n    self.logicDragfriction(dragger, e)\\n  }\\n\\n  /**\\n   * element drag friction logic\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   */\\n  logicDragfriction(dragger, e) {\\n    const self = this\\n    const options = self.options\\n    // friction\\n    if (Math.abs(self.detail.dragVelocity) > options.drag.frictionLimit) {\\n      // disable dragger\\n      dragger.classList.add('xt-pointer-events-none')\\n      for (const nav of self.navs) {\\n        nav.classList.add('xt-pointer-events-none')\\n      }\\n      for (const el of self.elements) {\\n        el.classList.add('xt-pointer-events-none')\\n      }\\n      // drag\\n      self.logicDrag(dragger, e, true)\\n      // loop\\n      requestAnimationFrame(() => {\\n        self.logicDragfriction(dragger, e)\\n      })\\n    } else if (self.detail.dragVelocity) {\\n      // disable links\\n      requestAnimationFrame(() => {\\n        dragger.classList.remove('xt-links-none')\\n        dragger.classList.remove('xt-jumps-none')\\n      })\\n      // dragend\\n      requestAnimationFrame(self.logicDragfrictionend.bind(self).bind(e, dragger))\\n    }\\n  }\\n\\n  /**\\n   * element drag logic\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   * @param {Event} e\\n   * @param {Boolean} friction\\n   */\\n  logicDrag(dragger, e, friction = false) {\\n    const self = this\\n    const options = self.options\\n    // disabled\\n    if (self.disabled) {\\n      return\\n    }\\n    // manual\\n    if (options.drag.manual) {\\n      return\\n    }\\n    // save event\\n    if (e.detail.wheelX !== undefined) {\\n      self.detail.dragCurrent = e.detail.wheelX\\n      self.detail.dragCurrentOther = e.detail.wheelY\\n    } else if (e.clientX !== undefined) {\\n      self.detail.dragCurrent = e.clientX\\n      self.detail.dragCurrentOther = e.clientY\\n    } else if (e.touches && e.touches.length) {\\n      self.detail.dragCurrent = e.touches[0].clientX\\n      self.detail.dragCurrentOther = e.touches[0].clientY\\n    }\\n    // check threshold\\n    self.detail.dragDist = self.detail.dragStart - self.detail.dragCurrent\\n    self.detail.dragDistOther = self.detail.dragStartOther - self.detail.dragCurrentOther\\n    if (Math.abs(self.detail.dragDist) > options.drag.threshold) {\\n      // disable links\\n      dragger.classList.add('xt-links-none')\\n      dragger.classList.add('xt-jumps-none')\\n    }\\n    if (!self.detail.dragBlock && Math.abs(self.detail.dragDistOther) > Math.abs(self.detail.dragDist)) {\\n      // block drag if scrolling\\n      return\\n    } else {\\n      self.detail.dragBlock = true\\n      // block scrolling if dragging\\n      if (e.cancelable) {\\n        e.preventDefault()\\n      }\\n    }\\n    // calculate\\n    let dragPos = self.detail.dragPosReal\\n    const dragPosCurrent = self.detail.dragPosCurrent || 0\\n    const sign = Math.sign(self.detail.dragVelocity)\\n    if (friction && options.drag.friction) {\\n      // momentum\\n      const fncFriction = options.drag.friction\\n      self.detail.dragVelocity = fncFriction(Math.abs(self.detail.dragVelocity)) * sign\\n      // no momentum when stopping\\n      if (self.detail.dragDate) {\\n        self.detail.dragDateDiff = new Date() - self.detail.dragDate\\n        self.detail.dragDate = null\\n        if (self.detail.dragDateDiff > options.drag.frictionTime) {\\n          self.detail.dragVelocity = -1 // @FIX velocity -1 when done\\n        }\\n      }\\n      // on friction\\n      dragPos = dragPos + self.detail.dragVelocity\\n      self.detail.dragCurrent = dragPos + self.detail.dragStart - dragPosCurrent\\n    } else {\\n      // momentum\\n      self.detail.dragDate = new Date()\\n      // on normal drag\\n      const dragPosOld = dragPos || 0\\n      dragPos = dragPosCurrent + (self.detail.dragCurrent - self.detail.dragStart) * options.drag.factor\\n      // keep some velocity (median value of previous frame and not current frame)\\n      self.detail.dragVelocity = (self.detail.dragVelocity + self.detail.dragVelocityNext) / 2\\n      self.detail.dragVelocityNext = dragPos - dragPosOld\\n    }\\n    // val\\n    self.detail.dragPosReal = dragPos\\n    self.detail.dragCurrentReal = self.detail.dragCurrent\\n    // overflow\\n    if (options.drag.overflow) {\\n      const arr = self.targets.filter(x => !x.classList.contains('xt-wrap'))\\n      const first = arr[0]\\n      const last = arr[arr.length - 1]\\n      const min = Xt.dataStorage.get(first, self.componentNamespace + 'GroupPos')\\n      const max = Xt.dataStorage.get(last, self.componentNamespace + 'GroupPos')\\n      // overflow\\n      const fncOverflow = options.drag.overflow\\n      if (friction && options.drag.friction) {\\n        if (dragPos > min || dragPos < max) {\\n          self.detail.dragVelocity = fncOverflow(Math.abs(self.detail.dragVelocity)) * sign\\n        }\\n      } else {\\n        if (dragPos > min) {\\n          self.detail.dragVelocity = -1 // @FIX velocity -1 when done\\n          const overflow = dragPos - min\\n          dragPos = min + fncOverflow(overflow)\\n        } else if (dragPos < max) {\\n          self.detail.dragVelocity = -1 // @FIX velocity -1 when done\\n          const overflow = dragPos - max\\n          dragPos = max - fncOverflow(-overflow)\\n        }\\n      }\\n    }\\n    // val\\n    self.detail.dragCurrent = self.detail.dragCurrentReal - (self.detail.dragPosReal - dragPos) // dragCurrent when overflowing\\n    self.detail.dragPosOld = self.detail.dragPos\\n    self.detail.dragPos = dragPos\\n    self.detail.dragRatio = Math.abs(self.detail.dragStart - self.detail.dragCurrent) / self.detail.draggerWidth\\n    self.detail.dragRatio = self.detail.dragRatio > 1 ? 1 : self.detail.dragRatio\\n    self.detail.dragRatio = self.detail.dragRatio < -1 ? -1 : self.detail.dragRatio\\n    self.detail.dragRatioInverse = 1 - self.detail.dragRatio\\n    self.direction = self.detail.dragStart - self.detail.dragCurrent < 0 ? -1 : 1\\n    self.inverse = self.direction < 0\\n    // drag position\\n    if (self.initial) {\\n      self.dragger.classList.add('transition-none')\\n    }\\n    dragger.style.transform = 'translateX(' + self.detail.dragPos + 'px)'\\n    if (self.initial) {\\n      self.dragger.classList.remove('transition-none')\\n    }\\n    // listener dispatch\\n    if (!self.initial) {\\n      dragger.dispatchEvent(new CustomEvent('drag.xt'))\\n    }\\n  }\\n\\n  /**\\n   * element drag friction off logic\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   */\\n  logicDragfrictionend(dragger) {\\n    const self = this\\n    const options = self.options\\n    const dragPosCurrent = self.detail.dragPosCurrent || 0\\n    // prevent dragging animation\\n    dragger.classList.remove('duration-none')\\n    // check threshold\\n    self.detail.dragDist = self.detail.dragPosReal - dragPosCurrent\\n    const direction = Math.sign(self.detail.dragDist)\\n    if (!self.detail.dragBlock && Math.abs(self.detail.dragDistOther) > Math.abs(self.detail.dragDist)) {\\n      // drag reset\\n      self.logicDragreset(dragger)\\n    } else if (Math.abs(self.detail.dragDist) > options.drag.threshold) {\\n      // get nearest\\n      let found = self.currentIndex\\n      if (found === 0 && direction > 0) {\\n        found = self.groupMq.length - 1\\n      } else if (found === self.groupMq.length - 1 && direction < 0) {\\n        found = 0\\n      } else {\\n        const findNext = () => {\\n          let dist = 0\\n          if (direction > 0) {\\n            for (let i = self.currentIndex; i < self.groupMq.length; i++) {\\n              const group = self.groupMq[i]\\n              const pos = Xt.dataStorage.get(group[0], self.componentNamespace + 'GroupPos')\\n              dist += Math.abs(pos)\\n              if (dragPosCurrent <= dist) {\\n                return i\\n              }\\n            }\\n          } else {\\n            for (let i = self.currentIndex; i >= 0; i--) {\\n              const group = self.groupMq[i]\\n              const pos = Xt.dataStorage.get(group[0], self.componentNamespace + 'GroupPos')\\n              dist += Math.abs(pos)\\n              if (dragPosCurrent <= dist) {\\n                return i\\n              }\\n            }\\n          }\\n        }\\n        found = findNext()\\n      }\\n      // goTo with force\\n      if (found === self.currentIndex) {\\n        // change at least one\\n        if (direction < 0) {\\n          self.goToNext(1)\\n        } else {\\n          self.goToPrev(1)\\n        }\\n      } else {\\n        // goToNum\\n        self.goToNum(found)\\n      }\\n    } else {\\n      // drag reset\\n      self.logicDragreset(dragger)\\n    }\\n    // auto\\n    self.eventAutoresume()\\n    // dragging\\n    self.detail.dragging = false\\n    // listener dispatch\\n    if (!self.initial) {\\n      dragger.dispatchEvent(new CustomEvent('dragend.xt'))\\n    }\\n  }\\n\\n  /**\\n   * element drag friction off logic\\n   * @param {Node|HTMLElement|EventTarget|Window} dragger\\n   */\\n  logicDragreset(dragger) {\\n    const self = this\\n    // val\\n    self.detail.dragPosOld = self.detail.dragPos\\n    self.detail.dragPos = self.detail.dragPosCurrent\\n    // fix direction\\n    self.direction = self.detail.dragStart - self.detail.dragCurrentReal < 0 ? -1 : 1\\n    self.inverse = self.direction < 0\\n    // disable drag and links\\n    Xt.animTimeout(\\n      dragger,\\n      () => {\\n        dragger.classList.remove('xt-pointer-events-none')\\n        for (const nav of self.navs) {\\n          nav.classList.remove('xt-pointer-events-none')\\n        }\\n        for (const el of self.elements) {\\n          el.classList.remove('xt-pointer-events-none')\\n        }\\n      },\\n      'draggerDisable',\\n      self.initial ? 0 : self.options.durationOn\\n    )\\n    // drag position\\n    if (self.initial) {\\n      self.dragger.classList.add('transition-none')\\n    }\\n    dragger.style.transform = 'translateX(' + self.detail.dragPosCurrent + 'px)'\\n    if (self.initial) {\\n      self.dragger.classList.remove('transition-none')\\n    }\\n    // auto\\n    self.eventAutostart()\\n    // listener dispatch\\n    if (!self.initial) {\\n      dragger.dispatchEvent(new CustomEvent('dragreset.xt'))\\n    }\\n  }\\n\\n  //\\n  // status\\n  //\\n\\n  /**\\n   * disable\\n   */\\n  enable() {\\n    super.enable()\\n    const self = this\\n    const dragger = self.dragger\\n    // enable\\n    if (dragger) {\\n      // dragger\\n      dragger.classList.add('transition-none')\\n      requestAnimationFrame(() => {\\n        dragger.classList.remove('transition-none')\\n      })\\n    }\\n  }\\n\\n  /**\\n   * disable\\n   */\\n  disable() {\\n    super.disable()\\n    const self = this\\n    const options = self.options\\n    const dragger = self.dragger\\n    // disable\\n    if (dragger && !options.drag.manual) {\\n      // grab\\n      dragger.classList.remove('xt-grab')\\n      // links\\n      dragger.classList.remove('xt-links-none')\\n      // jump\\n      dragger.classList.add('xt-jumps-none')\\n      // dragger\\n      dragger.classList.add('transition-none')\\n      requestAnimationFrame(() => {\\n        dragger.classList.remove('transition-none')\\n      })\\n    }\\n    if (self.autoHeight) {\\n      // autoHeight\\n      self.autoHeight.classList.remove('xt-autoHeight')\\n      requestAnimationFrame(() => {\\n        self.autoHeight.style.height = ''\\n      })\\n    }\\n    if (self.keepHeight) {\\n      // keepHeight\\n      requestAnimationFrame(() => {\\n        self.keepHeight.style.height = ''\\n      })\\n    }\\n  }\\n\\n  //\\n  // util\\n  //\\n\\n  /**\\n   * destroy\\n   */\\n  destroy(weak = false) {\\n    const self = this\\n    // clean pagination\\n    self.destroyPags()\\n    // clean wraps\\n    self.destroyWraps()\\n    // super\\n    super.destroy(weak)\\n  }\\n\\n  /**\\n   * destroy pagination\\n   */\\n  destroyPags() {\\n    const self = this\\n    // clean pagination\\n    if (self.pags && self.pags.length) {\\n      for (const pag of self.pags) {\\n        for (const oldPag of pag) {\\n          oldPag.remove()\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * destroy wraps\\n   */\\n  destroyWraps() {\\n    const self = this\\n    const options = self.options\\n    // drag wrap\\n    if (self.dragger && options.drag.wrap) {\\n      // clear elements\\n      for (const el of self.elements.filter(x => x.classList.contains('xt-wrap'))) {\\n        el.remove()\\n      }\\n      self.elements = self.elements.filter(x => !x.classList.contains('xt-wrap'))\\n      // clear targets\\n      for (const tr of self.targets.filter(x => x.classList.contains('xt-wrap'))) {\\n        tr.remove()\\n      }\\n      self.targets = self.targets.filter(x => !x.classList.contains('xt-wrap'))\\n    }\\n  }\\n\\n  //\\n}\\n\\n//\\n// options\\n//\\n\\nSlider.componentName = 'xt-slider'\\nSlider.optionsDefault = {\\n  // slider\\n  autoHeight: false,\\n  keepHeight: false,\\n  groupMq: false,\\n  align: 'center',\\n  contain: false,\\n  pagination: '.slider-pagination',\\n  overflowAuto: true,\\n  drag: {\\n    dragger: '.slides-inner',\\n    wrap: false,\\n    manual: false,\\n    threshold: 25,\\n    factor: 1,\\n    friction: false,\\n    /*\\n    friction: velocity => {\\n      return Math.pow(velocity, 0.95)\\n    },\\n    frictionLimit: 1.5,\\n    frictionTime: 25,\\n    */\\n    overflow: overflow => {\\n      return Math.pow(overflow, 0.73)\\n    },\\n  },\\n  // element\\n  elements: '[data-xt-pag]',\\n  targets: '.slide',\\n  // class\\n  class: 'active active-slider',\\n  // quantity\\n  min: 1,\\n  max: 1,\\n  // event\\n  on: 'click',\\n  // timing\\n  instant: true,\\n  // auto\\n  auto: {\\n    pause: '[data-xt-pag], [data-xt-nav], .btn',\\n  },\\n  // wheel\\n  wheel: {\\n    selector: false,\\n    block: true,\\n    limit: false,\\n    transform: true,\\n    horizontal: true,\\n    factor: 1,\\n    friction: delta => {\\n      return delta / 9\\n    },\\n    frictionLimit: 1.5,\\n  },\\n  // other\\n  loop: true,\\n  jump: true,\\n  jumpOverflow: false,\\n  navigation: '[data-xt-nav]',\\n  keyboard: {\\n    selector: '.slides',\\n  },\\n  aria: {\\n    labelledby: false,\\n  },\\n}\\n\\n//\\n// export\\n//\\n\\nXt.Slider = Slider\\n\\n//\\n// observe\\n//\\n\\nXt.mount.push({\\n  matches: '[data-' + Xt.Slider.componentName + ']',\\n  mount: object => {\\n    // vars\\n\\n    const optionsMarkup = object.getAttribute('data-' + Xt.Slider.componentName)\\n    const options = optionsMarkup ? JSON5.parse(optionsMarkup) : {}\\n\\n    // init\\n\\n    let self = new Xt.Slider(object, options)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ min: 1, on: 'mouseenter', off: 'mouseleave' }\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 3\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 3\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"0\\\">\\n    Toggle Group 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"0\\\">\\n    Toggle Group 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-group=\\\"3\\\">\\n    Toggle Group 3\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Target Group 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"3\\\">\\n    Target Group 3\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"0\\\">\\n    Target Group 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" data-xt-group=\\\"3\\\">\\n    Target Group 3\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import { Xt } from 'xtendui'\\nimport gsap from 'gsap'\\n\\n/**\\n * listing-page\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--opacity-listing-v1 body .listing-page_item', // add your own selector instead of body to contain the code\\n  mount: function (object) {\\n    // vars\\n\\n    const links = object.tagName === 'A' || object.tagName === 'BUTTON' ? Xt.arrSingle(object) : object.querySelectorAll('a, button')\\n    const img = object.querySelector('.media')\\n    const imgOpacityIn = 0.75\\n    const imgOpacityOut = 1\\n\\n    // enter\\n\\n    const eventEnter = () => {\\n      // img\\n      gsap.to(img, { opacity: imgOpacityIn, duration: Xt.vars.timeSmall, ease: 'quart.out' })\\n    }\\n\\n    for (const link of links) {\\n      link.addEventListener('mouseenter', eventEnter)\\n    }\\n\\n    // enter\\n\\n    const eventLeave = () => {\\n      // img\\n      gsap.to(img, { opacity: imgOpacityOut, duration: Xt.vars.timeSmall, ease: 'quart.out', overwrite: true })\\n    }\\n\\n    for (const link of links) {\\n      link.addEventListener('mouseleave', eventLeave)\\n    }\\n  },\\n})\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardScroll = require('components/snippets/classes/card-scroll').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3 demo--scroll-outside-once\\\"\\n  data-xt-scroll=\\\"{ elements: '.card' }\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-6/12 sm:w-4/12\\\">\\n    <div class=\\\"card ${cardScroll()}\\\">\\n      <div class=\\\"h4\\\">Lorem ipsum</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"site_wrapper\\\">\\n\\n  <header class=\\\"site_header\\\">\\n    <div class=\\\"card ${cardStickyPrimary()}\\\">\\n      <div class=\\\"h4\\\">Header</div>\\n    </div>\\n  </header>\\n\\n  <main class=\\\"site_main\\\">\\n    <div class=\\\"card card-md ${cardStickyDefault()}\\\">\\n      <div class=\\\"h4\\\">Main</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n  </main>\\n\\n  <footer class=\\\"site_footer\\\">\\n    <div class=\\\"card ${cardStickyPrimary()}\\\">\\n      <div class=\\\"h4\\\">Footer</div>\\n    </div>\\n  </footer>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"import { Xt } from 'xtendui'\\nimport gsap from 'gsap'\\n\\nXt.mount.push({\\n  matches: '.demo--loader-js-filler',\\n  mount: object => {\\n    // vars\\n\\n    const fillerTime = Xt.vars.timeBig\\n    const fillerEase = 'linear'\\n\\n    // init\\n\\n    const loaderTimeout = () => {\\n      const filler = object.querySelectorAll('.filler span:nth-child(1)')\\n      object.dataset.loaderActive = object.dataset.loaderActive === 'true' ? 'false' : 'true'\\n      if (object.dataset.loaderActive === 'true') {\\n        Xt.animOn(object)\\n        gsap.set(filler, { width: 0 })\\n        gsap.to(filler, { width: '100%', duration: fillerTime, ease: fillerEase })\\n        setTimeout(loaderTimeout, fillerTime)\\n      } else {\\n        Xt.animOff(object)\\n        Xt.animTimeout(object, loaderTimeout)\\n      }\\n    }\\n\\n    loaderTimeout()\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Gallery\\\"\\ntitle: \\\"Gallery\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefaultGroup = require('components/snippets/classes/btn-default-group').default\\nconst btnPrimaryGroup = require('components/snippets/classes/btn-primary-group').default\\nconst inputDefaultGroup = require('components/snippets/classes/input-default-group').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"group\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-l-md ${btnDefaultGroup()}\\\">\\n      ${iconSearch({ classes: 'icon-lg' })}\\n    </button>\\n\\n    <input type=\\\"text\\\" class=\\\"form-item ${inputDefaultGroup()}\\\" placeholder=\\\"Insert search query\\\" />\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-md rounded-r-md ${btnPrimaryGroup()}\\\">\\n      Search\\n    </button>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"import path from 'path'\\nconst cardDefaultFull = require('components/snippets/classes/card-default-full').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"md:card-group\\\">\\n        <div class=\\\"card-md px-0 pt-0 sm:pb-0 sm:pr-6 md:w-7/12\\\">\\n          <div class=\\\"h4\\\">Lorem ipsum</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n        </div>\\n        <div class=\\\"border-t md:w-5/12 md:border-t-0 md:border-l border-solid border-gray-500\\\">\\n          <div class=\\\"card-sm px-0 sm:pt-0 sm:pl-6\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n          <div class=\\\"card-md px-0 pb-0 md:pt-6 sm:pl-6 border-t border-solid border-gray-500\\\">\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer non feugiat lorem, nec volutpat turpis.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Sticky\\\"\\ntitle: \\\"Interaction\\\"\\ndate: \\\"2010-10-10\\\"\\n---\\n\\n## Class\\n\\nYou can customize the **class names** used with the component.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `class:String`                          | `active active-sticky`        | Class name for activation            |\\n| Option                  | `classIn:String`                          | `in`        | Class name for in animation            |\\n| Option                  | `classOut:String`                          | `out`        | Class name for out animation            |\\n| Option                  | `classDone:String`                          | `done`        | Class name for in animation done            |\\n| Option                  | `classInitial:String`                          | `initial`        | Class name for initialization            |\\n| Option                  | `classInverse:String`                          | `inverse`        | Class name for inverse direction activation            |\\n\\n</div>\\n\\nYou can start with toggled elements and targets just by adding **one of the class names for activation** to the **elements** or **targets**.\\n\\nAdditionally on component initialization the class `xt-sticky` gets added to the **object** (the DOM element you assigned the component).\\n\\n## Mode\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `sticky:String`                          | `false`        | Sticky mode `'absolute'`, `'fixed`' or `'fixed-always'`            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/mode-absolute\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/mode-fixed\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/mode-fixed-always\\\">\\n  </div>\\n</demo>\\n\\n## Position\\n\\nThe default **position** is `position: 'top'` you can also use `position: 'bottom'`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `position:String`                          | `'top'`        | Position `'top'` or `'bottom'`            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/position\\\"></div>\\n</demo>\\n\\n## Limit\\n\\nThe default **limit** for `limit: { top: Element }` is the element's own position, for `limit: { bottom: Element }` is Infinity.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `limit.top:Number|Query`                          | `false`        | Limit top sticky to pixel or query           |\\n| Option                  | `limit.bottom:Number|Query`                          | `'Infinity'`        | Limit bottom sticky to pixel or query            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/limit\\\">\\n  </div>\\n</demo>\\n\\n## Contain\\n\\nUse the `contain: {}` option to stack consecutive sticky elements. with `contain: { top: Element }` you stack the sticky to a previous element, with `contain: { bottom: Element }` you stack the sticky to a next element. The two solutions brings **different stacking effects**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `contain.top:Query`                          | `false`        | Contain top sticky to query            |\\n| Option                  | `contain.bottom:Query`                          | `false`        | Contain bottom sticky to query            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/contain-top\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/contain-bottom\\\">\\n  </div>\\n</demo>\\n\\n## Hide\\n\\nTo hide the sticky when scrolling down or up use `hide: 'down'` or `hide: 'up'`. Here's a complex example with hide behaviour.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `hide:String`                          | `false`        | Hide sticky on `'up'` or `'down'`            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/hide\\\">\\n  </div>\\n</demo>\\n\\n## Block\\n\\nYou can block the activations with the class `.xt-block` on elements.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.xt-block`                     | `NOT POSSIBLE`                | Block scroll on element            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/sticky/block\\\">\\n  </div>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst labelDefault = require('components/snippets/classes/label-default').default\\nconst inputDefault = require('components/snippets/classes/input-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<form>\\n\\n  <div class=\\\"row row-x-4 row-y-3\\\">\\n\\n    <div class=\\\"w-full\\\">\\n      <label class=\\\"form-label mb-4 ${labelDefault()}\\\">\\n        Textarea autosize\\n      </label>\\n      <textarea class=\\\"form-item ${inputDefault()} overflow-hidden resize-none duration-none\\\" data-xt-textarea-autosize></textarea>\\n    </div>\\n\\n  </div>\\n\\n</form>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Overlay\\\"\\ntitle: \\\"API\\\"\\ndate: \\\"1980-05-05\\\"\\n---\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-overlay=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.Overlay(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Overlay(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\\n## Util\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Object                   | `let self = Xt.get('xt-overlay', {DOM element})`       | `object` `elements` `targets` | Get object self for this component class             |\\n\\n</div>\\n\\n## Trigger\\n\\nTrigger events on **DOM elements**.\\n\\n```js\\ndocument.querySelector('#my-element-or-target').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.trigger.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.trigger.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `closeauto.trigger.xt`           | `window` | Autclose all components with `closeAuto: true` option             |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n```js\\nconst el = document.querySelector('#my-element-or-target')\\n\\nconst eventOn = e => {\\n  if (e.target === el) {\\n  // logic\\n  }\\n}\\n\\nel.addEventListener('on.xt', eventOn)\\n```\\n\\nListen to events delegation with **useCapture** this way:\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-overlay', object)\\n\\nconst eventOn = e => {\\n  const element = e.target\\n  // useCapture delegation\\n  if (self.elements.includes(element)) {\\n    // logic\\n  }\\n  if (self.targets.includes(element)) {\\n    // logic\\n  }\\n}\\n\\nobject.addEventListener('on.xt', eventOn, true)\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `ondone.xt`           | `elements` `targets` | Activation event after delay and duration             |\\n| Event                   | `offdone.xt`           | `elements` `targets` | Deactivation event after delay and duration             |\\n| Event                   | `medialoaded.xt`           | `elements` `targets` | Images loaded event            |\\n| Event                   | `init.xt`           | `object` | Init event             |\\n| Event                   | `restart.xt`           | `object` | Restart event             |\\n| Event                   | `reinit.xt`           | `object` | Reinit event             |\\n| Event                   | `destroy.xt`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-overlay', object)\\nconst elements = self.elements\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `elements:Array`       | Elements nodes             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n| Property                  | `initial:Boolean`       | If initial or reset activation            |\\n\\n</div>\\n\\n## Methods\\n\\nCall methods by getting component object.\\n\\n```js\\nlet self = Xt.get('xt-overlay', document.querySelector('#my-object'))\\nself.destroy()\\nself = null\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getElements(el:Node|null)`                          | Get all elements or all elements from element or target             |\\n| Method                  | `self.getTargets(el:Nod|null)`                          | Get all targets from or all targets from element or target             |\\n| Method                  | `self.getElementsGroups()`                          | Get elements (one per group)             |\\n| Method                  | `self.getTargetsGroups()`                          | Get targets (one per group)             |\\n| Method                  | `self.hasCurrent(el:Node)`                          | Returns `true` or `false` if element or target is activated             |\\n| Method                  | `self.reinit(saveCurrents:Boolean)`       | Reinit component and save currents as initial (default: `true`)             |\\n| Method                  | `self.restart()`                          | Restart component to initial             |\\n| Method                  | `self.destroy(weak:Boolean)`              | Destroy component            |\\n\\n</div>\\n\\nYou can get activated elements or targets with `hasCurrent`.\\n\\n```js\\nself.elements.filter(x => self.hasCurrent(x))\\nself.targets.filter(x => self.hasCurrent(x))\\n```\\n\\n## Demo\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/overlay/events-methods\\\">\\n  </div>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ min: 1, preventEvent: true }\\\">\\n\\n  <a href=\\\"#toggle--prevent-event-0\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </a>\\n\\n  <a href=\\\"#toggle--prevent-event-1\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1\\n  </a>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n</div>\\n\\n<br/>\\n\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle=\\\"{ min: 1, on: 'mouseenter', off: 'mouseleave', preventEvent: true }\\\">\\n\\n  <a href=\\\"#toggle--prevent-event-1-hover\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 1 hover\\n  </a>\\n\\n  <a href=\\\"#toggle--prevent-event-2-hover\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2 hover\\n  </a>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1 hover\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2 hover\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Addons\\\"\\nparent: \\\"Slider\\\"\\ntitle: \\\"navigation-sides\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/addons/slider-navigation-sides.css.js](https://github.com/minimit/xtendui/blob/master/src/addons/slider-navigation-sides.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      'slider-navigation-sides': {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **navigation sides**.\\n\\n[[notePrimary]]\\n| This addon uses [mouse follow](/components/addons/structure/mouse-follow). Visit the component page to import and customize.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/addons/slider-navigation-sides\\\">\\n  </demovanilla>\\n</demo>\\n\";","export default \"import path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  align items\\n</div>\\n\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n    align items<br>default\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md items-start ${btnPrimary()}\\\">\\n    align items<br>items-start\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md items-end ${btnPrimary()}\\\">\\n    align items<br>items-end\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  justify content\\n</div>\\n\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md w-full ${btnPrimary()}\\\">\\n    justify content<br>default\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md w-full justify-start ${btnPrimary()}\\\">\\n    justify content<br>items-start\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md w-full justify-center text-center ${btnPrimary()}\\\">\\n    justify content<br>items-center + text-center\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md w-full justify-end text-right ${btnPrimary()}\\\">\\n    justify content<br>items-end + text-right\\n    ${iconSearch({ classes: 'icon-lg ml-2' })}\\n  </button>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Structure\\\"\\ntitle: \\\"Css\\\"\\ndate: \\\"2050-10-10\\\"\\n---\\n\\n## Variants\\n\\nXtend adds a **custom variant** `active` to Tailwind, it styles when **user presses the element** with `:active` but also when the element is **activated by javascript** with `.active`.\\n\\nWhen you use Tailwind classes you can style it with the variant `active:`, it's activated on the same tailwind utilities that have `hover:`, see [xtendui/src/tailwind-config.js](https://github.com/minimit/xtendui/blob/master/src/tailwind-config.js) for default values.\\n\\nWhen you **style pseudo selector** remember to style `&:active, &.active`.\\n\\n## Utilities\\n\\nThese are structure **component utilities**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- | ----------------------------- |\\n| Utility                  | `.container-reset`       | `container-reset`                | `responsive`                | Reset container styles            |\\n| Utility                  | `.duration-none`                     | `duration-none`                | `responsive`                | Instant transitions and animations            |\\n\\n</div>\\n\\nWe have also **automatic spacing utilities** to reset margin top when `:first-child` with `mt-fc` and margin bottom when `:last-child` with `mb-lc`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Variants               | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- | ----------------------------- |\\n| Utility                  | `.mt-fc`                     | `mt-fc`                | `responsive`                | Reset margin top on `:first-child`            |\\n| Utility                  | `.mb-lc`                     | `mb-lc`                | `responsive`                | Reset margin bottom on `:last-child`            |\\n\\n</div>\\n\\n## Components\\n\\nThese are structure **component classes**.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.overflow-main`                     | `overflow-main`                | Overflow scrollbar style            |\\n| Component                  | `.overflow-sub`                     | `overflow-sub`                | Overflow scrollbar style small version            |\\n| Component                  | `[readonly], [disabled], .disabled`                     | `disabled`                | Disabled styles            |\\n| Component                  | `.backdrop`                     | `backdrop`                | Backdrop styles            |\\n| Component                  | `.design-setup`                     | `design-setup`                | Apply design setup styles            |\\n\\n</div>\\n\\nXtend has custom `:focus` styles, sort of `:focus-visbile` polyfill. You can customize the global `.xt-focus-visible` style or **disable focus management and styles** with the class `html.xt-focus-disable`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `html.xt-focus-disable`                     | `NOT POSSIBLE`                | Disable focus management and styles            |\\n\\n</div>\\n\\nThere are many more **component classes for javascript** inside `structurejs.css.js` but they shouldn't be changed.\\n\";","export default \"// const img = require('components/snippets/img').default\\n// ${img({ classes: 'object-cover object-center', ratio: '37.5%' })}\\n\\nexport default ({ classes = null, ratio = null, height = null, style = null, loading = 'lazy' }) => {\\n  return `<div class=\\\"media-container\\\"${ratio || height || style ? ' style=\\\"' : ''}${ratio ? 'padding-bottom:' + ratio + ';' : ''}${\\n    height ? 'height:' + height + ';' : ''\\n  }${style ? ' ' + style + ';' : ''}${ratio || height || style ? '\\\"' : ''}><div class=\\\"media-inner\\\"><img class=\\\"media${\\n    classes ? ' ' + classes : ''\\n  }\\\" src=\\\"/img.svg\\\" loading=\\\"${loading}\\\" alt=\\\"\\\"/></div></div>`\\n}\\n\\nexport const alt = ({ classes = null, ratio = null, height = null, style = null, loading = 'lazy' }) => {\\n  return `<div class=\\\"media-container\\\"${ratio || height || style ? ' style=\\\"' : ''}${ratio ? 'padding-bottom:' + ratio + ';' : ''}${\\n    height ? 'height:' + height + ';' : ''\\n  }${style ? ' ' + style + ';' : ''}${ratio || height || style ? '\\\"' : ''}><div class=\\\"media-inner\\\"><img class=\\\"media${\\n    classes ? ' ' + classes : ''\\n  }\\\" src=\\\"/img-alt.svg\\\" loading=\\\"${loading}\\\" alt=\\\"\\\"/></div></div>`\\n}\\n\\nexport const ratio = ({ classes = null, ratio = null, height = null, style = null, loading = 'lazy' }) => {\\n  return `<div class=\\\"media-container\\\"${ratio || height || style ? ' style=\\\"' : ''}${ratio ? 'padding-bottom:' + ratio + ';' : ''}${\\n    height ? 'height:' + height + ';' : ''\\n  }${style ? ' ' + style + ';' : ''}${ratio || height || style ? '\\\"' : ''}><div class=\\\"media-inner\\\"><img class=\\\"media${\\n    classes ? ' ' + classes : ''\\n  }\\\" src=\\\"/img-ratio.svg\\\" loading=\\\"${loading}\\\" alt=\\\"\\\"/></div></div>`\\n}\\n\";","export default \"module.exports = {\\n  theme: {\\n    container: {\\n      center: true,\\n      padding: {\\n        DEFAULT: '1.5rem',\\n        sm: '2rem',\\n        md: '3rem',\\n        lg: '4rem',\\n        xl: '5rem',\\n      },\\n    },\\n    extend: {\\n      colors: {\\n        success: '#48bb78',\\n        error: '#f56565',\\n        accent: {\\n          50: '#F2F8FF',\\n          100: '#E6F2FF',\\n          200: '#BFDDFF',\\n          300: '#99C9FF',\\n          400: '#4DA1FF',\\n          500: '#0078FF',\\n          600: '#006CE6',\\n          700: '#004899',\\n          800: '#003673',\\n          900: '#00244D',\\n        },\\n      },\\n      zIndex: {\\n        base: '0',\\n        active: '5',\\n        top: '50',\\n        backdrop: '500',\\n        drop: '600',\\n        sticky: '800', // same as javascript and decreses with sequential sticky\\n        overlay: '900',\\n        last: '1000',\\n      },\\n      inset: {\\n        100: '100%',\\n      },\\n      transitionTimingFunction: {\\n        in: 'cubic-bezier(.25,.46,.45,.94)', // outQuad\\n        out: 'cubic-bezier(.455,.03,.515,.955)', // inOutQuad\\n        inSine: 'cubic-bezier(.47,0,.745,.715)',\\n        outSine: 'cubic-bezier(.39,.575,.565,1)',\\n        inOutSine: 'cubic-bezier(.445,.05,.55,.95)',\\n        inQuad: 'cubic-bezier(.55,.085,.68,.53)',\\n        outQuad: 'cubic-bezier(.25,.46,.45,.94)',\\n        inOutQuad: 'cubic-bezier(.455,.03,.515,.955)',\\n        inCubic: 'cubic-bezier(.55,.055,.675,.19)',\\n        outCubic: 'cubic-bezier(.215,.61,.355,1)',\\n        inOutCubic: 'cubic-bezier(.645,.045,.355,1)',\\n        inQuart: 'cubic-bezier(.895,.03,.685,.22)',\\n        outQuart: 'cubic-bezier(.165,.84,.44,1)',\\n        inOutQuart: 'cubic-bezier(.77,0,.175,1)',\\n        inQuint: 'cubic-bezier(.755,.05,.855,.06)',\\n        outQuint: 'cubic-bezier(.23,1,.32,1)',\\n        inOutQuint: 'cubic-bezier(.86,0,.07,1)',\\n        inExpo: 'cubic-bezier(.95,.05,.795,.035)',\\n        outExpo: 'cubic-bezier(.19,1,.22,1)',\\n        inOutExpo: 'cubic-bezier(1,0,0,1)',\\n        inCirc: 'cubic-bezier(.6,.04,.98,.335)',\\n        outCirc: 'cubic-bezier(.075,.82,.165,1)',\\n        inOutCirc: 'cubic-bezier(.785,.135,.15,.86)',\\n        inBack: 'cubic-bezier(.6,-.28,.735,.045)',\\n        outBack: 'cubic-bezier(.175,.885,.32,1.275)',\\n        inOutBack: 'cubic-bezier(.68,-.55,.265,1.55)',\\n      },\\n      keyframes: theme => ({\\n        'anim-spinner': {\\n          '0%': {\\n            strokeDashoffset: '628',\\n            transform: 'rotateY(0deg) rotateZ(-90deg)',\\n            animationTimingFunction: theme('transitionTimingFunction.ease.in'),\\n          },\\n          '50%': {\\n            strokeDashoffset: '0',\\n            transform: 'rotateY(0deg) rotateZ(90deg)',\\n          },\\n          '50.0001%': {\\n            strokeDashoffset: '0',\\n            transform: 'rotateY(180deg) rotateZ(90deg)',\\n            animationTimingFunction: theme('transitionTimingFunction.ease.out'),\\n          },\\n          '100%': {\\n            strokeDashoffset: '628',\\n            transform: 'rotateY(180deg) rotateZ(-90deg)',\\n          },\\n        },\\n        'anim-filler-x': {\\n          '0%': {\\n            left: '0',\\n            width: '0',\\n            animationTimingFunction: theme('transitionTimingFunction.ease.in'),\\n          },\\n          '50%': {\\n            left: '0',\\n            width: '100%',\\n            animationTimingFunction: theme('transitionTimingFunction.ease.out'),\\n          },\\n          '100%': {\\n            left: '100%',\\n            width: '0',\\n          },\\n        },\\n        'anim-filler-y': {\\n          '0%': {\\n            top: '0',\\n            height: '0',\\n            animationTimingFunction: theme('transitionTimingFunction.ease.in'),\\n          },\\n          '50%': {\\n            top: '0',\\n            height: '100%',\\n            animationTimingFunction: theme('transitionTimingFunction.ease.out'),\\n          },\\n          '100%': {\\n            top: '100%',\\n            height: '0',\\n          },\\n        },\\n      }),\\n    },\\n  },\\n  variants: {\\n    backgroundColor: ({ after }) => after(['active'], 'hover'),\\n    gradientColorStops: ({ after }) => after(['active'], 'hover'),\\n    backgroundOpacity: ({ after }) => after(['active'], 'hover'),\\n    borderColor: ({ after }) => after(['active'], 'hover'),\\n    borderOpacity: ({ after }) => after(['active'], 'hover'),\\n    boxShadow: ({ after }) => after(['active'], 'hover'),\\n    opacity: ({ after }) => after(['active'], 'hover'),\\n    textColor: ({ after }) => after(['active'], 'hover'),\\n    textOpacity: ({ after }) => after(['active'], 'hover'),\\n    textDecoration: ({ after }) => after(['active'], 'hover'),\\n    scale: ({ after }) => after(['active'], 'hover'),\\n    rotate: ({ after }) => after(['active'], 'hover'),\\n    translate: ({ after }) => after(['active'], 'hover'),\\n    skew: ({ after }) => after(['active'], 'hover'),\\n  },\\n  plugins: [require('./tailwind-plugin')],\\n}\\n\";","export default \"module.exports = {\\n  variant: ['responsive'],\\n  utility: {\\n    space: {\\n      // styles\\n      px: '1px',\\n      0: '0',\\n      0.5: '0.125rem',\\n      1: '0.25rem',\\n      1.5: '0.375rem',\\n      2: '0.5rem',\\n      2.5: '0.625rem',\\n      3: '0.75rem',\\n      3.5: '0.875rem',\\n      4: '1rem',\\n      5: '1.25rem',\\n      6: '1.5rem',\\n      7: '1.75rem',\\n      8: '2rem',\\n      9: '2.25rem',\\n      10: '2.5rem',\\n    },\\n  },\\n  component: {\\n    '.row': {\\n      // setup\\n      display: 'flex',\\n      flexWrap: 'wrap',\\n      flexDirection: 'row',\\n      alignItems: 'flex-start',\\n      '> *': {\\n        flex: '0 0 auto', // @FIX column flex shrink\\n      },\\n      '&:empty': {\\n        display: 'none',\\n      },\\n    },\\n    '.row-stretch': {\\n      // setup\\n      alignItems: 'stretch',\\n      '> *': {\\n        display: 'flex',\\n        alignItems: 'stretch',\\n        '> *': {\\n          minHeight: '100%',\\n        },\\n      },\\n    },\\n    '@media (hover: none)': {\\n      '.row-overflow': {\\n        // setup\\n        '@apply overflow-sub': '',\\n        overflowX: 'auto',\\n        overflowY: 'hidden',\\n        flexWrap: 'nowrap',\\n        '> *': {\\n          flex: 'none',\\n        },\\n      },\\n    },\\n  },\\n}\\n\";","export default \".demo--form-variant-primary {\\n  .form-select {\\n    background-image: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"%23fff\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"><polyline points=\\\"6 9 12 15 18 9\\\"></polyline></svg>');\\n  }\\n  .form-check {\\n    &[disabled] {\\n      background-color: theme('colors.gray.700') !important;\\n      border-color: theme('colors.gray.700') !important;\\n    }\\n  }\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Group\\\"\\ntitle: \\\"collapse-theme-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-24\\\"\\ndemos: [\\n  \\\"iframe/themes/collapse-theme-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst spinner = require('components/snippets/spinner').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"card ${cardDefault()}\\\" data-xt-mouse-follow>\\n  <div class=\\\"card-md\\\">\\n    <div class=\\\"h4\\\">Default</div>\\n    <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n  </div>\\n  <span class=\\\"loader loader-animated loader-mouse mouse-follow\\\">\\n    <span class=\\\"spinner spinner-animated text-accent-500\\\">\\n        ${spinner({})}\\n    </span>\\n  </span>\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Animation\\\"\\ntitle: \\\"fashion-gallery-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-10\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-gallery-v1\\\"\\n]\\n---\\n\";","export default \"---\\ntype: \\\"Introduction\\\"\\ncategory: \\\"Getting Started\\\"\\nparent: \\\"Issues\\\"\\ntitle: \\\"Issues\\\"\\ndescription: \\\"Find solutions or report issues.\\\"\\ndate: \\\"2050-10-30\\\"\\nlink: \\\"https://github.com/minimit/xtendui/issues\\\"\\n---\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"media-container\\\" style=\\\"padding-bottom: 37.5%\\\">\\n  <div class=\\\"media-inner\\\">\\n    <img class=\\\"media object-contain object-center\\\" src=\\\"/img.svg\\\" loading=\\\"lazy\\\" alt=\\\"\\\"/>\\n  </div>\\n</div>\\n`\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div>\\n  Vanilla\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Listing\\\"\\ntitle: \\\"fashion-listing-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-06-10\\\"\\ndemos: [\\n  \\\"iframe/themes/fashion-listing-v1\\\"\\n]\\n---\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/slider'\\nimport gsap from 'gsap'\\n\\n/**\\n * slider\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--industrial-featured-v1 body .slider', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const assetMaskTimeOn = Xt.vars.timeLarge\\n    const assetMaskEaseOn = 'expo.out'\\n    const assetMaskTimeOff = Xt.vars.timeSmall\\n    const assetMaskEaseOff = 'quart.out'\\n\\n    const assetZoom = 0.2\\n    const assetTimeOn = Xt.vars.timeLarge\\n    const assetEaseOn = 'quart.out'\\n    const assetTimeOff = Xt.vars.timeTiny\\n    const assetEaseOff = 'quart.inOut'\\n\\n    const cardContentX = 25\\n    const cardContentTimeOn = Xt.vars.timeLarge\\n    const cardContentEaseOn = 'expo.out'\\n    const cardContentTimeOff = Xt.vars.timeTiny\\n    const cardContentEaseOff = 'expo.inOut'\\n\\n    const cardTime = Xt.vars.timeLarge\\n    const cardEase = 'expo.out'\\n\\n    // slider\\n\\n    let self = new Xt.Slider(object, {\\n      instant: {\\n        elements: true,\\n        elementsInner: true,\\n      },\\n      durationOn: Xt.vars.timeLarge,\\n      durationOff: Xt.vars.timeSmall,\\n      auto: {\\n        time: 4000,\\n      },\\n      autoHeight: false,\\n      groupMq: false,\\n      drag: {\\n        overflow: false,\\n      },\\n    })\\n\\n    // drag\\n\\n    const eventDrag = () => {\\n      const tr = self.targets.filter(x => self.hasCurrent(x))[0]\\n      // assetMask\\n      const assetMasks = tr.querySelectorAll('.featured-item_asset .media-container')\\n      for (const assetMask of assetMasks) {\\n        gsap.set(assetMask, { x: -100 * self.detail.dragRatio * self.direction + '%' })\\n        const assetMaskInner = assetMask.querySelector('.media-inner')\\n        gsap.set(assetMaskInner, { x: 100 * self.detail.dragRatio * self.direction + '%', opacity: 1 })\\n      }\\n      // asset\\n      const assets = tr.querySelectorAll('.featured-item_asset img')\\n      for (const asset of assets) {\\n        gsap.set(asset, { scale: 1 + assetZoom * self.detail.dragRatio })\\n      }\\n      // cardContent\\n      const cardContents = tr.querySelectorAll('.slide_card .card-item')\\n      for (const cardContent of cardContents) {\\n        gsap.set(cardContent, { x: -cardContentX * self.detail.dragRatio * self.direction, opacity: self.detail.dragRatioInverse })\\n      }\\n    }\\n\\n    self.dragger.addEventListener('drag.xt', eventDrag)\\n\\n    // dragreset\\n\\n    const eventDragReset = () => {\\n      const tr = self.targets.filter(x => self.hasCurrent(x))[0]\\n      // assetMask\\n      const assetMasks = tr.querySelectorAll('.featured-item_asset .media-container')\\n      for (const assetMask of assetMasks) {\\n        gsap.to(assetMask, { x: 0, duration: Xt.vars.timeTiny, ease: assetMaskEaseOff })\\n        const assetMaskInner = assetMask.querySelector('.media-inner')\\n        gsap.to(assetMaskInner, { x: 0, opacity: 1, duration: Xt.vars.timeTiny, ease: assetMaskEaseOff })\\n      }\\n      // asset\\n      const assets = tr.querySelectorAll('.featured-item_asset img')\\n      for (const asset of assets) {\\n        gsap.to(asset, { scale: 1, duration: Xt.vars.timeTiny, ease: assetEaseOff })\\n      }\\n      // cardContent\\n      const cardContents = tr.querySelectorAll('.slide_card .card-item')\\n      for (const cardContent of cardContents) {\\n        gsap.to(cardContent, { x: 0, opacity: 1, duration: Xt.vars.timeTiny, ease: cardContentEaseOff })\\n      }\\n    }\\n\\n    self.dragger.addEventListener('dragreset.xt', eventDragReset)\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        if (self.initial) {\\n          // assetMask\\n          const assetMasks = tr.querySelectorAll('.featured-item_asset .media-container')\\n          for (const assetMask of assetMasks) {\\n            gsap.killTweensOf(assetMask)\\n            gsap.set(assetMask, { x: 0 })\\n            const assetMaskInner = assetMask.querySelector('.media-inner')\\n            gsap.killTweensOf(assetMaskInner)\\n            gsap.set(assetMaskInner, { x: 0, opacity: 1 })\\n          }\\n          // asset\\n          const assets = tr.querySelectorAll('.featured-item_asset img')\\n          for (const asset of assets) {\\n            gsap.killTweensOf(asset)\\n            gsap.set(asset, { scale: 1 })\\n          }\\n          // cardContent\\n          const cardContents = tr.querySelectorAll('.slide_card .card-item')\\n          for (const cardContent of cardContents) {\\n            gsap.killTweensOf(cardContent)\\n            gsap.set(cardContent, { x: 0, opacity: 1 })\\n          }\\n        } else {\\n          // assetMask\\n          const assetMasks = tr.querySelectorAll('.featured-item_asset .media-container')\\n          for (const assetMask of assetMasks) {\\n            if (!self.detail.dragging) {\\n              gsap.set(assetMask, { x: 100 * self.direction + '%' })\\n            }\\n            gsap.to(assetMask, { x: 0, duration: assetMaskTimeOn, ease: assetMaskEaseOn })\\n            const assetMaskInner = assetMask.querySelector('.media-inner')\\n            gsap.set(assetMaskInner, { x: -100 * self.direction + '%' })\\n            gsap.to(assetMaskInner, { x: 0, opacity: 1, duration: assetMaskTimeOn, ease: assetMaskEaseOn })\\n          }\\n          // asset\\n          const assets = tr.querySelectorAll('.featured-item_asset img')\\n          for (const asset of assets) {\\n            if (!self.detail.dragging) {\\n              gsap.set(asset, { scale: 1 + assetZoom })\\n            }\\n            gsap.to(asset, { scale: 1, duration: assetTimeOn, ease: assetEaseOn })\\n          }\\n          // cardContent\\n          const cardContents = tr.querySelectorAll('.slide_card .card-item')\\n          for (const cardContent of cardContents) {\\n            if (!self.detail.dragging) {\\n              gsap.set(cardContent, { x: cardContentX * self.direction, opacity: 0 })\\n            }\\n            gsap.to(cardContent, { x: 0, opacity: 1, duration: cardContentTimeOn, ease: cardContentEaseOn })\\n          }\\n          // card\\n          const card = tr.querySelector('.slide_card > .card')\\n          const cardHeight = card.clientHeight\\n          if (!self.detail.dragging) {\\n            gsap.set(card, { height: Xt.dataStorage.get(self.object, 'cardHeight') || cardHeight })\\n          }\\n          gsap.to(card, { height: cardHeight, duration: cardTime, ease: cardEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('on.xt', eventOn, true)\\n\\n    // off\\n\\n    const eventOff = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        // assetMask\\n        const assetMasks = tr.querySelectorAll('.featured-item_asset .media-container')\\n        for (const assetMask of assetMasks) {\\n          gsap.to(assetMask, { x: -100 * self.direction + '%', duration: assetMaskTimeOff, ease: assetMaskEaseOff })\\n          const assetMaskInner = assetMask.querySelector('.media-inner')\\n          gsap.to(assetMaskInner, { x: 100 * self.direction + '%', opacity: 0, duration: assetMaskTimeOff, ease: assetMaskEaseOff })\\n        }\\n        // asset\\n        const assets = tr.querySelectorAll('.featured-item_asset img')\\n        for (const asset of assets) {\\n          gsap.to(asset, { scale: 1 + assetZoom, duration: assetTimeOff, ease: assetEaseOff })\\n        }\\n        // cardContent\\n        const cardContents = tr.querySelectorAll('.slide_card .card-item')\\n        for (const cardContent of cardContents) {\\n          gsap.to(cardContent, { x: -cardContentX * self.direction, opacity: 0, duration: cardContentTimeOff, ease: cardContentEaseOff })\\n        }\\n        // card\\n        const card = tr.querySelector('.slide_card > .card')\\n        gsap.set(card, { height: '' })\\n        Xt.dataStorage.set(self.object, 'cardHeight', card.clientHeight)\\n      }\\n    }\\n\\n    self.object.addEventListener('off.xt', eventOff, true)\\n\\n    // on elements\\n\\n    const eventOnElements = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.elements.includes(tr)) {\\n        // move scroll centering el\\n        const inner = self.object.querySelector('.slider-pagination_inner')\\n        const scroll = self.object.querySelector('.slider-pagination_scroll')\\n        if (inner.offsetWidth < scroll.offsetWidth) {\\n          self.object.classList.remove('slider--nonav')\\n          if (e.type === 'on.xt') {\\n            const widthInner = inner.offsetWidth\\n            const widthScroll = scroll.offsetWidth\\n            const leftEl = tr.offsetLeft\\n            const widthEl = tr.offsetWidth\\n            let final = widthInner / 2 - leftEl\\n            // contain initial\\n            final = leftEl + widthEl / 2 > widthInner / 2 ? final - widthEl / 2 : 0\\n            // contain final\\n            final = leftEl + widthEl / 2 < widthScroll - widthInner / 2 ? final : -widthScroll + widthInner\\n            // set\\n            scroll.style.left = final + 'px'\\n          }\\n        } else {\\n          if (e.type === 'on.xt') {\\n            self.object.classList.add('slider--nonav')\\n            // set\\n            scroll.style.left = ''\\n          }\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('on.xt', eventOnElements, true)\\n    self.object.addEventListener('medialoaded.xt', eventOnElements, true)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"/**\\n * demo\\n */\\n\\n#gatsby_body-inner {\\n  position: relative;\\n  height: 100vh;\\n  height: calc(var(--vh, 1vh) * 100);\\n}\\n\\nhtml.gatsby_iframe-inside {\\n  body {\\n    @apply overflow-main;\\n    background: theme('colors.white') !important;\\n  }\\n  #gatsby_body-inner {\\n    height: initial;\\n    max-width: none;\\n  }\\n  &.gatsby_iframe-container {\\n    #gatsby_body-inner {\\n      @apply p-4 md:p-6 lg:p-8;\\n    }\\n  }\\n}\\n\\n.gatsby_demo_source {\\n  @apply p-4 md:p-6 lg:p-8;\\n}\\n\\n/**\\n * code\\n */\\n\\npre[class*=\\\"language-\\\"] {\\n  overflow-x: hidden !important;\\n  overflow-y: auto !important;\\n  @apply overflow-sub my-5 mt-fc mb-lc py-5 px-5;\\n  width: 100%;\\n  border-radius: 6px;\\n  .gatsby_demo_code_body & {\\n    border-top-left-radius: 0;\\n    border-top-right-radius: 0;\\n  }\\n  border: 0 !important;\\n  line-height: 0 !important;\\n  font-size: 1rem;\\n  code {\\n    width: 100%;\\n    background: transparent !important;\\n    @apply font-mono;\\n    font-size: 0.8125rem !important;\\n    line-height: 1.4 !important;\\n    white-space: pre-wrap !important;\\n  }\\n}\\n\\n/**\\n * .demo\\n */\\n\\npre {\\n  max-height: 21rem;\\n}\\n\\n.gatsby_demo {\\n  @apply my-6 mt-fc mb-lc;\\n  border-radius: 6px;\\n  pre {\\n    border-width: 0 !important;\\n  }\\n  @apply border-3 border-gray-200;\\n  transition: border-color theme('transitionDuration.500') theme('transitionTimingFunction.out');\\n  #gatsby_open-full & {\\n    border: 0 !important;\\n    .gatsby_demo_code_body,\\n    .gatsby_demo_item:not(.populated-iframe) {\\n      overflow-x: hidden;\\n      overflow-y: auto;\\n      @apply overflow-main;\\n    }\\n    .gatsby_demo_item.active-code {\\n      overflow-x: hidden;\\n      overflow-y: hidden;\\n    }\\n    .gatsby_demo_tabs_right {\\n      > * {\\n        opacity: 1 !important;\\n        transform: initial !important;\\n      }\\n    }\\n  }\\n}\\n\\n.gatsby_demo_tabs, .gatsby_demo_code_tabs, .gatsby_demo_code_body {\\n  @apply bg-gray-200;\\n}\\n\\n.gatsby_demo_tabs, .gatsby_demo_code_tabs {\\n  position: relative;\\n  display: flex;\\n  align-items: flex-start;\\n  justify-content: space-between;\\n  padding: 7px;\\n  .btn {\\n    border-width: 3px;\\n    padding: .5em .75em;\\n    font-size: 10px;\\n    @apply text-black links-default text-opacity-50 rounded-md border-transparent;\\n    &:hover, &:active, &.active {\\n      @apply border-gray-300 bg-white text-opacity-100;\\n    }\\n  }\\n}\\n\\n.gatsby_demo_tabs_right, .gatsby_demo_code_tabs_right {\\n  flex-wrap: nowrap;\\n  .btn {\\n    padding-top: .6em;\\n    padding-bottom: .6em;\\n    [class^='icon-'], [class*=' icon-'] {\\n      position: relative;\\n      top: .05em;\\n      font-size: 12px;\\n      margin-top: -2px;\\n      margin-bottom: -2px;\\n    }\\n  }\\n}\\n\\n.gatsby_demo_tabs_inner {\\n  margin-top: -3px;\\n}\\n\\n.gatsby_demo_text {\\n  @apply py-2 px-4 border border-gray-200;\\n}\\n\\n.gatsby_demo_source {\\n  &:not(.gatsby_demo_source--from) {\\n    display: none !important;\\n  }\\n}\\n\\n.gatsby_demo_item {\\n  position: relative;\\n  .gatsby_demo_item_wrapper {\\n    position: relative;\\n    #gatsby_open-full & {\\n      height: auto !important;\\n    }\\n  }\\n  .gatsby_demo_code {\\n    order: 2;\\n    #gatsby_open-full & {\\n      @apply toggle;\\n      order: -1;\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n    }\\n    .gatsby_demo_code_inner {\\n      display: flex;\\n      flex-flow: column;\\n      height: 100%;\\n    }\\n    &.active {\\n      z-index: 11;\\n    }\\n  }\\n  &[data-iframe] {\\n    &.loaded {\\n      .gatsby_demo_item_wrapper > .loader {\\n        display: none;\\n      }\\n    }\\n    iframe {\\n      display: block;\\n      width: 100%;\\n      height: 0;\\n      border: 0;\\n      &:not(.gatsby_iframe-full) {\\n        height: 36rem;\\n      }\\n    }\\n  }\\n  &:not(.populated) {\\n    .gatsby_demo_code_body {\\n      width: 100%;\\n      overflow: hidden;\\n    }\\n  }\\n}\\n\\n.gatsby_demo_code_body {\\n  z-index: 1;\\n  flex: 1;\\n}\\n\\n[data-gatsby-listing-toggle] + .gatsby_demo {\\n  display: none;\\n  .gatsby_demo_source_populate {\\n    display: inline-flex; /* populate source disable */\\n  }\\n}\\n\\n.gatsby_demo, .gatsby_demo_item, .gatsby_demo_item_wrapper, .gatsby_demo_item_wrapper iframe {\\n  display: flex;\\n  flex-direction: column;\\n  #gatsby_open-full & {\\n    flex: 1 1 auto;\\n    width: 100%;\\n  }\\n}\\n\\n.btn-show-code {\\n  display: none;\\n  #gatsby_open-full & {\\n    display: inline-flex;\\n  }\\n}\\n\\n.btn-open-iframe {\\n  display: none !important;\\n  padding-top: 0.4em !important;\\n  padding-bottom: 0.4em !important;\\n  > span {\\n    display: inline-block;\\n    position: relative;\\n    top: auto !important;\\n    margin-top: -.5em;\\n    margin-bottom: -.5em;\\n  }\\n}\\n\\n#gatsby_open-full {\\n  position: fixed;\\n  z-index: calc(theme('zIndex.top') + 100);\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  @apply bg-white;\\n  @screen lg {\\n    margin-left: 18rem;\\n  }\\n  @screen xl {\\n    margin-left: 20rem;\\n  }\\n  > .btn-close {\\n    @apply text-white links-inverse rounded-md border-accent-500 bg-accent-500 hover:text-opacity-75 hover:border-accent-600 hover:bg-accent-600;\\n    top: 0;\\n    right: 0;\\n    border-radius: 0;\\n  }\\n  .gatsby_demo_tabs_right {\\n    padding-right: 45px;\\n  }\\n  .btn-open-full {\\n    display: none !important;\\n  }\\n  .btn-open-iframe.gatsby_with-iframe {\\n    display: block !important;\\n  }\\n}\\n\\n#gatsby_open-full-content {\\n  display: flex;\\n  height: 100vh;\\n  height: calc(var(--vh, 1vh) * 100);\\n  pre {\\n    max-height: none;\\n  }\\n}\\n\\n.gatsby_table {\\n  border-radius: 6px;\\n  border: 3px solid theme('colors.gray.200');\\n}\\n\\n.gatsby_note {\\n  @apply my-5 mt-fc mb-lc text-sm;\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '#demo--drop-events',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Drop(object, {\\n      elements: ':scope > .drop-container',\\n      targets: ':scope > .drop-container > .drop',\\n    })\\n\\n    // log\\n\\n    const log = document.querySelector('#demo--drop-events-log')\\n\\n    const logAdd = text => {\\n      log.innerHTML += text + '<br/>'\\n      // scroll\\n      log.scrollTo(0, log.scrollHeight)\\n      // hr\\n      clearTimeout(window.logTimeout)\\n      window.logTimeout = setTimeout(() => {\\n        log.innerHTML += '<hr/>'\\n      }, 1000)\\n    }\\n\\n    // first element\\n\\n    const firstEl = document.querySelector('#demo--drop-events-first-element')\\n\\n    const firstElFnc = () => {\\n      logAdd('<strong>1st element</strong>')\\n      const elements = self.elements\\n      elements[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstEl.addEventListener('click', firstElFnc)\\n\\n    // first target\\n\\n    const firstTr = document.querySelector('#demo--drop-events-first-target')\\n\\n    const firstTrFnc = () => {\\n      logAdd('<strong>1st target</strong>')\\n      const targets = self.targets\\n      targets[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstTr.addEventListener('click', firstTrFnc)\\n\\n    // add\\n\\n    const addBtn = document.querySelector('#demo--drop-events-add')\\n    const btnPrimary = require('components/snippets/classes/btn-primary').default\\n    const btnDefaultDrop = require('components/snippets/classes/btn-default-drop').default\\n    const cardDefaultDropList = require('components/snippets/classes/card-default-drop-list').default\\n\\n    const addFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>add</strong>')\\n        // elements\\n        const elements = self.elements.filter(x => !x.classList.contains('xt-wrap'))\\n        const indexEl = elements.length + 1\\n        const strEl = `\\n        <div class=\\\"drop-container\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnPrimary()}\\\">\\n            Element ${indexEl}\\n          </button>\\n\\n          <div class=\\\"drop\\\" title=\\\"Target ${indexEl}\\\">\\n            <div class=\\\"drop-inner\\\">\\n              <div class=\\\"w-64 py-3 ${cardDefaultDropList()}\\\">\\n                <nav class=\\\"list flex-col\\\">\\n                  <a href=\\\"#\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n                  </a>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n                    Dolor sit\\n                  </button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnDefaultDrop()}\\\">\\n                    Amet\\n                  </button>\\n                </nav>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      `\\n        document.querySelector('#demo--drop-events').append(Xt.createElement(strEl))\\n        // reinit\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    addBtn.addEventListener('click', addFnc)\\n\\n    // remove\\n\\n    const removeBtn = document.querySelector('#demo--drop-events-remove')\\n\\n    const removeFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>remove</strong>')\\n        // element\\n        const elements = self.elements\\n        elements[elements.length - 1].remove()\\n        // reinit\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    removeBtn.addEventListener('click', removeFnc)\\n\\n    // block\\n\\n    const blockBtn = document.querySelector('#demo--drop-events-block')\\n\\n    const blockFnc = () => {\\n      logAdd('<strong>block/unblock</strong>')\\n      for (const element of self.elements) {\\n        if (element.classList.contains('xt-block')) {\\n          element.classList.remove('xt-block')\\n        } else {\\n          element.classList.add('xt-block')\\n        }\\n      }\\n    }\\n\\n    blockBtn.addEventListener('click', blockFnc)\\n\\n    // reinit\\n\\n    const reinitBtn = document.querySelector('#demo--drop-events-reinit')\\n\\n    const reinitFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    reinitBtn.addEventListener('click', reinitFnc)\\n\\n    // restart\\n\\n    const restartBtn = document.querySelector('#demo--drop-events-restart')\\n\\n    const restartFnc = () => {\\n      logAdd('<strong>restart</strong>')\\n      self.restart()\\n    }\\n\\n    restartBtn.addEventListener('click', restartFnc)\\n\\n    // destroy\\n\\n    const destroyBtn = document.querySelector('#demo--drop-events-destroy')\\n\\n    const destroyFnc = () => {\\n      logAdd('<strong>destroy</strong>')\\n      self.destroy()\\n    }\\n\\n    destroyBtn.addEventListener('click', destroyFnc)\\n\\n    // unmount\\n\\n    const unmountBtn = document.querySelector('#demo--drop-events-unmount')\\n\\n    const unmountFnc = () => {\\n      logAdd('<strong>unmount</strong>')\\n      unmount()\\n    }\\n\\n    unmountBtn.addEventListener('click', unmountFnc)\\n\\n    // events\\n\\n    const events = e => {\\n      let str = 'event <strong>' + e.type + '</strong>' + ' direction <strong>' + self.direction + '</strong>'\\n      if (e.target.getAttribute('title')) {\\n        str += ' from <strong>' + e.target.getAttribute('title') + '</strong>'\\n      } else if (e.target.querySelector(':scope > .btn')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > .btn').textContent + '</strong>'\\n      } else if (e.target.querySelector('.card > *')) {\\n        str += ' from <strong>' + e.target.querySelector('.card > *').textContent + '</strong>'\\n      } else if (e.target.querySelector(':scope > *')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > *').textContent + '</strong>'\\n      } else if (!e.target.querySelector('*')) {\\n        str += ' from <strong>' + e.target.innerHTML + '</strong>'\\n      }\\n      logAdd(str)\\n    }\\n\\n    object.addEventListener('init.xt', events)\\n    object.addEventListener('destroy.xt', events)\\n    document.addEventListener('on.xt', events, true)\\n    document.addEventListener('off.xt', events, true)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      firstEl.removeEventListener('click', firstElFnc)\\n      firstTr.removeEventListener('click', firstTrFnc)\\n      addBtn.removeEventListener('click', addFnc)\\n      removeBtn.removeEventListener('click', removeFnc)\\n      reinitBtn.removeEventListener('click', reinitFnc)\\n      restartBtn.removeEventListener('click', restartFnc)\\n      destroyBtn.removeEventListener('click', destroyFnc)\\n      unmountBtn.removeEventListener('click', unmountFnc)\\n      object.removeEventListener('init.xt', events)\\n      object.removeEventListener('destroy.xt', events)\\n      document.removeEventListener('on.xt', events, true)\\n      document.removeEventListener('off.xt', events, true)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"/**\\n * docs icons\\n */\\n\\n.gatsby_btn-site_header_top_social {\\n  font-size: 1rem;\\n  .icon {\\n    fill: rgba(255, 255, 255, 0.25);\\n  }\\n}\\n\\n.gatsby_demo_tabs, .gatsby_demo_code_tabs {\\n  .btn:not(.btn-close) {\\n    .icon {\\n      @apply icon-lg;\\n    }\\n  }\\n}\\n\\n#gatsby_open-full {\\n  > .btn-close {\\n    padding: 10px;\\n    font-size: 23px;\\n  }\\n}\\n\\n/**\\n * .gatsby_make-line\\n */\\n\\n.gatsby_make-line {\\n  position: relative;\\n  z-index: 1;\\n  .gatsby_make-line_container {\\n    display: block;\\n    position: relative;\\n    width: 100%;\\n    .gatsby_make-line_line {\\n      display: inline-block;\\n      padding-right: 15px;\\n      background: theme('colors.white');\\n    }\\n    .gatsby_make-line_line:after {\\n      content: '';\\n      position: absolute;\\n      z-index: -1;\\n      bottom: .5em;\\n      left: 0;\\n      width: 100%;\\n      height: 2px;\\n      background: theme('colors.gray.500');\\n    }\\n  }\\n  .gatsby_make-line_container {\\n    .gatsby_make-line_line:after {\\n      left: 100%;\\n      width: 0;\\n      opacity: 0;\\n      transition: all theme('transitionDuration.500') theme('transitionTimingFunction.out');\\n    }\\n  }\\n  &:hover, &:active {\\n    .gatsby_make-line_container {\\n      .gatsby_make-line_line:after {\\n        left: 0;\\n        width: 100%;\\n        opacity: 1;\\n        transition: all theme('transitionDuration.500') theme('transitionTimingFunction.in');\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * .gatsby_make-anchor\\n */\\n\\n.gatsby_make-anchor {\\n  position: relative;\\n  width: 100%;\\n  a:not([class]) {\\n    display: block;\\n    color: inherit !important;\\n  }\\n  .gatsby_site_article_anchor {\\n    pointer-events: none;\\n  }\\n  .gatsby_site_article_anchor {\\n    opacity: 0;\\n    transition: all theme('transitionDuration.500') theme('transitionTimingFunction.out') theme('transitionDelay.500');\\n  }\\n  &:hover, &:active {\\n    .gatsby_site_article_anchor {\\n      opacity: 1;\\n      transition: all theme('transitionDuration.500') theme('transitionTimingFunction.in') theme('transitionDelay.500');\\n    }\\n  }\\n}\\n\\n.gatsby_site_article_anchor {\\n  position: absolute;\\n  z-index: 2;\\n  bottom: -4px;\\n  right: 12px;\\n  h2 & {\\n    bottom: -1px;\\n  }\\n  .btn {\\n    padding: 7px;\\n    font-size: 1.25rem;\\n    border-radius: 50%;\\n    border-color: theme('colors.white') !important;\\n    background: theme('colors.white') !important;\\n    color: theme('colors.accent.500');\\n    line-height: 1;\\n  }\\n}\\n\";","export default \"export default () => {\\n  return `text-white links-inverse rounded-md bg-accent-500`\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nimport 'xtendui/src/core/slider'\\nimport 'xtendui/src/addons/propagate-interaction'\\nimport gsap from 'gsap'\\n\\n/**\\n * PropagateInteraction\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-hero-v2 body a, #iframe--fashion-hero-v2 body button', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    new Xt.PropagateInteraction(object, {\\n      targets: '.btn',\\n    })\\n  },\\n})\\n\\n/**\\n * link animation\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-hero-v2 body .slide', // add your own selector instead of body to contain the code\\n  mount: function (object) {\\n    // vars\\n\\n    const links = object.tagName === 'A' || object.tagName === 'BUTTON' ? Xt.arrSingle(object) : object.querySelectorAll('a, button')\\n    const img = object.querySelector('.media')\\n    const imgOpacityIn = 0.75\\n    const imgOpacityOut = 1\\n\\n    // enter\\n\\n    const eventEnter = () => {\\n      // img\\n      gsap.to(img, { opacity: imgOpacityIn, duration: Xt.vars.timeSmall, ease: 'quart.out' })\\n    }\\n\\n    for (const link of links) {\\n      link.addEventListener('mouseenter', eventEnter)\\n    }\\n\\n    // enter\\n\\n    const eventLeave = () => {\\n      // img\\n      gsap.to(img, { opacity: imgOpacityOut, duration: Xt.vars.timeSmall, ease: 'quart.out', overwrite: true })\\n    }\\n\\n    for (const link of links) {\\n      link.addEventListener('mouseleave', eventLeave)\\n    }\\n  },\\n})\\n\\n/**\\n * slider\\n */\\n\\nXt.mount.push({\\n  matches: '#iframe--fashion-hero-v2 body .slider', // add your own selector instead of body to contain the code\\n  mount: object => {\\n    // vars\\n\\n    const assetCoverTime = Xt.vars.timeBig\\n    const assetCoverEase = 'quint.inOut'\\n\\n    const assetMaskTime = Xt.vars.timeBig - 100 // @FIX - 100 to cover skew\\n    const assetMaskEase = 'quint.inOut'\\n\\n    const assetZoom = 0.25\\n    const assetTime = Xt.vars.timeBig\\n    const assetDelay = Xt.vars.timeBig / 2\\n    const assetEase = 'expo.out'\\n\\n    const contentX = 50\\n    const contentTime = Xt.vars.timeBig\\n    const contentDelayOn = Xt.vars.timeTiny\\n    const contentEase = 'quint.inOut'\\n\\n    // slider\\n\\n    let self = new Xt.Slider(object, {\\n      instant: true,\\n      durationOn: Xt.vars.timeBig,\\n      durationOff: Xt.vars.timeBig,\\n      auto: {\\n        time: 5000,\\n        pause: '.hero_content_inner',\\n      },\\n      autoHeight: false,\\n      groupMq: false,\\n      drag: {\\n        duration: Xt.vars.timeBig,\\n        overflow: false,\\n      },\\n    })\\n\\n    // init\\n\\n    for (const target of self.targets) {\\n      if (!target.querySelector('.hero_cover')) {\\n        // inject\\n        const inject = Xt.createElement(`<div class=\\\"hero_cover\\\"></div>`)\\n        gsap.set(inject, { x: 100 * self.direction + '%', skewX: 0 })\\n        target.prepend(inject)\\n      }\\n    }\\n\\n    // drag\\n\\n    const eventDrag = () => {\\n      const tr = self.targets.filter(x => self.hasCurrent(x))[0]\\n      // cover\\n      const assetCover = tr.querySelector('.hero_cover')\\n      const skew = self.detail.dragRatio < 0.5 ? 10 * (self.detail.dragRatio * 1.5) : 10 * (self.detail.dragRatioInverse * 1.5) // * 2 would be the same as the normal skew\\n      gsap.set(assetCover, { x: 100 * self.detail.dragRatioInverse * self.direction + '%', skewX: skew * self.direction })\\n      // content\\n      const content = tr.querySelector('.hero_content')\\n      gsap.set(content, { x: -contentX * self.detail.dragRatio * self.direction, opacity: 1 * self.detail.dragRatioInverse })\\n    }\\n\\n    self.dragger.addEventListener('drag.xt', eventDrag)\\n\\n    // dragreset\\n\\n    const eventDragReset = () => {\\n      const tr = self.targets.filter(x => self.hasCurrent(x))[0]\\n      // cover\\n      const assetCover = tr.querySelector('.hero_cover')\\n      gsap.to(assetCover, { skewX: 0, x: 100 * self.direction + '%', duration: Xt.vars.timeTiny, ease: assetCoverEase })\\n      // content\\n      const content = tr.querySelector('.hero_content')\\n      gsap.to(content, { x: 0, opacity: 1, duration: Xt.vars.timeTiny, ease: contentEase })\\n    }\\n\\n    self.dragger.addEventListener('dragreset.xt', eventDragReset)\\n\\n    // on\\n\\n    const eventOn = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        if (self.initial) {\\n          // cover\\n          const assetCover = tr.querySelector('.hero_cover')\\n          gsap.killTweensOf(assetCover)\\n          gsap.set(assetCover, { x: 100 * self.direction + '%', skewX: 0 })\\n          // assetMask\\n          const assetMask = tr.querySelector('.hero')\\n          gsap.killTweensOf(assetMask)\\n          gsap.set(assetMask, { x: 0 })\\n          const assetMaskInner = assetMask.querySelector('.hero_inner')\\n          gsap.killTweensOf(assetMaskInner)\\n          gsap.set(assetMaskInner, { x: 0 })\\n          // asset\\n          const asset = tr.querySelector('.hero_asset .media')\\n          gsap.killTweensOf(asset)\\n          gsap.set(asset, { scale: 1 })\\n        } else {\\n          // cover\\n          const assetCover = tr.querySelector('.hero_cover')\\n          gsap.set(assetCover, { x: 100 * self.direction + '%', skewX: 0 })\\n          gsap.to(assetCover, { x: -100 * self.direction + '%', duration: assetCoverTime, ease: assetCoverEase })\\n          gsap.to(assetCover, { skewX: 5 * self.direction, duration: assetCoverTime / 2, ease: assetCoverEase }).eventCallback('onComplete', () => {\\n            gsap.to(assetCover, { skewX: 0, duration: assetCoverTime / 2, ease: assetCoverEase })\\n          })\\n          // assetMask\\n          const assetMask = tr.querySelector('.hero')\\n          gsap.set(assetMask, { x: 125 * self.direction + '%' }) // @FIX 125% to cover skew\\n          gsap.to(assetMask, { x: 0, duration: assetMaskTime, ease: assetMaskEase })\\n          const assetMaskInner = assetMask.querySelector('.hero_inner')\\n          gsap.set(assetMaskInner, { x: -125 * self.direction + '%' }) // @FIX 125% to cover skew\\n          gsap.to(assetMaskInner, { x: 0, duration: assetMaskTime, ease: assetMaskEase })\\n          // asset\\n          const asset = tr.querySelector('.hero_asset .media')\\n          gsap.set(asset, { scale: 1 + assetZoom })\\n          gsap.to(asset, { scale: 1, duration: assetTime, ease: assetEase, delay: assetDelay })\\n          // content\\n          const content = tr.querySelector('.hero_content')\\n          gsap.set(content, { x: contentX * self.direction })\\n          gsap.to(content, { x: 0, opacity: 1, duration: contentTime, ease: contentEase, delay: contentDelayOn })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('on.xt', eventOn, true)\\n\\n    // on\\n\\n    const eventOff = e => {\\n      const tr = e.target\\n      // useCapture delegation\\n      if (self.targets.includes(tr)) {\\n        if (self.detail.dragging) {\\n          // cover\\n          const assetCover = tr.querySelector('.hero_cover')\\n          gsap.to(assetCover, { x: -100 * self.direction + '%', duration: assetCoverTime, ease: assetCoverEase })\\n          gsap.to(assetCover, { skewX: 10 * self.direction, duration: assetCoverTime / 2, ease: assetCoverEase }).eventCallback('onComplete', () => {\\n            gsap.to(assetCover, { skewX: 0, duration: assetCoverTime / 2, ease: assetCoverEase })\\n          })\\n          // assetMask\\n          const assetMask = tr.querySelector('.hero')\\n          gsap.to(assetMask, { x: -100 * self.direction + '%', duration: assetMaskTime, ease: assetMaskEase })\\n          const assetMaskInner = assetMask.querySelector('.hero_inner')\\n          gsap.to(assetMaskInner, { x: 100 * self.direction + '%', duration: assetMaskTime, ease: assetMaskEase })\\n          // content\\n          const content = tr.querySelector('.hero_content')\\n          gsap.to(content, { x: -contentX * self.direction, opacity: 0, duration: contentTime, ease: contentEase })\\n        }\\n      }\\n    }\\n\\n    self.object.addEventListener('off.xt', eventOff, true)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \".demo--scroll-block {\\n  .card {\\n    /* mode-infinite */\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n    &.inverse {\\n      @apply translate-x-4;\\n    }\\n    /* in */\\n    &.fade-in {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    /* out */\\n    &.fade-out {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"export default () => {\\n  return `text-black text-opacity-50 text-xs leading-snug`\\n}\\n\";","export default \"const round = num =>\\n  num\\n    .toFixed(7)\\n    .replace(/(\\\\.[0-9]+?)0+$/, '$1')\\n    .replace(/\\\\.0$/, '')\\nconst rem = px => `${round(px / 16)}rem`\\n\\nmodule.exports = {\\n  component: theme => ({\\n    '.badge': {\\n      // setup\\n      display: 'inline-block',\\n      verticalAlign: 'middle',\\n      // styles\\n      fontFamily: theme('fontFamily.sans').toString(),\\n      fontWeight: theme('fontWeight.semibold'),\\n      lineHeight: theme('lineHeight.snug'),\\n      letterSpacing: theme('letterSpacing.wider'),\\n      textTransform: 'uppercase',\\n      // animation\\n      'a&, button&, label&': {\\n        zIndex: theme('zIndex.base'),\\n        transitionProperty: 'all',\\n        transitionDuration: theme('transitionDuration.500'),\\n        transitionTimingFunction: theme('transitionTimingFunction.out'),\\n        '&:hover, &:active, &.active': {\\n          zIndex: theme('zIndex.active'),\\n          transitionTimingFunction: theme('transitionTimingFunction.in'),\\n        },\\n      },\\n    },\\n    '.badge-sm': {\\n      // styles\\n      padding: `${rem(6)} ${rem(10)}`,\\n      fontSize: rem(10),\\n    },\\n    '.badge-md': {\\n      // styles\\n      padding: `${rem(8)} ${rem(14)}`,\\n      fontSize: rem(12),\\n    },\\n    '.badge-lg': {\\n      // styles\\n      padding: `${rem(10)} ${rem(18)}`,\\n      fontSize: rem(14),\\n    },\\n  }),\\n}\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"Interaction\\\"\\ndate: \\\"2010-10-10\\\"\\n---\\n\\n## Class\\n\\nYou can customize the **class names** used with the component.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `class:String`                          | `fade fade-scroll`        | Class name for activation            |\\n| Option                  | `classIn:String`                          | `fade-in`        | Class name for in animation            |\\n| Option                  | `classOut:String`                          | `fade-out`        | Class name for out animation            |\\n| Option                  | `classDone:String`                          | `done`        | Class name for in animation done            |\\n| Option                  | `classInitial:String`                          | `initial`        | Class name for initialization            |\\n| Option                  | `classInverse:String`                          | `inverse`        | Class name for inverse direction activation            |\\n\\n</div>\\n\\nYou can start with toggled elements and targets just by adding **one of the class names for activation** to the **elements** or **targets**.\\n\\nAdditionally on component initialization the class `xt-scroll` gets added to the **object** (the DOM element you assigned the component).\\n\\n## Mode\\n\\nYou can set **scroll mode** with css selectors.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          |  Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Selector                  | `&:not(.scroll-done) {`                     | Animate once            |\\n| Selector                  | ` &:not(.scroll-outside) {`                     | Animate inside viewport once            |\\n| Selector                  | `&.scroll-outside {`                     |  Animate outside viewport            |\\n| Selector                  | `&.scroll-outside:not(.scroll-done) {`                     |  Animate outside viewport once            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/mode-infinite\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/mode-once\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/mode-inside\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/mode-outside\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/mode-outside-once\\\">\\n  </div>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/mode-responsive\\\">\\n  </div>\\n</demo>\\n\\n## Distance\\n\\nUse `distance: Number` activation and deactivation distance. For percent use `distance: 'Number%'`.\\n\\nYou can also set a **fallback** distance from top and bottom for elements that are too close to window's top or bottom.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `distance:Number|Percent`                          | `100`        | Activation distance from window's top and bottom            |\\n| Option                  | `fallback:Number|Percent`                          | `0`        | Fallback distance when too close to the start and end of the page            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/distance\\\">\\n  </div>\\n</demo>\\n\\n## Delay\\n\\nYou can use `delayOn` and `delayOff` for a delay on activation and deactivation.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `delayOn:Milliseconds|Function`                          | `false`        | Activation delay            |\\n| Option                  | `delayOff:Milliseconds|Function`                          | `false`        | Deactivation delay            |\\n\\n</div>\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/delay\\\">\\n  </div>\\n</demo>\\n\\n## Sticky\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `sticky:String`                          | `false`        | Sticky mode 'absolute' or 'fixed' or 'fixed-always'            |\\n\\n</div>\\n\\n@TODO\\n\\n## Position\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Default / Arguments                       | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Option                  | `trigger:Number|Percent`                          | `'100%'`        | Activation trigger distance viewport's top and bottom            |\\n| Option                  | `start:Number|Percent`                          | `'100%'`        | Activation start distance viewport's top and bottom           |\\n| Option                  | `end:Number|Percent`                          | `false`        | Activation end distance viewport's top and bottom            |\\n| Option                  | `fallback:Number|Percent`                          | `0`        | Fallback distance when too close to the start and end of the page            |\\n\\n</div>\\n\\n@TODO\\n\\n## Block\\n\\nYou can block the activations with the class `.xt-block` on elements.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                      | Syntax                          | Mixin            | Description                   |\\n| ----------------------- | ----------------------------------------- | -----------------------------| ----------------------------- |\\n| Component                  | `.xt-block`                     | `NOT POSSIBLE`                | Block scroll on element            |\\n\\n</div>\\n\\n<demo>\\n  <div class=\\\"gatsby_demo_item toggle\\\" data-iframe=\\\"iframe/components/core/scroll/block\\\">\\n  </div>\\n</demo>\\n\";","export default \"import { Xt } from 'xtendui'\\n\\nXt.mount.push({\\n  matches: '.demo--sticky-block',\\n  mount: object => {\\n    // vars\\n\\n    const btn = object.querySelector('.demo--sticky-block--btn')\\n\\n    // init\\n\\n    let self = new Xt.Sticky(object, {\\n      sticky: 'absolute',\\n    })\\n\\n    // eventBlock\\n\\n    const eventBlock = () => {\\n      for (const element of self.elements) {\\n        // block\\n        if (element.classList.contains('xt-block')) {\\n          // unblock\\n          element.classList.remove('xt-block')\\n          // recheck\\n          dispatchEvent(new CustomEvent('sticky.trigger.xt'))\\n        } else {\\n          // recheck\\n          dispatchEvent(new CustomEvent('sticky.trigger.xt'))\\n          // block\\n          element.classList.add('xt-block')\\n        }\\n      }\\n    }\\n\\n    btn.addEventListener('click', eventBlock)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Structure\\\"\\ntitle: \\\"Structure\\\"\\ndescription: \\\"Structure components and utilities.\\\"\\ndate: \\\"2050-10-10\\\"\\n---\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/structure.css.js](https://github.com/minimit/xtendui/blob/master/src/core/structure.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      structure: {\\n        variant: [],\\n        utility: theme => ({\\n          // modify utilities\\n        }),\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nCheck subpage to [use css](/components/core/structure/css) or [use javascript](/components/core/structure/javascript).\\n\";","export default \"import path from 'path'\\nconst iconSearch = require('components/snippets/icons').iconSearch\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Stroke default\\n</div>\\n\\n${iconSearch({ classes: 'icon-sm' })}\\n\\n${iconSearch({ classes: 'icon-md' })}\\n\\n${iconSearch({ classes: 'icon-lg' })}\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Stroke 1\\n</div>\\n\\n${iconSearch({ classes: 'icon-sm stroke-1' })}\\n\\n${iconSearch({ classes: 'icon-md stroke-1' })}\\n\\n${iconSearch({ classes: 'icon-lg stroke-1' })}\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Stroke 2\\n</div>\\n\\n${iconSearch({ classes: 'icon-sm stroke-2' })}\\n\\n${iconSearch({ classes: 'icon-md stroke-2' })}\\n\\n${iconSearch({ classes: 'icon-lg stroke-2' })}\\n`\\n\";","export default \".demo--scroll-inside {\\n  .card {\\n    /* mode-inside */\\n    &:not(.scroll-outside) {\\n      /* initial */\\n      @apply transform transition-all duration-500;\\n      @apply opacity-0 -translate-x-4;\\n      &.inverse {\\n        @apply translate-x-4;\\n      }\\n      /* in */\\n      &.fade-in {\\n        @apply opacity-100 translate-x-0 ease-in;\\n      }\\n      /* out */\\n      &.fade-out {\\n        @apply opacity-0 translate-x-4 ease-out;\\n        &.inverse {\\n          @apply -translate-x-4;\\n        }\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import path from 'path'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\nLorem ipsum <span class=\\\"separator separator-slash mx-2\\\"></span> dolor sit amet\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center justify-center\\\">\\n\\n  <div class=\\\"card ${cardDefault()}\\\">\\n    <div class=\\\"card-sm\\\">\\n      <div class=\\\"h5\\\">Small</div>\\n      <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n    </div>\\n    <span class=\\\"loader loader-y loader-y-animated loader-size-y\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Lorem ipsum\\n    <span class=\\\"loader loader-y loader-y-animated loader-size-y\\\">\\n      <span class=\\\"filler text-accent-500\\\">\\n        <span class=\\\"bg-current\\\"></span>\\n        <span class=\\\"bg-current opacity-25\\\"></span>\\n      </span>\\n    </span>\\n  </button>\\n\\n</div>\\n`\\n\";","export default \".demo--overlay-message-outside {\\n  position: fixed;\\n  z-index: theme('zIndex.overlay');\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  width: calc(100vw - 28rem); /* same as w-80 */\\n  pointer-events: none;\\n  > * {\\n    pointer-events: auto;\\n  }\\n  @media (max-width: theme('screens.md')) {\\n    display: none;\\n  }\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst btnPrimary = require('components/snippets/classes/btn-primary').default\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst cardDefaultOverlay = require('components/snippets/classes/card-default-overlay').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: true,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-1 items-center\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--overlay-events-first-element\\\">\\n    1st element\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--overlay-events-first-target\\\">\\n    1st target\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--overlay-events-block\\\">\\n    Block/Unblock\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--overlay-events-reinit\\\">\\n    Reinit\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--overlay-events-restart\\\">\\n    Restart\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--overlay-events-destroy\\\">\\n    Destroy\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm ${btnPrimary()}\\\" id=\\\"demo--overlay-events-unmount\\\">\\n    Unmount\\n  </button>\\n</div>\\n\\n<br/>\\n\\n<div class=\\\"list list-1 items-center\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" id=\\\"demo--overlay-events\\\">\\n    Toggle 0\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" id=\\\"demo--overlay-events-alt\\\">\\n    Toggle 1\\n  </button>\\n</div>\\n\\n<div class=\\\"overlay\\\" id=\\\"overlay-nested\\\">\\n  <div class=\\\"overlay-container max-w-5xl\\\">\\n    <div class=\\\"overlay-inner\\\">\\n\\n      <div class=\\\"card ${cardDefaultOverlay()}\\\">\\n        <div class=\\\"btn btn-close p-5 text-2xl\\\" aria-label=\\\"Close\\\">\\n          ${iconX()}\\n        </div>\\n        <div class=\\\"card-lg\\\">\\n          <div class=\\\"h3\\\">Overlay</div>\\n          <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus, lectus quis ornare volutpat, ligula nulla sollicitudin nunc, ut commodo nulla enim nec nisi.</p>\\n          <p>Morbi sodales, dolor a iaculis ornare, velit justo lacinia erat, pretium sollicitudin dui sem id justo.</p>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardDefault()} mt-6\\\">\\n  <div class=\\\"card-sm overflow-y-auto overflow-x-hidden overflow-sub max-h-56\\\" id=\\\"demo--overlay-events-log\\\">\\n  </div>\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Featured\\\"\\ntitle: \\\"brands-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-01-25\\\"\\ndemos: [\\n  \\\"iframe/themes/brands-featured-v1\\\"\\n]\\n---\\n\";","export default \"import path from 'path'\\nconst cardDefault = require('components/snippets/classes/card-default').default\\nconst cardPrimary = require('components/snippets/classes/card-primary').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefault()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Default</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardPrimary()}\\\">\\n      <div class=\\\"card-md\\\">\\n        <div class=\\\"h4\\\">Primary</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"import path from 'path'\\nconst cardDefaultFull = require('components/snippets/classes/card-default-full').default\\nconst cardPrimaryFull = require('components/snippets/classes/card-primary-full').default\\nconst iconX = require('components/snippets/icons').iconX\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"btn btn-close p-0 text-2xl\\\" aria-label=\\\"Close\\\">\\n        ${iconX()}\\n      </div>\\n      <div class=\\\"btn btn-close p-0 text-2xl\\\" aria-label=\\\"Close\\\">\\n        ${iconX()}\\n      </div>\\n      <div class=\\\"card-md p-0\\\">\\n        <div class=\\\"h4\\\">Default</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardPrimaryFull()}\\\">\\n      <div class=\\\"btn btn-close p-0 text-2xl\\\" aria-label=\\\"Close\\\">\\n        ${iconX()}\\n      </div>\\n      <div class=\\\"card-md p-0\\\">\\n        <div class=\\\"h4\\\">Primary</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \".demo--scroll-indicator {\\n  .card {\\n    /* mode-infinite */\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n    &.inverse {\\n      @apply translate-x-4;\\n    }\\n    /* in */\\n    &.fade-in {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    /* out */\\n    &.fade-out {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"export default () => {\\n  return `text-black text-opacity-75`\\n}\\n\";","export default \"/**\\n * sidebar\\n*/\\n\\n.gatsby_site_article_sidebar {\\n  @apply text-white links-inverse overflow-sub;\\n  background: theme('colors.accent.500');\\n  @screen lg {\\n    position: fixed;\\n    z-index: 2;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    overflow-x: hidden;\\n    overflow-y: scroll;\\n    line-height: 1;\\n  }\\n  @screen lg {\\n    width: 18rem;\\n  }\\n  @screen xl {\\n    width: 20rem;\\n  }\\n}\\n\\n/**\\n * header\\n*/\\n\\n.gatsby_logo-icon {\\n  display: inline-flex;\\n  align-items: center;\\n  height: 100%;\\n  img {\\n    width: 8.5rem;\\n  }\\n  img {\\n    transition: opacity theme('transitionDuration.500') theme('transitionTimingFunction.out');\\n  }\\n  &:hover, &:active {\\n    img {\\n      opacity: 0.9;\\n    }\\n  }\\n}\\n\\n.gatsby_site_header {\\n  @apply text-white links-inverse;\\n  padding-top: 2rem;\\n  padding-bottom: 1.25rem;\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem;\\n  @screen xl {\\n    padding-left: 2rem;\\n    padding-right: 2rem;\\n  }\\n}\\n\\n.gatsby_site_header_content {\\n  @apply w-full list;\\n  align-items: baseline;\\n  justify-content: space-between;\\n}\\n\\n.gatsby_site_header_top_social {\\n  @apply list list-0.5;\\n  align-items: stretch;\\n}\\n\\n.gatsby_btn-site_header_top_social {\\n  margin-top: -5px;\\n  margin-bottom: -5px;\\n  padding: 5px;\\n  border-radius: 0;\\n  @apply text-white links-inverse;\\n  line-height: 1;\\n  &:last-child {\\n    padding-right: 0;\\n  }\\n  opacity: 0.8;\\n  &:hover {\\n    opacity: 1;\\n    transform: scale(1.2);\\n    transition-duration: theme('transitionDuration.200');\\n  }\\n  &:active {\\n    opacity: 1;\\n    transform: scale(1);\\n    transition-duration: theme('transitionDuration.200');\\n  }\\n}\\n\\n.gatsby_site_header_listing {\\n  padding-top: 2rem;\\n  padding-bottom: 1.5rem;\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem;\\n  @screen xl {\\n    padding-left: 2rem;\\n    padding-right: 2rem;\\n  }\\n}\\n\\n.gatsby_site_header_cat {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: flex-start;\\n}\\n\\n.gatsby_site_header_inner, .gatsby_site_header_cat, .gatsby_site_header_item, .gatsby_site_header_adiacent, .gatsby_site_header_adiacent_inner {\\n  position: relative;\\n}\\n\\n.gatsby_site_header_sub {\\n  @apply w-full;\\n}\\n\\n.gatsby_site_header_adiacent, .gatsby_site_header_adiacent_inner {\\n  @apply w-full;\\n  display: none;\\n  &.active {\\n    display: block;\\n  }\\n}\\n\\n.gatsby_cat--site_article_sidebar {\\n  margin-top: 1rem !important;\\n  margin-bottom: 0.5rem !important;\\n  @apply text-white links-inverse;\\n  .gatsby_site_header_listing > *:first-child & {\\n    margin-top: 0 !important;\\n  }\\n}\\n\\n.gatsby_site_header_links_container {\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem;\\n  @screen xl {\\n    padding-left: 2rem;\\n    padding-right: 2rem;\\n  }\\n}\\n\\n.gatsby_site_header_links {\\n  @apply border-t border-b border-accent-900 border-opacity-25;\\n  padding-top: 1.25rem;\\n  padding-bottom: 1.25rem;\\n  > * {\\n    margin-left: -.5rem;\\n    margin-right: -.5rem;\\n  }\\n}\\n\\n.gatsby_site_header_sub {\\n  margin-left: -.5rem;\\n  margin-right: -.5rem;\\n  .gatsby_site_header_item {\\n    position: relative;\\n  }\\n}\\n\\n.gatsby_site_header_adiacent {\\n  .gatsby_site_header_item {\\n    position: relative;\\n    padding-left: .5rem;\\n  }\\n}\\n\\n.gatsby_site_header_adiacent_inner {\\n  padding-top: 3px;\\n  padding-bottom: 3px;\\n  .gatsby_site_header_item {\\n    position: relative;\\n    padding-left: .5rem;\\n  }\\n}\\n\\n.gatsby_btn-site_article_sidebar, .gatsby_btn-site_header_link {\\n  pointer-events: auto !important;\\n  padding: 0;\\n  padding-bottom: 1px;\\n  border-width: 0;\\n  @apply w-full font-sans;\\n  font-weight: theme('fontWeight.normal');\\n  letter-spacing: theme('letterSpacing.wide');\\n  > span {\\n    border-radius: 6px;\\n    padding: .3125rem .5rem;\\n    font-size: 0.8125rem;\\n    color: rgba(255, 255, 255, 0.6);\\n    line-height: 1;\\n    text-transform: none;\\n  }\\n  &.gatsby_btn-site_header_link {\\n    font-weight: theme('fontWeight.semibold');\\n    > span {\\n      @apply w-full;\\n      text-transform: uppercase;\\n    }\\n  }\\n  &.gatsby_btn-site_article_sidebar--sub {\\n    > span {\\n      @apply w-full;\\n    }\\n  }\\n  &.gatsby_btn-site_article_sidebar--adiacent {\\n    > span {\\n      @apply bg-accent-900 bg-opacity-25;\\n      font-size: 12px;\\n    }\\n  }\\n  &.gatsby_btn-site_article_sidebar--adiacent_inner {\\n    padding-bottom: 0;\\n    > span {\\n      font-size: 12px;\\n    }\\n  }\\n  &:hover {\\n    > span {\\n      @apply bg-accent-900 bg-opacity-25;\\n      transform: translateX(.25rem);\\n      color: theme('colors.white');\\n    }\\n  }\\n  &:active, &.active, &.current {\\n    font-weight: theme('fontWeight.semibold');\\n    > span {\\n      @apply bg-accent-900 bg-opacity-50;\\n      transform: none;\\n      color: theme('colors.white');\\n    }\\n  }\\n  > span {\\n    transition: all theme('transitionDuration.200') theme('transitionTimingFunction.out');\\n  }\\n  &:hover, &:active, &.active {\\n    > span {\\n      transition: all theme('transitionDuration.200') theme('transitionTimingFunction.in');\\n    }\\n  }\\n}\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"sticky-0\\\" data-xt-sticky=\\\"{ contain: { bottom: '.sticky-1:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-1\\\" data-xt-sticky=\\\"{ contain: { bottom: '.sticky-2:not(.xt-clone)' } }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<div class=\\\"sticky-2\\\" data-xt-sticky>\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n    <p>Sticky bottom <span class=\\\"hide-sticky\\\">.hide-sticky</span> <span class=\\\"show-sticky\\\">.show-sticky</span></p>\\n  </div>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Tests\\\"\\ncategory: \\\"Tests\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"API\\\"\\ndate: \\\"1980-05-05\\\"\\n---\\n\\n## Initialization\\n\\nInitialize automatically within markup with `[data-xt-scroll=\\\"{ <options> }\\\"]` on the **object** (the DOM element you assigned the component).\\n\\nOr initialize with **javascript**.\\n\\n```js\\nlet self = new Xt.Scroll(document.querySelector('#my-object'), {\\n  // options\\n})\\n```\\n\\nOr inizialize with **mutation observer**.\\n\\n```js\\nXt.mount.push({\\n  matches: '#my-object',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Scroll(object, {\\n      // options\\n    })\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  }\\n})\\n```\\n\\n## Util\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Object                   | `let self = Xt.get('xt-scroll', {DOM element})`       | `object` `elements` `targets` | Get object self for this component class             |\\n\\n</div>\\n\\n## Trigger\\n\\nTrigger events on **DOM elements**.\\n\\n```js\\ndocument.querySelector('#my-element-or-target').dispatchEvent(new CustomEvent('on.trigger.xt'))\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `scroll.trigger.xt`      | `window` | Run scroll checks for activation/deactivation            |\\n| Event                   | `on.trigger.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.trigger.xt`      | `elements` `targets` | Deactivation event            |\\n\\n</div>\\n\\n## Listen\\n\\nListen to events on **DOM elements**.\\n\\n```js\\nconst el = document.querySelector('#my-element-or-target')\\n\\nconst eventChange = e => {\\n  if (e.target === el) {\\n  // logic\\n  }\\n}\\n\\nel.addEventListener('change.xt', eventOn)\\n```\\n\\nListen to events delegation with **useCapture** this way:\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-scroll', object)\\n\\nconst eventChange = e => {\\n  const element = e.target\\n  // useCapture delegation\\n  if (self.elements.includes(element)) {\\n    // logic\\n  }\\n  if (self.targets.includes(element)) {\\n    // logic\\n  }\\n}\\n\\nobject.addEventListener('change.xt', eventChange, true)\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | DOM Element                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Event                   | `on.xt`       | `elements` `targets` | Activation event             |\\n| Event                   | `off.xt`      | `elements` `targets` | Deactivation event            |\\n| Event                   | `ondone.xt`           | `elements` `targets` | Activation event after delay and duration             |\\n| Event                   | `offdone.xt`           | `elements` `targets` | Deactivation event after delay and duration             |\\n| Event                   | `change.xt`       | `elements` | Computation event             |\\n| Event                   | `medialoaded.xt`           | `elements` `targets` | Images loaded event            |\\n| Event                   | `init.xt`           | `object` | Init event             |\\n| Event                   | `restart.xt`           | `object` | Restart event             |\\n| Event                   | `reinit.xt`           | `object` | Reinit event             |\\n| Event                   | `destroy.xt`           | `object` | Destroy event             |\\n\\n</div>\\n\\n## Properties\\n\\nAccess properties by getting component object.\\n\\n```js\\nlet object = document.querySelector('#my-object')\\nlet self = Xt.get('xt-scroll', object)\\nconst elements = self.elements\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                   | Description                   |\\n| ----------------------- | ---------------------------------------- | ----------------------------- |\\n| Property                   | `options:Object`       | Final options             |\\n| Property                   | `object:Node`       | Object node             |\\n| Property                   | `elements:Array`       | Elements nodes             |\\n| Property                   | `targets:Array`       | Targets nodes            |\\n| Property                  | `initial:Boolean`       | If initial or reset activation            |\\n\\n</div>\\n\\n## Methods\\n\\nCall methods by getting component object.\\n\\n```js\\nlet self = Xt.get('xt-scroll', document.querySelector('#my-object'))\\nself.destroy()\\nself = null\\n```\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|                         | Syntax                                    | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- |\\n| Method                  | `self.getElements(el:Node|null)`                          | Get all elements or all elements from element or target             |\\n| Method                  | `self.getTargets(el:Nod|null)`                          | Get all targets from or all targets from element or target             |\\n| Method                  | `self.getElementsGroups()`                          | Get elements (one per group)             |\\n| Method                  | `self.getTargetsGroups()`                          | Get targets (one per group)             |\\n| Method                  | `self.hasCurrent(el:Node)`                          | Returns `true` or `false` if element or target is activated             |\\n| Method                  | `self.reinit(saveCurrents:Boolean)`       | Reinit component and save currents as initial (default: `true`)             |\\n| Method                  | `self.restart()`                          | Restart component to initial             |\\n| Method                  | `self.destroy(weak:Boolean)`              | Destroy component            |\\n\\n</div>\\n\\nYou can get activated elements or targets with `hasCurrent`.\\n\\n```js\\nself.elements.filter(x => self.hasCurrent(x))\\nself.targets.filter(x => self.hasCurrent(x))\\n```\\n\";","export default \".demo--scroll-outside-once {\\n  .card {\\n    /* mode-outside-once */\\n    &.scroll-outside:not(.scroll-done) {\\n      /* initial */\\n      @apply transform transition-all duration-500;\\n      @apply opacity-0 -translate-x-4;\\n      &.inverse {\\n        @apply translate-x-4;\\n      }\\n      /* in */\\n      &.fade-in {\\n        @apply opacity-100 translate-x-0 ease-in;\\n      }\\n      /* out */\\n      &.fade-out {\\n        @apply opacity-0 translate-x-4 ease-out;\\n        &.inverse {\\n          @apply -translate-x-4;\\n        }\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import { Xt } from 'xtendui'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nXt.mount.push({\\n  matches: '#demo--toggle-events',\\n  mount: object => {\\n    // init\\n\\n    let self = new Xt.Toggle(object, {\\n      elements: 'a, button',\\n      targets: '.toggle',\\n      min: 1,\\n      auto: {\\n        time: 2000,\\n        initial: false,\\n      },\\n    })\\n\\n    // log\\n\\n    const log = document.querySelector('#demo--toggle-events-log')\\n\\n    const logAdd = text => {\\n      log.innerHTML += text + '<br/>'\\n      // scroll\\n      log.scrollTo(0, log.scrollHeight)\\n      // hr\\n      clearTimeout(window.logTimeout)\\n      window.logTimeout = setTimeout(() => {\\n        log.innerHTML += '<hr/>'\\n      }, 1000)\\n    }\\n\\n    // first element\\n\\n    const firstEl = document.querySelector('#demo--toggle-events-first-element')\\n\\n    const firstElFnc = () => {\\n      logAdd('<strong>1st element</strong>')\\n      const elements = self.elements\\n      elements[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstEl.addEventListener('click', firstElFnc)\\n\\n    // first target\\n\\n    const firstTr = document.querySelector('#demo--toggle-events-first-target')\\n\\n    const firstTrFnc = () => {\\n      logAdd('<strong>1st target</strong>')\\n      const targets = self.targets\\n      targets[0].dispatchEvent(new CustomEvent('on.trigger.xt'))\\n    }\\n\\n    firstTr.addEventListener('click', firstTrFnc)\\n\\n    // autostart\\n\\n    const autostartEl = document.querySelector('#demo--toggle-events-autostart')\\n\\n    const autstartFnc = () => {\\n      logAdd('<strong>autostart</strong>')\\n      self.object.dispatchEvent(new CustomEvent('autostart.trigger.xt'))\\n    }\\n\\n    autostartEl.addEventListener('click', autstartFnc)\\n\\n    // autostop\\n\\n    const autostopEl = document.querySelector('#demo--toggle-events-autostop')\\n\\n    const autostopFnc = () => {\\n      logAdd('<strong>autostop</strong>')\\n      self.object.dispatchEvent(new CustomEvent('autostop.trigger.xt'))\\n    }\\n\\n    autostopEl.addEventListener('click', autostopFnc)\\n\\n    // add\\n\\n    const addBtn = document.querySelector('#demo--toggle-events-add')\\n\\n    const addFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>add</strong>')\\n        // elements\\n        const elIndex = self.getElementsGroups().length\\n        const strEl = `<button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">Toggle ${elIndex}</button>`\\n        document.querySelector('#demo--toggle-events-elements').append(Xt.createElement(strEl))\\n        // targets\\n        const indexTr = self.getTargetsGroups().length\\n        const strTr = `<div class=\\\"card toggle ${cardToggle()}\\\">Target ${indexTr}</div>`\\n        document.querySelector('#demo--toggle-events-targets').append(Xt.createElement(strTr))\\n        // reinit\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    addBtn.addEventListener('click', addFnc)\\n\\n    // remove\\n\\n    const removeBtn = document.querySelector('#demo--toggle-events-remove')\\n\\n    const removeFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>remove</strong>')\\n        // element\\n        const elements = self.elements\\n        elements[elements.length - 1].remove()\\n        // element\\n        const targets = self.targets\\n        targets[targets.length - 1].remove()\\n        // reinit\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    removeBtn.addEventListener('click', removeFnc)\\n\\n    // block\\n\\n    const blockBtn = document.querySelector('#demo--toggle-events-block')\\n\\n    const blockFnc = () => {\\n      logAdd('<strong>block/unblock</strong>')\\n      for (const element of self.elements) {\\n        if (element.classList.contains('xt-block')) {\\n          element.classList.remove('xt-block')\\n        } else {\\n          element.classList.add('xt-block')\\n        }\\n      }\\n    }\\n\\n    blockBtn.addEventListener('click', blockFnc)\\n\\n    // reinit\\n\\n    const reinitBtn = document.querySelector('#demo--toggle-events-reinit')\\n\\n    const reinitFnc = () => {\\n      clearTimeout(parseFloat(object.dataset.reinitTimeout))\\n      object.dataset.reinitTimeout = setTimeout(() => {\\n        logAdd('<strong>reinit</strong>')\\n        self.reinit()\\n      }, 200).toString()\\n    }\\n\\n    reinitBtn.addEventListener('click', reinitFnc)\\n\\n    // restart\\n\\n    const restartBtn = document.querySelector('#demo--toggle-events-restart')\\n\\n    const restartFnc = () => {\\n      logAdd('<strong>restart</strong>')\\n      self.restart()\\n    }\\n\\n    restartBtn.addEventListener('click', restartFnc)\\n\\n    // destroy\\n\\n    const destroyBtn = document.querySelector('#demo--toggle-events-destroy')\\n\\n    const destroyFnc = () => {\\n      logAdd('<strong>destroy</strong>')\\n      self.destroy()\\n    }\\n\\n    destroyBtn.addEventListener('click', destroyFnc)\\n\\n    // unmount\\n\\n    const unmountBtn = document.querySelector('#demo--toggle-events-unmount')\\n\\n    const unmountFnc = () => {\\n      logAdd('<strong>unmount</strong>')\\n      unmount()\\n    }\\n\\n    unmountBtn.addEventListener('click', unmountFnc)\\n\\n    // events\\n\\n    const events = e => {\\n      let str = 'event <strong>' + e.type + '</strong>' + ' direction <strong>' + self.direction + '</strong>'\\n      if (e.target.getAttribute('title')) {\\n        str += ' from <strong>' + e.target.getAttribute('title') + '</strong>'\\n      } else if (e.target.querySelector(':scope > .btn')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > .btn').textContent + '</strong>'\\n      } else if (e.target.querySelector('.card > *')) {\\n        str += ' from <strong>' + e.target.querySelector('.card > *').textContent + '</strong>'\\n      } else if (e.target.querySelector(':scope > *')) {\\n        str += ' from <strong>' + e.target.querySelector(':scope > *').textContent + '</strong>'\\n      } else if (!e.target.querySelector('*')) {\\n        str += ' from <strong>' + e.target.innerHTML + '</strong>'\\n      }\\n      logAdd(str)\\n    }\\n\\n    object.addEventListener('init.xt', events)\\n    object.addEventListener('destroy.xt', events)\\n    document.addEventListener('on.xt', events, true)\\n    document.addEventListener('off.xt', events, true)\\n\\n    // unmount\\n\\n    const unmount = () => {\\n      firstEl.removeEventListener('click', firstElFnc)\\n      firstTr.removeEventListener('click', firstTrFnc)\\n      addBtn.removeEventListener('click', addFnc)\\n      removeBtn.removeEventListener('click', removeFnc)\\n      reinitBtn.removeEventListener('click', reinitFnc)\\n      restartBtn.removeEventListener('click', restartFnc)\\n      destroyBtn.removeEventListener('click', destroyFnc)\\n      unmountBtn.removeEventListener('click', unmountFnc)\\n      object.removeEventListener('init.xt', events)\\n      object.removeEventListener('destroy.xt', events)\\n      document.removeEventListener('on.xt', events, true)\\n      document.removeEventListener('off.xt', events, true)\\n      self.destroy()\\n      self = null\\n    }\\n    return unmount\\n  },\\n})\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst img = require('components/snippets/img').default\\nconst imgAlt = require('components/snippets/img').alt\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Constant speed\\n</div>\\n\\n<div class=\\\"slider slider--text\\\">\\n\\n  <div class=\\\"slides\\\">\\n    <ul class=\\\"slides-inner row row-2\\\">\\n\\n      <div class=\\\"slide\\\">\\n        <div class=\\\"brand\\\">\\n          <a href=\\\"#test-link-1\\\" class=\\\"brand_content\\\">\\n            One\\n          </a>\\n          <a href=\\\"#test-link-2\\\" class=\\\"brand_content\\\">\\n            Two\\n          </a>\\n          <a href=\\\"#test-link-3\\\" class=\\\"brand_content\\\">\\n            Three\\n          </a>\\n          <a href=\\\"#test-link-4\\\" class=\\\"brand_content\\\">\\n            Four\\n          </a>\\n          <a href=\\\"#test-link-5\\\" class=\\\"brand_content\\\">\\n            Five\\n          </a>\\n          <a href=\\\"#test-link-6\\\" class=\\\"brand_content\\\">\\n            Six\\n          </a>\\n          <a href=\\\"#test-link-7\\\" class=\\\"brand_content\\\">\\n            Seven\\n          </a>\\n          <a href=\\\"#test-link-8\\\" class=\\\"brand_content\\\">\\n            Eight\\n          </a>\\n          <a href=\\\"#test-link-9\\\" class=\\\"brand_content\\\">\\n            Nine\\n          </a>\\n          <a href=\\\"#test-link-10\\\" class=\\\"brand_content\\\">\\n            Ten\\n          </a>\\n          <a href=\\\"#test-link-11\\\" class=\\\"brand_content\\\">\\n            Eleven\\n          </a>\\n          <a href=\\\"#test-link-12\\\" class=\\\"brand_content\\\">\\n            Twelve\\n          </a>\\n        </div>\\n      </div>\\n\\n    </ul>\\n  </div>\\n\\n  <nav class=\\\"slider-pagination w-full list list-2 hidden\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n    </button>\\n  </nav>\\n\\n</div>\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Faster or slower depending on horizontal space\\n</div>\\n\\n<div class=\\\"slider slider--text slider--factor\\\">\\n\\n  <div class=\\\"slides\\\">\\n    <ul class=\\\"slides-inner row row-2\\\">\\n\\n      <div class=\\\"slide\\\">\\n        <div class=\\\"brand\\\">\\n          <a href=\\\"#test-link-1\\\" class=\\\"brand_content\\\">\\n            One\\n          </a>\\n          <a href=\\\"#test-link-2\\\" class=\\\"brand_content\\\">\\n            Two\\n          </a>\\n          <a href=\\\"#test-link-3\\\" class=\\\"brand_content\\\">\\n            Three\\n          </a>\\n          <a href=\\\"#test-link-4\\\" class=\\\"brand_content\\\">\\n            Four\\n          </a>\\n          <a href=\\\"#test-link-5\\\" class=\\\"brand_content\\\">\\n            Five\\n          </a>\\n          <a href=\\\"#test-link-6\\\" class=\\\"brand_content\\\">\\n            Six\\n          </a>\\n          <a href=\\\"#test-link-7\\\" class=\\\"brand_content\\\">\\n            Seven\\n          </a>\\n          <a href=\\\"#test-link-8\\\" class=\\\"brand_content\\\">\\n            Eight\\n          </a>\\n          <a href=\\\"#test-link-9\\\" class=\\\"brand_content\\\">\\n            Nine\\n          </a>\\n          <a href=\\\"#test-link-10\\\" class=\\\"brand_content\\\">\\n            Ten\\n          </a>\\n          <a href=\\\"#test-link-11\\\" class=\\\"brand_content\\\">\\n            Eleven\\n          </a>\\n          <a href=\\\"#test-link-12\\\" class=\\\"brand_content\\\">\\n            Twelve\\n          </a>\\n        </div>\\n      </div>\\n\\n    </ul>\\n  </div>\\n\\n  <nav class=\\\"slider-pagination w-full list list-2 hidden\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n    </button>\\n  </nav>\\n\\n</div>\\n\\n<div class=\\\"h5 h-block rounded-md text-black links-default bg-gray-200 text-center\\\">\\n  Images\\n</div>\\n\\n<div class=\\\"slider slider--img\\\">\\n\\n  <div class=\\\"slides\\\">\\n    <ul class=\\\"slides-inner row row-2\\\">\\n\\n      <div class=\\\"slide\\\">\\n        <div class=\\\"brand\\\">\\n          <a href=\\\"#test-link-1\\\" class=\\\"brand_content\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%', loading: 'eager' })}\\n          </a>\\n          <a href=\\\"#test-link-2\\\" class=\\\"brand_content\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%', loading: 'eager' })}\\n          </a>\\n          <a href=\\\"#test-link-3\\\" class=\\\"brand_content\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%', loading: 'eager' })}\\n          </a>\\n          <a href=\\\"#test-link-4\\\" class=\\\"brand_content\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%', loading: 'eager' })}\\n          </a>\\n          <a href=\\\"#test-link-5\\\" class=\\\"brand_content\\\">\\n            ${img({ classes: 'object-cover object-center', ratio: '37.5%', loading: 'eager' })}\\n          </a>\\n          <a href=\\\"#test-link-6\\\" class=\\\"brand_content\\\">\\n            ${imgAlt({ classes: 'object-cover object-center', ratio: '37.5%', loading: 'eager' })}\\n          </a>\\n        </div>\\n      </div>\\n\\n    </ul>\\n  </div>\\n\\n  <nav class=\\\"slider-pagination w-full list list-2 hidden\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default xt-ignore\\\" data-xt-pag title=\\\"Slide xt-num\\\">\\n    </button>\\n  </nav>\\n\\n</div>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Type\\\"\\nparent: \\\"Hero\\\"\\ntitle: \\\"Hero\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\n---\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<nav class=\\\"list flex-col list-4\\\">\\n\\n  <div>\\n    <div class=\\\"list list-4\\\">\\n\\n      <div>\\n        <div class=\\\"list flex-col list-4\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Lorem Ipsum\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Dolor sit\\n          </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n            Amet\\n          </button>\\n\\n        </div>\\n      </div>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div class=\\\"list list-4\\\">\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Lorem Ipsum\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Dolor sit\\n      </button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n        Amet\\n      </button>\\n\\n    </div>\\n  </div>\\n\\n</nav>\\n`\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-toggle=\\\"{ targets: '#toggle--unique-0' }\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\" data-xt-toggle=\\\"{ targets: '#toggle--unique-1' }\\\">\\n    Toggle 1\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" id=\\\"toggle--unique-0\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\" id=\\\"toggle--unique-1\\\">\\n    Target 1\\n  </div>\\n\\n</div>\\n`\\n\";","export default \".demo--toggle-animation {\\n  .card {\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n    &.inverse {\\n      @apply translate-x-4;\\n    }\\n    /* in */\\n    &.in {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    /* out */\\n    &.out {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst cardDefaultFull = require('components/snippets/classes/card-default-full').default\\nconst cardPrimaryFull = require('components/snippets/classes/card-primary-full').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"row row-3\\\">\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardDefaultFull()}\\\">\\n      <div class=\\\"card-md p-0\\\">\\n        <div class=\\\"h4\\\">Default</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-full md:w-6/12\\\">\\n    <div class=\\\"card ${cardPrimaryFull()}\\\">\\n      <div class=\\\"card-md p-0\\\">\\n        <div class=\\\"h4\\\">Primary</div>\\n        <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Form\\\"\\ntitle: \\\"Form\\\"\\ndescription: \\\"Form styles with multiple layouts, custom checkbox/radio, and more.\\\"\\n---\\n\\n## Installation\\n\\nImport the **component javascript** file.\\n\\n```jsx\\nimport 'xtendui/src/core/form'\\n```\\n\\n## Customization\\n\\nYou can **customize this component** inside `tailwind.config.js`, check [xtendui/src/core/form.css.js](https://github.com/minimit/xtendui/blob/master/src/core/form.css.js) for default values.\\n\\n```jsx\\nmodule.exports = {\\n  theme:{\\n    xtendui: {\\n      form: {\\n        component: theme => ({\\n          // modify components\\n        }),\\n      },\\n    },\\n  },\\n}\\n```\\n\\n## Usage\\n\\nUse this code to create a **form items**.\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/form/usage\\\">\\n  </demovanilla>\\n</demo>\\n\\nCheck subpage to [customize content](/components/core/form/content) and [customize layout](/components/core/form/layout).\\n\";","export default \"#iframe--fashion-gallery-v1 {\\n  /*##START*/\\n  body { /* add your own selector instead of body to contain the code */\\n\\n    /**\\n     * product-page\\n     */\\n\\n    .product-page {\\n      .margin(bottom, 10rem);\\n      @media @min-md {\\n        .margin(top, large);\\n      }\\n    }\\n\\n    .product-page_toolbar {\\n      .margin(bottom, mini);\\n      .margin(bottom, small, sm);\\n      > .list {\\n        .list(medium);\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n      @media @max-md {\\n        display: none;\\n      }\\n    }\\n\\n    .product-page_inner {\\n      > .row {\\n        @media @min-md {\\n          .row(big);\\n        }\\n      }\\n    }\\n\\n    .product-page_left_col {\\n      .col(12);\\n      .col(6, md);\\n      .col(7, lg);\\n    }\\n\\n    .product-page_right_col {\\n      .col(12);\\n      .col(6, md);\\n      .col(5, lg);\\n    }\\n\\n    .product-page_left {\\n      @media @max-md {\\n        overflow-x: hidden;\\n        overflow-y: auto;\\n        height: 60vh;\\n        height: calc(var(--vh, 1vh) * 60);\\n        .overflow-style(@mode: inner);\\n      }\\n    }\\n\\n    .product-page_right {\\n      .padding(top, large);\\n      @media @min-md {\\n        .padding(top, giant);\\n      }\\n    }\\n\\n    .product-page_title {\\n      .h1();\\n      .margin(top, small);\\n      .margin(bottom, small);\\n      .margin(y, layout);\\n    }\\n\\n    .product-page_price {\\n      .margin(top, small);\\n      .margin(bottom, small);\\n      .margin(y, layout);\\n      .font-sans-semibold();\\n      .line-height-mini();\\n      font-size: 3rem;\\n      letter-spacing: 0;\\n      text-transform: none;\\n    }\\n\\n    .product-page_actions {\\n      .margin(top, large);\\n      .margin(bottom, large);\\n      .margin(y, layout);\\n    }\\n\\n    .product-page_details {\\n      .margin(top, small);\\n      .margin(bottom, small);\\n      .margin(y, layout);\\n      .font-big();\\n    }\\n\\n    .product-page_attributes {\\n      .margin(top, small);\\n      .margin(bottom, small);\\n      .margin(y, layout);\\n      .font-big();\\n    }\\n\\n    // images\\n\\n    .product-page_images {\\n      .list-block {\\n        .list(none);\\n      }\\n    }\\n\\n    .product-page_image {\\n      display: block;\\n      .full();\\n      @media @max-md {\\n        .media-container {\\n          pointer-events: none;\\n          .transform-none() !important;\\n        }\\n        .media-inner {\\n          .transform-none() !important;\\n        }\\n        .media_mask {\\n          display: none;\\n        }\\n      }\\n    }\\n\\n    .media_mask {\\n      position: absolute;\\n      z-index: @index-active + 1;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 0;\\n      background: @white;\\n    }\\n\\n    #overlay--product-page_images {\\n      .list-block {\\n        .list(none);\\n      }\\n      img {\\n        .full();\\n      }\\n    }\\n\\n    .product-page_left_outer {\\n      position: relative;\\n      .container-space-remove();\\n      @media @min-md {\\n        .margin(all, none) !important;\\n      }\\n    }\\n\\n    .product-page_images_nav {\\n      @media @min-md {\\n        display: none;\\n      }\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      height: 100%;\\n      > .list-block {\\n        height: 100%;\\n        justify-content: center;\\n      }\\n    }\\n\\n    .product-page_images_nav_item {\\n      .padding(y, .5rem);\\n      .padding(x, 1rem);\\n      .product-page_images_nav_item_inner {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        width: 9px;\\n        height: 9px;\\n      }\\n      span {\\n        display: inline-block;\\n        width: 7px;\\n        height: 7px;\\n        border-radius: 50%;\\n        border: 2px solid transparent;\\n        background: @shade-700;\\n        transition: all @time-sm @ease-in-out-expo;\\n      }\\n      &:active, &.active {\\n        span {\\n          width: 10px;\\n          height: 10px;\\n          border: 2px solid @shade-700;\\n          background: transparent;\\n          transition: all @time-sm @ease-in-out-expo;\\n        }\\n      }\\n    }\\n\\n    // continue\\n\\n    .product-page_continue {\\n      @media @min-md {\\n        display: none;\\n      }\\n      .anim-y.in();\\n      position: fixed;\\n      z-index: @index-sticky;\\n      bottom: 0;\\n      left: 0;\\n      width: 100%;\\n      .align-center();\\n      .padding(all, medium);\\n      .padding(bottom, small);\\n      font-size: 3rem;\\n      color: @black;\\n      background: linear-gradient(0deg, @white 0%, @white 50%, fade(@white, 0%) 100%);\\n      .icon-caret-down {\\n        display: inline-block;\\n      }\\n      &.scrolled {\\n        .anim-y.out();\\n        pointer-events: none;\\n      }\\n    }\\n\\n  }\\n  /*##END*/\\n}\\n\";","export default \"module.exports = {\\n  component: {\\n    '.group': {\\n      display: 'inline-flex',\\n      flexWrap: 'nowrap',\\n      alignItems: 'stretch',\\n      whiteSpace: 'nowrap',\\n    },\\n    '.group-inner': {\\n      display: 'inline-flex',\\n    },\\n  },\\n}\\n\";","export default \"// const spinner = require('components/snippets/spinner').default\\n// ${spinner({})}\\n\\nexport default ({ dimension = 120, radius = 100, dash = 628 }) => {\\n  return `<svg viewBox=\\\"0 0 ${dimension * 2} ${\\n    dimension * 2\\n  }\\\"><circle cx=\\\"${dimension}\\\" cy=\\\"${dimension}\\\" r=\\\"${radius}\\\" stroke-dasharray=\\\"${dash}\\\" stroke-dashoffset=\\\"${dash}\\\" pathLength=\\\"${dash}\\\" class=\\\"stroke-current\\\"/></svg><svg viewBox=\\\"0 0 ${\\n    dimension * 2\\n  } ${\\n    dimension * 2\\n  }\\\" preserveAspectRatio=\\\"xMinYMin meet\\\"><circle cx=\\\"${dimension}\\\" cy=\\\"${dimension}\\\" r=\\\"${radius}\\\" stroke-dasharray=\\\"${dash}\\\" stroke-dashoffset=\\\"${dash}\\\" pathLength=\\\"${dash}\\\" class=\\\"stroke-current opacity-25\\\"/></svg>`\\n}\\n\";","export default \"import React from 'react'\\nimport PropTypes from 'prop-types'\\n\\n/**\\n * HTML\\n * @param {Object} props\\n * @return {String}\\n */\\nexport default function HTML(props) {\\n  return (\\n    <html {...props.htmlAttributes}>\\n      <head>\\n        <meta charSet=\\\"utf-8\\\" />\\n        <meta httpEquiv=\\\"x-ua-compatible\\\" content=\\\"ie=edge\\\" />\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\" />\\n        {props.headComponents}\\n      </head>\\n      <body {...props.bodyAttributes}>\\n        {props.preBodyComponents}\\n        <noscript key=\\\"noscript\\\" id=\\\"gatsby-noscript\\\">\\n          This app works best with JavaScript enabled.\\n        </noscript>\\n        <div key={`body`} id=\\\"___gatsby\\\" dangerouslySetInnerHTML={{ __html: props.body }} />\\n        {props.postBodyComponents}\\n      </body>\\n    </html>\\n  )\\n}\\n\\nHTML.propTypes = {\\n  htmlAttributes: PropTypes.object,\\n  headComponents: PropTypes.array,\\n  bodyAttributes: PropTypes.object,\\n  preBodyComponents: PropTypes.array,\\n  body: PropTypes.string,\\n  postBodyComponents: PropTypes.array,\\n}\\n\";","export default \"---\\ntype: \\\"Themes\\\"\\ncategory: \\\"By Component\\\"\\nparent: \\\"Scroll\\\"\\ntitle: \\\"furniture-featured-v1\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2020-02-27\\\"\\ndemos: [\\n  \\\"iframe/themes/furniture-featured-v1\\\"\\n]\\n---\\n\";","export default \".demo--scroll-distance {\\n  .card {\\n    /* mode-infinite */\\n    /* initial */\\n    @apply transform transition-all duration-500;\\n    @apply opacity-0 -translate-x-4;\\n    &.inverse {\\n      @apply translate-x-4;\\n    }\\n    /* in */\\n    &.fade-in {\\n      @apply opacity-100 translate-x-0 ease-in;\\n    }\\n    /* out */\\n    &.fade-out {\\n      @apply opacity-0 translate-x-4 ease-out;\\n      &.inverse {\\n        @apply -translate-x-4;\\n      }\\n    }\\n  }\\n}\\n\";","export default \"import path from 'path'\\nconst btnDefault = require('components/snippets/classes/btn-default').default\\nconst cardToggle = require('components/snippets/classes/card-toggle').default\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<div class=\\\"list list-2 items-center\\\" data-xt-toggle>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 0\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()} active-toggle\\\">\\n    Toggle 1\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 2\\n  </button>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-md ${btnDefault()}\\\">\\n    Toggle 3\\n  </button>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 0\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 1\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 2\\n  </div>\\n\\n  <div class=\\\"card toggle ${cardToggle()}\\\">\\n    Target 3\\n  </div>\\n\\n</div>\\n`\\n\";","export default \"---\\ntype: \\\"Components\\\"\\ncategory: \\\"Core\\\"\\nparent: \\\"Button\\\"\\ntitle: \\\"Other\\\"\\ndate: \\\"2005-10-10\\\"\\n---\\n\\n## Activation\\n\\nUse **component classes** to style active.\\n\\nFor aria purpose use `aria-selected=\\\"true\\\"` when using the class `.active`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.active`                     | `active`                | Active styles            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/active\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Disabled\\n\\nUse **component classes** to style disabled.\\n\\nFor aria purpose use `aria-disabled=\\\"true\\\"` when using the class `.disabled`.\\n\\n<div class=\\\"table-scroll\\\">\\n\\n|               | Syntax                          | Mixin               | Description                   |\\n| ----------------------- | ----------------------------------------- | ----------------------------- | ----------------------------- |\\n| Component                  | `.disabled`                     | `disabled`                | Disabled styles            |\\n\\n</div>\\n\\n<demo>\\n  <demovanilla src=\\\"vanilla/components/core/button/disabled\\\">\\n  </demovanilla>\\n</demo>\\n\\n## Group\\n\\nRefer to [group](/components/core/group).\\n\\n## Toolbar\\n\\nRefer to [toolbar](/components/addons/toolbar).\\n\\n## Nav\\n\\nRefer to [nav](/components/addons/nav).\\n\\n## Checks\\n\\nRefer to [form checks button](/components/core/form/other#checks-button).\\n\";","export default \"import React from 'react'\\nimport path from 'path'\\nconst cardStickyDefault = require('components/snippets/classes/card-sticky-default').default\\nconst cardStickyPrimary = require('components/snippets/classes/card-sticky-primary').default\\n\\nimport DemoVanillaIframe from 'components/demo/demo-vanilla-iframe'\\n\\nconst filename = __filename.replace(/\\\\\\\\/g, '/')\\nconst dirs = path.dirname(filename).split('/')\\nexport const demo = {\\n  container: false,\\n  full: false,\\n  name: path.basename(filename, '.js'),\\n  dirs: dirs,\\n}\\n\\ndemo.htmlSource = `\\n<br><br><br><br><br><br><br>\\n\\n<div data-xt-sticky=\\\"{ sticky: 'absolute' }\\\">\\n  <div class=\\\"card ${cardStickyPrimary()}\\\">\\n    <div class=\\\"h4\\\">Sticky</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card ${cardStickyDefault()}\\\">\\n  <div class=\\\"h4\\\">Lorem ipsum</div>\\n  <p><strong>Lorem ipsum</strong> dolor sit amet, <a href=\\\"#\\\">consectetur adipiscing</a> elit. Nullam suscipit, velit eu tristique mollis, dui felis dictum turpis, a auctor est odio ac diam. Sed mauris augue, sagittis vitae magna eget, vehicula scelerisque elit.</p>\\n</div>\\n\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n<br><br><br><br><br><br><br>\\n`\\n\\nclass Page extends React.Component {\\n  render() {\\n    return <DemoVanillaIframe demo={demo} />\\n  }\\n}\\n\\nexport default Page\\n\";","export default \"export default () => {\\n  return `text-white links-inverse bg-accent-500 hover:bg-accent-600 active:bg-accent-700`\\n}\\n\";","export default \"---\\ntype: \\\"Introduction\\\"\\ncategory: \\\"Guidelines\\\"\\nparent: \\\"Aria\\\"\\ntitle: \\\"Aria\\\"\\ndescription: \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc tempus laoreet leo sit amet iaculis.\\\"\\ndate: \\\"2050-10-10\\\"\\n---\\n\\n@TODO\\n\";"],"sourceRoot":""}